(function(window,angular,undefined){"use strict";var autocomplete=angular.module("ngAutocomplete",[]);autocomplete.directive("autocomplete",["$timeout",function($timeout){var index=-1;return{restrict:"E",scope:{searchParam:"=ngModel",suggestions:"=data",onType:"=onType",onSelect:"=onSelect",autocompleteRequired:"=",orderBy:"@?",isDisabled:"="},controller:["$scope",function($scope){$scope.selectedIndex=-1;$scope.initLock=true;$scope.setIndex=function(i){$scope.selectedIndex=parseInt(i);$scope.setScrollTop(i)};var scrollTop=0;$scope.setScrollTop=function(index){$timeout(function(){var wrapHeight=$(".autocomplete ul div").height();var viewHeight=$(".autocomplete ul").height();var offset=$(".autocomplete ul li.active").position();if(index==0){scrollTop=0;$(".autocomplete ul").scrollTop(scrollTop)}if(offset){if(scrollTop+viewHeight<offset.top){scrollTop=offset.top;$(".autocomplete ul").scrollTop(scrollTop)}}},0)};this.setIndex=function(i){$scope.setIndex(i);$scope.$apply()};$scope.getIndex=function(){return $scope.selectedIndex};var watching=true;$scope.completing=false;$scope.$watch("searchParam",function(newValue,oldValue){if(oldValue===newValue||!oldValue&&$scope.initLock){return}if(!$scope.searchParam||$scope.searchParam&&$scope.searchParam.length<2){$scope.completing=false;return}if(watching){$scope.completing=true;$scope.searchFilter=$scope.searchParam;$scope.selectedIndex=-1}angular.isFunction($scope.onType)&&$scope.onType($scope.searchParam)});this.preSelect=function(suggestion){watching=false;$scope.$apply();watching=true};$scope.preSelect=this.preSelect;this.preSelectOff=function(){watching=true};$scope.preSelectOff=this.preSelectOff;$scope.select=function(suggestion){if(suggestion){$scope.searchParam=suggestion;$scope.searchFilter=suggestion;angular.isFunction($scope.onSelect)&&$scope.onSelect(suggestion)}watching=false;$scope.completing=false;setTimeout(function(){watching=true},1e3);$scope.setIndex(-1)}}],link:function(scope,element,attrs){setTimeout(function(){scope.initLock=false;scope.$apply()},200);var attr="";scope.attrs={placeholder:"start typing...",class:"",id:"",inputname:"",inputclass:"",inputid:""};for(var a in attrs){attr=a.replace("attr","").toLowerCase();if(a.indexOf("attr")===0){scope.attrs[attr]=attrs[a]}}if(attrs.clickActivation=="true"){element.on("click",function(){if(!scope.searchParam){setTimeout(function(){scope.completing=true;scope.$apply()},200)}})}var key={left:37,up:38,right:39,down:40,enter:13,esc:27,tab:9};var document=angular.element(document);document.on("keydown",function(e){var keycode=e.keyCode||e.which;switch(keycode){case key.esc:scope.select();scope.setIndex(-1);scope.$apply();e.preventDefault()}},true);element.on("blur","input",function(e){setTimeout(function(){scope.select();scope.setIndex(-1);scope.$apply()},150)});element.on("keydown",function(e){var keycode=e.keyCode||e.which;var l=angular.element(this).find("li").length;if(!scope.completing||l==0)return;switch(keycode){case key.up:index=scope.getIndex()-1;if(index<-1){index=l-1}else if(index>=l){index=-1;scope.setIndex(index);scope.preSelectOff();break}scope.setIndex(index);if(index!==-1)scope.preSelect(angular.element(angular.element(this).find("li")[index]).text());scope.$apply();break;case key.down:index=scope.getIndex()+1;if(index<-1){index=l-1}else if(index>=l){index=-1;scope.setIndex(index);scope.preSelectOff();scope.$apply();break}scope.setIndex(index);if(index!==-1)scope.preSelect(angular.element(angular.element(this).find("li")[index]).text());break;case key.left:break;case key.right:case key.enter:case key.tab:index=scope.getIndex();if(index!==-1){scope.select(angular.element(angular.element(this).find("li")[index]).text());if(keycode==key.enter){e.preventDefault()}}else{if(keycode==key.enter){scope.select()}}scope.setIndex(-1);scope.$apply();break;case key.esc:scope.select();scope.setIndex(-1);scope.$apply();e.preventDefault();break;default:return}});scope.$on("hideLayer",function(info,originScope,type){if(originScope!=scope){scope.completing=false}else{}});scope.comparator=function(suggest,search){var suggestLower=suggest.toLowerCase();var searchLower=search.toLowerCase();if(suggestLower.indexOf(searchLower)==0){return suggest}}},template:'        <div class="autocomplete {{ attrs.class }}" id="{{ attrs.id }}">          <input            type="text"            ng-model="searchParam"            placeholder="{{ attrs.placeholder }}"            class="{{ attrs.inputclass }}"            id="{{ attrs.inputid }}"            name="{{ attrs.inputname }}"            ng-class={disabled:isDisabled}            ng-disabled=isDisabled            ng-required="{{ autocompleteRequired }}" />          <ul ng-show="completing && (listData = (suggestions | filter:searchFilter:comparator)).length > 0 && !isDisabled && !(listData.length == 1 && searchFilter == listData[0])">            <div class="item-wrap">            <li              suggestion              ng-repeat="suggestion in listData | orderBy: orderBy || \'toString()\' track by $index"              index="{{ $index }}"              val="{{ suggestion }}"              ng-class="{ active: ($index === selectedIndex) }"              ng-click="select(suggestion)"              ng-bind-html="suggestion"></li>              </div>          </ul>        </div>'}}]);autocomplete.directive("suggestion",function(){return{restrict:"A",require:"^autocomplete",link:function(scope,element,attrs,autoCtrl){element.bind("mouseenter",function(){autoCtrl.preSelect(attrs.val);autoCtrl.setIndex(attrs.index)});element.bind("mouseleave",function(){autoCtrl.preSelectOff()})}}})})(window,window.angular);