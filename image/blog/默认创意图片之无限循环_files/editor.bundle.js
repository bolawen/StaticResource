var editor =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/twww/cn";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/vendor/editor/exif.js":
/***/ (function(module, exports) {

eval("(function () {\n    var debug = false;\n\n    // var root = this;\n    var root = window;\n\n    var EXIF = function (obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n    root.EXIF = EXIF;\n\n    // if (typeof exports !== 'undefined') {\n    //     if (typeof module !== 'undefined' && module.exports) {\n    //         exports = module.exports = EXIF;\n    //     }\n    //     exports.EXIF = EXIF;\n    // } else {\n    //     root.EXIF = EXIF;\n    // }\n\n    var ExifTags = (EXIF.Tags = {\n        // version tags\n        0x9000: 'ExifVersion', // EXIF version\n        0xa000: 'FlashpixVersion', // Flashpix format version\n\n        // colorspace tags\n        0xa001: 'ColorSpace', // Color space information tag\n\n        // image configuration\n        0xa002: 'PixelXDimension', // Valid width of meaningful image\n        0xa003: 'PixelYDimension', // Valid height of meaningful image\n        0x9101: 'ComponentsConfiguration', // Information about channels\n        0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\n\n        // user information\n        0x927c: 'MakerNote', // Any desired information written by the manufacturer\n        0x9286: 'UserComment', // Comments by user\n\n        // related file\n        0xa004: 'RelatedSoundFile', // Name of related sound file\n\n        // date and time\n        0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\n        0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\n        0x9290: 'SubsecTime', // Fractions of seconds for DateTime\n        0x9291: 'SubsecTimeOriginal', // Fractions of seconds for DateTimeOriginal\n        0x9292: 'SubsecTimeDigitized', // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829a: 'ExposureTime', // Exposure time (in seconds)\n        0x829d: 'FNumber', // F number\n        0x8822: 'ExposureProgram', // Exposure program\n        0x8824: 'SpectralSensitivity', // Spectral sensitivity\n        0x8827: 'ISOSpeedRatings', // ISO speed rating\n        0x8828: 'OECF', // Optoelectric conversion factor\n        0x9201: 'ShutterSpeedValue', // Shutter speed\n        0x9202: 'ApertureValue', // Lens aperture\n        0x9203: 'BrightnessValue', // Value of brightness\n        0x9204: 'ExposureBias', // Exposure bias\n        0x9205: 'MaxApertureValue', // Smallest F number of lens\n        0x9206: 'SubjectDistance', // Distance to subject in meters\n        0x9207: 'MeteringMode', // Metering mode\n        0x9208: 'LightSource', // Kind of light source\n        0x9209: 'Flash', // Flash status\n        0x9214: 'SubjectArea', // Location and area of main subject\n        0x920a: 'FocalLength', // Focal length of the lens in mm\n        0xa20b: 'FlashEnergy', // Strobe energy in BCPS\n        0xa20c: 'SpatialFrequencyResponse', //\n        0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xa214: 'SubjectLocation', // Location of subject in image\n        0xa215: 'ExposureIndex', // Exposure index selected on camera\n        0xa217: 'SensingMethod', // Image sensor type\n        0xa300: 'FileSource', // Image source (3 == DSC)\n        0xa301: 'SceneType', // Scene type (1 == directly photographed)\n        0xa302: 'CFAPattern', // Color filter array geometric pattern\n        0xa401: 'CustomRendered', // Special processing\n        0xa402: 'ExposureMode', // Exposure mode\n        0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\n        0xa404: 'DigitalZoomRation', // Digital zoom ratio\n        0xa405: 'FocalLengthIn35mmFilm', // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xa406: 'SceneCaptureType', // Type of scene\n        0xa407: 'GainControl', // Degree of overall image gain adjustment\n        0xa408: 'Contrast', // Direction of contrast processing applied by camera\n        0xa409: 'Saturation', // Direction of saturation processing applied by camera\n        0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\n        0xa40b: 'DeviceSettingDescription', //\n        0xa40c: 'SubjectDistanceRange', // Distance to subject\n\n        // other tags\n        0xa005: 'InteroperabilityIFDPointer',\n        0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\n    });\n\n    var TiffTags = (EXIF.TiffTags = {\n        0x0100: 'ImageWidth',\n        0x0101: 'ImageHeight',\n        0x8769: 'ExifIFDPointer',\n        0x8825: 'GPSInfoIFDPointer',\n        0xa005: 'InteroperabilityIFDPointer',\n        0x0102: 'BitsPerSample',\n        0x0103: 'Compression',\n        0x0106: 'PhotometricInterpretation',\n        0x0112: 'Orientation',\n        0x0115: 'SamplesPerPixel',\n        0x011c: 'PlanarConfiguration',\n        0x0212: 'YCbCrSubSampling',\n        0x0213: 'YCbCrPositioning',\n        0x011a: 'XResolution',\n        0x011b: 'YResolution',\n        0x0128: 'ResolutionUnit',\n        0x0111: 'StripOffsets',\n        0x0116: 'RowsPerStrip',\n        0x0117: 'StripByteCounts',\n        0x0201: 'JPEGInterchangeFormat',\n        0x0202: 'JPEGInterchangeFormatLength',\n        0x012d: 'TransferFunction',\n        0x013e: 'WhitePoint',\n        0x013f: 'PrimaryChromaticities',\n        0x0211: 'YCbCrCoefficients',\n        0x0214: 'ReferenceBlackWhite',\n        0x0132: 'DateTime',\n        0x010e: 'ImageDescription',\n        0x010f: 'Make',\n        0x0110: 'Model',\n        0x0131: 'Software',\n        0x013b: 'Artist',\n        0x8298: 'Copyright'\n    });\n\n    var GPSTags = (EXIF.GPSTags = {\n        0x0000: 'GPSVersionID',\n        0x0001: 'GPSLatitudeRef',\n        0x0002: 'GPSLatitude',\n        0x0003: 'GPSLongitudeRef',\n        0x0004: 'GPSLongitude',\n        0x0005: 'GPSAltitudeRef',\n        0x0006: 'GPSAltitude',\n        0x0007: 'GPSTimeStamp',\n        0x0008: 'GPSSatellites',\n        0x0009: 'GPSStatus',\n        0x000a: 'GPSMeasureMode',\n        0x000b: 'GPSDOP',\n        0x000c: 'GPSSpeedRef',\n        0x000d: 'GPSSpeed',\n        0x000e: 'GPSTrackRef',\n        0x000f: 'GPSTrack',\n        0x0010: 'GPSImgDirectionRef',\n        0x0011: 'GPSImgDirection',\n        0x0012: 'GPSMapDatum',\n        0x0013: 'GPSDestLatitudeRef',\n        0x0014: 'GPSDestLatitude',\n        0x0015: 'GPSDestLongitudeRef',\n        0x0016: 'GPSDestLongitude',\n        0x0017: 'GPSDestBearingRef',\n        0x0018: 'GPSDestBearing',\n        0x0019: 'GPSDestDistanceRef',\n        0x001a: 'GPSDestDistance',\n        0x001b: 'GPSProcessingMethod',\n        0x001c: 'GPSAreaInformation',\n        0x001d: 'GPSDateStamp',\n        0x001e: 'GPSDifferential'\n    });\n\n    var StringValues = (EXIF.StringValues = {\n        ExposureProgram: {\n            0: 'Not defined',\n            1: 'Manual',\n            2: 'Normal program',\n            3: 'Aperture priority',\n            4: 'Shutter priority',\n            5: 'Creative program',\n            6: 'Action program',\n            7: 'Portrait mode',\n            8: 'Landscape mode'\n        },\n        MeteringMode: {\n            0: 'Unknown',\n            1: 'Average',\n            2: 'CenterWeightedAverage',\n            3: 'Spot',\n            4: 'MultiSpot',\n            5: 'Pattern',\n            6: 'Partial',\n            255: 'Other'\n        },\n        LightSource: {\n            0: 'Unknown',\n            1: 'Daylight',\n            2: 'Fluorescent',\n            3: 'Tungsten (incandescent light)',\n            4: 'Flash',\n            9: 'Fine weather',\n            10: 'Cloudy weather',\n            11: 'Shade',\n            12: 'Daylight fluorescent (D 5700 - 7100K)',\n            13: 'Day white fluorescent (N 4600 - 5400K)',\n            14: 'Cool white fluorescent (W 3900 - 4500K)',\n            15: 'White fluorescent (WW 3200 - 3700K)',\n            17: 'Standard light A',\n            18: 'Standard light B',\n            19: 'Standard light C',\n            20: 'D55',\n            21: 'D65',\n            22: 'D75',\n            23: 'D50',\n            24: 'ISO studio tungsten',\n            255: 'Other'\n        },\n        Flash: {\n            0x0000: 'Flash did not fire',\n            0x0001: 'Flash fired',\n            0x0005: 'Strobe return light not detected',\n            0x0007: 'Strobe return light detected',\n            0x0009: 'Flash fired, compulsory flash mode',\n            0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n            0x000f: 'Flash fired, compulsory flash mode, return light detected',\n            0x0010: 'Flash did not fire, compulsory flash mode',\n            0x0018: 'Flash did not fire, auto mode',\n            0x0019: 'Flash fired, auto mode',\n            0x001d: 'Flash fired, auto mode, return light not detected',\n            0x001f: 'Flash fired, auto mode, return light detected',\n            0x0020: 'No flash function',\n            0x0041: 'Flash fired, red-eye reduction mode',\n            0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n            0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n            0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n            0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n            0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n            0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n            0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n            0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n        },\n        SensingMethod: {\n            1: 'Not defined',\n            2: 'One-chip color area sensor',\n            3: 'Two-chip color area sensor',\n            4: 'Three-chip color area sensor',\n            5: 'Color sequential area sensor',\n            7: 'Trilinear sensor',\n            8: 'Color sequential linear sensor'\n        },\n        SceneCaptureType: {\n            0: 'Standard',\n            1: 'Landscape',\n            2: 'Portrait',\n            3: 'Night scene'\n        },\n        SceneType: {\n            1: 'Directly photographed'\n        },\n        CustomRendered: {\n            0: 'Normal process',\n            1: 'Custom process'\n        },\n        WhiteBalance: {\n            0: 'Auto white balance',\n            1: 'Manual white balance'\n        },\n        GainControl: {\n            0: 'None',\n            1: 'Low gain up',\n            2: 'High gain up',\n            3: 'Low gain down',\n            4: 'High gain down'\n        },\n        Contrast: {\n            0: 'Normal',\n            1: 'Soft',\n            2: 'Hard'\n        },\n        Saturation: {\n            0: 'Normal',\n            1: 'Low saturation',\n            2: 'High saturation'\n        },\n        Sharpness: {\n            0: 'Normal',\n            1: 'Soft',\n            2: 'Hard'\n        },\n        SubjectDistanceRange: {\n            0: 'Unknown',\n            1: 'Macro',\n            2: 'Close view',\n            3: 'Distant view'\n        },\n        FileSource: {\n            3: 'DSC'\n        },\n\n        Components: {\n            0: '',\n            1: 'Y',\n            2: 'Cb',\n            3: 'Cr',\n            4: 'R',\n            5: 'G',\n            6: 'B'\n        }\n    });\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent('on' + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!img.exifdata;\n    }\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/im)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gim, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open('GET', url, true);\n        http.responseType = 'blob';\n        http.onload = function (e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.exifdata = data || {};\n            img.iptcdata = iptcdata || {};\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) {\n                // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n            } else if (/^blob\\:/i.test(img.src)) {\n                // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function (e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function () {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw 'Could not load image';\n                    }\n                    http = null;\n                };\n                http.open('GET', img.src, true);\n                http.responseType = 'arraybuffer';\n                http.send(null);\n            }\n        } else if (window.FileReader && (img instanceof window.Blob || img instanceof window.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function (e) {\n                if (debug) console.log('Got file of length ' + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log('Got file of length ' + file.byteLength);\n        if (dataView.getUint8(0) != 0xff || dataView.getUint8(1) != 0xd8) {\n            if (debug) console.log('Not a valid JPEG');\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xff) {\n                if (debug)\n                    console.log('Not a valid marker at offset ' + offset + ', found: ' + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log('Found 0xFFE1 marker');\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n            } else {\n                offset += 2 + dataView.getUint16(offset + 2);\n            }\n        }\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log('Got file of length ' + file.byteLength);\n        if (dataView.getUint8(0) != 0xff || dataView.getUint8(1) != 0xd8) {\n            if (debug) console.log('Not a valid JPEG');\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n        var isFieldSegmentStart = function (dataView, offset) {\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset + 1) === 0x42 &&\n                dataView.getUint8(offset + 2) === 0x49 &&\n                dataView.getUint8(offset + 3) === 0x4d &&\n                dataView.getUint8(offset + 4) === 0x04 &&\n                dataView.getUint8(offset + 5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n            if (isFieldSegmentStart(dataView, offset)) {\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset + 7);\n                if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if (nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n            }\n\n            // Not the marker, continue searching\n            offset++;\n        }\n    }\n    var IptcFieldMap = {\n        0x78: 'caption',\n        0x6e: 'credit',\n        0x19: 'keywords',\n        0x37: 'dateCreated',\n        0x50: 'byline',\n        0x55: 'bylineTitle',\n        0x7a: 'captionWriter',\n        0x69: 'headline',\n        0x74: 'copyright',\n        0x0f: 'category'\n    };\n\n    function readIPTCData(file, startOffset, sectionLength) {\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while (segmentStartPos < startOffset + sectionLength) {\n            if (dataView.getUint8(segmentStartPos) === 0x1c && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n                segmentType = dataView.getUint8(segmentStartPos + 2);\n                if (segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos + 3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize);\n                    // Check if we already stored a value with this name\n                    if (data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if (data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        } else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    } else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset,\n            tag,\n            i;\n\n        for (i = 0; i < entries; i++) {\n            entryOffset = dirStart + i * 12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset + 2, !bigEnd),\n            numValues = file.getUint32(entryOffset + 4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart,\n            offset,\n            vals,\n            val,\n            n,\n            numerator,\n            denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : entryOffset + 8;\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : entryOffset + 8;\n                return getStringFromDB(file, offset, numValues - 1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : entryOffset + 8;\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5: // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset + 4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n                        denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n = 0; n < numValues; n++) {\n                        vals[n] =\n                            file.getInt32(valueOffset + 8 * n, !bigEnd) /\n                            file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = '';\n        for (n = start; n < start + length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != 'Exif') {\n            if (debug) console.log('Not valid EXIF data! ' + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags,\n            tag,\n            exifData,\n            gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4d4d) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset + 2, !bigEnd) != 0x002a) {\n            if (debug) console.log('Not valid TIFF data! (no 0x002A)');\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug)\n                console.log('Not valid TIFF data! (First offset less than 8)', file.getUint32(tiffOffset + 4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case 'LightSource':\n                    case 'Flash':\n                    case 'MeteringMode':\n                    case 'ExposureProgram':\n                    case 'SensingMethod':\n                    case 'SceneCaptureType':\n                    case 'SceneType':\n                    case 'CustomRendered':\n                    case 'WhiteBalance':\n                    case 'GainControl':\n                    case 'Contrast':\n                    case 'Saturation':\n                    case 'Sharpness':\n                    case 'SubjectDistanceRange':\n                    case 'FileSource':\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case 'ExifVersion':\n                    case 'FlashpixVersion':\n                        exifData[tag] = String.fromCharCode(\n                            exifData[tag][0],\n                            exifData[tag][1],\n                            exifData[tag][2],\n                            exifData[tag][3]\n                        );\n                        break;\n\n                    case 'ComponentsConfiguration':\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case 'GPSVersionID':\n                        gpsData[tag] =\n                            gpsData[tag][0] + '.' + gpsData[tag][1] + '.' + gpsData[tag][2] + '.' + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        return tags;\n    }\n\n    EXIF.getData = function (img, callback) {\n        if ((img instanceof Image || img instanceof HTMLImageElement) && !img.complete) return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    };\n\n    EXIF.getTag = function (img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    };\n\n    EXIF.getAllTags = function (img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    };\n\n    EXIF.pretty = function (img) {\n        if (!imageHasData(img)) return '';\n        var a,\n            data = img.exifdata,\n            strPretty = '';\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == 'object') {\n                    if (data[a] instanceof Number) {\n                        strPretty +=\n                            a + ' : ' + data[a] + ' [' + data[a].numerator + '/' + data[a].denominator + ']\\r\\n';\n                    } else {\n                        strPretty += a + ' : [' + data[a].length + ' values]\\r\\n';\n                    }\n                } else {\n                    strPretty += a + ' : ' + data[a] + '\\r\\n';\n                }\n            }\n        }\n        return strPretty;\n    };\n\n    EXIF.readFromBinaryFile = function (file) {\n        return findEXIFinJPEG(file);\n    };\n\n    this.EXIF = EXIF;\n}.call(this));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/vendor/editor/exif.js\n");

/***/ }),

/***/ "./src/vendor/editor/lang/zh-cn/zh-cn.js":
/***/ (function(module, exports) {

eval("/**\n * Created with JetBrains PhpStorm.\n * User: taoqili\n * Date: 12-6-12\n * Time: 下午5:02\n * To change this template use File | Settings | File Templates.\n */\nUE.I18N['zh-cn'] = {\n    labelMap: {\n        anchor: '锚点',\n        undo: '撤销',\n        redo: '重做',\n        bold: '加粗',\n        indent: '首行缩进',\n        snapscreen: '截图',\n        italic: '斜体',\n        underline: '下划线',\n        strikethrough: '删除线',\n        subscript: '下标',\n        fontborder: '字符边框',\n        superscript: '上标',\n        formatmatch: '格式刷',\n        source: '源代码',\n        blockquote: '引用',\n        pasteplain: '纯文本粘贴模式',\n        selectall: '全选',\n        print: '打印',\n        preview: '预览',\n        horizontal: '分隔线',\n        removeformat: '清除格式',\n        time: '时间',\n        date: '日期',\n        unlink: '取消链接',\n        insertrow: '前插入行',\n        insertcol: '前插入列',\n        mergeright: '右合并单元格',\n        mergedown: '下合并单元格',\n        deleterow: '删除行',\n        deletecol: '删除列',\n        splittorows: '拆分成行',\n        splittocols: '拆分成列',\n        splittocells: '完全拆分单元格',\n        deletecaption: '删除表格标题',\n        inserttitle: '插入标题',\n        mergecells: '合并多个单元格',\n        deletetable: '删除表格',\n        cleardoc: '清空文档',\n        insertparagraphbeforetable: '表格前插入行',\n        insertcode: '代码语言',\n        fontfamily: '字体',\n        fontsize: '字号',\n        paragraph: '段落格式',\n        simpleupload: '单图上传',\n        insertimage: '多图上传',\n        edittable: '表格属性',\n        edittd: '单元格属性',\n        link: '超链接',\n        emotion: '表情',\n        spechars: '特殊字符',\n        searchreplace: '查询替换',\n        map: 'Baidu地图',\n        gmap: 'Google地图',\n        insertvideo: '视频',\n        help: '帮助',\n        justifyleft: '居左对齐',\n        justifyright: '居右对齐',\n        justifycenter: '居中对齐',\n        justifyjustify: '两端对齐',\n        forecolor: '字体颜色',\n        backcolor: '背景色',\n        insertorderedlist: '有序列表',\n        insertunorderedlist: '无序列表',\n        fullscreen: '全屏',\n        directionalityltr: '从左向右输入',\n        directionalityrtl: '从右向左输入',\n        rowspacingtop: '段前距',\n        rowspacingbottom: '段后距',\n        pagebreak: '分页',\n        insertframe: '插入Iframe',\n        imagenone: '默认',\n        imageleft: '左浮动',\n        imageright: '右浮动',\n        attachment: '附件',\n        imagecenter: '居中',\n        wordimage: '图片转存',\n        lineheight: '行间距',\n        edittip: '编辑提示',\n        customstyle: '自定义标题',\n        autotypeset: '自动排版',\n        webapp: '百度应用',\n        touppercase: '字母大写',\n        tolowercase: '字母小写',\n        background: '背景',\n        template: '模板',\n        scrawl: '涂鸦',\n        music: '音乐',\n        inserttable: '插入表格',\n        drafts: '从草稿箱加载',\n        charts: '图表'\n    },\n    insertorderedlist: {\n        num: '1,2,3...',\n        num1: '1),2),3)...',\n        num2: '(1),(2),(3)...',\n        cn: '一,二,三....',\n        cn1: '一),二),三)....',\n        cn2: '(一),(二),(三)....',\n        decimal: '1,2,3...',\n        'lower-alpha': 'a,b,c...',\n        'lower-roman': 'i,ii,iii...',\n        'upper-alpha': 'A,B,C...',\n        'upper-roman': 'I,II,III...'\n    },\n    insertunorderedlist: {\n        circle: '○ 大圆圈',\n        disc: '● 小黑点',\n        square: '■ 小方块 ',\n        dash: '— 破折号',\n        dot: ' 。 小圆圈'\n    },\n    paragraph: { p: '段落', h1: '标题 1', h2: '标题 2', h3: '标题 3', h4: '标题 4', h5: '标题 5', h6: '标题 6' },\n    fontfamily: {\n        songti: '宋体',\n        kaiti: '楷体',\n        heiti: '黑体',\n        lishu: '隶书',\n        yahei: '微软雅黑',\n        andaleMono: 'andale mono',\n        arial: 'arial',\n        arialBlack: 'arial black',\n        comicSansMs: 'comic sans ms',\n        impact: 'impact',\n        timesNewRoman: 'times new roman'\n    },\n    customstyle: {\n        tc: '标题居中',\n        tl: '标题居左',\n        im: '强调',\n        hi: '明显强调'\n    },\n    autoupload: {\n        exceedSizeError: '文件大小超出限制',\n        exceedTypeError: '文件格式不允许',\n        jsonEncodeError: '服务器返回格式错误',\n        loading: '正在上传...',\n        loadError: '上传错误',\n        errorLoadConfig: '后端配置项没有正常加载，上传插件不能正常使用！'\n    },\n    simpleupload: {\n        exceedSizeError: '文件大小超出限制',\n        exceedTypeError: '文件格式不允许',\n        jsonEncodeError: '服务器返回格式错误',\n        loading: '正在上传...',\n        loadError: '上传错误',\n        errorLoadConfig: '后端配置项没有正常加载，上传插件不能正常使用！',\n        overMaxSize: '请上传{maxSize}以下的图片!'\n    },\n    elementPathTip: '元素路径',\n    wordCountTip: '字数统计',\n    wordCountMsg: '当前已输入{#count}个字符, 您还可以输入{#leave}个字符。 ',\n    wordOverFlowMsg: '<span style=\"color:red;\">字数超出最大允许值，服务器可能拒绝保存！</span>',\n    ok: '确认',\n    cancel: '取消',\n    closeDialog: '关闭对话框',\n    tableDrag: '表格拖动必须引入uiUtils.js文件！',\n    autofloatMsg: '工具栏浮动依赖编辑器UI，您首先需要引入UI文件!',\n    loadconfigError: '获取后台配置项请求出错，上传功能将不能正常使用！',\n    loadconfigFormatError: '后台配置项返回格式出错，上传功能将不能正常使用！',\n    loadconfigHttpError: '请求后台配置项http错误，上传功能将不能正常使用！',\n    snapScreen_plugin: {\n        browserMsg: '仅支持IE浏览器！',\n        callBackErrorMsg: '服务器返回数据有误，请检查配置项之后重试。',\n        uploadErrorMsg: '截图上传失败，请检查服务器端环境! '\n    },\n    insertcode: {\n        as3: 'ActionScript 3',\n        bash: 'Bash/Shell',\n        cpp: 'C/C++',\n        css: 'CSS',\n        cf: 'ColdFusion',\n        'c#': 'C#',\n        delphi: 'Delphi',\n        diff: 'Diff',\n        erlang: 'Erlang',\n        groovy: 'Groovy',\n        html: 'HTML',\n        java: 'Java',\n        jfx: 'JavaFX',\n        js: 'JavaScript',\n        pl: 'Perl',\n        php: 'PHP',\n        plain: 'Plain Text',\n        ps: 'PowerShell',\n        python: 'Python',\n        ruby: 'Ruby',\n        scala: 'Scala',\n        sql: 'SQL',\n        vb: 'Visual Basic',\n        xml: 'XML'\n    },\n    confirmClear: '确定清空当前文档么？',\n    contextMenu: {\n        delete: '删除',\n        selectall: '全选',\n        deletecode: '删除代码',\n        cleardoc: '清空文档',\n        confirmclear: '确定清空当前文档么？',\n        unlink: '删除超链接',\n        paragraph: '段落格式',\n        edittable: '表格属性',\n        aligntd: '单元格对齐方式',\n        aligntable: '表格对齐方式',\n        tableleft: '左浮动',\n        tablecenter: '居中显示',\n        tableright: '右浮动',\n        edittd: '单元格属性',\n        setbordervisible: '设置表格边线可见',\n        justifyleft: '左对齐',\n        justifyright: '右对齐',\n        justifycenter: '居中对齐',\n        justifyjustify: '两端对齐',\n        table: '表格',\n        inserttable: '插入表格',\n        deletetable: '删除表格',\n        insertparagraphbefore: '前插入段落',\n        insertparagraphafter: '后插入段落',\n        deleterow: '删除当前行',\n        deletecol: '删除当前列',\n        insertrow: '前插入行',\n        insertcol: '左插入列',\n        insertrownext: '后插入行',\n        insertcolnext: '右插入列',\n        insertcaption: '插入表格名称',\n        deletecaption: '删除表格名称',\n        inserttitle: '插入表格标题行',\n        deletetitle: '删除表格标题行',\n        inserttitlecol: '插入表格标题列',\n        deletetitlecol: '删除表格标题列',\n        averageDiseRow: '平均分布各行',\n        averageDisCol: '平均分布各列',\n        mergeright: '向右合并',\n        mergeleft: '向左合并',\n        mergedown: '向下合并',\n        mergecells: '合并单元格',\n        splittocells: '完全拆分单元格',\n        splittocols: '拆分成列',\n        splittorows: '拆分成行',\n        tablesort: '表格排序',\n        enablesort: '设置表格可排序',\n        disablesort: '取消表格可排序',\n        reversecurrent: '逆序当前',\n        orderbyasc: '按ASCII字符升序',\n        reversebyasc: '按ASCII字符降序',\n        orderbynum: '按数值大小升序',\n        reversebynum: '按数值大小降序',\n        borderbk: '边框底纹',\n        setcolor: '表格隔行变色',\n        unsetcolor: '取消表格隔行变色',\n        setbackground: '选区背景隔行',\n        unsetbackground: '取消选区背景',\n        redandblue: '红蓝相间',\n        threecolorgradient: '三色渐变',\n        copy: '复制(Ctrl + c)',\n        copymsg: \"浏览器不支持,请使用 'Ctrl + c'\",\n        paste: '粘贴(Ctrl + v)',\n        pastemsg: \"浏览器不支持,请使用 'Ctrl + v'\"\n    },\n    copymsg: \"浏览器不支持,请使用 'Ctrl + c'\",\n    pastemsg: \"浏览器不支持,请使用 'Ctrl + v'\",\n    anthorMsg: '链接',\n    clearColor: '清空颜色',\n    standardColor: '标准颜色',\n    themeColor: '主题颜色',\n    property: '属性',\n    default: '默认',\n    modify: '修改',\n    justifyleft: '左对齐',\n    justifyright: '右对齐',\n    justifycenter: '居中',\n    justify: '默认',\n    clear: '清除',\n    anchorMsg: '锚点',\n    delete: '删除',\n    clickToUpload: '点击上传',\n    unset: '尚未设置语言文件',\n    t_row: '行',\n    t_col: '列',\n    more: '更多',\n    pasteOpt: '粘贴选项',\n    pasteSourceFormat: '保留源格式',\n    tagFormat: '只保留标签',\n    pasteTextFormat: '只保留文本',\n    autoTypeSet: {\n        mergeLine: '合并空行',\n        delLine: '清除空行',\n        removeFormat: '清除格式',\n        indent: '首行缩进',\n        alignment: '对齐方式',\n        imageFloat: '图片浮动',\n        removeFontsize: '清除字号',\n        removeFontFamily: '清除字体',\n        removeHtml: '清除冗余HTML代码',\n        pasteFilter: '粘贴过滤',\n        run: '执行',\n        symbol: '符号转换',\n        bdc2sb: '全角转半角',\n        tobdc: '半角转全角'\n    },\n\n    background: {\n        static: {\n            lang_background_normal: '背景设置',\n            lang_background_local: '在线图片',\n            lang_background_set: '选项',\n            lang_background_none: '无背景色',\n            lang_background_colored: '有背景色',\n            lang_background_color: '颜色设置',\n            lang_background_netimg: '网络图片',\n            lang_background_align: '对齐方式',\n            lang_background_position: '精确定位',\n            repeatType: { options: ['居中', '横向重复', '纵向重复', '平铺', '自定义'] }\n        },\n        noUploadImage: '当前未上传过任何图片！',\n        toggleSelect: '单击可切换选中状态\\n原图尺寸: '\n    },\n    //===============dialog i18N=======================\n    insertimage: {\n        static: {\n            lang_tab_remote: '插入图片', //节点\n            lang_tab_upload: '本地上传',\n            lang_tab_online: '在线管理',\n            lang_tab_search: '图片搜索',\n            lang_input_url: '地 址：',\n            lang_input_size: '大 小：',\n            lang_input_width: '宽度',\n            lang_input_height: '高度',\n            lang_input_border: '边 框：',\n            lang_input_vhspace: '边 距：',\n            lang_input_title: '描 述：',\n            lang_input_align: '图片浮动方式：',\n            lang_imgLoading: '　图片加载中……',\n            lang_start_upload: '开始上传',\n            lock: { title: '锁定宽高比例' }, //属性\n            searchType: { title: '图片类型', options: ['新闻', '壁纸', '表情', '头像'] }, //select的option\n            searchTxt: { value: '请输入搜索关键词' },\n            searchBtn: { value: '百度一下' },\n            searchReset: { value: '清空搜索' },\n            noneAlign: { title: '无浮动' },\n            leftAlign: { title: '左浮动' },\n            rightAlign: { title: '右浮动' },\n            centerAlign: { title: '居中独占一行' }\n        },\n        uploadSelectFile: '点击选择图片',\n        uploadAddFile: '继续添加',\n        uploadStart: '开始上传',\n        uploadPause: '暂停上传',\n        uploadContinue: '继续上传',\n        uploadRetry: '重试上传',\n        uploadDelete: '删除',\n        uploadTurnLeft: '向左旋转',\n        uploadTurnRight: '向右旋转',\n        uploadPreview: '预览中',\n        uploadNoPreview: '不能预览',\n        updateStatusReady: '选中_张图片，共_KB。',\n        updateStatusConfirm: '已成功上传_张照片，_张照片上传失败',\n        updateStatusFinish: '共_张（_KB），_张上传成功',\n        updateStatusError: '，_张上传失败。',\n        errorNotSupport: 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        errorLoadConfig: '后端配置项没有正常加载，上传插件不能正常使用！',\n        errorExceedSize: '文件大小超出',\n        errorFileType: '文件格式不允许',\n        errorInterrupt: '文件传输中断',\n        errorUploadRetry: '上传失败，请重试',\n        errorHttp: 'http请求错误',\n        errorServerUpload: '服务器返回出错',\n        remoteLockError: '宽高不正确,不能所定比例',\n        numError: '请输入正确的长度或者宽度值！例如：123，400',\n        imageUrlError: '不允许的图片格式或者图片域！',\n        imageLoadError: '图片加载失败！请检查链接地址或网络状态！',\n        searchRemind: '请输入搜索关键词',\n        searchLoading: '图片加载中，请稍后……',\n        searchRetry: ' :( ，抱歉，没有找到图片！请重试一次！'\n    },\n    attachment: {\n        static: {\n            lang_tab_upload: '上传附件',\n            lang_tab_online: '在线附件',\n            lang_start_upload: '开始上传',\n            lang_drop_remind: '可以将文件拖到这里，单次最多可选100个文件'\n        },\n        uploadSelectFile: '点击选择文件',\n        uploadAddFile: '继续添加',\n        uploadStart: '开始上传',\n        uploadPause: '暂停上传',\n        uploadContinue: '继续上传',\n        uploadRetry: '重试上传',\n        uploadDelete: '删除',\n        uploadTurnLeft: '向左旋转',\n        uploadTurnRight: '向右旋转',\n        uploadPreview: '预览中',\n        updateStatusReady: '选中_个文件，共_KB。',\n        updateStatusConfirm: '已成功上传_个文件，_个文件上传失败',\n        updateStatusFinish: '共_个（_KB），_个上传成功',\n        updateStatusError: '，_张上传失败。',\n        errorNotSupport: 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        errorLoadConfig: '后端配置项没有正常加载，上传插件不能正常使用！',\n        errorExceedSize: '文件大小超出',\n        errorFileType: '文件格式不允许',\n        errorInterrupt: '文件传输中断',\n        errorUploadRetry: '上传失败，请重试',\n        errorHttp: 'http请求错误',\n        errorServerUpload: '服务器返回出错'\n    },\n    insertvideo: {\n        static: {\n            lang_tab_insertV: '插入视频',\n            lang_tab_searchV: '搜索视频',\n            lang_tab_uploadV: '上传视频',\n            lang_video_url: '视频网址',\n            lang_video_size: '视频尺寸',\n            lang_videoW: '宽度',\n            lang_videoH: '高度',\n            lang_alignment: '对齐方式',\n            videoSearchTxt: { value: '请输入搜索关键字！' },\n            videoType: { options: ['全部', '热门', '娱乐', '搞笑', '体育', '科技', '综艺'] },\n            videoSearchBtn: { value: '百度一下' },\n            videoSearchReset: { value: '清空结果' },\n\n            lang_input_fileStatus: ' 当前未上传文件',\n            startUpload: { style: 'background:url(upload.png) no-repeat;' },\n\n            lang_upload_size: '视频尺寸',\n            lang_upload_width: '宽度',\n            lang_upload_height: '高度',\n            lang_upload_alignment: '对齐方式',\n            lang_format_advice: '建议使用mp4格式.'\n        },\n        numError: '请输入正确的数值，如123,400',\n        floatLeft: '左浮动',\n        floatRight: '右浮动',\n        '\"default\"': '默认',\n        block: '独占一行',\n        urlError: '输入的视频地址有误，请检查后再试！',\n        loading: ' &nbsp;视频加载中，请等待……',\n        clickToSelect: '点击选中',\n        goToSource: '访问源视频',\n        noVideo: ' &nbsp; &nbsp;抱歉，找不到对应的视频，请重试！',\n\n        browseFiles: '浏览文件',\n        uploadSuccess: '上传成功!',\n        delSuccessFile: '从成功队列中移除',\n        delFailSaveFile: '移除保存失败文件',\n        statusPrompt: ' 个文件已上传！ ',\n        flashVersionError: '当前Flash版本过低，请更新FlashPlayer后重试！',\n        flashLoadingError: 'Flash加载失败!请检查路径或网络状态',\n        fileUploadReady: '等待上传……',\n        delUploadQueue: '从上传队列中移除',\n        limitPrompt1: '单次不能选择超过',\n        limitPrompt2: '个文件！请重新选择！',\n        delFailFile: '移除失败文件',\n        fileSizeLimit: '文件大小超出限制！',\n        emptyFile: '空文件无法上传！',\n        fileTypeError: '文件类型不允许！',\n        unknownError: '未知错误！',\n        fileUploading: '上传中，请等待……',\n        cancelUpload: '取消上传',\n        netError: '网络错误',\n        failUpload: '上传失败!',\n        serverIOError: '服务器IO错误！',\n        noAuthority: '无权限！',\n        fileNumLimit: '上传个数限制',\n        failCheck: '验证失败，本次上传被跳过！',\n        fileCanceling: '取消中，请等待……',\n        stopUploading: '上传已停止……',\n\n        uploadSelectFile: '点击选择文件',\n        uploadAddFile: '继续添加',\n        uploadStart: '开始上传',\n        uploadPause: '暂停上传',\n        uploadContinue: '继续上传',\n        uploadRetry: '重试上传',\n        uploadDelete: '删除',\n        uploadTurnLeft: '向左旋转',\n        uploadTurnRight: '向右旋转',\n        uploadPreview: '预览中',\n        updateStatusReady: '选中_个文件，共_KB。',\n        updateStatusConfirm: '成功上传_个，_个失败',\n        updateStatusFinish: '共_个(_KB)，_个成功上传',\n        updateStatusError: '，_张上传失败。',\n        errorNotSupport: 'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。',\n        errorLoadConfig: '后端配置项没有正常加载，上传插件不能正常使用！',\n        errorExceedSize: '文件大小超出',\n        errorFileType: '文件格式不允许',\n        errorInterrupt: '文件传输中断',\n        errorUploadRetry: '上传失败，请重试',\n        errorHttp: 'http请求错误',\n        errorServerUpload: '服务器返回出错'\n    },\n    webapp: {\n        tip1: '本功能由百度APP提供，如看到此页面，请各位站长首先申请百度APPKey!',\n        tip2: '申请完成之后请至ueditor.config.js中配置获得的appkey! ',\n        applyFor: '点此申请',\n        anthorApi: '百度API'\n    },\n    template: {\n        static: {\n            lang_template_bkcolor: '背景颜色',\n            lang_template_clear: '保留原有内容',\n            lang_template_select: '选择模板'\n        },\n        blank: '空白文档',\n        blog: '博客文章',\n        resume: '个人简历',\n        richText: '图文混排',\n        sciPapers: '科技论文'\n    },\n    scrawl: {\n        static: {\n            lang_input_previousStep: '上一步',\n            lang_input_nextsStep: '下一步',\n            lang_input_clear: '清空',\n            lang_input_addPic: '添加背景',\n            lang_input_ScalePic: '缩放背景',\n            lang_input_removePic: '删除背景',\n            J_imgTxt: { title: '添加背景图片' }\n        },\n        noScarwl: '尚未作画，白纸一张~',\n        scrawlUpLoading: '涂鸦上传中,别急哦~',\n        continueBtn: '继续',\n        imageError: '糟糕，图片读取失败了！',\n        backgroundUploading: '背景图片上传中,别急哦~'\n    },\n    music: {\n        static: {\n            lang_input_tips: '输入歌手/歌曲/专辑，搜索您感兴趣的音乐！',\n            J_searchBtn: { value: '搜索歌曲' }\n        },\n        emptyTxt: '未搜索到相关音乐结果，请换一个关键词试试。',\n        chapter: '歌曲',\n        singer: '歌手',\n        special: '专辑',\n        listenTest: '试听'\n    },\n    anchor: {\n        static: {\n            lang_input_anchorName: '锚点名字：'\n        }\n    },\n    charts: {\n        static: {\n            lang_data_source: '数据源：',\n            lang_chart_format: '图表格式：',\n            lang_data_align: '数据对齐方式',\n            lang_chart_align_same: '数据源与图表X轴Y轴一致',\n            lang_chart_align_reverse: '数据源与图表X轴Y轴相反',\n            lang_chart_title: '图表标题',\n            lang_chart_main_title: '主标题：',\n            lang_chart_sub_title: '子标题：',\n            lang_chart_x_title: 'X轴标题：',\n            lang_chart_y_title: 'Y轴标题：',\n            lang_chart_tip: '提示文字',\n            lang_cahrt_tip_prefix: '提示文字前缀：',\n            lang_cahrt_tip_description: '仅饼图有效， 当鼠标移动到饼图中相应的块上时，提示框内的文字的前缀',\n            lang_chart_data_unit: '数据单位',\n            lang_chart_data_unit_title: '单位：',\n            lang_chart_data_unit_description: '显示在每个数据点上的数据的单位， 比如： 温度的单位 ℃',\n            lang_chart_type: '图表类型：',\n            lang_prev_btn: '上一个',\n            lang_next_btn: '下一个'\n        }\n    },\n    emotion: {\n        static: {\n            lang_input_choice: '精选',\n            lang_input_Tuzki: '兔斯基',\n            lang_input_BOBO: 'BOBO',\n            lang_input_lvdouwa: '绿豆蛙',\n            lang_input_babyCat: 'baby猫',\n            lang_input_bubble: '泡泡',\n            lang_input_youa: '有啊'\n        }\n    },\n    gmap: {\n        static: {\n            lang_input_address: '地址',\n            lang_input_search: '搜索',\n            address: { value: '北京' }\n        },\n        searchError: '无法定位到该地址!'\n    },\n    help: {\n        static: {\n            lang_input_about: '关于UEditor',\n            lang_input_shortcuts: '快捷键',\n            lang_input_introduction:\n                'UEditor是由百度web前端研发部开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点。开源基于BSD协议，允许自由使用和修改代码。',\n            lang_Txt_shortcuts: '快捷键',\n            lang_Txt_func: '功能',\n            lang_Txt_bold: '给选中字设置为加粗',\n            lang_Txt_copy: '复制选中内容',\n            lang_Txt_cut: '剪切选中内容',\n            lang_Txt_Paste: '粘贴',\n            lang_Txt_undo: '重新执行上次操作',\n            lang_Txt_redo: '撤销上一次操作',\n            lang_Txt_italic: '给选中字设置为斜体',\n            lang_Txt_underline: '给选中字加下划线',\n            lang_Txt_selectAll: '全部选中',\n            lang_Txt_visualEnter: '软回车',\n            lang_Txt_fullscreen: '全屏'\n        }\n    },\n    insertframe: {\n        static: {\n            lang_input_address: '地址：',\n            lang_input_width: '宽度：',\n            lang_input_height: '高度：',\n            lang_input_isScroll: '允许滚动条：',\n            lang_input_frameborder: '显示框架边框：',\n            lang_input_alignMode: '对齐方式：',\n            align: { title: '对齐方式', options: ['默认', '左对齐', '右对齐', '居中'] }\n        },\n        enterAddress: '请输入地址!'\n    },\n    link: {\n        static: {\n            lang_input_text: '文本内容：',\n            lang_input_url: '链接地址：',\n            lang_input_title: '标题：',\n            lang_input_target: '是否在新窗口打开：'\n        },\n        validLink: '只支持选中一个链接时生效',\n        httpPrompt: '您输入的超链接中不包含http等协议名称，默认将为您添加http://前缀'\n    },\n    map: {\n        static: {\n            lang_city: '城市',\n            lang_address: '地址',\n            city: { value: '北京' },\n            lang_search: '搜索',\n            lang_dynamicmap: '插入动态地图'\n        },\n        cityMsg: '请选择城市',\n        errorMsg: '抱歉，找不到该位置！'\n    },\n    searchreplace: {\n        static: {\n            lang_tab_search: '查找',\n            lang_tab_replace: '替换',\n            lang_search1: '查找',\n            lang_search2: '查找',\n            lang_replace: '替换',\n            lang_searchReg: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',\n            lang_searchReg1: '支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',\n            lang_case_sensitive1: '区分大小写',\n            lang_case_sensitive2: '区分大小写',\n            nextFindBtn: { value: '下一个' },\n            preFindBtn: { value: '上一个' },\n            nextReplaceBtn: { value: '下一个' },\n            preReplaceBtn: { value: '上一个' },\n            repalceBtn: { value: '替换' },\n            repalceAllBtn: { value: '全部替换' }\n        },\n        getEnd: '已经搜索到文章末尾！',\n        getStart: '已经搜索到文章头部',\n        countMsg: '总共替换了{#count}处！'\n    },\n    snapscreen: {\n        static: {\n            lang_showMsg: '截图功能需要首先安装UEditor截图插件！ ',\n            lang_download: '点此下载',\n            lang_step1: '第一步，下载UEditor截图插件并运行安装。',\n            lang_step2: '第二步，插件安装完成后即可使用，如不生效，请重启浏览器后再试！'\n        }\n    },\n    spechars: {\n        static: {},\n        tsfh: '特殊字符',\n        lmsz: '罗马字符',\n        szfh: '数学字符',\n        rwfh: '日文字符',\n        xlzm: '希腊字母',\n        ewzm: '俄文字符',\n        pyzm: '拼音字母',\n        yyyb: '英语音标',\n        zyzf: '其他'\n    },\n    edittable: {\n        static: {\n            lang_tableStyle: '表格样式',\n            lang_insertCaption: '添加表格名称行',\n            lang_insertTitle: '添加表格标题行',\n            lang_insertTitleCol: '添加表格标题列',\n            lang_orderbycontent: '使表格内容可排序',\n            lang_tableSize: '自动调整表格尺寸',\n            lang_autoSizeContent: '按表格文字自适应',\n            lang_autoSizePage: '按页面宽度自适应',\n            lang_example: '示例',\n            lang_borderStyle: '表格边框',\n            lang_color: '颜色:'\n        },\n        captionName: '表格名称',\n        titleName: '标题',\n        cellsName: '内容',\n        errorMsg: '有合并单元格，不可排序'\n    },\n    edittip: {\n        static: {\n            lang_delRow: '删除整行',\n            lang_delCol: '删除整列'\n        }\n    },\n    edittd: {\n        static: {\n            lang_tdBkColor: '背景颜色:'\n        }\n    },\n    formula: {\n        static: {}\n    },\n    wordimage: {\n        static: {\n            lang_resave: '转存步骤',\n            uploadBtn: { src: 'upload.png', alt: '上传' },\n            clipboard: { style: 'background: url(copy.png) -153px -1px no-repeat;' },\n            lang_step:\n                '1、点击顶部复制按钮，将地址复制到剪贴板；2、点击添加照片按钮，在弹出的对话框中使用Ctrl+V粘贴地址；3、点击打开后选择图片上传流程。'\n        },\n        fileType: '图片',\n        flashError: 'FLASH初始化失败，请检查FLASH插件是否正确安装！',\n        netError: '网络连接错误，请重试！',\n        copySuccess: '图片地址已经复制！',\n        flashI18n: {} //留空默认中文\n    },\n    autosave: {\n        saving: '保存中...',\n        success: '本地保存成功'\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/vendor/editor/lang/zh-cn/zh-cn.js\n");

/***/ }),

/***/ "./src/vendor/editor/ueditor.all.js":
/***/ (function(module, exports) {

eval("/*!\n * UEditor\n * version: ueditor\n * build: Wed Jan 04 2017 16:11:26 GMT+0800 (CST)\n */\n(function () {\n    // editor.js\n    UEDITOR_CONFIG = window.UEDITOR_CONFIG || {};\n\n    var baidu = window.baidu || {};\n\n    window.baidu = baidu;\n\n    window.UE = baidu.editor = window.UE || {};\n\n    UE.plugins = {};\n\n    UE.commands = {};\n\n    UE.instants = {};\n\n    UE.I18N = {};\n\n    UE._customizeUI = {};\n\n    UE.version = '1.4.3';\n\n    var dom = (UE.dom = {});\n\n    // core/browser.js\n    /**\n     * 浏览器判断模块\n     * @file\n     * @module UE.browser\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 提供浏览器检测的模块\n     * @unfile\n     * @module UE.browser\n     */\n    var browser = (UE.browser = (function () {\n        var agent = navigator.userAgent.toLowerCase(),\n            opera = window.opera,\n            browser = {\n                /**\n                 * @property {boolean} ie 检测当前浏览器是否为IE\n                 * @example\n                 * ```javascript\n                 * if ( UE.browser.ie ) {\n                 *     console.log( '当前浏览器是IE' );\n                 * }\n                 * ```\n                 */\n                ie: /(msie\\s|trident.*rv:)([\\w.]+)/.test(agent),\n\n                /**\n                 * @property {boolean} opera 检测当前浏览器是否为Opera\n                 * @example\n                 * ```javascript\n                 * if ( UE.browser.opera ) {\n                 *     console.log( '当前浏览器是Opera' );\n                 * }\n                 * ```\n                 */\n                opera: !!opera && opera.version,\n\n                /**\n                 * @property {boolean} webkit 检测当前浏览器是否是webkit内核的浏览器\n                 * @example\n                 * ```javascript\n                 * if ( UE.browser.webkit ) {\n                 *     console.log( '当前浏览器是webkit内核浏览器' );\n                 * }\n                 * ```\n                 */\n                webkit: agent.indexOf(' applewebkit/') > -1,\n\n                /**\n                 * @property {boolean} mac 检测当前浏览器是否是运行在mac平台下\n                 * @example\n                 * ```javascript\n                 * if ( UE.browser.mac ) {\n                 *     console.log( '当前浏览器运行在mac平台下' );\n                 * }\n                 * ```\n                 */\n                mac: agent.indexOf('macintosh') > -1,\n\n                /**\n                 * @property {boolean} quirks 检测当前浏览器是否处于“怪异模式”下\n                 * @example\n                 * ```javascript\n                 * if ( UE.browser.quirks ) {\n                 *     console.log( '当前浏览器运行处于“怪异模式”' );\n                 * }\n                 * ```\n                 */\n                quirks: document.compatMode == 'BackCompat'\n            };\n\n        /**\n         * @property {boolean} gecko 检测当前浏览器内核是否是gecko内核\n         * @example\n         * ```javascript\n         * if ( UE.browser.gecko ) {\n         *     console.log( '当前浏览器内核是gecko内核' );\n         * }\n         * ```\n         */\n        browser.gecko = navigator.product == 'Gecko' && !browser.webkit && !browser.opera && !browser.ie;\n\n        var version = 0;\n\n        // Internet Explorer 6.0+\n        if (browser.ie) {\n            var v1 = agent.match(/(?:msie\\s([\\w.]+))/);\n            var v2 = agent.match(/(?:trident.*rv:([\\w.]+))/);\n            if (v1 && v2 && v1[1] && v2[1]) {\n                version = Math.max(v1[1] * 1, v2[1] * 1);\n            } else if (v1 && v1[1]) {\n                version = v1[1] * 1;\n            } else if (v2 && v2[1]) {\n                version = v2[1] * 1;\n            } else {\n                version = 0;\n            }\n\n            browser.ie11Compat = document.documentMode == 11;\n            /**\n             * @property { boolean } ie9Compat 检测浏览器模式是否为 IE9 兼容模式\n             * @warning 如果浏览器不是IE， 则该值为undefined\n             * @example\n             * ```javascript\n             * if ( UE.browser.ie9Compat ) {\n             *     console.log( '当前浏览器运行在IE9兼容模式下' );\n             * }\n             * ```\n             */\n            browser.ie9Compat = document.documentMode == 9;\n\n            /**\n             * @property { boolean } ie8 检测浏览器是否是IE8浏览器\n             * @warning 如果浏览器不是IE， 则该值为undefined\n             * @example\n             * ```javascript\n             * if ( UE.browser.ie8 ) {\n             *     console.log( '当前浏览器是IE8浏览器' );\n             * }\n             * ```\n             */\n            browser.ie8 = !!document.documentMode;\n\n            /**\n             * @property { boolean } ie8Compat 检测浏览器模式是否为 IE8 兼容模式\n             * @warning 如果浏览器不是IE， 则该值为undefined\n             * @example\n             * ```javascript\n             * if ( UE.browser.ie8Compat ) {\n             *     console.log( '当前浏览器运行在IE8兼容模式下' );\n             * }\n             * ```\n             */\n            browser.ie8Compat = document.documentMode == 8;\n\n            /**\n             * @property { boolean } ie7Compat 检测浏览器模式是否为 IE7 兼容模式\n             * @warning 如果浏览器不是IE， 则该值为undefined\n             * @example\n             * ```javascript\n             * if ( UE.browser.ie7Compat ) {\n             *     console.log( '当前浏览器运行在IE7兼容模式下' );\n             * }\n             * ```\n             */\n            browser.ie7Compat = (version == 7 && !document.documentMode) || document.documentMode == 7;\n\n            /**\n             * @property { boolean } ie6Compat 检测浏览器模式是否为 IE6 模式 或者怪异模式\n             * @warning 如果浏览器不是IE， 则该值为undefined\n             * @example\n             * ```javascript\n             * if ( UE.browser.ie6Compat ) {\n             *     console.log( '当前浏览器运行在IE6模式或者怪异模式下' );\n             * }\n             * ```\n             */\n            browser.ie6Compat = version < 7 || browser.quirks;\n\n            browser.ie9above = version > 8;\n\n            browser.ie9below = version < 9;\n\n            browser.ie11above = version > 10;\n\n            browser.ie11below = version < 11;\n        }\n\n        // Gecko.\n        if (browser.gecko) {\n            var geckoRelease = agent.match(/rv:([\\d\\.]+)/);\n            if (geckoRelease) {\n                geckoRelease = geckoRelease[1].split('.');\n                version = geckoRelease[0] * 10000 + (geckoRelease[1] || 0) * 100 + (geckoRelease[2] || 0) * 1;\n            }\n        }\n\n        /**\n         * @property { Number } chrome 检测当前浏览器是否为Chrome, 如果是，则返回Chrome的大版本号\n         * @warning 如果浏览器不是chrome， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.chrome ) {\n         *     console.log( '当前浏览器是Chrome' );\n         * }\n         * ```\n         */\n        if (/chrome\\/(\\d+\\.\\d)/i.test(agent)) {\n            browser.chrome = +RegExp['\\x241'];\n        }\n\n        /**\n         * @property { Number } safari 检测当前浏览器是否为Safari, 如果是，则返回Safari的大版本号\n         * @warning 如果浏览器不是safari， 则该值为undefined\n         * @example\n         * ```javascript\n         * if ( UE.browser.safari ) {\n         *     console.log( '当前浏览器是Safari' );\n         * }\n         * ```\n         */\n        if (/(\\d+\\.\\d)?(?:\\.\\d)?\\s+safari\\/?(\\d+\\.\\d+)?/i.test(agent) && !/chrome/i.test(agent)) {\n            browser.safari = +(RegExp['\\x241'] || RegExp['\\x242']);\n        }\n\n        // Opera 9.50+\n        if (browser.opera) version = parseFloat(opera.version());\n\n        // WebKit 522+ (Safari 3+)\n        if (browser.webkit) version = parseFloat(agent.match(/ applewebkit\\/(\\d+)/)[1]);\n\n        /**\n         * @property { Number } version 检测当前浏览器版本号\n         * @remind\n         * <ul>\n         *     <li>IE系列返回值为5,6,7,8,9,10等</li>\n         *     <li>gecko系列会返回10900，158900等</li>\n         *     <li>webkit系列会返回其build号 (如 522等)</li>\n         * </ul>\n         * @example\n         * ```javascript\n         * console.log( '当前浏览器版本号是： ' + UE.browser.version );\n         * ```\n         */\n        browser.version = version;\n\n        /**\n         * @property { boolean } isCompatible 检测当前浏览器是否能够与UEditor良好兼容\n         * @example\n         * ```javascript\n         * if ( UE.browser.isCompatible ) {\n         *     console.log( '浏览器与UEditor能够良好兼容' );\n         * }\n         * ```\n         */\n        browser.isCompatible =\n            !browser.mobile &&\n            ((browser.ie && version >= 6) ||\n                (browser.gecko && version >= 10801) ||\n                (browser.opera && version >= 9.5) ||\n                (browser.air && version >= 1) ||\n                (browser.webkit && version >= 522) ||\n                false);\n        return browser;\n    })());\n    //快捷方式\n    var ie = browser.ie,\n        webkit = browser.webkit,\n        gecko = browser.gecko,\n        opera = browser.opera;\n\n    // core/utils.js\n    /**\n     * 工具函数包\n     * @file\n     * @module UE.utils\n     * @since 1.2.6.1\n     */\n\n    /**\n     * UEditor封装使用的静态工具函数\n     * @module UE.utils\n     * @unfile\n     */\n\n    var utils = (UE.utils = {\n        /**\n         * 用给定的迭代器遍历对象\n         * @method each\n         * @param { Object } obj 需要遍历的对象\n         * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key\n         * @example\n         * ```javascript\n         * var demoObj = {\n         *     key1: 1,\n         *     key2: 2\n         * };\n         *\n         * //output: key1: 1, key2: 2\n         * UE.utils.each( demoObj, funciton ( value, key ) {\n         *\n         *     console.log( key + \":\" + value );\n         *\n         * } );\n         * ```\n         */\n\n        /**\n         * 用给定的迭代器遍历数组或类数组对象\n         * @method each\n         * @param { Array } array 需要遍历的数组或者类数组\n         * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key\n         * @example\n         * ```javascript\n         * var divs = document.getElmentByTagNames( \"div\" );\n         *\n         * //output: 0: DIV, 1: DIV ...\n         * UE.utils.each( divs, funciton ( value, key ) {\n         *\n         *     console.log( key + \":\" + value.tagName );\n         *\n         * } );\n         * ```\n         */\n        each: function (obj, iterator, context) {\n            if (obj == null) return;\n            if (obj.length === +obj.length) {\n                for (var i = 0, l = obj.length; i < l; i++) {\n                    if (iterator.call(context, obj[i], i, obj) === false) return false;\n                }\n            } else {\n                for (var key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        if (iterator.call(context, obj[key], key, obj) === false) return false;\n                    }\n                }\n            }\n        },\n\n        /**\n         * 以给定对象作为原型创建一个新对象\n         * @method makeInstance\n         * @param { Object } protoObject 该对象将作为新创建对象的原型\n         * @return { Object } 新的对象， 该对象的原型是给定的protoObject对象\n         * @example\n         * ```javascript\n         *\n         * var protoObject = { sayHello: function () { console.log('Hello UEditor!'); } };\n         *\n         * var newObject = UE.utils.makeInstance( protoObject );\n         * //output: Hello UEditor!\n         * newObject.sayHello();\n         * ```\n         */\n        makeInstance: function (obj) {\n            var noop = new Function();\n            noop.prototype = obj;\n            obj = new noop();\n            noop.prototype = null;\n            return obj;\n        },\n\n        /**\n         * 将source对象中的属性扩展到target对象上\n         * @method extend\n         * @remind 该方法将强制把source对象上的属性复制到target对象上\n         * @see UE.utils.extend(Object,Object,Boolean)\n         * @param { Object } target 目标对象， 新的属性将附加到该对象上\n         * @param { Object } source 源对象， 该对象的属性会被附加到target对象上\n         * @return { Object } 返回target对象\n         * @example\n         * ```javascript\n         *\n         * var target = { name: 'target', sex: 1 },\n         *      source = { name: 'source', age: 17 };\n         *\n         * UE.utils.extend( target, source );\n         *\n         * //output: { name: 'source', sex: 1, age: 17 }\n         * console.log( target );\n         *\n         * ```\n         */\n\n        /**\n         * 将source对象中的属性扩展到target对象上， 根据指定的isKeepTarget值决定是否保留目标对象中与\n         * 源对象属性名相同的属性值。\n         * @method extend\n         * @param { Object } target 目标对象， 新的属性将附加到该对象上\n         * @param { Object } source 源对象， 该对象的属性会被附加到target对象上\n         * @param { Boolean } isKeepTarget 是否保留目标对象中与源对象中属性名相同的属性\n         * @return { Object } 返回target对象\n         * @example\n         * ```javascript\n         *\n         * var target = { name: 'target', sex: 1 },\n         *      source = { name: 'source', age: 17 };\n         *\n         * UE.utils.extend( target, source, true );\n         *\n         * //output: { name: 'target', sex: 1, age: 17 }\n         * console.log( target );\n         *\n         * ```\n         */\n        extend: function (t, s, b) {\n            if (s) {\n                for (var k in s) {\n                    if (!b || !t.hasOwnProperty(k)) {\n                        t[k] = s[k];\n                    }\n                }\n            }\n            return t;\n        },\n\n        /**\n         * 将给定的多个对象的属性复制到目标对象target上\n         * @method extend2\n         * @remind 该方法将强制把源对象上的属性复制到target对象上\n         * @remind 该方法支持两个及以上的参数， 从第二个参数开始， 其属性都会被复制到第一个参数上。 如果遇到同名的属性，\n         *          将会覆盖掉之前的值。\n         * @param { Object } target 目标对象， 新的属性将附加到该对象上\n         * @param { Object... } source 源对象， 支持多个对象， 该对象的属性会被附加到target对象上\n         * @return { Object } 返回target对象\n         * @example\n         * ```javascript\n         *\n         * var target = {},\n         *     source1 = { name: 'source', age: 17 },\n         *     source2 = { title: 'dev' };\n         *\n         * UE.utils.extend2( target, source1, source2 );\n         *\n         * //output: { name: 'source', age: 17, title: 'dev' }\n         * console.log( target );\n         *\n         * ```\n         */\n        extend2: function (t) {\n            var a = arguments;\n            for (var i = 1; i < a.length; i++) {\n                var x = a[i];\n                for (var k in x) {\n                    if (!t.hasOwnProperty(k)) {\n                        t[k] = x[k];\n                    }\n                }\n            }\n            return t;\n        },\n\n        /**\n         * 模拟继承机制， 使得subClass继承自superClass\n         * @method inherits\n         * @param { Object } subClass 子类对象\n         * @param { Object } superClass 超类对象\n         * @warning 该方法只能让subClass继承超类的原型， subClass对象自身的属性和方法不会被继承\n         * @return { Object } 继承superClass后的子类对象\n         * @example\n         * ```javascript\n         * function SuperClass(){\n         *     this.name = \"小李\";\n         * }\n         *\n         * SuperClass.prototype = {\n         *     hello:function(str){\n         *         console.log(this.name + str);\n         *     }\n         * }\n         *\n         * function SubClass(){\n         *     this.name = \"小张\";\n         * }\n         *\n         * UE.utils.inherits(SubClass,SuperClass);\n         *\n         * var sub = new SubClass();\n         * //output: '小张早上好!\n         * sub.hello(\"早上好!\");\n         * ```\n         */\n        inherits: function (subClass, superClass) {\n            var oldP = subClass.prototype,\n                newP = utils.makeInstance(superClass.prototype);\n            utils.extend(newP, oldP, true);\n            subClass.prototype = newP;\n            return (newP.constructor = subClass);\n        },\n\n        /**\n         * 用指定的context对象作为函数fn的上下文\n         * @method bind\n         * @param { Function } fn 需要绑定上下文的函数对象\n         * @param { Object } content 函数fn新的上下文对象\n         * @return { Function } 一个新的函数， 该函数作为原始函数fn的代理， 将完成fn的上下文调换工作。\n         * @example\n         * ```javascript\n         *\n         * var name = 'window',\n         *     newTest = null;\n         *\n         * function test () {\n         *     console.log( this.name );\n         * }\n         *\n         * newTest = UE.utils.bind( test, { name: 'object' } );\n         *\n         * //output: object\n         * newTest();\n         *\n         * //output: window\n         * test();\n         *\n         * ```\n         */\n        bind: function (fn, context) {\n            return function () {\n                return fn.apply(context, arguments);\n            };\n        },\n\n        /**\n         * 创建延迟指定时间后执行的函数fn\n         * @method defer\n         * @param { Function } fn 需要延迟执行的函数对象\n         * @param { int } delay 延迟的时间， 单位是毫秒\n         * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，\n         *           而不能保证刚好到达延迟时间时执行。\n         * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果\n         * @example\n         * ```javascript\n         * var start = 0;\n         *\n         * function test(){\n         *     console.log( new Date() - start );\n         * }\n         *\n         * var testDefer = UE.utils.defer( test, 1000 );\n         * //\n         * start = new Date();\n         * //output: (大约在1000毫秒之后输出) 1000\n         * testDefer();\n         * ```\n         */\n\n        /**\n         * 创建延迟指定时间后执行的函数fn, 如果在延迟时间内再次执行该方法， 将会根据指定的exclusion的值，\n         * 决定是否取消前一次函数的执行， 如果exclusion的值为true， 则取消执行，反之，将继续执行前一个方法。\n         * @method defer\n         * @param { Function } fn 需要延迟执行的函数对象\n         * @param { int } delay 延迟的时间， 单位是毫秒\n         * @param { Boolean } exclusion 如果在延迟时间内再次执行该函数，该值将决定是否取消执行前一次函数的执行，\n         *                     值为true表示取消执行， 反之则将在执行前一次函数之后才执行本次函数调用。\n         * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，\n         *           而不能保证刚好到达延迟时间时执行。\n         * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果\n         * @example\n         * ```javascript\n         *\n         * function test(){\n         *     console.log(1);\n         * }\n         *\n         * var testDefer = UE.utils.defer( test, 1000, true );\n         *\n         * //output: (两次调用仅有一次输出) 1\n         * testDefer();\n         * testDefer();\n         * ```\n         */\n        defer: function (fn, delay, exclusion) {\n            var timerID;\n            return function () {\n                if (exclusion) {\n                    clearTimeout(timerID);\n                }\n                timerID = setTimeout(fn, delay);\n            };\n        },\n\n        /**\n         * 获取元素item在数组array中首次出现的位置, 如果未找到item， 则返回-1\n         * @method indexOf\n         * @remind 该方法的匹配过程使用的是恒等“===”\n         * @param { Array } array 需要查找的数组对象\n         * @param { * } item 需要在目标数组中查找的值\n         * @return { int } 返回item在目标数组array中首次出现的位置， 如果在数组中未找到item， 则返回-1\n         * @example\n         * ```javascript\n         * var item = 1,\n         *     arr = [ 3, 4, 6, 8, 1, 1, 2 ];\n         *\n         * //output: 4\n         * console.log( UE.utils.indexOf( arr, item ) );\n         * ```\n         */\n\n        /**\n         * 获取元素item数组array中首次出现的位置, 如果未找到item， 则返回-1。通过start的值可以指定搜索的起始位置。\n         * @method indexOf\n         * @remind 该方法的匹配过程使用的是恒等“===”\n         * @param { Array } array 需要查找的数组对象\n         * @param { * } item 需要在目标数组中查找的值\n         * @param { int } start 搜索的起始位置\n         * @return { int } 返回item在目标数组array中的start位置之后首次出现的位置， 如果在数组中未找到item， 则返回-1\n         * @example\n         * ```javascript\n         * var item = 1,\n         *     arr = [ 3, 4, 6, 8, 1, 2, 8, 3, 2, 1, 1, 4 ];\n         *\n         * //output: 9\n         * console.log( UE.utils.indexOf( arr, item, 5 ) );\n         * ```\n         */\n        indexOf: function (array, item, start) {\n            var index = -1;\n            start = this.isNumber(start) ? start : 0;\n            this.each(array, function (v, i) {\n                if (i >= start && v === item) {\n                    index = i;\n                    return false;\n                }\n            });\n            return index;\n        },\n\n        /**\n         * 移除数组array中所有的元素item\n         * @method removeItem\n         * @param { Array } array 要移除元素的目标数组\n         * @param { * } item 将要被移除的元素\n         * @remind 该方法的匹配过程使用的是恒等“===”\n         * @example\n         * ```javascript\n         * var arr = [ 4, 5, 7, 1, 3, 4, 6 ];\n         *\n         * UE.utils.removeItem( arr, 4 );\n         * //output: [ 5, 7, 1, 3, 6 ]\n         * console.log( arr );\n         *\n         * ```\n         */\n        removeItem: function (array, item) {\n            for (var i = 0, l = array.length; i < l; i++) {\n                if (array[i] === item) {\n                    array.splice(i, 1);\n                    i--;\n                }\n            }\n        },\n\n        /**\n         * 删除字符串str的首尾空格\n         * @method trim\n         * @param { String } str 需要删除首尾空格的字符串\n         * @return { String } 删除了首尾的空格后的字符串\n         * @example\n         * ```javascript\n         *\n         * var str = \" UEdtior \";\n         *\n         * //output: 9\n         * console.log( str.length );\n         *\n         * //output: 7\n         * console.log( UE.utils.trim( \" UEdtior \" ).length );\n         *\n         * //output: 9\n         * console.log( str.length );\n         *\n         *  ```\n         */\n        trim: function (str) {\n            return str.replace(/(^[ \\t\\n\\r]+)|([ \\t\\n\\r]+$)/g, '');\n        },\n\n        /**\n         * 将字符串str以','分隔成数组后，将该数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1\n         * @method listToMap\n         * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。\n         * @param { String } str 该字符串将被以','分割为数组， 然后进行转化\n         * @return { Object } 转化之后的hash对象\n         * @example\n         * ```javascript\n         *\n         * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}\n         * console.log( UE.utils.listToMap( 'UEdtior,Hello' ) );\n         *\n         * ```\n         */\n\n        /**\n         * 将字符串数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1\n         * @method listToMap\n         * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。\n         * @param { Array } arr 字符串数组\n         * @return { Object } 转化之后的hash对象\n         * @example\n         * ```javascript\n         *\n         * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}\n         * console.log( UE.utils.listToMap( [ 'UEdtior', 'Hello' ] ) );\n         *\n         * ```\n         */\n        listToMap: function (list) {\n            if (!list) return {};\n            list = utils.isArray(list) ? list : list.split(',');\n            for (var i = 0, ci, obj = {}; (ci = list[i++]); ) {\n                obj[ci.toUpperCase()] = obj[ci] = 1;\n            }\n            return obj;\n        },\n\n        /**\n         * 将str中的html符号转义,将转义“'，&，<，\"，>”五个字符\n         * @method unhtml\n         * @param { String } str 需要转义的字符串\n         * @return { String } 转义后的字符串\n         * @example\n         * ```javascript\n         * var html = '<body>&</body>';\n         *\n         * //output: &lt;body&gt;&amp;&lt;/body&gt;\n         * console.log( UE.utils.unhtml( html ) );\n         *\n         * ```\n         */\n        unhtml: function (str, reg) {\n            return str\n                ? str.replace(reg || /[&<\">'](?:(amp|lt|quot|gt|#39|nbsp|#\\d+);)?/g, function (a, b) {\n                      if (b) {\n                          return a;\n                      } else {\n                          return {\n                              '<': '&lt;',\n                              '&': '&amp;',\n                              '\"': '&quot;',\n                              '>': '&gt;',\n                              \"'\": '&#39;'\n                          }[a];\n                      }\n                  })\n                : '';\n        },\n        /**\n         * 将url中的html字符转义， 仅转义  ', \", <, > 四个字符\n         * @param  { String } str 需要转义的字符串\n         * @param  { RegExp } reg 自定义的正则\n         * @return { String }     转义后的字符串\n         */\n        unhtmlForUrl: function (str, reg) {\n            return str\n                ? str.replace(reg || /[<\">']/g, function (a) {\n                      return {\n                          '<': '&lt;',\n                          '&': '&amp;',\n                          '\"': '&quot;',\n                          '>': '&gt;',\n                          \"'\": '&#39;'\n                      }[a];\n                  })\n                : '';\n        },\n\n        /**\n         * 将str中的转义字符还原成html字符\n         * @see UE.utils.unhtml(String);\n         * @method html\n         * @param { String } str 需要逆转义的字符串\n         * @return { String } 逆转义后的字符串\n         * @example\n         * ```javascript\n         *\n         * var str = '&lt;body&gt;&amp;&lt;/body&gt;';\n         *\n         * //output: <body>&</body>\n         * console.log( UE.utils.html( str ) );\n         *\n         * ```\n         */\n        html: function (str) {\n            return str\n                ? str.replace(/&((g|l|quo)t|amp|#39|nbsp);/g, function (m) {\n                      return {\n                          '&lt;': '<',\n                          '&amp;': '&',\n                          '&quot;': '\"',\n                          '&gt;': '>',\n                          '&#39;': \"'\",\n                          '&nbsp;': ' '\n                      }[m];\n                  })\n                : '';\n        },\n\n        /**\n         * 将css样式转换为驼峰的形式\n         * @method cssStyleToDomStyle\n         * @param { String } cssName 需要转换的css样式名\n         * @return { String } 转换成驼峰形式后的css样式名\n         * @example\n         * ```javascript\n         *\n         * var str = 'border-top';\n         *\n         * //output: borderTop\n         * console.log( UE.utils.cssStyleToDomStyle( str ) );\n         *\n         * ```\n         */\n        cssStyleToDomStyle: (function () {\n            var test = document.createElement('div').style,\n                cache = {\n                    float:\n                        test.cssFloat != undefined ? 'cssFloat' : test.styleFloat != undefined ? 'styleFloat' : 'float'\n                };\n\n            return function (cssName) {\n                return (\n                    cache[cssName] ||\n                    (cache[cssName] = cssName.toLowerCase().replace(/-./g, function (match) {\n                        return match.charAt(1).toUpperCase();\n                    }))\n                );\n            };\n        })(),\n\n        /**\n         * 动态加载文件到doc中\n         * @method loadFile\n         * @param { DomDocument } document 需要加载资源文件的文档对象\n         * @param { Object } options 加载资源文件的属性集合， 取值请参考代码示例\n         * @example\n         * ```javascript\n         *\n         * UE.utils.loadFile( document, {\n         *     src:\"test.js\",\n         *     tag:\"script\",\n         *     type:\"text/javascript\",\n         *     defer:\"defer\"\n         * } );\n         *\n         * ```\n         */\n\n        /**\n         * 动态加载文件到doc中，加载成功后执行的回调函数fn\n         * @method loadFile\n         * @param { DomDocument } document 需要加载资源文件的文档对象\n         * @param { Object } options 加载资源文件的属性集合， 该集合支持的值是script标签和style标签支持的所有属性。\n         * @param { Function } fn 资源文件加载成功之后执行的回调\n         * @warning 对于在同一个文档中多次加载同一URL的文件， 该方法会在第一次加载之后缓存该请求，\n         *           在此之后的所有同一URL的请求， 将会直接触发回调。\n         * @example\n         * ```javascript\n         *\n         * UE.utils.loadFile( document, {\n         *     src:\"test.js\",\n         *     tag:\"script\",\n         *     type:\"text/javascript\",\n         *     defer:\"defer\"\n         * }, function () {\n         *     console.log('加载成功');\n         * } );\n         *\n         * ```\n         */\n        loadFile: (function () {\n            var tmpList = [];\n\n            function getItem(doc, obj) {\n                try {\n                    for (var i = 0, ci; (ci = tmpList[i++]); ) {\n                        if (ci.doc === doc && ci.url == (obj.src || obj.href)) {\n                            return ci;\n                        }\n                    }\n                } catch (e) {\n                    return null;\n                }\n            }\n\n            return function (doc, obj, fn) {\n                var item = getItem(doc, obj);\n                if (item) {\n                    if (item.ready) {\n                        fn && fn();\n                    } else {\n                        item.funs.push(fn);\n                    }\n                    return;\n                }\n                tmpList.push({\n                    doc: doc,\n                    url: obj.src || obj.href,\n                    funs: [fn]\n                });\n                if (!doc.body) {\n                    var html = [];\n                    for (var p in obj) {\n                        if (p == 'tag') continue;\n                        html.push(p + '=\"' + obj[p] + '\"');\n                    }\n                    doc.write('<' + obj.tag + ' ' + html.join(' ') + ' ></' + obj.tag + '>');\n                    return;\n                }\n                if (obj.id && doc.getElementById(obj.id)) {\n                    return;\n                }\n                var element = doc.createElement(obj.tag);\n                delete obj.tag;\n                for (var p in obj) {\n                    element.setAttribute(p, obj[p]);\n                }\n                element.onload = element.onreadystatechange = function () {\n                    if (!this.readyState || /loaded|complete/.test(this.readyState)) {\n                        item = getItem(doc, obj);\n                        if (item.funs.length > 0) {\n                            item.ready = 1;\n                            for (var fi; (fi = item.funs.pop()); ) {\n                                fi();\n                            }\n                        }\n                        element.onload = element.onreadystatechange = null;\n                    }\n                };\n                element.onerror = function () {\n                    throw Error(\n                        'The load ' + (obj.href || obj.src) + ' fails,check the url settings of file ueditor.config.js '\n                    );\n                };\n                doc.getElementsByTagName('head')[0].appendChild(element);\n            };\n        })(),\n\n        /**\n         * 判断obj对象是否为空\n         * @method isEmptyObject\n         * @param { * } obj 需要判断的对象\n         * @remind 如果判断的对象是NULL， 将直接返回true， 如果是数组且为空， 返回true， 如果是字符串， 且字符串为空，\n         *          返回true， 如果是普通对象， 且该对象没有任何实例属性， 返回true\n         * @return { Boolean } 对象是否为空\n         * @example\n         * ```javascript\n         *\n         * //output: true\n         * console.log( UE.utils.isEmptyObject( {} ) );\n         *\n         * //output: true\n         * console.log( UE.utils.isEmptyObject( [] ) );\n         *\n         * //output: true\n         * console.log( UE.utils.isEmptyObject( \"\" ) );\n         *\n         * //output: false\n         * console.log( UE.utils.isEmptyObject( { key: 1 } ) );\n         *\n         * //output: false\n         * console.log( UE.utils.isEmptyObject( [1] ) );\n         *\n         * //output: false\n         * console.log( UE.utils.isEmptyObject( \"1\" ) );\n         *\n         * ```\n         */\n        isEmptyObject: function (obj) {\n            if (obj == null) return true;\n            if (this.isArray(obj) || this.isString(obj)) return obj.length === 0;\n            for (var key in obj) if (obj.hasOwnProperty(key)) return false;\n            return true;\n        },\n\n        /**\n         * 把rgb格式的颜色值转换成16进制格式\n         * @method fixColor\n         * @param { String } rgb格式的颜色值\n         * @param { String }\n         * @example\n         * rgb(255,255,255)  => \"#ffffff\"\n         */\n        fixColor: function (name, value) {\n            if (/color/i.test(name) && /rgba?/.test(value)) {\n                var array = value.split(',');\n                if (array.length > 3) return '';\n                value = '#';\n                for (var i = 0, color; (color = array[i++]); ) {\n                    color = parseInt(color.replace(/[^\\d]/gi, ''), 10).toString(16);\n                    value += color.length == 1 ? '0' + color : color;\n                }\n                value = value.toUpperCase();\n            }\n            return value;\n        },\n        /**\n         * 只针对border,padding,margin做了处理，因为性能问题\n         * @public\n         * @function\n         * @param {String}    val style字符串\n         */\n        optCss: function (val) {\n            var padding, margin, border;\n            val = val.replace(/(padding|margin|border)\\-([^:]+):([^;]+);?/gi, function (str, key, name, val) {\n                if (val.split(' ').length == 1) {\n                    switch (key) {\n                        case 'padding':\n                            !padding && (padding = {});\n                            padding[name] = val;\n                            return '';\n                        case 'margin':\n                            !margin && (margin = {});\n                            margin[name] = val;\n                            return '';\n                        case 'border':\n                            return val == 'initial' ? '' : str;\n                    }\n                }\n                return str;\n            });\n\n            function opt(obj, name) {\n                if (!obj) {\n                    return '';\n                }\n                var t = obj.top,\n                    b = obj.bottom,\n                    l = obj.left,\n                    r = obj.right,\n                    val = '';\n                if (!t || !l || !b || !r) {\n                    for (var p in obj) {\n                        val += ';' + name + '-' + p + ':' + obj[p] + ';';\n                    }\n                } else {\n                    val +=\n                        ';' +\n                        name +\n                        ':' +\n                        (t == b && b == l && l == r\n                            ? t\n                            : t == b && l == r\n                            ? t + ' ' + l\n                            : l == r\n                            ? t + ' ' + l + ' ' + b\n                            : t + ' ' + r + ' ' + b + ' ' + l) +\n                        ';';\n                }\n                return val;\n            }\n\n            val += opt(padding, 'padding') + opt(margin, 'margin');\n            return val\n                .replace(/^[ \\n\\r\\t;]*|[ \\n\\r\\t]*$/, '')\n                .replace(/;([ \\n\\r\\t]+)|\\1;/g, ';')\n                .replace(/(&((l|g)t|quot|#39))?;{2,}/g, function (a, b) {\n                    return b ? b + ';;' : ';';\n                });\n        },\n\n        /**\n         * 克隆对象\n         * @method clone\n         * @param { Object } source 源对象\n         * @return { Object } source的一个副本\n         */\n\n        /**\n         * 深度克隆对象，将source的属性克隆到target对象， 会覆盖target重名的属性。\n         * @method clone\n         * @param { Object } source 源对象\n         * @param { Object } target 目标对象\n         * @return { Object } 附加了source对象所有属性的target对象\n         */\n        clone: function (source, target) {\n            var tmp;\n            target = target || {};\n            for (var i in source) {\n                if (source.hasOwnProperty(i)) {\n                    tmp = source[i];\n                    if (typeof tmp == 'object') {\n                        target[i] = utils.isArray(tmp) ? [] : {};\n                        utils.clone(source[i], target[i]);\n                    } else {\n                        target[i] = tmp;\n                    }\n                }\n            }\n            return target;\n        },\n\n        /**\n         * 把cm／pt为单位的值转换为px为单位的值\n         * @method transUnitToPx\n         * @param { String } 待转换的带单位的字符串\n         * @return { String } 转换为px为计量单位的值的字符串\n         * @example\n         * ```javascript\n         *\n         * //output: 500px\n         * console.log( UE.utils.transUnitToPx( '20cm' ) );\n         *\n         * //output: 27px\n         * console.log( UE.utils.transUnitToPx( '20pt' ) );\n         *\n         * ```\n         */\n        transUnitToPx: function (val) {\n            if (!/(pt|cm)/.test(val)) {\n                return val;\n            }\n            var unit;\n            val.replace(/([\\d.]+)(\\w+)/, function (str, v, u) {\n                val = v;\n                unit = u;\n            });\n            switch (unit) {\n                case 'cm':\n                    val = parseFloat(val) * 25;\n                    break;\n                case 'pt':\n                    val = Math.round((parseFloat(val) * 96) / 72);\n            }\n            return val + (val ? 'px' : '');\n        },\n\n        /**\n         * 在dom树ready之后执行给定的回调函数\n         * @method domReady\n         * @remind 如果在执行该方法的时候， dom树已经ready， 那么回调函数将立刻执行\n         * @param { Function } fn dom树ready之后的回调函数\n         * @example\n         * ```javascript\n         *\n         * UE.utils.domReady( function () {\n         *\n         *     console.log('123');\n         *\n         * } );\n         *\n         * ```\n         */\n        domReady: (function () {\n            var fnArr = [];\n\n            function doReady(doc) {\n                //确保onready只执行一次\n                doc.isReady = true;\n                for (var ci; (ci = fnArr.pop()); ci()) {}\n            }\n\n            return function (onready, win) {\n                win = win || window;\n                var doc = win.document;\n                onready && fnArr.push(onready);\n                if (doc.readyState === 'complete') {\n                    doReady(doc);\n                } else {\n                    doc.isReady && doReady(doc);\n                    if (browser.ie && browser.version != 11) {\n                        (function () {\n                            if (doc.isReady) return;\n                            try {\n                                doc.documentElement.doScroll('left');\n                            } catch (error) {\n                                setTimeout(arguments.callee, 0);\n                                return;\n                            }\n                            doReady(doc);\n                        })();\n                        win.attachEvent('onload', function () {\n                            doReady(doc);\n                        });\n                    } else {\n                        doc.addEventListener(\n                            'DOMContentLoaded',\n                            function () {\n                                doc.removeEventListener('DOMContentLoaded', arguments.callee, false);\n                                doReady(doc);\n                            },\n                            false\n                        );\n                        win.addEventListener(\n                            'load',\n                            function () {\n                                doReady(doc);\n                            },\n                            false\n                        );\n                    }\n                }\n            };\n        })(),\n\n        /**\n         * 动态添加css样式\n         * @method cssRule\n         * @param { String } 节点名称\n         * @grammar UE.utils.cssRule('添加的样式的节点名称',['样式'，'放到哪个document上'])\n         * @grammar UE.utils.cssRule('body','body{background:#ccc}') => null  //给body添加背景颜色\n         * @grammar UE.utils.cssRule('body') =>样式的字符串  //取得key值为body的样式的内容,如果没有找到key值先关的样式将返回空，例如刚才那个背景颜色，将返回 body{background:#ccc}\n         * @grammar UE.utils.cssRule('body',document) => 返回指定key的样式，并且指定是哪个document\n         * @grammar UE.utils.cssRule('body','') =>null //清空给定的key值的背景颜色\n         */\n        cssRule:\n            browser.ie && browser.version != 11\n                ? function (key, style, doc) {\n                      var indexList, index;\n                      if (style === undefined || (style && style.nodeType && style.nodeType == 9)) {\n                          //获取样式\n                          doc = style && style.nodeType && style.nodeType == 9 ? style : doc || document;\n                          indexList = doc.indexList || (doc.indexList = {});\n                          index = indexList[key];\n                          if (index !== undefined) {\n                              return doc.styleSheets[index].cssText;\n                          }\n                          return undefined;\n                      }\n                      doc = doc || document;\n                      indexList = doc.indexList || (doc.indexList = {});\n                      index = indexList[key];\n                      //清除样式\n                      if (style === '') {\n                          if (index !== undefined) {\n                              doc.styleSheets[index].cssText = '';\n                              delete indexList[key];\n                              return true;\n                          }\n                          return false;\n                      }\n\n                      //添加样式\n                      if (index !== undefined) {\n                          sheetStyle = doc.styleSheets[index];\n                      } else {\n                          sheetStyle = doc.createStyleSheet('', (index = doc.styleSheets.length));\n                          indexList[key] = index;\n                      }\n                      sheetStyle.cssText = style;\n                  }\n                : function (key, style, doc) {\n                      var head, node;\n                      if (style === undefined || (style && style.nodeType && style.nodeType == 9)) {\n                          //获取样式\n                          doc = style && style.nodeType && style.nodeType == 9 ? style : doc || document;\n                          node = doc.getElementById(key);\n                          return node ? node.innerHTML : undefined;\n                      }\n                      doc = doc || document;\n                      node = doc.getElementById(key);\n\n                      //清除样式\n                      if (style === '') {\n                          if (node) {\n                              node.parentNode.removeChild(node);\n                              return true;\n                          }\n                          return false;\n                      }\n\n                      //添加样式\n                      if (node) {\n                          node.innerHTML = style;\n                      } else {\n                          node = doc.createElement('style');\n                          node.id = key;\n                          node.innerHTML = style;\n                          doc.getElementsByTagName('head')[0].appendChild(node);\n                      }\n                  },\n        sort: function (array, compareFn) {\n            compareFn =\n                compareFn ||\n                function (item1, item2) {\n                    return item1.localeCompare(item2);\n                };\n            for (var i = 0, len = array.length; i < len; i++) {\n                for (var j = i, length = array.length; j < length; j++) {\n                    if (compareFn(array[i], array[j]) > 0) {\n                        var t = array[i];\n                        array[i] = array[j];\n                        array[j] = t;\n                    }\n                }\n            }\n            return array;\n        },\n        serializeParam: function (json) {\n            var strArr = [];\n            for (var i in json) {\n                //忽略默认的几个参数\n                if (i == 'method' || i == 'timeout' || i == 'async') continue;\n                //传递过来的对象和函数不在提交之列\n                if (!((typeof json[i]).toLowerCase() == 'function' || (typeof json[i]).toLowerCase() == 'object')) {\n                    strArr.push(encodeURIComponent(i) + '=' + encodeURIComponent(json[i]));\n                } else if (utils.isArray(json[i])) {\n                    //支持传数组内容\n                    for (var j = 0; j < json[i].length; j++) {\n                        strArr.push(encodeURIComponent(i) + '[]=' + encodeURIComponent(json[i][j]));\n                    }\n                }\n            }\n            return strArr.join('&');\n        },\n        formatUrl: function (url) {\n            var u = url.replace(/&&/g, '&');\n            u = u.replace(/\\?&/g, '?');\n            u = u.replace(/&$/g, '');\n            u = u.replace(/&#/g, '#');\n            u = u.replace(/&+/g, '&');\n            return u;\n        },\n        isCrossDomainUrl: function (url) {\n            var a = document.createElement('a');\n            a.href = url;\n            if (browser.ie) {\n                a.href = a.href;\n            }\n            return !(\n                a.protocol == location.protocol &&\n                a.hostname == location.hostname &&\n                (a.port == location.port ||\n                    (a.port == '80' && location.port == '') ||\n                    (a.port == '' && location.port == '80'))\n            );\n        },\n        clearEmptyAttrs: function (obj) {\n            for (var p in obj) {\n                if (obj[p] === '') {\n                    delete obj[p];\n                }\n            }\n            return obj;\n        },\n        str2json: function (s) {\n            if (!utils.isString(s)) return null;\n            if (window.JSON) {\n                return JSON.parse(s);\n            } else {\n                return new Function('return ' + utils.trim(s || ''))();\n            }\n        },\n        json2str: (function () {\n            if (window.JSON) {\n                return JSON.stringify;\n            } else {\n                var escapeMap = {\n                    '\\b': '\\\\b',\n                    '\\t': '\\\\t',\n                    '\\n': '\\\\n',\n                    '\\f': '\\\\f',\n                    '\\r': '\\\\r',\n                    '\"': '\\\\\"',\n                    '\\\\': '\\\\\\\\'\n                };\n\n                function encodeString(source) {\n                    if (/[\"\\\\\\x00-\\x1f]/.test(source)) {\n                        source = source.replace(/[\"\\\\\\x00-\\x1f]/g, function (match) {\n                            var c = escapeMap[match];\n                            if (c) {\n                                return c;\n                            }\n                            c = match.charCodeAt();\n                            return '\\\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);\n                        });\n                    }\n                    return '\"' + source + '\"';\n                }\n\n                function encodeArray(source) {\n                    var result = ['['],\n                        l = source.length,\n                        preComma,\n                        i,\n                        item;\n\n                    for (i = 0; i < l; i++) {\n                        item = source[i];\n\n                        switch (typeof item) {\n                            case 'undefined':\n                            case 'function':\n                            case 'unknown':\n                                break;\n                            default:\n                                if (preComma) {\n                                    result.push(',');\n                                }\n                                result.push(utils.json2str(item));\n                                preComma = 1;\n                        }\n                    }\n                    result.push(']');\n                    return result.join('');\n                }\n\n                function pad(source) {\n                    return source < 10 ? '0' + source : source;\n                }\n\n                function encodeDate(source) {\n                    return (\n                        '\"' +\n                        source.getFullYear() +\n                        '-' +\n                        pad(source.getMonth() + 1) +\n                        '-' +\n                        pad(source.getDate()) +\n                        'T' +\n                        pad(source.getHours()) +\n                        ':' +\n                        pad(source.getMinutes()) +\n                        ':' +\n                        pad(source.getSeconds()) +\n                        '\"'\n                    );\n                }\n\n                return function (value) {\n                    switch (typeof value) {\n                        case 'undefined':\n                            return 'undefined';\n\n                        case 'number':\n                            return isFinite(value) ? String(value) : 'null';\n\n                        case 'string':\n                            return encodeString(value);\n\n                        case 'boolean':\n                            return String(value);\n\n                        default:\n                            if (value === null) {\n                                return 'null';\n                            } else if (utils.isArray(value)) {\n                                return encodeArray(value);\n                            } else if (utils.isDate(value)) {\n                                return encodeDate(value);\n                            } else {\n                                var result = ['{'],\n                                    encode = utils.json2str,\n                                    preComma,\n                                    item;\n\n                                for (var key in value) {\n                                    if (Object.prototype.hasOwnProperty.call(value, key)) {\n                                        item = value[key];\n                                        switch (typeof item) {\n                                            case 'undefined':\n                                            case 'unknown':\n                                            case 'function':\n                                                break;\n                                            default:\n                                                if (preComma) {\n                                                    result.push(',');\n                                                }\n                                                preComma = 1;\n                                                result.push(encode(key) + ':' + encode(item));\n                                        }\n                                    }\n                                }\n                                result.push('}');\n                                return result.join('');\n                            }\n                    }\n                };\n            }\n        })()\n    });\n    /**\n     * 判断给定的对象是否是字符串\n     * @method isString\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是字符串\n     */\n\n    /**\n     * 判断给定的对象是否是数组\n     * @method isArray\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是数组\n     */\n\n    /**\n     * 判断给定的对象是否是一个Function\n     * @method isFunction\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是Function\n     */\n\n    /**\n     * 判断给定的对象是否是Number\n     * @method isNumber\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是Number\n     */\n\n    /**\n     * 判断给定的对象是否是一个正则表达式\n     * @method isRegExp\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是正则表达式\n     */\n\n    /**\n     * 判断给定的对象是否是一个普通对象\n     * @method isObject\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是普通对象\n     */\n    utils.each(['String', 'Function', 'Array', 'Number', 'RegExp', 'Object', 'Date'], function (v) {\n        UE.utils['is' + v] = function (obj) {\n            return Object.prototype.toString.apply(obj) == '[object ' + v + ']';\n        };\n    });\n\n    // core/EventBase.js\n    /**\n     * UE采用的事件基类\n     * @file\n     * @module UE\n     * @class EventBase\n     * @since 1.2.6.1\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @unfile\n     * @module UE\n     */\n\n    /**\n     * UE采用的事件基类，继承此类的对应类将获取addListener,removeListener,fireEvent方法。\n     * 在UE中，Editor以及所有ui实例都继承了该类，故可以在对应的ui对象以及editor对象上使用上述方法。\n     * @unfile\n     * @module UE\n     * @class EventBase\n     */\n\n    /**\n     * 通过此构造器，子类可以继承EventBase获取事件监听的方法\n     * @constructor\n     * @example\n     * ```javascript\n     * UE.EventBase.call(editor);\n     * ```\n     */\n    var EventBase = (UE.EventBase = function () {});\n\n    EventBase.prototype = {\n        /**\n         * 注册事件监听器\n         * @method addListener\n         * @param { String } types 监听的事件名称，同时监听多个事件使用空格分隔\n         * @param { Function } fn 监听的事件被触发时，会执行该回调函数\n         * @waining 事件被触发时，监听的函数假如返回的值恒等于true，回调函数的队列中后面的函数将不执行\n         * @example\n         * ```javascript\n         * editor.addListener('selectionchange',function(){\n         *      console.log(\"选区已经变化！\");\n         * })\n         * editor.addListener('beforegetcontent aftergetcontent',function(type){\n         *         if(type == 'beforegetcontent'){\n         *             //do something\n         *         }else{\n         *             //do something\n         *         }\n         *         console.log(this.getContent) // this是注册的事件的编辑器实例\n         * })\n         * ```\n         * @see UE.EventBase:fireEvent(String)\n         */\n        addListener: function (types, listener) {\n            types = utils.trim(types).split(/\\s+/);\n            for (var i = 0, ti; (ti = types[i++]); ) {\n                getListener(this, ti, true).push(listener);\n            }\n        },\n\n        on: function (types, listener) {\n            return this.addListener(types, listener);\n        },\n        off: function (types, listener) {\n            return this.removeListener(types, listener);\n        },\n        trigger: function () {\n            return this.fireEvent.apply(this, arguments);\n        },\n        /**\n         * 移除事件监听器\n         * @method removeListener\n         * @param { String } types 移除的事件名称，同时移除多个事件使用空格分隔\n         * @param { Function } fn 移除监听事件的函数引用\n         * @example\n         * ```javascript\n         * //changeCallback为方法体\n         * editor.removeListener(\"selectionchange\",changeCallback);\n         * ```\n         */\n        removeListener: function (types, listener) {\n            types = utils.trim(types).split(/\\s+/);\n            for (var i = 0, ti; (ti = types[i++]); ) {\n                utils.removeItem(getListener(this, ti) || [], listener);\n            }\n        },\n\n        /**\n         * 触发事件\n         * @method fireEvent\n         * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔\n         * @remind 该方法会触发addListener\n         * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值\n         * @example\n         * ```javascript\n         * editor.fireEvent(\"selectionchange\");\n         * ```\n         */\n\n        /**\n         * 触发事件\n         * @method fireEvent\n         * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔\n         * @param { *... } options 可选参数，可以传入一个或多个参数，会传给事件触发的回调函数\n         * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值\n         * @example\n         * ```javascript\n         *\n         * editor.addListener( \"selectionchange\", function ( type, arg1, arg2 ) {\n         *\n         *     console.log( arg1 + \" \" + arg2 );\n         *\n         * } );\n         *\n         * //触发selectionchange事件， 会执行上面的事件监听器\n         * //output: Hello World\n         * editor.fireEvent(\"selectionchange\", \"Hello\", \"World\");\n         * ```\n         */\n        fireEvent: function () {\n            var types = arguments[0];\n            types = utils.trim(types).split(' ');\n            for (var i = 0, ti; (ti = types[i++]); ) {\n                var listeners = getListener(this, ti),\n                    r,\n                    t,\n                    k;\n                if (listeners) {\n                    k = listeners.length;\n                    while (k--) {\n                        if (!listeners[k]) continue;\n                        t = listeners[k].apply(this, arguments);\n                        if (t === true) {\n                            return t;\n                        }\n                        if (t !== undefined) {\n                            r = t;\n                        }\n                    }\n                }\n                if ((t = this['on' + ti.toLowerCase()])) {\n                    r = t.apply(this, arguments);\n                }\n            }\n            return r;\n        }\n    };\n    /**\n     * 获得对象所拥有监听类型的所有监听器\n     * @unfile\n     * @module UE\n     * @since 1.2.6.1\n     * @method getListener\n     * @public\n     * @param { Object } obj  查询监听器的对象\n     * @param { String } type 事件类型\n     * @param { Boolean } force  为true且当前所有type类型的侦听器不存在时，创建一个空监听器数组\n     * @return { Array } 监听器数组\n     */\n    function getListener(obj, type, force) {\n        var allListeners;\n        type = type.toLowerCase();\n        return (\n            (allListeners = obj.__allListeners || (force && (obj.__allListeners = {}))) &&\n            (allListeners[type] || (force && (allListeners[type] = [])))\n        );\n    }\n\n    // core/dtd.js\n    ///import editor.js\n    ///import core/dom/dom.js\n    ///import core/utils.js\n    /**\n     * dtd html语义化的体现类\n     * @constructor\n     * @namespace dtd\n     */\n    var dtd = (dom.dtd = (function () {\n        function _(s) {\n            for (var k in s) {\n                s[k.toUpperCase()] = s[k];\n            }\n            return s;\n        }\n        var X = utils.extend2;\n        var A = _({ isindex: 1, fieldset: 1 }),\n            B = _({ input: 1, button: 1, select: 1, textarea: 1, label: 1 }),\n            C = X(_({ a: 1 }), B),\n            D = X({ iframe: 1 }, C),\n            E = _({\n                hr: 1,\n                ul: 1,\n                menu: 1,\n                div: 1,\n                blockquote: 1,\n                noscript: 1,\n                table: 1,\n                center: 1,\n                address: 1,\n                dir: 1,\n                pre: 1,\n                h5: 1,\n                dl: 1,\n                h4: 1,\n                noframes: 1,\n                h6: 1,\n                ol: 1,\n                h1: 1,\n                h3: 1,\n                h2: 1\n            }),\n            F = _({ ins: 1, del: 1, script: 1, style: 1 }),\n            G = X(\n                _({\n                    b: 1,\n                    acronym: 1,\n                    bdo: 1,\n                    var: 1,\n                    '#': 1,\n                    abbr: 1,\n                    code: 1,\n                    br: 1,\n                    i: 1,\n                    cite: 1,\n                    kbd: 1,\n                    u: 1,\n                    strike: 1,\n                    s: 1,\n                    tt: 1,\n                    strong: 1,\n                    q: 1,\n                    samp: 1,\n                    em: 1,\n                    dfn: 1,\n                    span: 1\n                }),\n                F\n            ),\n            H = X(\n                _({\n                    sub: 1,\n                    img: 1,\n                    embed: 1,\n                    object: 1,\n                    sup: 1,\n                    basefont: 1,\n                    map: 1,\n                    applet: 1,\n                    font: 1,\n                    big: 1,\n                    small: 1\n                }),\n                G\n            ),\n            I = X(_({ p: 1 }), H),\n            J = X(_({ iframe: 1 }), H, B),\n            K = _({\n                img: 1,\n                embed: 1,\n                noscript: 1,\n                br: 1,\n                kbd: 1,\n                center: 1,\n                button: 1,\n                basefont: 1,\n                h5: 1,\n                h4: 1,\n                samp: 1,\n                h6: 1,\n                ol: 1,\n                h1: 1,\n                h3: 1,\n                h2: 1,\n                form: 1,\n                font: 1,\n                '#': 1,\n                select: 1,\n                menu: 1,\n                ins: 1,\n                abbr: 1,\n                label: 1,\n                code: 1,\n                table: 1,\n                script: 1,\n                cite: 1,\n                input: 1,\n                iframe: 1,\n                strong: 1,\n                textarea: 1,\n                noframes: 1,\n                big: 1,\n                small: 1,\n                span: 1,\n                hr: 1,\n                sub: 1,\n                bdo: 1,\n                var: 1,\n                div: 1,\n                object: 1,\n                sup: 1,\n                strike: 1,\n                dir: 1,\n                map: 1,\n                dl: 1,\n                applet: 1,\n                del: 1,\n                isindex: 1,\n                fieldset: 1,\n                ul: 1,\n                b: 1,\n                acronym: 1,\n                a: 1,\n                blockquote: 1,\n                i: 1,\n                u: 1,\n                s: 1,\n                tt: 1,\n                address: 1,\n                q: 1,\n                pre: 1,\n                p: 1,\n                em: 1,\n                dfn: 1\n            }),\n            L = X(_({ a: 0 }), J), //a不能被切开，所以把他\n            M = _({ tr: 1 }),\n            N = _({ '#': 1 }),\n            O = X(_({ param: 1 }), K),\n            P = X(_({ form: 1 }), A, D, E, I),\n            Q = _({ li: 1, ol: 1, ul: 1 }),\n            R = _({ style: 1, script: 1 }),\n            S = _({ base: 1, link: 1, meta: 1, title: 1 }),\n            T = X(S, R),\n            U = _({ head: 1, body: 1 }),\n            V = _({ html: 1 });\n\n        var block = _({\n                address: 1,\n                blockquote: 1,\n                center: 1,\n                dir: 1,\n                div: 1,\n                dl: 1,\n                fieldset: 1,\n                form: 1,\n                h1: 1,\n                h2: 1,\n                h3: 1,\n                h4: 1,\n                h5: 1,\n                h6: 1,\n                hr: 1,\n                isindex: 1,\n                menu: 1,\n                noframes: 1,\n                ol: 1,\n                p: 1,\n                pre: 1,\n                table: 1,\n                ul: 1\n            }),\n            empty = _({\n                area: 1,\n                base: 1,\n                basefont: 1,\n                br: 1,\n                col: 1,\n                command: 1,\n                dialog: 1,\n                embed: 1,\n                hr: 1,\n                img: 1,\n                input: 1,\n                isindex: 1,\n                keygen: 1,\n                link: 1,\n                meta: 1,\n                param: 1,\n                source: 1,\n                track: 1,\n                wbr: 1\n            });\n\n        return _({\n            // $ 表示自定的属性\n\n            // body外的元素列表.\n            $nonBodyContent: X(V, U, S),\n\n            //块结构元素列表\n            $block: block,\n\n            //内联元素列表\n            $inline: L,\n\n            $inlineWithA: X(_({ a: 1 }), L),\n\n            $body: X(_({ script: 1, style: 1 }), block),\n\n            $cdata: _({ script: 1, style: 1 }),\n\n            //自闭和元素\n            $empty: empty,\n\n            //不是自闭合，但不能让range选中里边\n            $nonChild: _({ iframe: 1, textarea: 1 }),\n            //列表元素列表\n            $listItem: _({ dd: 1, dt: 1, li: 1 }),\n\n            //列表根元素列表\n            $list: _({ ul: 1, ol: 1, dl: 1 }),\n\n            //不能认为是空的元素\n            $isNotEmpty: _({\n                table: 1,\n                ul: 1,\n                ol: 1,\n                dl: 1,\n                iframe: 1,\n                area: 1,\n                base: 1,\n                col: 1,\n                hr: 1,\n                img: 1,\n                embed: 1,\n                input: 1,\n                link: 1,\n                meta: 1,\n                param: 1,\n                h1: 1,\n                h2: 1,\n                h3: 1,\n                h4: 1,\n                h5: 1,\n                h6: 1\n            }),\n\n            //如果没有子节点就可以删除的元素列表，像span,a\n            $removeEmpty: _({\n                a: 1,\n                abbr: 1,\n                acronym: 1,\n                address: 1,\n                b: 1,\n                bdo: 1,\n                big: 1,\n                cite: 1,\n                code: 1,\n                del: 1,\n                dfn: 1,\n                em: 1,\n                font: 1,\n                i: 1,\n                ins: 1,\n                label: 1,\n                kbd: 1,\n                q: 1,\n                s: 1,\n                samp: 1,\n                small: 1,\n                span: 1,\n                strike: 1,\n                strong: 1,\n                sub: 1,\n                sup: 1,\n                tt: 1,\n                u: 1,\n                var: 1\n            }),\n\n            $removeEmptyBlock: _({ p: 1, div: 1 }),\n\n            //在table元素里的元素列表\n            $tableContent: _({\n                caption: 1,\n                col: 1,\n                colgroup: 1,\n                tbody: 1,\n                td: 1,\n                tfoot: 1,\n                th: 1,\n                thead: 1,\n                tr: 1,\n                table: 1\n            }),\n            //不转换的标签\n            $notTransContent: _({ pre: 1, script: 1, style: 1, textarea: 1 }),\n            html: U,\n            head: T,\n            style: N,\n            script: N,\n            body: P,\n            base: {},\n            link: {},\n            meta: {},\n            title: N,\n            col: {},\n            tr: _({ td: 1, th: 1 }),\n            img: {},\n            embed: {},\n            colgroup: _({ thead: 1, col: 1, tbody: 1, tr: 1, tfoot: 1 }),\n            noscript: P,\n            td: P,\n            br: {},\n            th: P,\n            center: P,\n            kbd: L,\n            button: X(I, E),\n            basefont: {},\n            h5: L,\n            h4: L,\n            samp: L,\n            h6: L,\n            ol: Q,\n            h1: L,\n            h3: L,\n            option: N,\n            h2: L,\n            form: X(A, D, E, I),\n            select: _({ optgroup: 1, option: 1 }),\n            font: L,\n            ins: L,\n            menu: Q,\n            abbr: L,\n            label: L,\n            table: _({ thead: 1, col: 1, tbody: 1, tr: 1, colgroup: 1, caption: 1, tfoot: 1 }),\n            code: L,\n            tfoot: M,\n            cite: L,\n            li: P,\n            input: {},\n            iframe: P,\n            strong: L,\n            textarea: N,\n            noframes: P,\n            big: L,\n            small: L,\n            //trace:\n            span: _({ '#': 1, br: 1, b: 1, strong: 1, u: 1, i: 1, em: 1, sub: 1, sup: 1, strike: 1, span: 1 }),\n            hr: L,\n            dt: L,\n            sub: L,\n            optgroup: _({ option: 1 }),\n            param: {},\n            bdo: L,\n            var: L,\n            div: P,\n            object: O,\n            sup: L,\n            dd: P,\n            strike: L,\n            area: {},\n            dir: Q,\n            map: X(_({ area: 1, form: 1, p: 1 }), A, F, E),\n            applet: O,\n            dl: _({ dt: 1, dd: 1 }),\n            del: L,\n            isindex: {},\n            fieldset: X(_({ legend: 1 }), K),\n            thead: M,\n            ul: Q,\n            acronym: L,\n            b: L,\n            a: X(_({ a: 1 }), J),\n            blockquote: X(_({ td: 1, tr: 1, tbody: 1, li: 1 }), P),\n            caption: L,\n            i: L,\n            u: L,\n            tbody: M,\n            s: L,\n            address: X(D, I),\n            tt: L,\n            legend: L,\n            q: L,\n            pre: X(G, C),\n            p: X(_({ a: 1 }), L),\n            em: L,\n            dfn: L\n        });\n    })());\n\n    // core/domUtils.js\n    /**\n     * Dom操作工具包\n     * @file\n     * @module UE.dom.domUtils\n     * @since 1.2.6.1\n     */\n\n    /**\n     * Dom操作工具包\n     * @unfile\n     * @module UE.dom.domUtils\n     */\n    function getDomNode(node, start, ltr, startFromChild, fn, guard) {\n        var tmpNode = startFromChild && node[start],\n            parent;\n        !tmpNode && (tmpNode = node[ltr]);\n        while (!tmpNode && (parent = (parent || node).parentNode)) {\n            if (parent.tagName == 'BODY' || (guard && !guard(parent))) {\n                return null;\n            }\n            tmpNode = parent[ltr];\n        }\n        if (tmpNode && fn && !fn(tmpNode)) {\n            return getDomNode(tmpNode, start, ltr, false, fn);\n        }\n        return tmpNode;\n    }\n    var attrFix =\n            ie && browser.version < 9\n                ? {\n                      tabindex: 'tabIndex',\n                      readonly: 'readOnly',\n                      for: 'htmlFor',\n                      class: 'className',\n                      maxlength: 'maxLength',\n                      cellspacing: 'cellSpacing',\n                      cellpadding: 'cellPadding',\n                      rowspan: 'rowSpan',\n                      colspan: 'colSpan',\n                      usemap: 'useMap',\n                      frameborder: 'frameBorder'\n                  }\n                : {\n                      tabindex: 'tabIndex',\n                      readonly: 'readOnly'\n                  },\n        styleBlock = utils.listToMap([\n            '-webkit-box',\n            '-moz-box',\n            'block',\n            'list-item',\n            'table',\n            'table-row-group',\n            'table-header-group',\n            'table-footer-group',\n            'table-row',\n            'table-column-group',\n            'table-column',\n            'table-cell',\n            'table-caption'\n        ]);\n    var domUtils = (dom.domUtils = {\n        //节点常量\n        NODE_ELEMENT: 1,\n        NODE_DOCUMENT: 9,\n        NODE_TEXT: 3,\n        NODE_COMMENT: 8,\n        NODE_DOCUMENT_FRAGMENT: 11,\n\n        //位置关系\n        POSITION_IDENTICAL: 0,\n        POSITION_DISCONNECTED: 1,\n        POSITION_FOLLOWING: 2,\n        POSITION_PRECEDING: 4,\n        POSITION_IS_CONTAINED: 8,\n        POSITION_CONTAINS: 16,\n        //ie6使用其他的会有一段空白出现\n        fillChar: ie && browser.version == '6' ? '\\ufeff' : '\\u200B',\n        //-------------------------Node部分--------------------------------\n        keys: {\n            /*Backspace*/ 8: 1,\n            /*Delete*/ 46: 1,\n            /*Shift*/ 16: 1,\n            /*Ctrl*/ 17: 1,\n            /*Alt*/ 18: 1,\n            37: 1,\n            38: 1,\n            39: 1,\n            40: 1,\n            13: 1 /*enter*/\n        },\n        /**\n         * 获取节点A相对于节点B的位置关系\n         * @method getPosition\n         * @param { Node } nodeA 需要查询位置关系的节点A\n         * @param { Node } nodeB 需要查询位置关系的节点B\n         * @return { Number } 节点A与节点B的关系\n         * @example\n         * ```javascript\n         * //output: 20\n         * var position = UE.dom.domUtils.getPosition( document.documentElement, document.body );\n         *\n         * switch ( position ) {\n         *\n         *      //0\n         *      case UE.dom.domUtils.POSITION_IDENTICAL:\n         *          console.log('元素相同');\n         *          break;\n         *      //1\n         *      case UE.dom.domUtils.POSITION_DISCONNECTED:\n         *          console.log('两个节点在不同的文档中');\n         *          break;\n         *      //2\n         *      case UE.dom.domUtils.POSITION_FOLLOWING:\n         *          console.log('节点A在节点B之后');\n         *          break;\n         *      //4\n         *      case UE.dom.domUtils.POSITION_PRECEDING;\n         *          console.log('节点A在节点B之前');\n         *          break;\n         *      //8\n         *      case UE.dom.domUtils.POSITION_IS_CONTAINED:\n         *          console.log('节点A被节点B包含');\n         *          break;\n         *      case 10:\n         *          console.log('节点A被节点B包含且节点A在节点B之后');\n         *          break;\n         *      //16\n         *      case UE.dom.domUtils.POSITION_CONTAINS:\n         *          console.log('节点A包含节点B');\n         *          break;\n         *      case 20:\n         *          console.log('节点A包含节点B且节点A在节点B之前');\n         *          break;\n         *\n         * }\n         * ```\n         */\n        getPosition: function (nodeA, nodeB) {\n            // 如果两个节点是同一个节点\n            if (nodeA === nodeB) {\n                // domUtils.POSITION_IDENTICAL\n                return 0;\n            }\n            var node,\n                parentsA = [nodeA],\n                parentsB = [nodeB];\n            node = nodeA;\n            while ((node = node.parentNode)) {\n                // 如果nodeB是nodeA的祖先节点\n                if (node === nodeB) {\n                    // domUtils.POSITION_IS_CONTAINED + domUtils.POSITION_FOLLOWING\n                    return 10;\n                }\n                parentsA.push(node);\n            }\n            node = nodeB;\n            while ((node = node.parentNode)) {\n                // 如果nodeA是nodeB的祖先节点\n                if (node === nodeA) {\n                    // domUtils.POSITION_CONTAINS + domUtils.POSITION_PRECEDING\n                    return 20;\n                }\n                parentsB.push(node);\n            }\n            parentsA.reverse();\n            parentsB.reverse();\n            if (parentsA[0] !== parentsB[0]) {\n                // domUtils.POSITION_DISCONNECTED\n                return 1;\n            }\n            var i = -1;\n            while ((i++, parentsA[i] === parentsB[i])) {}\n            nodeA = parentsA[i];\n            nodeB = parentsB[i];\n            while ((nodeA = nodeA.nextSibling)) {\n                if (nodeA === nodeB) {\n                    // domUtils.POSITION_PRECEDING\n                    return 4;\n                }\n            }\n            // domUtils.POSITION_FOLLOWING\n            return 2;\n        },\n\n        /**\n         * 检测节点node在父节点中的索引位置\n         * @method getNodeIndex\n         * @param { Node } node 需要检测的节点对象\n         * @return { Number } 该节点在父节点中的位置\n         * @see UE.dom.domUtils.getNodeIndex(Node,Boolean)\n         */\n\n        /**\n         * 检测节点node在父节点中的索引位置， 根据给定的mergeTextNode参数决定是否要合并多个连续的文本节点为一个节点\n         * @method getNodeIndex\n         * @param { Node } node 需要检测的节点对象\n         * @param { Boolean } mergeTextNode 是否合并多个连续的文本节点为一个节点\n         * @return { Number } 该节点在父节点中的位置\n         * @example\n         * ```javascript\n         *\n         *      var node = document.createElement(\"div\");\n         *\n         *      node.appendChild( document.createTextNode( \"hello\" ) );\n         *      node.appendChild( document.createTextNode( \"world\" ) );\n         *      node.appendChild( node = document.createElement( \"div\" ) );\n         *\n         *      //output: 2\n         *      console.log( UE.dom.domUtils.getNodeIndex( node ) );\n         *\n         *      //output: 1\n         *      console.log( UE.dom.domUtils.getNodeIndex( node, true ) );\n         *\n         * ```\n         */\n        getNodeIndex: function (node, ignoreTextNode) {\n            var preNode = node,\n                i = 0;\n            while ((preNode = preNode.previousSibling)) {\n                if (ignoreTextNode && preNode.nodeType == 3) {\n                    if (preNode.nodeType != preNode.nextSibling.nodeType) {\n                        i++;\n                    }\n                    continue;\n                }\n                i++;\n            }\n            return i;\n        },\n\n        /**\n         * 检测节点node是否在给定的document对象上\n         * @method inDoc\n         * @param { Node } node 需要检测的节点对象\n         * @param { DomDocument } doc 需要检测的document对象\n         * @return { Boolean } 该节点node是否在给定的document的dom树上\n         * @example\n         * ```javascript\n         *\n         * var node = document.createElement(\"div\");\n         *\n         * //output: false\n         * console.log( UE.do.domUtils.inDoc( node, document ) );\n         *\n         * document.body.appendChild( node );\n         *\n         * //output: true\n         * console.log( UE.do.domUtils.inDoc( node, document ) );\n         *\n         * ```\n         */\n        inDoc: function (node, doc) {\n            return domUtils.getPosition(node, doc) == 10;\n        },\n        /**\n         * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，\n         * 查找的起点是给定node节点的父节点。\n         * @method findParent\n         * @param { Node } node 需要查找的节点\n         * @param { Function } filterFn 自定义的过滤方法。\n         * @warning 查找的终点是到body节点为止\n         * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该\n         *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。\n         * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var filterNode = UE.dom.domUtils.findParent( document.body.firstChild, function ( node ) {\n         *\n         *     //由于查找的终点是body节点， 所以永远也不会匹配当前过滤器的条件， 即这里永远会返回false\n         *     return node.tagName === \"HTML\";\n         *\n         * } );\n         *\n         * //output: true\n         * console.log( filterNode === null );\n         * ```\n         */\n\n        /**\n         * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，\n         * 如果includeSelf的值为true，则查找的起点是给定的节点node， 否则， 起点是node的父节点\n         * @method findParent\n         * @param { Node } node 需要查找的节点\n         * @param { Function } filterFn 自定义的过滤方法。\n         * @param { Boolean } includeSelf 查找过程是否包含自身\n         * @warning 查找的终点是到body节点为止\n         * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该\n         *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。\n         * @remind 如果includeSelf为true， 则过滤器第一次执行时的参数会是节点本身。\n         *          反之， 过滤器第一次执行时的参数将是该节点的父节点。\n         * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL\n         * @example\n         * ```html\n         * <body>\n         *\n         *      <div id=\"test\">\n         *      </div>\n         *\n         *      <script type=\"text/javascript\">\n         *\n         *          //output: DIV, BODY\n         *          var filterNode = UE.dom.domUtils.findParent( document.getElementById( \"test\" ), function ( node ) {\n         *\n         *              console.log( node.tagName );\n         *              return false;\n         *\n         *          }, true );\n         *\n         *      </script>\n         * </body>\n         * ```\n         */\n        findParent: function (node, filterFn, includeSelf) {\n            if (node && !domUtils.isBody(node)) {\n                node = includeSelf ? node : node.parentNode;\n                while (node) {\n                    if (!filterFn || filterFn(node) || domUtils.isBody(node)) {\n                        return filterFn && !filterFn(node) && domUtils.isBody(node) ? null : node;\n                    }\n                    node = node.parentNode;\n                }\n            }\n            return null;\n        },\n        /**\n         * 查找node的节点名为tagName的第一个祖先节点， 查找的起点是node节点的父节点。\n         * @method findParentByTagName\n         * @param { Node } node 需要查找的节点对象\n         * @param { Array } tagNames 需要查找的父节点的名称数组\n         * @warning 查找的终点是到body节点为止\n         * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var node = UE.dom.domUtils.findParentByTagName( document.getElementsByTagName(\"div\")[0], [ \"BODY\" ] );\n         * //output: BODY\n         * console.log( node.tagName );\n         * ```\n         */\n\n        /**\n         * 查找node的节点名为tagName的祖先节点， 如果includeSelf的值为true，则查找的起点是给定的节点node，\n         * 否则， 起点是node的父节点。\n         * @method findParentByTagName\n         * @param { Node } node 需要查找的节点对象\n         * @param { Array } tagNames 需要查找的父节点的名称数组\n         * @param { Boolean } includeSelf 查找过程是否包含node节点自身\n         * @warning 查找的终点是到body节点为止\n         * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var queryTarget = document.getElementsByTagName(\"div\")[0];\n         * var node = UE.dom.domUtils.findParentByTagName( queryTarget, [ \"DIV\" ], true );\n         * //output: true\n         * console.log( queryTarget === node );\n         * ```\n         */\n        findParentByTagName: function (node, tagNames, includeSelf, excludeFn) {\n            tagNames = utils.listToMap(utils.isArray(tagNames) ? tagNames : [tagNames]);\n            return domUtils.findParent(\n                node,\n                function (node) {\n                    return tagNames[node.tagName] && !(excludeFn && excludeFn(node));\n                },\n                includeSelf\n            );\n        },\n        /**\n         * 查找节点node的祖先节点集合， 查找的起点是给定节点的父节点，结果集中不包含给定的节点。\n         * @method findParents\n         * @param { Node } node 需要查找的节点对象\n         * @return { Array } 给定节点的祖先节点数组\n         * @grammar UE.dom.domUtils.findParents(node)  => Array  //返回一个祖先节点数组集合，不包含自身\n         * @grammar UE.dom.domUtils.findParents(node,includeSelf)  => Array  //返回一个祖先节点数组集合，includeSelf指定是否包含自身\n         * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn)  => Array  //返回一个祖先节点数组集合，filterFn指定过滤条件，返回true的node将被选取\n         * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn,closerFirst)  => Array  //返回一个祖先节点数组集合，closerFirst为true的话，node的直接父亲节点是数组的第0个\n         */\n\n        /**\n         * 查找节点node的祖先节点集合， 如果includeSelf的值为true，\n         * 则返回的结果集中允许出现当前给定的节点， 否则， 该节点不会出现在其结果集中。\n         * @method findParents\n         * @param { Node } node 需要查找的节点对象\n         * @param { Boolean } includeSelf 查找的结果中是否允许包含当前查找的节点对象\n         * @return { Array } 给定节点的祖先节点数组\n         */\n        findParents: function (node, includeSelf, filterFn, closerFirst) {\n            var parents = includeSelf && ((filterFn && filterFn(node)) || !filterFn) ? [node] : [];\n            while ((node = domUtils.findParent(node, filterFn))) {\n                parents.push(node);\n            }\n            return closerFirst ? parents : parents.reverse();\n        },\n\n        /**\n         * 在节点node后面插入新节点newNode\n         * @method insertAfter\n         * @param { Node } node 目标节点\n         * @param { Node } newNode 新插入的节点， 该节点将置于目标节点之后\n         * @return { Node } 新插入的节点\n         */\n        insertAfter: function (node, newNode) {\n            return node.nextSibling\n                ? node.parentNode.insertBefore(newNode, node.nextSibling)\n                : node.parentNode.appendChild(newNode);\n        },\n\n        /**\n         * 删除节点node及其下属的所有节点\n         * @method remove\n         * @param { Node } node 需要删除的节点对象\n         * @return { Node } 返回刚删除的节点对象\n         * @example\n         * ```html\n         * <div id=\"test\">\n         *     <div id=\"child\">你好</div>\n         * </div>\n         * <script>\n         *     UE.dom.domUtils.remove( document.body, false );\n         *     //output: false\n         *     console.log( document.getElementById( \"child\" ) !== null );\n         * </script>\n         * ```\n         */\n\n        /**\n         * 删除节点node，并根据keepChildren的值决定是否保留子节点\n         * @method remove\n         * @param { Node } node 需要删除的节点对象\n         * @param { Boolean } keepChildren 是否需要保留子节点\n         * @return { Node } 返回刚删除的节点对象\n         * @example\n         * ```html\n         * <div id=\"test\">\n         *     <div id=\"child\">你好</div>\n         * </div>\n         * <script>\n         *     UE.dom.domUtils.remove( document.body, true );\n         *     //output: true\n         *     console.log( document.getElementById( \"child\" ) !== null );\n         * </script>\n         * ```\n         */\n        remove: function (node, keepChildren) {\n            var parent = node.parentNode,\n                child;\n            if (parent) {\n                if (keepChildren && node.hasChildNodes()) {\n                    while ((child = node.firstChild)) {\n                        parent.insertBefore(child, node);\n                    }\n                }\n                parent.removeChild(node);\n            }\n            return node;\n        },\n\n        /**\n         * 取得node节点的下一个兄弟节点， 如果该节点其后没有兄弟节点， 则递归查找其父节点之后的第一个兄弟节点，\n         * 直到找到满足条件的节点或者递归到BODY节点之后才会结束。\n         * @method getNextDomNode\n         * @param { Node } node 需要获取其后的兄弟节点的节点对象\n         * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL\n         * @example\n         * ```html\n         *     <body>\n         *      <div id=\"test\">\n         *          <span></span>\n         *      </div>\n         *      <i>xxx</i>\n         * </body>\n         * <script>\n         *\n         *     //output: i节点\n         *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( \"test\" ) ) );\n         *\n         * </script>\n         * ```\n         * @example\n         * ```html\n         * <body>\n         *      <div>\n         *          <span></span>\n         *          <i id=\"test\">xxx</i>\n         *      </div>\n         *      <b>xxx</b>\n         * </body>\n         * <script>\n         *\n         *     //由于id为test的i节点之后没有兄弟节点， 则查找其父节点（div）后面的兄弟节点\n         *     //output: b节点\n         *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( \"test\" ) ) );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 取得node节点的下一个兄弟节点， 如果startFromChild的值为ture，则先获取其子节点，\n         * 如果有子节点则直接返回第一个子节点；如果没有子节点或者startFromChild的值为false，\n         * 则执行<a href=\"#UE.dom.domUtils.getNextDomNode(Node)\">getNextDomNode(Node node)</a>的查找过程。\n         * @method getNextDomNode\n         * @param { Node } node 需要获取其后的兄弟节点的节点对象\n         * @param { Boolean } startFromChild 查找过程是否从其子节点开始\n         * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL\n         * @see UE.dom.domUtils.getNextDomNode(Node)\n         */\n        getNextDomNode: function (node, startFromChild, filterFn, guard) {\n            return getDomNode(node, 'firstChild', 'nextSibling', startFromChild, filterFn, guard);\n        },\n        getPreDomNode: function (node, startFromChild, filterFn, guard) {\n            return getDomNode(node, 'lastChild', 'previousSibling', startFromChild, filterFn, guard);\n        },\n        /**\n         * 检测节点node是否属是UEditor定义的bookmark节点\n         * @method isBookmarkNode\n         * @private\n         * @param { Node } node 需要检测的节点对象\n         * @return { Boolean } 是否是bookmark节点\n         * @example\n         * ```html\n         * <span id=\"_baidu_bookmark_1\"></span>\n         * <script>\n         *      var bookmarkNode = document.getElementById(\"_baidu_bookmark_1\");\n         *      //output: true\n         *      console.log( UE.dom.domUtils.isBookmarkNode( bookmarkNode ) );\n         * </script>\n         * ```\n         */\n        isBookmarkNode: function (node) {\n            return node.nodeType == 1 && node.id && /^_baidu_bookmark_/i.test(node.id);\n        },\n        /**\n         * 获取节点node所属的window对象\n         * @method  getWindow\n         * @param { Node } node 节点对象\n         * @return { Window } 当前节点所属的window对象\n         * @example\n         * ```javascript\n         * //output: true\n         * console.log( UE.dom.domUtils.getWindow( document.body ) === window );\n         * ```\n         */\n        getWindow: function (node) {\n            var doc = node.ownerDocument || node;\n            return doc.defaultView || doc.parentWindow;\n        },\n        /**\n         * 获取离nodeA与nodeB最近的公共的祖先节点\n         * @method  getCommonAncestor\n         * @param { Node } nodeA 第一个节点\n         * @param { Node } nodeB 第二个节点\n         * @remind 如果给定的两个节点是同一个节点， 将直接返回该节点。\n         * @return { Node | NULL } 如果未找到公共节点， 返回NULL， 否则返回最近的公共祖先节点。\n         * @example\n         * ```javascript\n         * var commonAncestor = UE.dom.domUtils.getCommonAncestor( document.body, document.body.firstChild );\n         * //output: true\n         * console.log( commonAncestor.tagName.toLowerCase() === 'body' );\n         * ```\n         */\n        getCommonAncestor: function (nodeA, nodeB) {\n            if (nodeA === nodeB) return nodeA;\n            var parentsA = [nodeA],\n                parentsB = [nodeB],\n                parent = nodeA,\n                i = -1;\n            while ((parent = parent.parentNode)) {\n                if (parent === nodeB) {\n                    return parent;\n                }\n                parentsA.push(parent);\n            }\n            parent = nodeB;\n            while ((parent = parent.parentNode)) {\n                if (parent === nodeA) return parent;\n                parentsB.push(parent);\n            }\n            parentsA.reverse();\n            parentsB.reverse();\n            while ((i++, parentsA[i] === parentsB[i])) {}\n            return i == 0 ? null : parentsA[i - 1];\n        },\n        /**\n         * 清除node节点左右连续为空的兄弟inline节点\n         * @method clearEmptySibling\n         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n         * 则这些兄弟节点将被删除\n         * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext)  //ignoreNext指定是否忽略右边空节点\n         * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext,ignorePre)  //ignorePre指定是否忽略左边空节点\n         * @example\n         * ```html\n         * <body>\n         *     <div></div>\n         *     <span id=\"test\"></span>\n         *     <i></i>\n         *     <b></b>\n         *     <em>xxx</em>\n         *     <span></span>\n         * </body>\n         * <script>\n         *\n         *      UE.dom.domUtils.clearEmptySibling( document.getElementById( \"test\" ) );\n         *\n         *      //output: <div></div><span id=\"test\"></span><em>xxx</em><span></span>\n         *      console.log( document.body.innerHTML );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，\n         * 则忽略对右边兄弟节点的操作。\n         * @method clearEmptySibling\n         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n         * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作\n         * 则这些兄弟节点将被删除\n         * @see UE.dom.domUtils.clearEmptySibling(Node)\n         */\n\n        /**\n         * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，\n         * 则忽略对右边兄弟节点的操作， 如果ignorePre的值为true，则忽略对左边兄弟节点的操作。\n         * @method clearEmptySibling\n         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，\n         * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作\n         * @param { Boolean } ignorePre 是否忽略忽略对左边的兄弟节点的操作\n         * 则这些兄弟节点将被删除\n         * @see UE.dom.domUtils.clearEmptySibling(Node)\n         */\n        clearEmptySibling: function (node, ignoreNext, ignorePre) {\n            function clear(next, dir) {\n                var tmpNode;\n                while (\n                    next &&\n                    !domUtils.isBookmarkNode(next) &&\n                    (domUtils.isEmptyInlineElement(next) ||\n                        //这里不能把空格算进来会吧空格干掉，出现文字间的空格丢掉了\n                        !new RegExp('[^\\t\\n\\r' + domUtils.fillChar + ']').test(next.nodeValue))\n                ) {\n                    tmpNode = next[dir];\n                    domUtils.remove(next);\n                    next = tmpNode;\n                }\n            }\n            !ignoreNext && clear(node.nextSibling, 'nextSibling');\n            !ignorePre && clear(node.previousSibling, 'previousSibling');\n        },\n        /**\n         * 将一个文本节点textNode拆分成两个文本节点，offset指定拆分位置\n         * @method split\n         * @param { Node } textNode 需要拆分的文本节点对象\n         * @param { int } offset 需要拆分的位置， 位置计算从0开始\n         * @return { Node } 拆分后形成的新节点\n         * @example\n         * ```html\n         * <div id=\"test\">abcdef</div>\n         * <script>\n         *      var newNode = UE.dom.domUtils.split( document.getElementById( \"test\" ).firstChild, 3 );\n         *      //output: def\n         *      console.log( newNode.nodeValue );\n         * </script>\n         * ```\n         */\n        split: function (node, offset) {\n            var doc = node.ownerDocument;\n            if (browser.ie && offset == node.nodeValue.length) {\n                var next = doc.createTextNode('');\n                return domUtils.insertAfter(node, next);\n            }\n            var retval = node.splitText(offset);\n            //ie8下splitText不会跟新childNodes,我们手动触发他的更新\n            if (browser.ie8) {\n                var tmpNode = doc.createTextNode('');\n                domUtils.insertAfter(retval, tmpNode);\n                domUtils.remove(tmpNode);\n            }\n            return retval;\n        },\n\n        /**\n         * 检测文本节点textNode是否为空节点（包括空格、换行、占位符等字符）\n         * @method  isWhitespace\n         * @param { Node } node 需要检测的节点对象\n         * @return { Boolean } 检测的节点是否为空\n         * @example\n         * ```html\n         * <div id=\"test\">\n         *\n         * </div>\n         * <script>\n         *      //output: true\n         *      console.log( UE.dom.domUtils.isWhitespace( document.getElementById(\"test\").firstChild ) );\n         * </script>\n         * ```\n         */\n        isWhitespace: function (node) {\n            return !new RegExp('[^ \\t\\n\\r' + domUtils.fillChar + ']').test(node.nodeValue);\n        },\n        /**\n         * 获取元素element相对于viewport的位置坐标\n         * @method getXY\n         * @param { Node } element 需要计算位置的节点对象\n         * @return { Object } 返回形如{x:left,y:top}的一个key-value映射对象， 其中键x代表水平偏移距离，\n         *                          y代表垂直偏移距离。\n         *\n         * @example\n         * ```javascript\n         * var location = UE.dom.domUtils.getXY( document.getElementById(\"test\") );\n         * //output: test的坐标为: 12, 24\n         * console.log( 'test的坐标为： ', location.x, ',', location.y );\n         * ```\n         */\n        getXY: function (element) {\n            var x = 0,\n                y = 0;\n            while (element.offsetParent) {\n                y += element.offsetTop;\n                x += element.offsetLeft;\n                element = element.offsetParent;\n            }\n            return { x: x, y: y };\n        },\n        /**\n         * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数\n         * @method on\n         * @param { Node } element 需要绑定事件的节点对象\n         * @param { String } type 绑定的事件类型\n         * @param { Function } handler 事件处理器\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.on(document.body,\"click\",function(e){\n         *     //e为事件对象，this为被点击元素对戏那个\n         * });\n         * ```\n         */\n\n        /**\n         * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数\n         * @method on\n         * @param { Node } element 需要绑定事件的节点对象\n         * @param { Array } type 绑定的事件类型数组\n         * @param { Function } handler 事件处理器\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.on(document.body,[\"click\",\"mousedown\"],function(evt){\n         *     //evt为事件对象，this为被点击元素对象\n         * });\n         * ```\n         */\n        on: function (element, type, handler) {\n            var types = utils.isArray(type) ? type : utils.trim(type).split(/\\s+/),\n                k = types.length;\n            if (k)\n                while (k--) {\n                    type = types[k];\n                    if (element.addEventListener) {\n                        element.addEventListener(type, handler, false);\n                    } else {\n                        if (!handler._d) {\n                            handler._d = {\n                                els: []\n                            };\n                        }\n                        var key = type + handler.toString(),\n                            index = utils.indexOf(handler._d.els, element);\n                        if (!handler._d[key] || index == -1) {\n                            if (index == -1) {\n                                handler._d.els.push(element);\n                            }\n                            if (!handler._d[key]) {\n                                handler._d[key] = function (evt) {\n                                    return handler.call(evt.srcElement, evt || window.event);\n                                };\n                            }\n\n                            element.attachEvent('on' + type, handler._d[key]);\n                        }\n                    }\n                }\n            element = null;\n        },\n        /**\n         * 解除DOM事件绑定\n         * @method un\n         * @param { Node } element 需要解除事件绑定的节点对象\n         * @param { String } type 需要接触绑定的事件类型\n         * @param { Function } handler 对应的事件处理器\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.un(document.body,\"click\",function(evt){\n         *     //evt为事件对象，this为被点击元素对象\n         * });\n         * ```\n         */\n\n        /**\n         * 解除DOM事件绑定\n         * @method un\n         * @param { Node } element 需要解除事件绑定的节点对象\n         * @param { Array } type 需要接触绑定的事件类型数组\n         * @param { Function } handler 对应的事件处理器\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.un(document.body, [\"click\",\"mousedown\"],function(evt){\n         *     //evt为事件对象，this为被点击元素对象\n         * });\n         * ```\n         */\n        un: function (element, type, handler) {\n            var types = utils.isArray(type) ? type : utils.trim(type).split(/\\s+/),\n                k = types.length;\n            if (k)\n                while (k--) {\n                    type = types[k];\n                    if (element.removeEventListener) {\n                        element.removeEventListener(type, handler, false);\n                    } else {\n                        var key = type + handler.toString();\n                        try {\n                            element.detachEvent('on' + type, handler._d ? handler._d[key] : handler);\n                        } catch (e) {}\n                        if (handler._d && handler._d[key]) {\n                            var index = utils.indexOf(handler._d.els, element);\n                            if (index != -1) {\n                                handler._d.els.splice(index, 1);\n                            }\n                            handler._d.els.length == 0 && delete handler._d[key];\n                        }\n                    }\n                }\n        },\n\n        /**\n         * 比较节点nodeA与节点nodeB是否具有相同的标签名、属性名以及属性值\n         * @method  isSameElement\n         * @param { Node } nodeA 需要比较的节点\n         * @param { Node } nodeB 需要比较的节点\n         * @return { Boolean } 两个节点是否具有相同的标签名、属性名以及属性值\n         * @example\n         * ```html\n         * <span style=\"font-size:12px\">ssss</span>\n         * <span style=\"font-size:12px\">bbbbb</span>\n         * <span style=\"font-size:13px\">ssss</span>\n         * <span style=\"font-size:14px\">bbbbb</span>\n         *\n         * <script>\n         *\n         *     var nodes = document.getElementsByTagName( \"span\" );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isSameElement( nodes[0], nodes[1] ) );\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.isSameElement( nodes[2], nodes[3] ) );\n         *\n         * </script>\n         * ```\n         */\n        isSameElement: function (nodeA, nodeB) {\n            if (nodeA.tagName != nodeB.tagName) {\n                return false;\n            }\n            var thisAttrs = nodeA.attributes,\n                otherAttrs = nodeB.attributes;\n            if (!ie && thisAttrs.length != otherAttrs.length) {\n                return false;\n            }\n            var attrA,\n                attrB,\n                al = 0,\n                bl = 0;\n            for (var i = 0; (attrA = thisAttrs[i++]); ) {\n                if (attrA.nodeName == 'style') {\n                    if (attrA.specified) {\n                        al++;\n                    }\n                    if (domUtils.isSameStyle(nodeA, nodeB)) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n                if (ie) {\n                    if (attrA.specified) {\n                        al++;\n                        attrB = otherAttrs.getNamedItem(attrA.nodeName);\n                    } else {\n                        continue;\n                    }\n                } else {\n                    attrB = nodeB.attributes[attrA.nodeName];\n                }\n                if (!attrB.specified || attrA.nodeValue != attrB.nodeValue) {\n                    return false;\n                }\n            }\n            // 有可能attrB的属性包含了attrA的属性之外还有自己的属性\n            if (ie) {\n                for (i = 0; (attrB = otherAttrs[i++]); ) {\n                    if (attrB.specified) {\n                        bl++;\n                    }\n                }\n                if (al != bl) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        /**\n         * 判断节点nodeA与节点nodeB的元素的style属性是否一致\n         * @method isSameStyle\n         * @param { Node } nodeA 需要比较的节点\n         * @param { Node } nodeB 需要比较的节点\n         * @return { Boolean } 两个节点是否具有相同的style属性值\n         * @example\n         * ```html\n         * <span style=\"font-size:12px\">ssss</span>\n         * <span style=\"font-size:12px\">bbbbb</span>\n         * <span style=\"font-size:13px\">ssss</span>\n         * <span style=\"font-size:14px\">bbbbb</span>\n         *\n         * <script>\n         *\n         *     var nodes = document.getElementsByTagName( \"span\" );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isSameStyle( nodes[0], nodes[1] ) );\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.isSameStyle( nodes[2], nodes[3] ) );\n         *\n         * </script>\n         * ```\n         */\n        isSameStyle: function (nodeA, nodeB) {\n            var styleA = nodeA.style.cssText.replace(/( ?; ?)/g, ';').replace(/( ?: ?)/g, ':'),\n                styleB = nodeB.style.cssText.replace(/( ?; ?)/g, ';').replace(/( ?: ?)/g, ':');\n            if (browser.opera) {\n                styleA = nodeA.style;\n                styleB = nodeB.style;\n                if (styleA.length != styleB.length) return false;\n                for (var p in styleA) {\n                    if (/^(\\d+|csstext)$/i.test(p)) {\n                        continue;\n                    }\n                    if (styleA[p] != styleB[p]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            if (!styleA || !styleB) {\n                return styleA == styleB;\n            }\n            styleA = styleA.split(';');\n            styleB = styleB.split(';');\n            if (styleA.length != styleB.length) {\n                return false;\n            }\n            for (var i = 0, ci; (ci = styleA[i++]); ) {\n                if (utils.indexOf(styleB, ci) == -1) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        /**\n         * 检查节点node是否为block元素\n         * @method isBlockElm\n         * @param { Node } node 需要检测的节点对象\n         * @return { Boolean } 是否是block元素节点\n         * @warning 该方法的判断规则如下： 如果该元素原本是block元素， 则不论该元素当前的css样式是什么都会返回true；\n         *          否则，检测该元素的css样式， 如果该元素当前是block元素， 则返回true。 其余情况下都返回false。\n         * @example\n         * ```html\n         * <span id=\"test1\" style=\"display: block\"></span>\n         * <span id=\"test2\"></span>\n         * <div id=\"test3\" style=\"display: inline\"></div>\n         *\n         * <script>\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById(\"test1\") ) );\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById(\"test2\") ) );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById(\"test3\") ) );\n         *\n         * </script>\n         * ```\n         */\n        isBlockElm: function (node) {\n            return (\n                node.nodeType == 1 &&\n                (dtd.$block[node.tagName] || styleBlock[domUtils.getComputedStyle(node, 'display')]) &&\n                !dtd.$nonChild[node.tagName]\n            );\n        },\n        /**\n         * 检测node节点是否为body节点\n         * @method isBody\n         * @param { Element } node 需要检测的dom元素\n         * @return { Boolean } 给定的元素是否是body元素\n         * @example\n         * ```javascript\n         * //output: true\n         * console.log( UE.dom.domUtils.isBody( document.body ) );\n         * ```\n         */\n        isBody: function (node) {\n            return node && node.nodeType == 1 && node.tagName.toLowerCase() == 'body';\n        },\n        /**\n         * 以node节点为分界，将该节点的指定祖先节点parent拆分成两个独立的节点，\n         * 拆分形成的两个节点之间是node节点\n         * @method breakParent\n         * @param { Node } node 作为分界的节点对象\n         * @param { Node } parent 该节点必须是node节点的祖先节点， 且是block节点。\n         * @return { Node } 给定的node分界节点\n         * @example\n         * ```javascript\n         *\n         *      var node = document.createElement(\"span\"),\n         *          wrapNode = document.createElement( \"div\" ),\n         *          parent = document.createElement(\"p\");\n         *\n         *      parent.appendChild( node );\n         *      wrapNode.appendChild( parent );\n         *\n         *      //拆分前\n         *      //output: <p><span></span></p>\n         *      console.log( wrapNode.innerHTML );\n         *\n         *\n         *      UE.dom.domUtils.breakParent( node, parent );\n         *      //拆分后\n         *      //output: <p></p><span></span><p></p>\n         *      console.log( wrapNode.innerHTML );\n         *\n         * ```\n         */\n        breakParent: function (node, parent) {\n            var tmpNode,\n                parentClone = node,\n                clone = node,\n                leftNodes,\n                rightNodes;\n            do {\n                parentClone = parentClone.parentNode;\n                if (leftNodes) {\n                    tmpNode = parentClone.cloneNode(false);\n                    tmpNode.appendChild(leftNodes);\n                    leftNodes = tmpNode;\n                    tmpNode = parentClone.cloneNode(false);\n                    tmpNode.appendChild(rightNodes);\n                    rightNodes = tmpNode;\n                } else {\n                    leftNodes = parentClone.cloneNode(false);\n                    rightNodes = leftNodes.cloneNode(false);\n                }\n                while ((tmpNode = clone.previousSibling)) {\n                    leftNodes.insertBefore(tmpNode, leftNodes.firstChild);\n                }\n                while ((tmpNode = clone.nextSibling)) {\n                    rightNodes.appendChild(tmpNode);\n                }\n                clone = parentClone;\n            } while (parent !== parentClone);\n            tmpNode = parent.parentNode;\n            tmpNode.insertBefore(leftNodes, parent);\n            tmpNode.insertBefore(rightNodes, parent);\n            tmpNode.insertBefore(node, rightNodes);\n            domUtils.remove(parent);\n            return node;\n        },\n        /**\n         * 检查节点node是否是空inline节点\n         * @method  isEmptyInlineElement\n         * @param { Node } node 需要检测的节点对象\n         * @return { Number }  如果给定的节点是空的inline节点， 则返回1, 否则返回0。\n         * @example\n         * ```html\n         * <b><i></i></b> => 1\n         * <b><i></i><u></u></b> => 1\n         * <b></b> => 1\n         * <b>xx<i></i></b> => 0\n         * ```\n         */\n        isEmptyInlineElement: function (node) {\n            if (node.nodeType != 1 || !dtd.$removeEmpty[node.tagName]) {\n                return 0;\n            }\n            node = node.firstChild;\n            while (node) {\n                //如果是创建的bookmark就跳过\n                if (domUtils.isBookmarkNode(node)) {\n                    return 0;\n                }\n                if (\n                    (node.nodeType == 1 && !domUtils.isEmptyInlineElement(node)) ||\n                    (node.nodeType == 3 && !domUtils.isWhitespace(node))\n                ) {\n                    return 0;\n                }\n                node = node.nextSibling;\n            }\n            return 1;\n        },\n\n        /**\n         * 删除node节点下首尾两端的空白文本子节点\n         * @method trimWhiteTextNode\n         * @param { Element } node 需要执行删除操作的元素对象\n         * @example\n         * ```javascript\n         *      var node = document.createElement(\"div\");\n         *\n         *      node.appendChild( document.createTextNode( \"\" ) );\n         *\n         *      node.appendChild( document.createElement(\"div\") );\n         *\n         *      node.appendChild( document.createTextNode( \"\" ) );\n         *\n         *      //3\n         *      console.log( node.childNodes.length );\n         *\n         *      UE.dom.domUtils.trimWhiteTextNode( node );\n         *\n         *      //1\n         *      console.log( node.childNodes.length );\n         * ```\n         */\n        trimWhiteTextNode: function (node) {\n            function remove(dir) {\n                var child;\n                while ((child = node[dir]) && child.nodeType == 3 && domUtils.isWhitespace(child)) {\n                    node.removeChild(child);\n                }\n            }\n            remove('firstChild');\n            remove('lastChild');\n        },\n\n        /**\n         * 合并node节点下相同的子节点\n         * @name mergeChild\n         * @desc\n         * UE.dom.domUtils.mergeChild(node,tagName) //tagName要合并的子节点的标签\n         * @example\n         * <p><span style=\"font-size:12px;\">xx<span style=\"font-size:12px;\">aa</span>xx</span></p>\n         * ==> UE.dom.domUtils.mergeChild(node,'span')\n         * <p><span style=\"font-size:12px;\">xxaaxx</span></p>\n         */\n        mergeChild: function (node, tagName, attrs) {\n            var list = domUtils.getElementsByTagName(node, node.tagName.toLowerCase());\n            for (var i = 0, ci; (ci = list[i++]); ) {\n                if (!ci.parentNode || domUtils.isBookmarkNode(ci)) {\n                    continue;\n                }\n                //span单独处理\n                if (ci.tagName.toLowerCase() == 'span') {\n                    if (node === ci.parentNode) {\n                        domUtils.trimWhiteTextNode(node);\n                        if (node.childNodes.length == 1) {\n                            node.style.cssText = ci.style.cssText + ';' + node.style.cssText;\n                            domUtils.remove(ci, true);\n                            continue;\n                        }\n                    }\n                    ci.style.cssText = node.style.cssText + ';' + ci.style.cssText;\n                    if (attrs) {\n                        var style = attrs.style;\n                        if (style) {\n                            style = style.split(';');\n                            for (var j = 0, s; (s = style[j++]); ) {\n                                ci.style[utils.cssStyleToDomStyle(s.split(':')[0])] = s.split(':')[1];\n                            }\n                        }\n                    }\n                    if (domUtils.isSameStyle(ci, node)) {\n                        domUtils.remove(ci, true);\n                    }\n                    continue;\n                }\n                if (domUtils.isSameElement(node, ci)) {\n                    domUtils.remove(ci, true);\n                }\n            }\n        },\n\n        /**\n         * 原生方法getElementsByTagName的封装\n         * @method getElementsByTagName\n         * @param { Node } node 目标节点对象\n         * @param { String } tagName 需要查找的节点的tagName， 多个tagName以空格分割\n         * @return { Array } 符合条件的节点集合\n         */\n        getElementsByTagName: function (node, name, filter) {\n            if (filter && utils.isString(filter)) {\n                var className = filter;\n                filter = function (node) {\n                    return domUtils.hasClass(node, className);\n                };\n            }\n            name = utils\n                .trim(name)\n                .replace(/[ ]{2,}/g, ' ')\n                .split(' ');\n            var arr = [];\n            for (var n = 0, ni; (ni = name[n++]); ) {\n                var list = node.getElementsByTagName(ni);\n                for (var i = 0, ci; (ci = list[i++]); ) {\n                    if (!filter || filter(ci)) arr.push(ci);\n                }\n            }\n\n            return arr;\n        },\n        /**\n         * 将节点node提取到父节点上\n         * @method mergeToParent\n         * @param { Element } node 需要提取的元素对象\n         * @example\n         * ```html\n         * <div id=\"parent\">\n         *     <div id=\"sub\">\n         *         <span id=\"child\"></span>\n         *     </div>\n         * </div>\n         *\n         * <script>\n         *\n         *     var child = document.getElementById( \"child\" );\n         *\n         *     //output: sub\n         *     console.log( child.parentNode.id );\n         *\n         *     UE.dom.domUtils.mergeToParent( child );\n         *\n         *     //output: parent\n         *     console.log( child.parentNode.id );\n         *\n         * </script>\n         * ```\n         */\n        mergeToParent: function (node) {\n            var parent = node.parentNode;\n            while (parent && dtd.$removeEmpty[parent.tagName]) {\n                if (parent.tagName == node.tagName || parent.tagName == 'A') {\n                    //针对a标签单独处理\n                    domUtils.trimWhiteTextNode(parent);\n                    //span需要特殊处理  不处理这样的情况 <span stlye=\"color:#fff\">xxx<span style=\"color:#ccc\">xxx</span>xxx</span>\n                    if (\n                        (parent.tagName == 'SPAN' && !domUtils.isSameStyle(parent, node)) ||\n                        (parent.tagName == 'A' && node.tagName == 'SPAN')\n                    ) {\n                        if (parent.childNodes.length > 1 || parent !== node.parentNode) {\n                            node.style.cssText = parent.style.cssText + ';' + node.style.cssText;\n                            parent = parent.parentNode;\n                            continue;\n                        } else {\n                            parent.style.cssText += ';' + node.style.cssText;\n                            //trace:952 a标签要保持下划线\n                            if (parent.tagName == 'A') {\n                                parent.style.textDecoration = 'underline';\n                            }\n                        }\n                    }\n                    if (parent.tagName != 'A') {\n                        parent === node.parentNode && domUtils.remove(node, true);\n                        break;\n                    }\n                }\n                parent = parent.parentNode;\n            }\n        },\n        /**\n         * 合并节点node的左右兄弟节点\n         * @method mergeSibling\n         * @param { Element } node 需要合并的目标节点\n         * @example\n         * ```html\n         * <b>xxxx</b><b id=\"test\">ooo</b><b>xxxx</b>\n         *\n         * <script>\n         *     var demoNode = document.getElementById(\"test\");\n         *     UE.dom.domUtils.mergeSibling( demoNode );\n         *     //output: xxxxoooxxxx\n         *     console.log( demoNode.innerHTML );\n         * </script>\n         * ```\n         */\n\n        /**\n         * 合并节点node的左右兄弟节点， 可以根据给定的条件选择是否忽略合并左节点。\n         * @method mergeSibling\n         * @param { Element } node 需要合并的目标节点\n         * @param { Boolean } ignorePre 是否忽略合并左节点\n         * @example\n         * ```html\n         * <b>xxxx</b><b id=\"test\">ooo</b><b>xxxx</b>\n         *\n         * <script>\n         *     var demoNode = document.getElementById(\"test\");\n         *     UE.dom.domUtils.mergeSibling( demoNode, true );\n         *     //output: oooxxxx\n         *     console.log( demoNode.innerHTML );\n         * </script>\n         * ```\n         */\n\n        /**\n         * 合并节点node的左右兄弟节点，可以根据给定的条件选择是否忽略合并左右节点。\n         * @method mergeSibling\n         * @param { Element } node 需要合并的目标节点\n         * @param { Boolean } ignorePre 是否忽略合并左节点\n         * @param { Boolean } ignoreNext 是否忽略合并右节点\n         * @remind 如果同时忽略左右节点， 则该操作什么也不会做\n         * @example\n         * ```html\n         * <b>xxxx</b><b id=\"test\">ooo</b><b>xxxx</b>\n         *\n         * <script>\n         *     var demoNode = document.getElementById(\"test\");\n         *     UE.dom.domUtils.mergeSibling( demoNode, false, true );\n         *     //output: xxxxooo\n         *     console.log( demoNode.innerHTML );\n         * </script>\n         * ```\n         */\n        mergeSibling: function (node, ignorePre, ignoreNext) {\n            function merge(rtl, start, node) {\n                var next;\n                if (\n                    (next = node[rtl]) &&\n                    !domUtils.isBookmarkNode(next) &&\n                    next.nodeType == 1 &&\n                    domUtils.isSameElement(node, next)\n                ) {\n                    while (next.firstChild) {\n                        if (start == 'firstChild') {\n                            node.insertBefore(next.lastChild, node.firstChild);\n                        } else {\n                            node.appendChild(next.firstChild);\n                        }\n                    }\n                    domUtils.remove(next);\n                }\n            }\n            !ignorePre && merge('previousSibling', 'firstChild', node);\n            !ignoreNext && merge('nextSibling', 'lastChild', node);\n        },\n\n        /**\n         * 设置节点node及其子节点不会被选中\n         * @method unSelectable\n         * @param { Element } node 需要执行操作的dom元素\n         * @remind 执行该操作后的节点， 将不能被鼠标选中\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.unSelectable( document.body );\n         * ```\n         */\n        unSelectable:\n            (ie && browser.ie9below) || browser.opera\n                ? function (node) {\n                      //for ie9\n                      node.onselectstart = function () {\n                          return false;\n                      };\n                      node.onclick =\n                          node.onkeyup =\n                          node.onkeydown =\n                              function () {\n                                  return false;\n                              };\n                      node.unselectable = 'on';\n                      node.setAttribute('unselectable', 'on');\n                      for (var i = 0, ci; (ci = node.all[i++]); ) {\n                          switch (ci.tagName.toLowerCase()) {\n                              case 'iframe':\n                              case 'textarea':\n                              case 'input':\n                              case 'select':\n                                  break;\n                              default:\n                                  ci.unselectable = 'on';\n                                  node.setAttribute('unselectable', 'on');\n                          }\n                      }\n                  }\n                : function (node) {\n                      node.style.MozUserSelect =\n                          node.style.webkitUserSelect =\n                          node.style.msUserSelect =\n                          node.style.KhtmlUserSelect =\n                              'none';\n                  },\n        /**\n         * 删除节点node上的指定属性名称的属性\n         * @method  removeAttributes\n         * @param { Node } node 需要删除属性的节点对象\n         * @param { String } attrNames 可以是空格隔开的多个属性名称，该操作将会依次删除相应的属性\n         * @example\n         * ```html\n         * <div id=\"wrap\">\n         *      <span style=\"font-size:14px;\" id=\"test\" name=\"followMe\">xxxxx</span>\n         * </div>\n         *\n         * <script>\n         *\n         *     UE.dom.domUtils.removeAttributes( document.getElementById( \"test\" ), \"id name\" );\n         *\n         *     //output: <span style=\"font-size:14px;\">xxxxx</span>\n         *     console.log( document.getElementById(\"wrap\").innerHTML );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 删除节点node上的指定属性名称的属性\n         * @method  removeAttributes\n         * @param { Node } node 需要删除属性的节点对象\n         * @param { Array } attrNames 需要删除的属性名数组\n         * @example\n         * ```html\n         * <div id=\"wrap\">\n         *      <span style=\"font-size:14px;\" id=\"test\" name=\"followMe\">xxxxx</span>\n         * </div>\n         *\n         * <script>\n         *\n         *     UE.dom.domUtils.removeAttributes( document.getElementById( \"test\" ), [\"id\", \"name\"] );\n         *\n         *     //output: <span style=\"font-size:14px;\">xxxxx</span>\n         *     console.log( document.getElementById(\"wrap\").innerHTML );\n         *\n         * </script>\n         * ```\n         */\n        removeAttributes: function (node, attrNames) {\n            attrNames = utils.isArray(attrNames)\n                ? attrNames\n                : utils\n                      .trim(attrNames)\n                      .replace(/[ ]{2,}/g, ' ')\n                      .split(' ');\n            for (var i = 0, ci; (ci = attrNames[i++]); ) {\n                ci = attrFix[ci] || ci;\n                switch (ci) {\n                    case 'className':\n                        node[ci] = '';\n                        break;\n                    case 'style':\n                        node.style.cssText = '';\n                        var val = node.getAttributeNode('style');\n                        !browser.ie && val && node.removeAttributeNode(val);\n                }\n                node.removeAttribute(ci);\n            }\n        },\n        /**\n         * 在doc下创建一个标签名为tag，属性为attrs的元素\n         * @method createElement\n         * @param { DomDocument } doc 新创建的元素属于该document节点创建\n         * @param { String } tagName 需要创建的元素的标签名\n         * @param { Object } attrs 新创建的元素的属性key-value集合\n         * @return { Element } 新创建的元素对象\n         * @example\n         * ```javascript\n         * var ele = UE.dom.domUtils.createElement( document, 'div', {\n         *     id: 'test'\n         * } );\n         *\n         * //output: DIV\n         * console.log( ele.tagName );\n         *\n         * //output: test\n         * console.log( ele.id );\n         *\n         * ```\n         */\n        createElement: function (doc, tag, attrs) {\n            return domUtils.setAttributes(doc.createElement(tag), attrs);\n        },\n        /**\n         * 为节点node添加属性attrs，attrs为属性键值对\n         * @method setAttributes\n         * @param { Element } node 需要设置属性的元素对象\n         * @param { Object } attrs 需要设置的属性名-值对\n         * @return { Element } 设置属性的元素对象\n         * @example\n         * ```html\n         * <span id=\"test\"></span>\n         *\n         * <script>\n         *\n         *     var testNode = UE.dom.domUtils.setAttributes( document.getElementById( \"test\" ), {\n         *         id: 'demo'\n         *     } );\n         *\n         *     //output: demo\n         *     console.log( testNode.id );\n         *\n         * </script>\n         *\n         */\n        setAttributes: function (node, attrs) {\n            for (var attr in attrs) {\n                if (attrs.hasOwnProperty(attr)) {\n                    var value = attrs[attr];\n                    switch (attr) {\n                        case 'class':\n                            //ie下要这样赋值，setAttribute不起作用\n                            node.className = value;\n                            break;\n                        case 'style':\n                            node.style.cssText = node.style.cssText + ';' + value;\n                            break;\n                        case 'innerHTML':\n                            node[attr] = value;\n                            break;\n                        case 'value':\n                            node.value = value;\n                            break;\n                        default:\n                            node.setAttribute(attrFix[attr] || attr, value);\n                    }\n                }\n            }\n            return node;\n        },\n\n        /**\n         * 获取元素element经过计算后的样式值\n         * @method getComputedStyle\n         * @param { Element } element 需要获取样式的元素对象\n         * @param { String } styleName 需要获取的样式名\n         * @return { String } 获取到的样式值\n         * @example\n         * ```html\n         * <style type=\"text/css\">\n         *      #test {\n         *          font-size: 15px;\n         *      }\n         * </style>\n         *\n         * <span id=\"test\"></span>\n         *\n         * <script>\n         *     //output: 15px\n         *     console.log( UE.dom.domUtils.getComputedStyle( document.getElementById( \"test\" ), 'font-size' ) );\n         * </script>\n         * ```\n         */\n        getComputedStyle: function (element, styleName) {\n            //一下的属性单独处理\n            var pros = 'width height top left';\n\n            if (pros.indexOf(styleName) > -1) {\n                return (\n                    element[\n                        'offset' +\n                            styleName.replace(/^\\w/, function (s) {\n                                return s.toUpperCase();\n                            })\n                    ] + 'px'\n                );\n            }\n            //忽略文本节点\n            if (element.nodeType == 3) {\n                element = element.parentNode;\n            }\n            //ie下font-size若body下定义了font-size，则从currentStyle里会取到这个font-size. 取不到实际值，故此修改.\n            if (\n                browser.ie &&\n                browser.version < 9 &&\n                styleName == 'font-size' &&\n                !element.style.fontSize &&\n                !dtd.$empty[element.tagName] &&\n                !dtd.$nonChild[element.tagName]\n            ) {\n                var span = element.ownerDocument.createElement('span');\n                span.style.cssText = 'padding:0;border:0;font-family:simsun;';\n                span.innerHTML = '.';\n                element.appendChild(span);\n                var result = span.offsetHeight;\n                element.removeChild(span);\n                span = null;\n                return result + 'px';\n            }\n            try {\n                var value =\n                    domUtils.getStyle(element, styleName) ||\n                    (window.getComputedStyle\n                        ? domUtils.getWindow(element).getComputedStyle(element, '').getPropertyValue(styleName)\n                        : (element.currentStyle || element.style)[utils.cssStyleToDomStyle(styleName)]);\n            } catch (e) {\n                return '';\n            }\n            return utils.transUnitToPx(utils.fixColor(styleName, value));\n        },\n        /**\n         * 删除元素element指定的className\n         * @method removeClasses\n         * @param { Element } ele 需要删除class的元素节点\n         * @param { String } classNames 需要删除的className， 多个className之间以空格分开\n         * @example\n         * ```html\n         * <span id=\"test\" class=\"test1 test2 test3\">xxx</span>\n         *\n         * <script>\n         *\n         *     var testNode = document.getElementById( \"test\" );\n         *     UE.dom.domUtils.removeClasses( testNode, \"test1 test2\" );\n         *\n         *     //output: test3\n         *     console.log( testNode.className );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 删除元素element指定的className\n         * @method removeClasses\n         * @param { Element } ele 需要删除class的元素节点\n         * @param { Array } classNames 需要删除的className数组\n         * @example\n         * ```html\n         * <span id=\"test\" class=\"test1 test2 test3\">xxx</span>\n         *\n         * <script>\n         *\n         *     var testNode = document.getElementById( \"test\" );\n         *     UE.dom.domUtils.removeClasses( testNode, [\"test1\", \"test2\"] );\n         *\n         *     //output: test3\n         *     console.log( testNode.className );\n         *\n         * </script>\n         * ```\n         */\n        removeClasses: function (elm, classNames) {\n            classNames = utils.isArray(classNames)\n                ? classNames\n                : utils\n                      .trim(classNames)\n                      .replace(/[ ]{2,}/g, ' ')\n                      .split(' ');\n            for (var i = 0, ci, cls = elm.className; (ci = classNames[i++]); ) {\n                cls = cls.replace(new RegExp('\\\\b' + ci + '\\\\b'), '');\n            }\n            cls = utils.trim(cls).replace(/[ ]{2,}/g, ' ');\n            if (cls) {\n                elm.className = cls;\n            } else {\n                domUtils.removeAttributes(elm, ['class']);\n            }\n        },\n        /**\n         * 给元素element添加className\n         * @method addClass\n         * @param { Node } ele 需要增加className的元素\n         * @param { String } classNames 需要添加的className， 多个className之间以空格分割\n         * @remind 相同的类名不会被重复添加\n         * @example\n         * ```html\n         * <span id=\"test\" class=\"cls1 cls2\"></span>\n         *\n         * <script>\n         *     var testNode = document.getElementById(\"test\");\n         *\n         *     UE.dom.domUtils.addClass( testNode, \"cls2 cls3 cls4\" );\n         *\n         *     //output: cl1 cls2 cls3 cls4\n         *     console.log( testNode.className );\n         *\n         * <script>\n         * ```\n         */\n\n        /**\n         * 给元素element添加className\n         * @method addClass\n         * @param { Node } ele 需要增加className的元素\n         * @param { Array } classNames 需要添加的className的数组\n         * @remind 相同的类名不会被重复添加\n         * @example\n         * ```html\n         * <span id=\"test\" class=\"cls1 cls2\"></span>\n         *\n         * <script>\n         *     var testNode = document.getElementById(\"test\");\n         *\n         *     UE.dom.domUtils.addClass( testNode, [\"cls2\", \"cls3\", \"cls4\"] );\n         *\n         *     //output: cl1 cls2 cls3 cls4\n         *     console.log( testNode.className );\n         *\n         * <script>\n         * ```\n         */\n        addClass: function (elm, classNames) {\n            if (!elm) return;\n            classNames = utils\n                .trim(classNames)\n                .replace(/[ ]{2,}/g, ' ')\n                .split(' ');\n            for (var i = 0, ci, cls = elm.className; (ci = classNames[i++]); ) {\n                if (!new RegExp('\\\\b' + ci + '\\\\b').test(cls)) {\n                    cls += ' ' + ci;\n                }\n            }\n            elm.className = utils.trim(cls);\n        },\n        /**\n         * 判断元素element是否包含给定的样式类名className\n         * @method hasClass\n         * @param { Node } ele 需要检测的元素\n         * @param { String } classNames 需要检测的className， 多个className之间用空格分割\n         * @return { Boolean } 元素是否包含所有给定的className\n         * @example\n         * ```html\n         * <span id=\"test1\" class=\"cls1 cls2\"></span>\n         *\n         * <script>\n         *     var test1 = document.getElementById(\"test1\");\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.hasClass( test1, \"cls2 cls1 cls3\" ) );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.hasClass( test1, \"cls2 cls1\" ) );\n         * </script>\n         * ```\n         */\n\n        /**\n         * 判断元素element是否包含给定的样式类名className\n         * @method hasClass\n         * @param { Node } ele 需要检测的元素\n         * @param { Array } classNames 需要检测的className数组\n         * @return { Boolean } 元素是否包含所有给定的className\n         * @example\n         * ```html\n         * <span id=\"test1\" class=\"cls1 cls2\"></span>\n         *\n         * <script>\n         *     var test1 = document.getElementById(\"test1\");\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.hasClass( test1, [ \"cls2\", \"cls1\", \"cls3\" ] ) );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.hasClass( test1, [ \"cls2\", \"cls1\" ]) );\n         * </script>\n         * ```\n         */\n        hasClass: function (element, className) {\n            if (utils.isRegExp(className)) {\n                return className.test(element.className);\n            }\n            className = utils\n                .trim(className)\n                .replace(/[ ]{2,}/g, ' ')\n                .split(' ');\n            for (var i = 0, ci, cls = element.className; (ci = className[i++]); ) {\n                if (!new RegExp('\\\\b' + ci + '\\\\b', 'i').test(cls)) {\n                    return false;\n                }\n            }\n            return i - 1 == className.length;\n        },\n\n        /**\n         * 阻止事件默认行为\n         * @method preventDefault\n         * @param { Event } evt 需要阻止默认行为的事件对象\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.preventDefault( evt );\n         * ```\n         */\n        preventDefault: function (evt) {\n            evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n        },\n        /**\n         * 删除元素element指定的样式\n         * @method removeStyle\n         * @param { Element } element 需要删除样式的元素\n         * @param { String } styleName 需要删除的样式名\n         * @example\n         * ```html\n         * <span id=\"test\" style=\"color: red; background: blue;\"></span>\n         *\n         * <script>\n         *\n         *     var testNode = document.getElementById(\"test\");\n         *\n         *     UE.dom.domUtils.removeStyle( testNode, 'color' );\n         *\n         *     //output: background: blue;\n         *     console.log( testNode.style.cssText );\n         *\n         * </script>\n         * ```\n         */\n        removeStyle: function (element, name) {\n            if (browser.ie) {\n                //针对color先单独处理一下\n                if (name == 'color') {\n                    name = '(^|;)' + name;\n                }\n                element.style.cssText = element.style.cssText.replace(new RegExp(name + '[^:]*:[^;]+;?', 'ig'), '');\n            } else {\n                if (element.style.removeProperty) {\n                    element.style.removeProperty(name);\n                } else {\n                    element.style.removeAttribute(utils.cssStyleToDomStyle(name));\n                }\n            }\n\n            if (!element.style.cssText) {\n                domUtils.removeAttributes(element, ['style']);\n            }\n        },\n        /**\n         * 获取元素element的style属性的指定值\n         * @method getStyle\n         * @param { Element } element 需要获取属性值的元素\n         * @param { String } styleName 需要获取的style的名称\n         * @warning 该方法仅获取元素style属性中所标明的值\n         * @return { String } 该元素包含指定的style属性值\n         * @example\n         * ```html\n         * <div id=\"test\" style=\"color: red;\"></div>\n         *\n         * <script>\n         *\n         *      var testNode = document.getElementById( \"test\" );\n         *\n         *      //output: red\n         *      console.log( UE.dom.domUtils.getStyle( testNode, \"color\" ) );\n         *\n         *      //output: \"\"\n         *      console.log( UE.dom.domUtils.getStyle( testNode, \"background\" ) );\n         *\n         * </script>\n         * ```\n         */\n        getStyle: function (element, name) {\n            var value = element.style[utils.cssStyleToDomStyle(name)];\n            return utils.fixColor(name, value);\n        },\n        /**\n         * 为元素element设置样式属性值\n         * @method setStyle\n         * @param { Element } element 需要设置样式的元素\n         * @param { String } styleName 样式名\n         * @param { String } styleValue 样式值\n         * @example\n         * ```html\n         * <div id=\"test\"></div>\n         *\n         * <script>\n         *\n         *      var testNode = document.getElementById( \"test\" );\n         *\n         *      //output: \"\"\n         *      console.log( testNode.style.color );\n         *\n         *      UE.dom.domUtils.setStyle( testNode, 'color', 'red' );\n         *      //output: \"red\"\n         *      console.log( testNode.style.color );\n         *\n         * </script>\n         * ```\n         */\n        setStyle: function (element, name, value) {\n            element.style[utils.cssStyleToDomStyle(name)] = value;\n            if (!utils.trim(element.style.cssText)) {\n                this.removeAttributes(element, 'style');\n            }\n        },\n        /**\n         * 为元素element设置多个样式属性值\n         * @method setStyles\n         * @param { Element } element 需要设置样式的元素\n         * @param { Object } styles 样式名值对\n         * @example\n         * ```html\n         * <div id=\"test\"></div>\n         *\n         * <script>\n         *\n         *      var testNode = document.getElementById( \"test\" );\n         *\n         *      //output: \"\"\n         *      console.log( testNode.style.color );\n         *\n         *      UE.dom.domUtils.setStyles( testNode, {\n         *          'color': 'red'\n         *      } );\n         *      //output: \"red\"\n         *      console.log( testNode.style.color );\n         *\n         * </script>\n         * ```\n         */\n        setStyles: function (element, styles) {\n            for (var name in styles) {\n                if (styles.hasOwnProperty(name)) {\n                    domUtils.setStyle(element, name, styles[name]);\n                }\n            }\n        },\n        /**\n         * 删除_moz_dirty属性\n         * @private\n         * @method removeDirtyAttr\n         */\n        removeDirtyAttr: function (node) {\n            for (var i = 0, ci, nodes = node.getElementsByTagName('*'); (ci = nodes[i++]); ) {\n                ci.removeAttribute('_moz_dirty');\n            }\n            node.removeAttribute('_moz_dirty');\n        },\n        /**\n         * 获取子节点的数量\n         * @method getChildCount\n         * @param { Element } node 需要检测的元素\n         * @return { Number } 给定的node元素的子节点数量\n         * @example\n         * ```html\n         * <div id=\"test\">\n         *      <span></span>\n         * </div>\n         *\n         * <script>\n         *\n         *     //output: 3\n         *     console.log( UE.dom.domUtils.getChildCount( document.getElementById(\"test\") ) );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 根据给定的过滤规则， 获取符合条件的子节点的数量\n         * @method getChildCount\n         * @param { Element } node 需要检测的元素\n         * @param { Function } fn 过滤器， 要求对符合条件的子节点返回true， 反之则要求返回false\n         * @return { Number } 符合过滤条件的node元素的子节点数量\n         * @example\n         * ```html\n         * <div id=\"test\">\n         *      <span></span>\n         * </div>\n         *\n         * <script>\n         *\n         *     //output: 1\n         *     console.log( UE.dom.domUtils.getChildCount( document.getElementById(\"test\"), function ( node ) {\n         *\n         *         return node.nodeType === 1;\n         *\n         *     } ) );\n         *\n         * </script>\n         * ```\n         */\n        getChildCount: function (node, fn) {\n            var count = 0,\n                first = node.firstChild;\n            fn =\n                fn ||\n                function () {\n                    return 1;\n                };\n            while (first) {\n                if (fn(first)) {\n                    count++;\n                }\n                first = first.nextSibling;\n            }\n            return count;\n        },\n\n        /**\n         * 判断给定节点是否为空节点\n         * @method isEmptyNode\n         * @param { Node } node 需要检测的节点对象\n         * @return { Boolean } 节点是否为空\n         * @example\n         * ```javascript\n         * UE.dom.domUtils.isEmptyNode( document.body );\n         * ```\n         */\n        isEmptyNode: function (node) {\n            return (\n                !node.firstChild ||\n                domUtils.getChildCount(node, function (node) {\n                    return !domUtils.isBr(node) && !domUtils.isBookmarkNode(node) && !domUtils.isWhitespace(node);\n                }) == 0\n            );\n        },\n        clearSelectedArr: function (nodes) {\n            var node;\n            while ((node = nodes.pop())) {\n                domUtils.removeAttributes(node, ['class']);\n            }\n        },\n        /**\n         * 将显示区域滚动到指定节点的位置\n         * @method scrollToView\n         * @param    {Node}   node    节点\n         * @param    {window}   win      window对象\n         * @param    {Number}    offsetTop    距离上方的偏移量\n         */\n        scrollToView: function (node, win, offsetTop) {\n            var getViewPaneSize = function () {\n                    var doc = win.document,\n                        mode = doc.compatMode == 'CSS1Compat';\n                    return {\n                        width: (mode ? doc.documentElement.clientWidth : doc.body.clientWidth) || 0,\n                        height: (mode ? doc.documentElement.clientHeight : doc.body.clientHeight) || 0\n                    };\n                },\n                getScrollPosition = function (win) {\n                    if ('pageXOffset' in win) {\n                        return {\n                            x: win.pageXOffset || 0,\n                            y: win.pageYOffset || 0\n                        };\n                    } else {\n                        var doc = win.document;\n                        return {\n                            x: doc.documentElement.scrollLeft || doc.body.scrollLeft || 0,\n                            y: doc.documentElement.scrollTop || doc.body.scrollTop || 0\n                        };\n                    }\n                };\n            var winHeight = getViewPaneSize().height,\n                offset = winHeight * -1 + offsetTop;\n            offset += node.offsetHeight || 0;\n            var elementPosition = domUtils.getXY(node);\n            offset += elementPosition.y;\n            var currentScroll = getScrollPosition(win).y;\n            // offset += 50;\n            if (offset > currentScroll || offset < currentScroll - winHeight) {\n                win.scrollTo(0, offset + (offset < 0 ? -20 : 20));\n            }\n        },\n        /**\n         * 判断给定节点是否为br\n         * @method isBr\n         * @param { Node } node 需要判断的节点对象\n         * @return { Boolean } 给定的节点是否是br节点\n         */\n        isBr: function (node) {\n            return node.nodeType == 1 && node.tagName == 'BR';\n        },\n        /**\n         * 判断给定的节点是否是一个“填充”节点\n         * @private\n         * @method isFillChar\n         * @param { Node } node 需要判断的节点\n         * @param { Boolean } isInStart 是否从节点内容的开始位置匹配\n         * @returns { Boolean } 节点是否是填充节点\n         */\n        isFillChar: function (node, isInStart) {\n            if (node.nodeType != 3) return false;\n            var text = node.nodeValue;\n            if (isInStart) {\n                return new RegExp('^' + domUtils.fillChar).test(text);\n            }\n            return !text.replace(new RegExp(domUtils.fillChar, 'g'), '').length;\n        },\n        isStartInblock: function (range) {\n            var tmpRange = range.cloneRange(),\n                flag = 0,\n                start = tmpRange.startContainer,\n                tmp;\n            if (start.nodeType == 1 && start.childNodes[tmpRange.startOffset]) {\n                start = start.childNodes[tmpRange.startOffset];\n                var pre = start.previousSibling;\n                while (pre && domUtils.isFillChar(pre)) {\n                    start = pre;\n                    pre = pre.previousSibling;\n                }\n            }\n            if (this.isFillChar(start, true) && tmpRange.startOffset == 1) {\n                tmpRange.setStartBefore(start);\n                start = tmpRange.startContainer;\n            }\n\n            while (start && domUtils.isFillChar(start)) {\n                tmp = start;\n                start = start.previousSibling;\n            }\n            if (tmp) {\n                tmpRange.setStartBefore(tmp);\n                start = tmpRange.startContainer;\n            }\n            if (start.nodeType == 1 && domUtils.isEmptyNode(start) && tmpRange.startOffset == 1) {\n                tmpRange.setStart(start, 0).collapse(true);\n            }\n            while (!tmpRange.startOffset) {\n                start = tmpRange.startContainer;\n                if (domUtils.isBlockElm(start) || domUtils.isBody(start)) {\n                    flag = 1;\n                    break;\n                }\n                var pre = tmpRange.startContainer.previousSibling,\n                    tmpNode;\n                if (!pre) {\n                    tmpRange.setStartBefore(tmpRange.startContainer);\n                } else {\n                    while (pre && domUtils.isFillChar(pre)) {\n                        tmpNode = pre;\n                        pre = pre.previousSibling;\n                    }\n                    if (tmpNode) {\n                        tmpRange.setStartBefore(tmpNode);\n                    } else {\n                        tmpRange.setStartBefore(tmpRange.startContainer);\n                    }\n                }\n            }\n            return flag && !domUtils.isBody(tmpRange.startContainer) ? 1 : 0;\n        },\n\n        /**\n         * 判断给定的元素是否是一个空元素\n         * @method isEmptyBlock\n         * @param { Element } node 需要判断的元素\n         * @return { Boolean } 是否是空元素\n         * @example\n         * ```html\n         * <div id=\"test\"></div>\n         *\n         * <script>\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isEmptyBlock( document.getElementById(\"test\") ) );\n         * </script>\n         * ```\n         */\n\n        /**\n         * 根据指定的判断规则判断给定的元素是否是一个空元素\n         * @method isEmptyBlock\n         * @param { Element } node 需要判断的元素\n         * @param { RegExp } reg 对内容执行判断的正则表达式对象\n         * @return { Boolean } 是否是空元素\n         */\n        isEmptyBlock: function (node, reg) {\n            if (node.nodeType != 1) return 0;\n            reg = reg || new RegExp('[ \\xa0\\t\\r\\n' + domUtils.fillChar + ']', 'g');\n\n            if (node[browser.ie ? 'innerText' : 'textContent'].replace(reg, '').length > 0) {\n                return 0;\n            }\n            for (var n in dtd.$isNotEmpty) {\n                if (node.getElementsByTagName(n).length) {\n                    return 0;\n                }\n            }\n            return 1;\n        },\n\n        /**\n         * 移动元素使得该元素的位置移动指定的偏移量的距离\n         * @method setViewportOffset\n         * @param { Element } element 需要设置偏移量的元素\n         * @param { Object } offset 偏移量， 形如{ left: 100, top: 50 }的一个键值对， 表示该元素将在\n         *                                  现有的位置上向水平方向偏移offset.left的距离， 在竖直方向上偏移\n         *                                  offset.top的距离\n         * @example\n         * ```html\n         * <div id=\"test\" style=\"top: 100px; left: 50px; position: absolute;\"></div>\n         *\n         * <script>\n         *\n         *     var testNode = document.getElementById(\"test\");\n         *\n         *     UE.dom.domUtils.setViewportOffset( testNode, {\n         *         left: 200,\n         *         top: 50\n         *     } );\n         *\n         *     //output: top: 300px; left: 100px; position: absolute;\n         *     console.log( testNode.style.cssText );\n         *\n         * </script>\n         * ```\n         */\n        setViewportOffset: function (element, offset) {\n            var left = parseInt(element.style.left) | 0;\n            var top = parseInt(element.style.top) | 0;\n            var rect = element.getBoundingClientRect();\n            var offsetLeft = offset.left - rect.left;\n            var offsetTop = offset.top - rect.top;\n            if (offsetLeft) {\n                element.style.left = left + offsetLeft + 'px';\n            }\n            if (offsetTop) {\n                element.style.top = top + offsetTop + 'px';\n            }\n        },\n\n        /**\n         * 用“填充字符”填充节点\n         * @method fillNode\n         * @private\n         * @param { DomDocument } doc 填充的节点所在的docment对象\n         * @param { Node } node 需要填充的节点对象\n         * @example\n         * ```html\n         * <div id=\"test\"></div>\n         *\n         * <script>\n         *     var testNode = document.getElementById(\"test\");\n         *\n         *     //output: 0\n         *     console.log( testNode.childNodes.length );\n         *\n         *     UE.dom.domUtils.fillNode( document, testNode );\n         *\n         *     //output: 1\n         *     console.log( testNode.childNodes.length );\n         *\n         * </script>\n         * ```\n         */\n        fillNode: function (doc, node) {\n            var tmpNode = browser.ie ? doc.createTextNode(domUtils.fillChar) : doc.createElement('br');\n            node.innerHTML = '';\n            node.appendChild(tmpNode);\n        },\n\n        /**\n         * 把节点src的所有子节点追加到另一个节点tag上去\n         * @method moveChild\n         * @param { Node } src 源节点， 该节点下的所有子节点将被移除\n         * @param { Node } tag 目标节点， 从源节点移除的子节点将被追加到该节点下\n         * @example\n         * ```html\n         * <div id=\"test1\">\n         *      <span></span>\n         * </div>\n         * <div id=\"test2\">\n         *     <div></div>\n         * </div>\n         *\n         * <script>\n         *\n         *     var test1 = document.getElementById(\"test1\"),\n         *         test2 = document.getElementById(\"test2\");\n         *\n         *     UE.dom.domUtils.moveChild( test1, test2 );\n         *\n         *     //output: \"\"（空字符串）\n         *     console.log( test1.innerHTML );\n         *\n         *     //output: \"<div></div><span></span>\"\n         *     console.log( test2.innerHTML );\n         *\n         * </script>\n         * ```\n         */\n\n        /**\n         * 把节点src的所有子节点移动到另一个节点tag上去, 可以通过dir参数控制附加的行为是“追加”还是“插入顶部”\n         * @method moveChild\n         * @param { Node } src 源节点， 该节点下的所有子节点将被移除\n         * @param { Node } tag 目标节点， 从源节点移除的子节点将被附加到该节点下\n         * @param { Boolean } dir 附加方式， 如果为true， 则附加进去的节点将被放到目标节点的顶部， 反之，则放到末尾\n         * @example\n         * ```html\n         * <div id=\"test1\">\n         *      <span></span>\n         * </div>\n         * <div id=\"test2\">\n         *     <div></div>\n         * </div>\n         *\n         * <script>\n         *\n         *     var test1 = document.getElementById(\"test1\"),\n         *         test2 = document.getElementById(\"test2\");\n         *\n         *     UE.dom.domUtils.moveChild( test1, test2, true );\n         *\n         *     //output: \"\"（空字符串）\n         *     console.log( test1.innerHTML );\n         *\n         *     //output: \"<span></span><div></div>\"\n         *     console.log( test2.innerHTML );\n         *\n         * </script>\n         * ```\n         */\n        moveChild: function (src, tag, dir) {\n            while (src.firstChild) {\n                if (dir && tag.firstChild) {\n                    tag.insertBefore(src.lastChild, tag.firstChild);\n                } else {\n                    tag.appendChild(src.firstChild);\n                }\n            }\n        },\n\n        /**\n         * 判断节点的标签上是否不存在任何属性\n         * @method hasNoAttributes\n         * @private\n         * @param { Node } node 需要检测的节点对象\n         * @return { Boolean } 节点是否不包含任何属性\n         * @example\n         * ```html\n         * <div id=\"test\"><span>xxxx</span></div>\n         *\n         * <script>\n         *\n         *     //output: false\n         *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById(\"test\") ) );\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById(\"test\").firstChild ) );\n         *\n         * </script>\n         * ```\n         */\n        hasNoAttributes: function (node) {\n            return browser.ie ? /^<\\w+\\s*?>/.test(node.outerHTML) : node.attributes.length == 0;\n        },\n\n        /**\n         * 检测节点是否是UEditor所使用的辅助节点\n         * @method isCustomeNode\n         * @private\n         * @param { Node } node 需要检测的节点\n         * @remind 辅助节点是指编辑器要完成工作临时添加的节点， 在输出的时候将会从编辑器内移除， 不会影响最终的结果。\n         * @return { Boolean } 给定的节点是否是一个辅助节点\n         */\n        isCustomeNode: function (node) {\n            return node.nodeType == 1 && node.getAttribute('_ue_custom_node_');\n        },\n\n        /**\n         * 检测节点的标签是否是给定的标签\n         * @method isTagNode\n         * @param { Node } node 需要检测的节点对象\n         * @param { String } tagName 标签\n         * @return { Boolean } 节点的标签是否是给定的标签\n         * @example\n         * ```html\n         * <div id=\"test\"></div>\n         *\n         * <script>\n         *\n         *     //output: true\n         *     console.log( UE.dom.domUtils.isTagNode( document.getElementById(\"test\"), \"div\" ) );\n         *\n         * </script>\n         * ```\n         */\n        isTagNode: function (node, tagNames) {\n            return node.nodeType == 1 && new RegExp('\\\\b' + node.tagName + '\\\\b', 'i').test(tagNames);\n        },\n\n        /**\n         * 给定一个节点数组，在通过指定的过滤器过滤后， 获取其中满足过滤条件的第一个节点\n         * @method filterNodeList\n         * @param { Array } nodeList 需要过滤的节点数组\n         * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false\n         * @return { Node | NULL } 如果找到符合过滤条件的节点， 则返回该节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var divNodes = document.getElementsByTagName(\"div\");\n         * divNodes = [].slice.call( divNodes, 0 );\n         *\n         * //output: null\n         * console.log( UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n         *     return node.tagName.toLowerCase() !== 'div';\n         * } ) );\n         * ```\n         */\n\n        /**\n         * 给定一个节点数组nodeList和一组标签名tagNames， 获取其中能够匹配标签名的节点集合中的第一个节点\n         * @method filterNodeList\n         * @param { Array } nodeList 需要过滤的节点数组\n         * @param { String } tagNames 需要匹配的标签名， 多个标签名之间用空格分割\n         * @return { Node | NULL } 如果找到标签名匹配的节点， 则返回该节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var divNodes = document.getElementsByTagName(\"div\");\n         * divNodes = [].slice.call( divNodes, 0 );\n         *\n         * //output: null\n         * console.log( UE.dom.domUtils.filterNodeList( divNodes, 'a span' ) );\n         * ```\n         */\n\n        /**\n         * 给定一个节点数组，在通过指定的过滤器过滤后， 如果参数forAll为true， 则会返回所有满足过滤\n         * 条件的节点集合， 否则， 返回满足条件的节点集合中的第一个节点\n         * @method filterNodeList\n         * @param { Array } nodeList 需要过滤的节点数组\n         * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false\n         * @param { Boolean } forAll 是否返回整个节点数组, 如果该参数为false， 则返回节点集合中的第一个节点\n         * @return { Array | Node | NULL } 如果找到符合过滤条件的节点， 则根据参数forAll的值决定返回满足\n         *                                      过滤条件的节点数组或第一个节点， 否则返回NULL\n         * @example\n         * ```javascript\n         * var divNodes = document.getElementsByTagName(\"div\");\n         * divNodes = [].slice.call( divNodes, 0 );\n         *\n         * //output: 3（假定有3个div）\n         * console.log( divNodes.length );\n         *\n         * var nodes = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n         *     return node.tagName.toLowerCase() === 'div';\n         * }, true );\n         *\n         * //output: 3\n         * console.log( nodes.length );\n         *\n         * var node = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {\n         *     return node.tagName.toLowerCase() === 'div';\n         * }, false );\n         *\n         * //output: div\n         * console.log( node.nodeName );\n         * ```\n         */\n        filterNodeList: function (nodelist, filter, forAll) {\n            var results = [];\n            if (!utils.isFunction(filter)) {\n                var str = filter;\n                filter = function (n) {\n                    return utils.indexOf(utils.isArray(str) ? str : str.split(' '), n.tagName.toLowerCase()) != -1;\n                };\n            }\n            utils.each(nodelist, function (n) {\n                filter(n) && results.push(n);\n            });\n            return results.length == 0 ? null : results.length == 1 || !forAll ? results[0] : results;\n        },\n\n        /**\n         * 查询给定的range选区是否在给定的node节点内，且在该节点的最末尾\n         * @method isInNodeEndBoundary\n         * @param { UE.dom.Range } rng 需要判断的range对象， 该对象的startContainer不能为NULL\n         * @param node 需要检测的节点对象\n         * @return { Number } 如果给定的选取range对象是在node内部的最末端， 则返回1, 否则返回0\n         */\n        isInNodeEndBoundary: function (rng, node) {\n            var start = rng.startContainer;\n            if (start.nodeType == 3 && rng.startOffset != start.nodeValue.length) {\n                return 0;\n            }\n            if (start.nodeType == 1 && rng.startOffset != start.childNodes.length) {\n                return 0;\n            }\n            while (start !== node) {\n                if (start.nextSibling) {\n                    return 0;\n                }\n                start = start.parentNode;\n            }\n            return 1;\n        },\n        isBoundaryNode: function (node, dir) {\n            var tmp;\n            while (!domUtils.isBody(node)) {\n                tmp = node;\n                node = node.parentNode;\n                if (tmp !== node[dir]) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        fillHtml: browser.ie11below ? '&nbsp;' : '<br/>'\n    });\n    var fillCharReg = new RegExp(domUtils.fillChar, 'g');\n\n    // core/Range.js\n    /**\n     * Range封装\n     * @file\n     * @module UE.dom\n     * @class Range\n     * @since 1.2.6.1\n     */\n\n    /**\n     * dom操作封装\n     * @unfile\n     * @module UE.dom\n     */\n\n    /**\n     * Range实现类，本类是UEditor底层核心类，封装不同浏览器之间的Range操作。\n     * @unfile\n     * @module UE.dom\n     * @class Range\n     */\n\n    (function () {\n        var guid = 0,\n            fillChar = domUtils.fillChar,\n            fillData;\n\n        /**\n         * 更新range的collapse状态\n         * @param  {Range}   range    range对象\n         */\n        function updateCollapse(range) {\n            range.collapsed =\n                range.startContainer &&\n                range.endContainer &&\n                range.startContainer === range.endContainer &&\n                range.startOffset == range.endOffset;\n        }\n\n        function selectOneNode(rng) {\n            return (\n                !rng.collapsed &&\n                rng.startContainer.nodeType == 1 &&\n                rng.startContainer === rng.endContainer &&\n                rng.endOffset - rng.startOffset == 1\n            );\n        }\n        function setEndPoint(toStart, node, offset, range) {\n            //如果node是自闭合标签要处理\n            if (node.nodeType == 1 && (dtd.$empty[node.tagName] || dtd.$nonChild[node.tagName])) {\n                offset = domUtils.getNodeIndex(node) + (toStart ? 0 : 1);\n                node = node.parentNode;\n            }\n            if (toStart) {\n                range.startContainer = node;\n                range.startOffset = offset;\n                if (!range.endContainer) {\n                    range.collapse(true);\n                }\n            } else {\n                range.endContainer = node;\n                range.endOffset = offset;\n                if (!range.startContainer) {\n                    range.collapse(false);\n                }\n            }\n            updateCollapse(range);\n            return range;\n        }\n\n        function execContentsAction(range, action) {\n            //调整边界\n            //range.includeBookmark();\n            var start = range.startContainer,\n                end = range.endContainer,\n                startOffset = range.startOffset,\n                endOffset = range.endOffset,\n                doc = range.document,\n                frag = doc.createDocumentFragment(),\n                tmpStart,\n                tmpEnd;\n            if (start.nodeType == 1) {\n                start = start.childNodes[startOffset] || (tmpStart = start.appendChild(doc.createTextNode('')));\n            }\n            if (end.nodeType == 1) {\n                end = end.childNodes[endOffset] || (tmpEnd = end.appendChild(doc.createTextNode('')));\n            }\n            if (start === end && start.nodeType == 3) {\n                frag.appendChild(doc.createTextNode(start.substringData(startOffset, endOffset - startOffset)));\n                //is not clone\n                if (action) {\n                    start.deleteData(startOffset, endOffset - startOffset);\n                    range.collapse(true);\n                }\n                return frag;\n            }\n            var current,\n                currentLevel,\n                clone = frag,\n                startParents = domUtils.findParents(start, true),\n                endParents = domUtils.findParents(end, true);\n            for (var i = 0; startParents[i] == endParents[i]; ) {\n                i++;\n            }\n            for (var j = i, si; (si = startParents[j]); j++) {\n                current = si.nextSibling;\n                if (si == start) {\n                    if (!tmpStart) {\n                        if (range.startContainer.nodeType == 3) {\n                            clone.appendChild(doc.createTextNode(start.nodeValue.slice(startOffset)));\n                            //is not clone\n                            if (action) {\n                                start.deleteData(startOffset, start.nodeValue.length - startOffset);\n                            }\n                        } else {\n                            clone.appendChild(!action ? start.cloneNode(true) : start);\n                        }\n                    }\n                } else {\n                    currentLevel = si.cloneNode(false);\n                    clone.appendChild(currentLevel);\n                }\n                while (current) {\n                    if (current === end || current === endParents[j]) {\n                        break;\n                    }\n                    si = current.nextSibling;\n                    clone.appendChild(!action ? current.cloneNode(true) : current);\n                    current = si;\n                }\n                clone = currentLevel;\n            }\n            clone = frag;\n            if (!startParents[i]) {\n                clone.appendChild(startParents[i - 1].cloneNode(false));\n                clone = clone.firstChild;\n            }\n            for (var j = i, ei; (ei = endParents[j]); j++) {\n                current = ei.previousSibling;\n                if (ei == end) {\n                    if (!tmpEnd && range.endContainer.nodeType == 3) {\n                        clone.appendChild(doc.createTextNode(end.substringData(0, endOffset)));\n                        //is not clone\n                        if (action) {\n                            end.deleteData(0, endOffset);\n                        }\n                    }\n                } else {\n                    currentLevel = ei.cloneNode(false);\n                    clone.appendChild(currentLevel);\n                }\n                //如果两端同级，右边第一次已经被开始做了\n                if (j != i || !startParents[i]) {\n                    while (current) {\n                        if (current === start) {\n                            break;\n                        }\n                        ei = current.previousSibling;\n                        clone.insertBefore(!action ? current.cloneNode(true) : current, clone.firstChild);\n                        current = ei;\n                    }\n                }\n                clone = currentLevel;\n            }\n            if (action) {\n                range\n                    .setStartBefore(\n                        !endParents[i] ? endParents[i - 1] : !startParents[i] ? startParents[i - 1] : endParents[i]\n                    )\n                    .collapse(true);\n            }\n            tmpStart && domUtils.remove(tmpStart);\n            tmpEnd && domUtils.remove(tmpEnd);\n            return frag;\n        }\n\n        /**\n         * 创建一个跟document绑定的空的Range实例\n         * @constructor\n         * @param { Document } document 新建的选区所属的文档对象\n         */\n\n        /**\n         * @property { Node } startContainer 当前Range的开始边界的容器节点, 可以是一个元素节点或者是文本节点\n         */\n\n        /**\n         * @property { Node } startOffset 当前Range的开始边界容器节点的偏移量, 如果是元素节点，\n         *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符\n         */\n\n        /**\n         * @property { Node } endContainer 当前Range的结束边界的容器节点, 可以是一个元素节点或者是文本节点\n         */\n\n        /**\n         * @property { Node } endOffset 当前Range的结束边界容器节点的偏移量, 如果是元素节点，\n         *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符\n         */\n\n        /**\n         * @property { Boolean } collapsed 当前Range是否闭合\n         * @default true\n         * @remind Range是闭合的时候， startContainer === endContainer && startOffset === endOffset\n         */\n\n        /**\n         * @property { Document } document 当前Range所属的Document对象\n         * @remind 不同range的的document属性可以是不同的\n         */\n        var Range = (dom.Range = function (document) {\n            var me = this;\n            me.startContainer = me.startOffset = me.endContainer = me.endOffset = null;\n            me.document = document;\n            me.collapsed = true;\n        });\n\n        /**\n         * 删除fillData\n         * @param doc\n         * @param excludeNode\n         */\n        function removeFillData(doc, excludeNode) {\n            try {\n                if (fillData && domUtils.inDoc(fillData, doc)) {\n                    if (!fillData.nodeValue.replace(fillCharReg, '').length) {\n                        var tmpNode = fillData.parentNode;\n                        domUtils.remove(fillData);\n                        while (\n                            tmpNode &&\n                            domUtils.isEmptyInlineElement(tmpNode) &&\n                            //safari的contains有bug\n                            (browser.safari\n                                ? !(domUtils.getPosition(tmpNode, excludeNode) & domUtils.POSITION_CONTAINS)\n                                : !tmpNode.contains(excludeNode))\n                        ) {\n                            fillData = tmpNode.parentNode;\n                            domUtils.remove(tmpNode);\n                            tmpNode = fillData;\n                        }\n                    } else {\n                        fillData.nodeValue = fillData.nodeValue.replace(fillCharReg, '');\n                    }\n                }\n            } catch (e) {}\n        }\n\n        /**\n         * @param node\n         * @param dir\n         */\n        function mergeSibling(node, dir) {\n            var tmpNode;\n            node = node[dir];\n            while (node && domUtils.isFillChar(node)) {\n                tmpNode = node[dir];\n                domUtils.remove(node);\n                node = tmpNode;\n            }\n        }\n\n        Range.prototype = {\n            /**\n             * 克隆选区的内容到一个DocumentFragment里\n             * @method cloneContents\n             * @return { DocumentFragment | NULL } 如果选区是闭合的将返回null， 否则， 返回包含所clone内容的DocumentFragment元素\n             * @example\n             * ```html\n             * <body>\n             *      <!-- 中括号表示选区 -->\n             *      <b>x<i>x[x</i>xx]x</b>\n             *\n             *      <script>\n             *          //range是已选中的选区\n             *          var fragment = range.cloneContents(),\n             *              node = document.createElement(\"div\");\n             *\n             *          node.appendChild( fragment );\n             *\n             *          //output: <i>x</i>xx\n             *          console.log( node.innerHTML );\n             *\n             *      </script>\n             * </body>\n             * ```\n             */\n            cloneContents: function () {\n                return this.collapsed ? null : execContentsAction(this, 0);\n            },\n\n            /**\n             * 删除当前选区范围中的所有内容\n             * @method deleteContents\n             * @remind 执行完该操作后， 当前Range对象变成了闭合状态\n             * @return { UE.dom.Range } 当前操作的Range对象\n             * @example\n             * ```html\n             * <body>\n             *      <!-- 中括号表示选区 -->\n             *      <b>x<i>x[x</i>xx]x</b>\n             *\n             *      <script>\n             *          //range是已选中的选区\n             *          range.deleteContents();\n             *\n             *          //竖线表示闭合后的选区位置\n             *          //output: <b>x<i>x</i>|x</b>\n             *          console.log( document.body.innerHTML );\n             *\n             *          //此时， range的各项属性为\n             *          //output: B\n             *          console.log( range.startContainer.tagName );\n             *          //output: 2\n             *          console.log( range.startOffset );\n             *          //output: B\n             *          console.log( range.endContainer.tagName );\n             *          //output: 2\n             *          console.log( range.endOffset );\n             *          //output: true\n             *          console.log( range.collapsed );\n             *\n             *      </script>\n             * </body>\n             * ```\n             */\n            deleteContents: function () {\n                var txt;\n                if (!this.collapsed) {\n                    execContentsAction(this, 1);\n                }\n                if (browser.webkit) {\n                    txt = this.startContainer;\n                    if (txt.nodeType == 3 && !txt.nodeValue.length) {\n                        this.setStartBefore(txt).collapse(true);\n                        domUtils.remove(txt);\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * 将当前选区的内容提取到一个DocumentFragment里\n             * @method extractContents\n             * @remind 执行该操作后， 选区将变成闭合状态\n             * @warning 执行该操作后， 原来选区所选中的内容将从dom树上剥离出来\n             * @return { DocumentFragment } 返回包含所提取内容的DocumentFragment对象\n             * @example\n             * ```html\n             * <body>\n             *      <!-- 中括号表示选区 -->\n             *      <b>x<i>x[x</i>xx]x</b>\n             *\n             *      <script>\n             *          //range是已选中的选区\n             *          var fragment = range.extractContents(),\n             *              node = document.createElement( \"div\" );\n             *\n             *          node.appendChild( fragment );\n             *\n             *          //竖线表示闭合后的选区位置\n             *\n             *          //output: <b>x<i>x</i>|x</b>\n             *          console.log( document.body.innerHTML );\n             *          //output: <i>x</i>xx\n             *          console.log( node.innerHTML );\n             *\n             *          //此时， range的各项属性为\n             *          //output: B\n             *          console.log( range.startContainer.tagName );\n             *          //output: 2\n             *          console.log( range.startOffset );\n             *          //output: B\n             *          console.log( range.endContainer.tagName );\n             *          //output: 2\n             *          console.log( range.endOffset );\n             *          //output: true\n             *          console.log( range.collapsed );\n             *\n             *      </script>\n             * </body>\n             */\n            extractContents: function () {\n                return this.collapsed ? null : execContentsAction(this, 2);\n            },\n\n            /**\n             * 设置Range的开始容器节点和偏移量\n             * @method  setStart\n             * @remind 如果给定的节点是元素节点，那么offset指的是其子元素中索引为offset的元素，\n             *          如果是文本节点，那么offset指的是其文本内容的第offset个字符\n             * @remind 如果提供的容器节点是一个不能包含子元素的节点， 则该选区的开始容器将被设置\n             *          为该节点的父节点， 此时， 其距离开始容器的偏移量也变成了该节点在其父节点\n             *          中的索引\n             * @param { Node } node 将被设为当前选区开始边界容器的节点对象\n             * @param { int } offset 选区的开始位置偏移量\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <!-- 选区 -->\n             * <b>xxx<i>x<span>xx</span>xx<em>xx</em>xxx</i>[xxx]</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.setStart( document.getElementsByTagName(\"i\")[0], 1 );\n             *\n             *     //此时， 选区变成了\n             *     //<b>xxx<i>x[<span>xx</span>xx<em>xx</em>xxx</i>xxx]</b>\n             *\n             * </script>\n             * ```\n             * @example\n             * ```html\n             * <!-- 选区 -->\n             * <b>xxx<img>[xx]x</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.setStart( document.getElementsByTagName(\"img\")[0], 3 );\n             *\n             *     //此时， 选区变成了\n             *     //<b>xxx[<img>xx]x</b>\n             *\n             * </script>\n             * ```\n             */\n            setStart: function (node, offset) {\n                return setEndPoint(true, node, offset, this);\n            },\n\n            /**\n             * 设置Range的结束容器和偏移量\n             * @method  setEnd\n             * @param { Node } node 作为当前选区结束边界容器的节点对象\n             * @param { int } offset 结束边界的偏移量\n             * @see UE.dom.Range:setStart(Node,int)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setEnd: function (node, offset) {\n                return setEndPoint(false, node, offset, this);\n            },\n\n            /**\n             * 将Range开始位置设置到node节点之后\n             * @method  setStartAfter\n             * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引+1\n             * @param { Node } node 选区的开始边界将紧接着该节点之后\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>xx[x</span>xxx]</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.setStartAfter( document.getElementsByTagName(\"i\")[0] );\n             *\n             *     //结果选区\n             *     //<b>xx<i>xxx</i>[<span>xxx</span>xxx]</b>\n             *\n             * </script>\n             * ```\n             */\n            setStartAfter: function (node) {\n                return this.setStart(node.parentNode, domUtils.getNodeIndex(node) + 1);\n            },\n\n            /**\n             * 将Range开始位置设置到node节点之前\n             * @method  setStartBefore\n             * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引\n             * @param { Node } node 新的选区开始位置在该节点之前\n             * @see UE.dom.Range:setStartAfter(Node)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setStartBefore: function (node) {\n                return this.setStart(node.parentNode, domUtils.getNodeIndex(node));\n            },\n\n            /**\n             * 将Range结束位置设置到node节点之后\n             * @method  setEndAfter\n             * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引+1\n             * @param { Node } node 目标节点\n             * @see UE.dom.Range:setStartAfter(Node)\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>[xx<i>xxx</i><span>xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.setStartAfter( document.getElementsByTagName(\"span\")[0] );\n             *\n             *     //结果选区\n             *     //<b>[xx<i>xxx</i><span>xxx</span>]xxx</b>\n             *\n             * </script>\n             * ```\n             */\n            setEndAfter: function (node) {\n                return this.setEnd(node.parentNode, domUtils.getNodeIndex(node) + 1);\n            },\n\n            /**\n             * 将Range结束位置设置到node节点之前\n             * @method  setEndBefore\n             * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引\n             * @param { Node } node 目标节点\n             * @see UE.dom.Range:setEndAfter(Node)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setEndBefore: function (node) {\n                return this.setEnd(node.parentNode, domUtils.getNodeIndex(node));\n            },\n\n            /**\n             * 设置Range的开始位置到node节点内的第一个子节点之前\n             * @method  setStartAtFirst\n             * @remind 选区的开始容器将变成给定的节点， 且偏移量为0\n             * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。\n             * @param { Node } node 目标节点\n             * @see UE.dom.Range:setStartBefore(Node)\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.setStartAtFirst( document.getElementsByTagName(\"i\")[0] );\n             *\n             *     //结果选区\n             *     //<b>xx<i>[xxx</i><span>xx]x</span>xxx</b>\n             *\n             * </script>\n             * ```\n             */\n            setStartAtFirst: function (node) {\n                return this.setStart(node, 0);\n            },\n\n            /**\n             * 设置Range的开始位置到node节点内的最后一个节点之后\n             * @method setStartAtLast\n             * @remind 选区的开始容器将变成给定的节点， 且偏移量为该节点的子节点数\n             * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。\n             * @param { Node } node 目标节点\n             * @see UE.dom.Range:setStartAtFirst(Node)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setStartAtLast: function (node) {\n                return this.setStart(node, node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length);\n            },\n\n            /**\n             * 设置Range的结束位置到node节点内的第一个节点之前\n             * @method  setEndAtFirst\n             * @param { Node } node 目标节点\n             * @remind 选区的结束容器将变成给定的节点， 且偏移量为0\n             * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。\n             * @see UE.dom.Range:setStartAtFirst(Node)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setEndAtFirst: function (node) {\n                return this.setEnd(node, 0);\n            },\n\n            /**\n             * 设置Range的结束位置到node节点内的最后一个节点之后\n             * @method  setEndAtLast\n             * @param { Node } node 目标节点\n             * @remind 选区的结束容器将变成给定的节点， 且偏移量为该节点的子节点数量\n             * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。\n             * @see UE.dom.Range:setStartAtFirst(Node)\n             * @return { UE.dom.Range } 当前range对象\n             */\n            setEndAtLast: function (node) {\n                return this.setEnd(node, node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length);\n            },\n\n            /**\n             * 选中给定节点\n             * @method  selectNode\n             * @remind 此时， 选区的开始容器和结束容器都是该节点的父节点， 其startOffset是该节点在父节点中的位置索引，\n             *          而endOffset为startOffset+1\n             * @param { Node } node 需要选中的节点\n             * @return { UE.dom.Range } 当前range对象，此时的range仅包含当前给定的节点对象\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.selectNode( document.getElementsByTagName(\"i\")[0] );\n             *\n             *     //结果选区\n             *     //<b>xx[<i>xxx</i>]<span>xxx</span>xxx</b>\n             *\n             * </script>\n             * ```\n             */\n            selectNode: function (node) {\n                return this.setStartBefore(node).setEndAfter(node);\n            },\n\n            /**\n             * 选中给定节点内部的所有节点\n             * @method  selectNodeContents\n             * @remind 此时， 选区的开始容器和结束容器都是该节点， 其startOffset为0，\n             *          而endOffset是该节点的子节点数。\n             * @param { Node } node 目标节点， 当前range将包含该节点内的所有节点\n             * @return { UE.dom.Range } 当前range对象， 此时range仅包含给定节点的所有子节点\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.selectNode( document.getElementsByTagName(\"b\")[0] );\n             *\n             *     //结果选区\n             *     //<b>[xx<i>xxx</i><span>xxx</span>xxx]</b>\n             *\n             * </script>\n             * ```\n             */\n            selectNodeContents: function (node) {\n                return this.setStart(node, 0).setEndAtLast(node);\n            },\n\n            /**\n             * clone当前Range对象\n             * @method  cloneRange\n             * @remind 返回的range是一个全新的range对象， 其内部所有属性与当前被clone的range相同。\n             * @return { UE.dom.Range } 当前range对象的一个副本\n             */\n            cloneRange: function () {\n                var me = this;\n                return new Range(me.document)\n                    .setStart(me.startContainer, me.startOffset)\n                    .setEnd(me.endContainer, me.endOffset);\n            },\n\n            /**\n             * 向当前选区的结束处闭合选区\n             * @method  collapse\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.collapse();\n             *\n             *     //结果选区\n             *     //“|”表示选区已闭合\n             *     //<b>xx<i>xxx</i><span>xx|x</span>xxx</b>\n             *\n             * </script>\n             * ```\n             */\n\n            /**\n             * 闭合当前选区，根据给定的toStart参数项决定是向当前选区开始处闭合还是向结束处闭合，\n             * 如果toStart的值为true，则向开始位置闭合， 反之，向结束位置闭合。\n             * @method  collapse\n             * @param { Boolean } toStart 是否向选区开始处闭合\n             * @return { UE.dom.Range } 当前range对象，此时range对象处于闭合状态\n             * @see UE.dom.Range:collapse()\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>\n             *\n             * <script>\n             *\n             *     //执行操作\n             *     range.collapse( true );\n             *\n             *     //结果选区\n             *     //“|”表示选区已闭合\n             *     //<b>xx<i>xxx</i><span>|xxx</span>xxx</b>\n             *\n             * </script>\n             * ```\n             */\n            collapse: function (toStart) {\n                var me = this;\n                if (toStart) {\n                    me.endContainer = me.startContainer;\n                    me.endOffset = me.startOffset;\n                } else {\n                    me.startContainer = me.endContainer;\n                    me.startOffset = me.endOffset;\n                }\n                me.collapsed = true;\n                return me;\n            },\n\n            /**\n             * 调整range的开始位置和结束位置，使其\"收缩\"到最小的位置\n             * @method  shrinkBoundary\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             * <span>xx<b>xx[</b>xxxxx]</span> => <span>xx<b>xx</b>[xxxxx]</span>\n             * ```\n             *\n             * @example\n             * ```html\n             * <!-- 选区示例 -->\n             * <b>x[xx</b><i>]xxx</i>\n             *\n             * <script>\n             *\n             *     //执行收缩\n             *     range.shrinkBoundary();\n             *\n             *     //结果选区\n             *     //<b>x[xx]</b><i>xxx</i>\n             * </script>\n             * ```\n             *\n             * @example\n             * ```html\n             * [<b><i>xxxx</i>xxxxxxx</b>] => <b><i>[xxxx</i>xxxxxxx]</b>\n             * ```\n             */\n\n            /**\n             * 调整range的开始位置和结束位置，使其\"收缩\"到最小的位置，\n             * 如果ignoreEnd的值为true，则忽略对结束位置的调整\n             * @method  shrinkBoundary\n             * @param { Boolean } ignoreEnd 是否忽略对结束位置的调整\n             * @return { UE.dom.Range } 当前range对象\n             * @see UE.dom.domUtils.Range:shrinkBoundary()\n             */\n            shrinkBoundary: function (ignoreEnd) {\n                var me = this,\n                    child,\n                    collapsed = me.collapsed;\n                function check(node) {\n                    return (\n                        node.nodeType == 1 &&\n                        !domUtils.isBookmarkNode(node) &&\n                        !dtd.$empty[node.tagName] &&\n                        !dtd.$nonChild[node.tagName]\n                    );\n                }\n                while (\n                    me.startContainer.nodeType == 1 && //是element\n                    (child = me.startContainer.childNodes[me.startOffset]) && //子节点也是element\n                    check(child)\n                ) {\n                    me.setStart(child, 0);\n                }\n                if (collapsed) {\n                    return me.collapse(true);\n                }\n                if (!ignoreEnd) {\n                    while (\n                        me.endContainer.nodeType == 1 && //是element\n                        me.endOffset > 0 && //如果是空元素就退出 endOffset=0那么endOffst-1为负值，childNodes[endOffset]报错\n                        (child = me.endContainer.childNodes[me.endOffset - 1]) && //子节点也是element\n                        check(child)\n                    ) {\n                        me.setEnd(child, child.childNodes.length);\n                    }\n                }\n                return me;\n            },\n\n            /**\n             * 获取离当前选区内包含的所有节点最近的公共祖先节点，\n             * @method  getCommonAncestor\n             * @remind 返回的公共祖先节点一定不是range自身的容器节点， 但有可能是一个文本节点\n             * @return { Node } 当前range对象内所有节点的公共祖先节点\n             * @example\n             * ```html\n             * //选区示例\n             * <span>xxx<b>x[x<em>xx]x</em>xxx</b>xx</span>\n             * <script>\n             *\n             *     var node = range.getCommonAncestor();\n             *\n             *     //公共祖先节点是： b节点\n             *     //输出： B\n             *     console.log(node.tagName);\n             *\n             * </script>\n             * ```\n             */\n\n            /**\n             * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到\n             * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf\n             * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点\n             * @method  getCommonAncestor\n             * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点\n             * @return { Node } 当前range对象内所有节点的公共祖先节点\n             * @see UE.dom.Range:getCommonAncestor()\n             * @example\n             * ```html\n             * <body>\n             *\n             *     <!-- 选区示例 -->\n             *     <b>xxx<i>xxxx<span>xx[x</span>xx]x</i>xxxxxxx</b>\n             *\n             *     <script>\n             *\n             *         var node = range.getCommonAncestor( false );\n             *\n             *         //这里的公共祖先节点是B而不是I， 是因为参数限制了获取到的节点不能是容器节点\n             *         //output: B\n             *         console.log( node.tagName );\n             *\n             *     </script>\n             *\n             * </body>\n             * ```\n             */\n\n            /**\n             * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到\n             * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf\n             * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点； 同时可以根据\n             * ignoreTextNode 参数的取值决定是否忽略类型为文本节点的祖先节点。\n             * @method  getCommonAncestor\n             * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点\n             * @param { Boolean } ignoreTextNode 获取祖先节点的过程中是否忽略类型为文本节点的祖先节点\n             * @return { Node } 当前range对象内所有节点的公共祖先节点\n             * @see UE.dom.Range:getCommonAncestor()\n             * @see UE.dom.Range:getCommonAncestor(Boolean)\n             * @example\n             * ```html\n             * <body>\n             *\n             *     <!-- 选区示例 -->\n             *     <b>xxx<i>xxxx<span>x[x]x</span>xxx</i>xxxxxxx</b>\n             *\n             *     <script>\n             *\n             *         var node = range.getCommonAncestor( true, false );\n             *\n             *         //output: SPAN\n             *         console.log( node.tagName );\n             *\n             *     </script>\n             *\n             * </body>\n             * ```\n             */\n            getCommonAncestor: function (includeSelf, ignoreTextNode) {\n                var me = this,\n                    start = me.startContainer,\n                    end = me.endContainer;\n                if (start === end) {\n                    if (includeSelf && selectOneNode(this)) {\n                        start = start.childNodes[me.startOffset];\n                        if (start.nodeType == 1) return start;\n                    }\n                    //只有在上来就相等的情况下才会出现是文本的情况\n                    return ignoreTextNode && start.nodeType == 3 ? start.parentNode : start;\n                }\n                return domUtils.getCommonAncestor(start, end);\n            },\n\n            /**\n             * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上\n             * @method trimBoundary\n             * @remind 该操作有可能会引起文本节点被切开\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             *\n             * //选区示例\n             * <b>xxx<i>[xxxxx]</i>xxx</b>\n             *\n             * <script>\n             *     //未调整前， 选区的开始容器和结束都是文本节点\n             *     //执行调整\n             *     range.trimBoundary();\n             *\n             *     //调整之后， 容器节点变成了i节点\n             *     //<b>xxx[<i>xxxxx</i>]xxx</b>\n             * </script>\n             * ```\n             */\n\n            /**\n             * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上，\n             * 可以根据 ignoreEnd 参数的值决定是否调整对结束边界的调整\n             * @method trimBoundary\n             * @param { Boolean } ignoreEnd 是否忽略对结束边界的调整\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             *\n             * //选区示例\n             * <b>xxx<i>[xxxxx]</i>xxx</b>\n             *\n             * <script>\n             *     //未调整前， 选区的开始容器和结束都是文本节点\n             *     //执行调整\n             *     range.trimBoundary( true );\n             *\n             *     //调整之后， 开始容器节点变成了i节点\n             *     //但是， 结束容器没有发生变化\n             *     //<b>xxx[<i>xxxxx]</i>xxx</b>\n             * </script>\n             * ```\n             */\n            trimBoundary: function (ignoreEnd) {\n                this.txtToElmBoundary();\n                var start = this.startContainer,\n                    offset = this.startOffset,\n                    collapsed = this.collapsed,\n                    end = this.endContainer;\n                if (start.nodeType == 3) {\n                    if (offset == 0) {\n                        this.setStartBefore(start);\n                    } else {\n                        if (offset >= start.nodeValue.length) {\n                            this.setStartAfter(start);\n                        } else {\n                            var textNode = domUtils.split(start, offset);\n                            //跟新结束边界\n                            if (start === end) {\n                                this.setEnd(textNode, this.endOffset - offset);\n                            } else if (start.parentNode === end) {\n                                this.endOffset += 1;\n                            }\n                            this.setStartBefore(textNode);\n                        }\n                    }\n                    if (collapsed) {\n                        return this.collapse(true);\n                    }\n                }\n                if (!ignoreEnd) {\n                    offset = this.endOffset;\n                    end = this.endContainer;\n                    if (end.nodeType == 3) {\n                        if (offset == 0) {\n                            this.setEndBefore(end);\n                        } else {\n                            offset < end.nodeValue.length && domUtils.split(end, offset);\n                            this.setEndAfter(end);\n                        }\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则什么也不做\n             * @method txtToElmBoundary\n             * @remind 该操作不会修改dom节点\n             * @return { UE.dom.Range } 当前range对象\n             */\n\n            /**\n             * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则根据参数项\n             * ignoreCollapsed 的值决定是否执行该调整\n             * @method txtToElmBoundary\n             * @param { Boolean } ignoreCollapsed 是否忽略选区的闭合状态， 如果该参数取值为true， 则\n             *                      不论选区是否闭合， 都会执行该操作， 反之， 则不会对闭合的选区执行该操作\n             * @return { UE.dom.Range } 当前range对象\n             */\n            txtToElmBoundary: function (ignoreCollapsed) {\n                function adjust(r, c) {\n                    var container = r[c + 'Container'],\n                        offset = r[c + 'Offset'];\n                    if (container.nodeType == 3) {\n                        if (!offset) {\n                            r[\n                                'set' +\n                                    c.replace(/(\\w)/, function (a) {\n                                        return a.toUpperCase();\n                                    }) +\n                                    'Before'\n                            ](container);\n                        } else if (offset >= container.nodeValue.length) {\n                            r[\n                                'set' +\n                                    c.replace(/(\\w)/, function (a) {\n                                        return a.toUpperCase();\n                                    }) +\n                                    'After'\n                            ](container);\n                        }\n                    }\n                }\n\n                if (ignoreCollapsed || !this.collapsed) {\n                    adjust(this, 'start');\n                    adjust(this, 'end');\n                }\n                return this;\n            },\n\n            /**\n             * 在当前选区的开始位置前插入节点，新插入的节点会被该range包含\n             * @method  insertNode\n             * @param { Node } node 需要插入的节点\n             * @remind 插入的节点可以是一个DocumentFragment依次插入多个节点\n             * @return { UE.dom.Range } 当前range对象\n             */\n            insertNode: function (node) {\n                var first = node,\n                    length = 1;\n                if (node.nodeType == 11) {\n                    first = node.firstChild;\n                    length = node.childNodes.length;\n                }\n                this.trimBoundary(true);\n                var start = this.startContainer,\n                    offset = this.startOffset;\n                var nextNode = start.childNodes[offset];\n                if (nextNode) {\n                    start.insertBefore(node, nextNode);\n                } else {\n                    start.appendChild(node);\n                }\n                if (first.parentNode === this.endContainer) {\n                    this.endOffset = this.endOffset + length;\n                }\n                return this.setStartBefore(first);\n            },\n\n            /**\n             * 闭合选区到当前选区的开始位置， 并且定位光标到闭合后的位置\n             * @method  setCursor\n             * @return { UE.dom.Range } 当前range对象\n             * @see UE.dom.Range:collapse()\n             */\n\n            /**\n             * 闭合选区，可以根据参数toEnd的值控制选区是向前闭合还是向后闭合， 并且定位光标到闭合后的位置。\n             * @method  setCursor\n             * @param { Boolean } toEnd 是否向后闭合， 如果为true， 则闭合选区时， 将向结束容器方向闭合，\n             *                      反之，则向开始容器方向闭合\n             * @return { UE.dom.Range } 当前range对象\n             * @see UE.dom.Range:collapse(Boolean)\n             */\n            setCursor: function (toEnd, noFillData) {\n                return this.collapse(!toEnd).select(noFillData);\n            },\n\n            /**\n             * 创建当前range的一个书签，记录下当前range的位置，方便当dom树改变时，还能找回原来的选区位置\n             * @method createBookmark\n             * @param { Boolean } serialize 控制返回的标记位置是对当前位置的引用还是ID，如果该值为true，则\n             *                              返回标记位置的ID， 反之则返回标记位置节点的引用\n             * @return { Object } 返回一个书签记录键值对， 其包含的key有： start => 开始标记的ID或者引用，\n             *                          end => 结束标记的ID或引用， id => 当前标记的类型， 如果为true，则表示\n             *                          返回的记录的类型为ID， 反之则为引用\n             */\n            createBookmark: function (serialize, same) {\n                var endNode,\n                    startNode = this.document.createElement('span');\n                startNode.style.cssText = 'display:none;line-height:0px;';\n                startNode.appendChild(this.document.createTextNode('\\u200D'));\n                startNode.id = '_baidu_bookmark_start_' + (same ? '' : guid++);\n\n                if (!this.collapsed) {\n                    endNode = startNode.cloneNode(true);\n                    endNode.id = '_baidu_bookmark_end_' + (same ? '' : guid++);\n                }\n                this.insertNode(startNode);\n                if (endNode) {\n                    this.collapse().insertNode(endNode).setEndBefore(endNode);\n                }\n                this.setStartAfter(startNode);\n                return {\n                    start: serialize ? startNode.id : startNode,\n                    end: endNode ? (serialize ? endNode.id : endNode) : null,\n                    id: serialize\n                };\n            },\n\n            /**\n             *  调整当前range的边界到书签位置，并删除该书签对象所标记的位置内的节点\n             *  @method  moveToBookmark\n             *  @param { BookMark } bookmark createBookmark所创建的标签对象\n             *  @return { UE.dom.Range } 当前range对象\n             *  @see UE.dom.Range:createBookmark(Boolean)\n             */\n            moveToBookmark: function (bookmark) {\n                var start = bookmark.id ? this.document.getElementById(bookmark.start) : bookmark.start,\n                    end = bookmark.end && bookmark.id ? this.document.getElementById(bookmark.end) : bookmark.end;\n                this.setStartBefore(start);\n                domUtils.remove(start);\n                if (end) {\n                    this.setEndBefore(end);\n                    domUtils.remove(end);\n                } else {\n                    this.collapse(true);\n                }\n                return this;\n            },\n\n            /**\n             * 调整range的边界，使其\"放大\"到最近的父节点\n             * @method  enlarge\n             * @remind 会引起选区的变化\n             * @return { UE.dom.Range } 当前range对象\n             */\n\n            /**\n             * 调整range的边界，使其\"放大\"到最近的父节点，根据参数 toBlock 的取值， 可以\n             * 要求扩大之后的父节点是block节点\n             * @method  enlarge\n             * @param { Boolean } toBlock 是否要求扩大之后的父节点必须是block节点\n             * @return { UE.dom.Range } 当前range对象\n             */\n            enlarge: function (toBlock, stopFn) {\n                var isBody = domUtils.isBody,\n                    pre,\n                    node,\n                    tmp = this.document.createTextNode('');\n                if (toBlock) {\n                    node = this.startContainer;\n                    if (node.nodeType == 1) {\n                        if (node.childNodes[this.startOffset]) {\n                            pre = node = node.childNodes[this.startOffset];\n                        } else {\n                            node.appendChild(tmp);\n                            pre = node = tmp;\n                        }\n                    } else {\n                        pre = node;\n                    }\n                    while (1) {\n                        if (domUtils.isBlockElm(node)) {\n                            node = pre;\n                            while ((pre = node.previousSibling) && !domUtils.isBlockElm(pre)) {\n                                node = pre;\n                            }\n                            this.setStartBefore(node);\n                            break;\n                        }\n                        pre = node;\n                        node = node.parentNode;\n                    }\n                    node = this.endContainer;\n                    if (node.nodeType == 1) {\n                        if ((pre = node.childNodes[this.endOffset])) {\n                            node.insertBefore(tmp, pre);\n                        } else {\n                            node.appendChild(tmp);\n                        }\n                        pre = node = tmp;\n                    } else {\n                        pre = node;\n                    }\n                    while (1) {\n                        if (domUtils.isBlockElm(node)) {\n                            node = pre;\n                            while ((pre = node.nextSibling) && !domUtils.isBlockElm(pre)) {\n                                node = pre;\n                            }\n                            this.setEndAfter(node);\n                            break;\n                        }\n                        pre = node;\n                        node = node.parentNode;\n                    }\n                    if (tmp.parentNode === this.endContainer) {\n                        this.endOffset--;\n                    }\n                    domUtils.remove(tmp);\n                }\n\n                // 扩展边界到最大\n                if (!this.collapsed) {\n                    while (this.startOffset == 0) {\n                        if (stopFn && stopFn(this.startContainer)) {\n                            break;\n                        }\n                        if (isBody(this.startContainer)) {\n                            break;\n                        }\n                        this.setStartBefore(this.startContainer);\n                    }\n                    while (\n                        this.endOffset ==\n                        (this.endContainer.nodeType == 1\n                            ? this.endContainer.childNodes.length\n                            : this.endContainer.nodeValue.length)\n                    ) {\n                        if (stopFn && stopFn(this.endContainer)) {\n                            break;\n                        }\n                        if (isBody(this.endContainer)) {\n                            break;\n                        }\n                        this.setEndAfter(this.endContainer);\n                    }\n                }\n                return this;\n            },\n            enlargeToBlockElm: function (ignoreEnd) {\n                while (!domUtils.isBlockElm(this.startContainer)) {\n                    this.setStartBefore(this.startContainer);\n                }\n                if (!ignoreEnd) {\n                    while (!domUtils.isBlockElm(this.endContainer)) {\n                        this.setEndAfter(this.endContainer);\n                    }\n                }\n                return this;\n            },\n            /**\n             * 调整Range的边界，使其\"缩小\"到最合适的位置\n             * @method adjustmentBoundary\n             * @return { UE.dom.Range } 当前range对象\n             * @see UE.dom.Range:shrinkBoundary()\n             */\n            adjustmentBoundary: function () {\n                if (!this.collapsed) {\n                    while (\n                        !domUtils.isBody(this.startContainer) &&\n                        this.startOffset ==\n                            this.startContainer[this.startContainer.nodeType == 3 ? 'nodeValue' : 'childNodes']\n                                .length &&\n                        this.startContainer[this.startContainer.nodeType == 3 ? 'nodeValue' : 'childNodes'].length\n                    ) {\n                        this.setStartAfter(this.startContainer);\n                    }\n                    while (\n                        !domUtils.isBody(this.endContainer) &&\n                        !this.endOffset &&\n                        this.endContainer[this.endContainer.nodeType == 3 ? 'nodeValue' : 'childNodes'].length\n                    ) {\n                        this.setEndBefore(this.endContainer);\n                    }\n                }\n                return this;\n            },\n\n            /**\n             * 给range选区中的内容添加给定的inline标签\n             * @method applyInlineStyle\n             * @param { String } tagName 需要添加的标签名\n             * @example\n             * ```html\n             * <p>xxxx[xxxx]x</p>  ==>  range.applyInlineStyle(\"strong\")  ==>  <p>xxxx[<strong>xxxx</strong>]x</p>\n             * ```\n             */\n\n            /**\n             * 给range选区中的内容添加给定的inline标签， 并且为标签附加上一些初始化属性。\n             * @method applyInlineStyle\n             * @param { String } tagName 需要添加的标签名\n             * @param { Object } attrs 跟随新添加的标签的属性\n             * @return { UE.dom.Range } 当前选区\n             * @example\n             * ```html\n             * <p>xxxx[xxxx]x</p>\n             *\n             * ==>\n             *\n             * <!-- 执行操作 -->\n             * range.applyInlineStyle(\"strong\",{\"style\":\"font-size:12px\"})\n             *\n             * ==>\n             *\n             * <p>xxxx[<strong style=\"font-size:12px\">xxxx</strong>]x</p>\n             * ```\n             */\n            applyInlineStyle: function (tagName, attrs, list) {\n                if (this.collapsed) return this;\n                this.trimBoundary()\n                    .enlarge(false, function (node) {\n                        return node.nodeType == 1 && domUtils.isBlockElm(node);\n                    })\n                    .adjustmentBoundary();\n                var bookmark = this.createBookmark(),\n                    end = bookmark.end,\n                    filterFn = function (node) {\n                        return node.nodeType == 1 ? node.tagName.toLowerCase() != 'br' : !domUtils.isWhitespace(node);\n                    },\n                    current = domUtils.getNextDomNode(bookmark.start, false, filterFn),\n                    node,\n                    pre,\n                    range = this.cloneRange();\n                while (current && domUtils.getPosition(current, end) & domUtils.POSITION_PRECEDING) {\n                    if (current.nodeType == 3 || dtd[tagName][current.tagName]) {\n                        range.setStartBefore(current);\n                        node = current;\n                        while (node && (node.nodeType == 3 || dtd[tagName][node.tagName]) && node !== end) {\n                            pre = node;\n                            node = domUtils.getNextDomNode(node, node.nodeType == 1, null, function (parent) {\n                                return dtd[tagName][parent.tagName];\n                            });\n                        }\n                        var frag = range.setEndAfter(pre).extractContents(),\n                            elm;\n                        if (list && list.length > 0) {\n                            var level, top;\n                            top = level = list[0].cloneNode(false);\n                            for (var i = 1, ci; (ci = list[i++]); ) {\n                                level.appendChild(ci.cloneNode(false));\n                                level = level.firstChild;\n                            }\n                            elm = level;\n                        } else {\n                            elm = range.document.createElement(tagName);\n                        }\n                        if (attrs) {\n                            domUtils.setAttributes(elm, attrs);\n                        }\n                        elm.appendChild(frag);\n                        range.insertNode(list ? top : elm);\n                        //处理下滑线在a上的情况\n                        var aNode;\n                        if (\n                            tagName == 'span' &&\n                            attrs.style &&\n                            /text\\-decoration/.test(attrs.style) &&\n                            (aNode = domUtils.findParentByTagName(elm, 'a', true))\n                        ) {\n                            domUtils.setAttributes(aNode, attrs);\n                            domUtils.remove(elm, true);\n                            elm = aNode;\n                        } else {\n                            domUtils.mergeSibling(elm);\n                            domUtils.clearEmptySibling(elm);\n                        }\n                        //去除子节点相同的\n                        domUtils.mergeChild(elm, attrs);\n                        current = domUtils.getNextDomNode(elm, false, filterFn);\n                        domUtils.mergeToParent(elm);\n                        if (node === end) {\n                            break;\n                        }\n                    } else {\n                        current = domUtils.getNextDomNode(current, true, filterFn);\n                    }\n                }\n                return this.moveToBookmark(bookmark);\n            },\n\n            /**\n             * 移除当前选区内指定的inline标签，但保留其中的内容\n             * @method removeInlineStyle\n             * @param { String } tagName 需要移除的标签名\n             * @return { UE.dom.Range } 当前的range对象\n             * @example\n             * ```html\n             * xx[x<span>xxx<em>yyy</em>zz]z</span>  => range.removeInlineStyle([\"em\"])  => xx[x<span>xxxyyyzz]z</span>\n             * ```\n             */\n\n            /**\n             * 移除当前选区内指定的一组inline标签，但保留其中的内容\n             * @method removeInlineStyle\n             * @param { Array } tagNameArr 需要移除的标签名的数组\n             * @return { UE.dom.Range } 当前的range对象\n             * @see UE.dom.Range:removeInlineStyle(String)\n             */\n            removeInlineStyle: function (tagNames) {\n                if (this.collapsed) return this;\n                tagNames = utils.isArray(tagNames) ? tagNames : [tagNames];\n                this.shrinkBoundary().adjustmentBoundary();\n                var start = this.startContainer,\n                    end = this.endContainer;\n                while (1) {\n                    if (start.nodeType == 1) {\n                        if (utils.indexOf(tagNames, start.tagName.toLowerCase()) > -1) {\n                            break;\n                        }\n                        if (start.tagName.toLowerCase() == 'body') {\n                            start = null;\n                            break;\n                        }\n                    }\n                    start = start.parentNode;\n                }\n                while (1) {\n                    if (end.nodeType == 1) {\n                        if (utils.indexOf(tagNames, end.tagName.toLowerCase()) > -1) {\n                            break;\n                        }\n                        if (end.tagName.toLowerCase() == 'body') {\n                            end = null;\n                            break;\n                        }\n                    }\n                    end = end.parentNode;\n                }\n                var bookmark = this.createBookmark(),\n                    frag,\n                    tmpRange;\n                if (start) {\n                    tmpRange = this.cloneRange().setEndBefore(bookmark.start).setStartBefore(start);\n                    frag = tmpRange.extractContents();\n                    tmpRange.insertNode(frag);\n                    domUtils.clearEmptySibling(start, true);\n                    start.parentNode.insertBefore(bookmark.start, start);\n                }\n                if (end) {\n                    tmpRange = this.cloneRange().setStartAfter(bookmark.end).setEndAfter(end);\n                    frag = tmpRange.extractContents();\n                    tmpRange.insertNode(frag);\n                    domUtils.clearEmptySibling(end, false, true);\n                    end.parentNode.insertBefore(bookmark.end, end.nextSibling);\n                }\n                var current = domUtils.getNextDomNode(bookmark.start, false, function (node) {\n                        return node.nodeType == 1;\n                    }),\n                    next;\n                while (current && current !== bookmark.end) {\n                    next = domUtils.getNextDomNode(current, true, function (node) {\n                        return node.nodeType == 1;\n                    });\n                    if (utils.indexOf(tagNames, current.tagName.toLowerCase()) > -1) {\n                        domUtils.remove(current, true);\n                    }\n                    current = next;\n                }\n                return this.moveToBookmark(bookmark);\n            },\n\n            /**\n             * 获取当前选中的自闭合的节点\n             * @method  getClosedNode\n             * @return { Node | NULL } 如果当前选中的是自闭合节点， 则返回该节点， 否则返回NULL\n             */\n            getClosedNode: function () {\n                var node;\n                if (!this.collapsed) {\n                    var range = this.cloneRange().adjustmentBoundary().shrinkBoundary();\n                    if (selectOneNode(range)) {\n                        var child = range.startContainer.childNodes[range.startOffset];\n                        if (\n                            child &&\n                            child.nodeType == 1 &&\n                            (dtd.$empty[child.tagName] || dtd.$nonChild[child.tagName])\n                        ) {\n                            node = child;\n                        }\n                    }\n                }\n                return node;\n            },\n\n            /**\n             * 在页面上高亮range所表示的选区\n             * @method select\n             * @return { UE.dom.Range } 返回当前Range对象\n             */\n            //这里不区分ie9以上，trace:3824\n            select: browser.ie\n                ? function (noFillData, textRange) {\n                      var nativeRange;\n                      if (!this.collapsed) this.shrinkBoundary();\n                      var node = this.getClosedNode();\n                      if (node && !textRange) {\n                          try {\n                              nativeRange = this.document.body.createControlRange();\n                              nativeRange.addElement(node);\n                              nativeRange.select();\n                          } catch (e) {}\n                          return this;\n                      }\n                      var bookmark = this.createBookmark(),\n                          start = bookmark.start,\n                          end;\n                      nativeRange = this.document.body.createTextRange();\n                      nativeRange.moveToElementText(start);\n                      nativeRange.moveStart('character', 1);\n                      if (!this.collapsed) {\n                          var nativeRangeEnd = this.document.body.createTextRange();\n                          end = bookmark.end;\n                          nativeRangeEnd.moveToElementText(end);\n                          nativeRange.setEndPoint('EndToEnd', nativeRangeEnd);\n                      } else {\n                          if (!noFillData && this.startContainer.nodeType != 3) {\n                              //使用<span>|x<span>固定住光标\n                              var tmpText = this.document.createTextNode(fillChar),\n                                  tmp = this.document.createElement('span');\n                              tmp.appendChild(this.document.createTextNode(fillChar));\n                              start.parentNode.insertBefore(tmp, start);\n                              start.parentNode.insertBefore(tmpText, start);\n                              //当点b,i,u时，不能清除i上边的b\n                              removeFillData(this.document, tmpText);\n                              fillData = tmpText;\n                              mergeSibling(tmp, 'previousSibling');\n                              mergeSibling(start, 'nextSibling');\n                              nativeRange.moveStart('character', -1);\n                              nativeRange.collapse(true);\n                          }\n                      }\n                      this.moveToBookmark(bookmark);\n                      tmp && domUtils.remove(tmp);\n                      //IE在隐藏状态下不支持range操作，catch一下\n                      try {\n                          nativeRange.select();\n                      } catch (e) {}\n                      return this;\n                  }\n                : function (notInsertFillData) {\n                      function checkOffset(rng) {\n                          function check(node, offset, dir) {\n                              if (node.nodeType == 3 && node.nodeValue.length < offset) {\n                                  rng[dir + 'Offset'] = node.nodeValue.length;\n                              }\n                          }\n                          check(rng.startContainer, rng.startOffset, 'start');\n                          check(rng.endContainer, rng.endOffset, 'end');\n                      }\n                      var win = domUtils.getWindow(this.document),\n                          sel = win.getSelection(),\n                          txtNode;\n                      //FF下关闭自动长高时滚动条在关闭dialog时会跳\n                      //ff下如果不body.focus将不能定位闭合光标到编辑器内\n                      browser.gecko ? this.document.body.focus() : win.focus();\n                      if (sel) {\n                          sel.removeAllRanges();\n                          // trace:870 chrome/safari后边是br对于闭合得range不能定位 所以去掉了判断\n                          // this.startContainer.nodeType != 3 &&! ((child = this.startContainer.childNodes[this.startOffset]) && child.nodeType == 1 && child.tagName == 'BR'\n                          if (this.collapsed && !notInsertFillData) {\n                              //                    //opear如果没有节点接着，原生的不能够定位,不能在body的第一级插入空白节点\n                              //                    if (notInsertFillData && browser.opera && !domUtils.isBody(this.startContainer) && this.startContainer.nodeType == 1) {\n                              //                        var tmp = this.document.createTextNode('');\n                              //                        this.insertNode(tmp).setStart(tmp, 0).collapse(true);\n                              //                    }\n                              //\n                              //处理光标落在文本节点的情况\n                              //处理以下的情况\n                              //<b>|xxxx</b>\n                              //<b>xxxx</b>|xxxx\n                              //xxxx<b>|</b>\n                              var start = this.startContainer,\n                                  child = start;\n                              if (start.nodeType == 1) {\n                                  child = start.childNodes[this.startOffset];\n                              }\n                              if (\n                                  !(start.nodeType == 3 && this.startOffset) &&\n                                  (child\n                                      ? !child.previousSibling || child.previousSibling.nodeType != 3\n                                      : !start.lastChild || start.lastChild.nodeType != 3)\n                              ) {\n                                  txtNode = this.document.createTextNode(fillChar);\n                                  //跟着前边走\n                                  this.insertNode(txtNode);\n                                  removeFillData(this.document, txtNode);\n                                  mergeSibling(txtNode, 'previousSibling');\n                                  mergeSibling(txtNode, 'nextSibling');\n                                  fillData = txtNode;\n                                  this.setStart(txtNode, browser.webkit ? 1 : 0).collapse(true);\n                              }\n                          }\n                          var nativeRange = this.document.createRange();\n                          if (this.collapsed && browser.opera && this.startContainer.nodeType == 1) {\n                              var child = this.startContainer.childNodes[this.startOffset];\n                              if (!child) {\n                                  //往前靠拢\n                                  child = this.startContainer.lastChild;\n                                  if (child && domUtils.isBr(child)) {\n                                      this.setStartBefore(child).collapse(true);\n                                  }\n                              } else {\n                                  //向后靠拢\n                                  while (child && domUtils.isBlockElm(child)) {\n                                      if (child.nodeType == 1 && child.childNodes[0]) {\n                                          child = child.childNodes[0];\n                                      } else {\n                                          break;\n                                      }\n                                  }\n                                  child && this.setStartBefore(child).collapse(true);\n                              }\n                          }\n                          //是createAddress最后一位算的不准，现在这里进行微调\n                          checkOffset(this);\n                          nativeRange.setStart(this.startContainer, this.startOffset);\n                          nativeRange.setEnd(this.endContainer, this.endOffset);\n                          sel.addRange(nativeRange);\n                      }\n                      return this;\n                  },\n\n            /**\n             * 滚动到当前range开始的位置\n             * @method scrollToView\n             * @param { Window } win 当前range对象所属的window对象\n             * @return { UE.dom.Range } 当前Range对象\n             */\n\n            /**\n             * 滚动到距离当前range开始位置 offset 的位置处\n             * @method scrollToView\n             * @param { Window } win 当前range对象所属的window对象\n             * @param { Number } offset 距离range开始位置处的偏移量， 如果为正数， 则向下偏移， 反之， 则向上偏移\n             * @return { UE.dom.Range } 当前Range对象\n             */\n            scrollToView: function (win, offset) {\n                win = win ? window : domUtils.getWindow(this.document);\n                var me = this,\n                    span = me.document.createElement('span');\n                //trace:717\n                span.innerHTML = '&nbsp;';\n                me.cloneRange().insertNode(span);\n                domUtils.scrollToView(span, win, offset);\n                domUtils.remove(span);\n                return me;\n            },\n\n            /**\n             * 判断当前选区内容是否占位符\n             * @private\n             * @method inFillChar\n             * @return { Boolean } 如果是占位符返回true，否则返回false\n             */\n            inFillChar: function () {\n                var start = this.startContainer;\n                if (\n                    this.collapsed &&\n                    start.nodeType == 3 &&\n                    start.nodeValue.replace(new RegExp('^' + domUtils.fillChar), '').length + 1 ==\n                        start.nodeValue.length\n                ) {\n                    return true;\n                }\n                return false;\n            },\n\n            /**\n             * 保存\n             * @method createAddress\n             * @private\n             * @return { Boolean } 返回开始和结束的位置\n             * @example\n             * ```html\n             * <body>\n             *     <p>\n             *         aaaa\n             *         <em>\n             *             <!-- 选区开始 -->\n             *             bbbb\n             *             <!-- 选区结束 -->\n             *         </em>\n             *     </p>\n             *\n             *     <script>\n             *         //output: {startAddress:[0,1,0,0],endAddress:[0,1,0,4]}\n             *         console.log( range.createAddress() );\n             *     </script>\n             * </body>\n             * ```\n             */\n            createAddress: function (ignoreEnd, ignoreTxt) {\n                var addr = {},\n                    me = this;\n\n                function getAddress(isStart) {\n                    var node = isStart ? me.startContainer : me.endContainer;\n                    var parents = domUtils.findParents(node, true, function (node) {\n                            return !domUtils.isBody(node);\n                        }),\n                        addrs = [];\n                    for (var i = 0, ci; (ci = parents[i++]); ) {\n                        addrs.push(domUtils.getNodeIndex(ci, ignoreTxt));\n                    }\n                    var firstIndex = 0;\n\n                    if (ignoreTxt) {\n                        if (node.nodeType == 3) {\n                            var tmpNode = node.previousSibling;\n                            while (tmpNode && tmpNode.nodeType == 3) {\n                                firstIndex += tmpNode.nodeValue.replace(fillCharReg, '').length;\n                                tmpNode = tmpNode.previousSibling;\n                            }\n                            firstIndex += isStart ? me.startOffset : me.endOffset; // - (fillCharReg.test(node.nodeValue) ? 1 : 0 )\n                        } else {\n                            node = node.childNodes[isStart ? me.startOffset : me.endOffset];\n                            if (node) {\n                                firstIndex = domUtils.getNodeIndex(node, ignoreTxt);\n                            } else {\n                                node = isStart ? me.startContainer : me.endContainer;\n                                var first = node.firstChild;\n                                while (first) {\n                                    if (domUtils.isFillChar(first)) {\n                                        first = first.nextSibling;\n                                        continue;\n                                    }\n                                    firstIndex++;\n                                    if (first.nodeType == 3) {\n                                        while (first && first.nodeType == 3) {\n                                            first = first.nextSibling;\n                                        }\n                                    } else {\n                                        first = first.nextSibling;\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        firstIndex = isStart ? (domUtils.isFillChar(node) ? 0 : me.startOffset) : me.endOffset;\n                    }\n                    if (firstIndex < 0) {\n                        firstIndex = 0;\n                    }\n                    addrs.push(firstIndex);\n                    return addrs;\n                }\n                addr.startAddress = getAddress(true);\n                if (!ignoreEnd) {\n                    addr.endAddress = me.collapsed ? [].concat(addr.startAddress) : getAddress();\n                }\n                return addr;\n            },\n\n            /**\n             * 保存\n             * @method createAddress\n             * @private\n             * @return { Boolean } 返回开始和结束的位置\n             * @example\n             * ```html\n             * <body>\n             *     <p>\n             *         aaaa\n             *         <em>\n             *             <!-- 选区开始 -->\n             *             bbbb\n             *             <!-- 选区结束 -->\n             *         </em>\n             *     </p>\n             *\n             *     <script>\n             *         var range = editor.selection.getRange();\n             *         range.moveToAddress({startAddress:[0,1,0,0],endAddress:[0,1,0,4]});\n             *         range.select();\n             *         //output: 'bbbb'\n             *         console.log(editor.selection.getText());\n             *     </script>\n             * </body>\n             * ```\n             */\n            moveToAddress: function (addr, ignoreEnd) {\n                var me = this;\n                function getNode(address, isStart) {\n                    var tmpNode = me.document.body,\n                        parentNode,\n                        offset;\n                    for (var i = 0, ci, l = address.length; i < l; i++) {\n                        ci = address[i];\n                        parentNode = tmpNode;\n                        tmpNode = tmpNode.childNodes[ci];\n                        if (!tmpNode) {\n                            offset = ci;\n                            break;\n                        }\n                    }\n                    if (isStart) {\n                        if (tmpNode) {\n                            me.setStartBefore(tmpNode);\n                        } else {\n                            me.setStart(parentNode, offset);\n                        }\n                    } else {\n                        if (tmpNode) {\n                            me.setEndBefore(tmpNode);\n                        } else {\n                            me.setEnd(parentNode, offset);\n                        }\n                    }\n                }\n                getNode(addr.startAddress, true);\n                !ignoreEnd && addr.endAddress && getNode(addr.endAddress);\n                return me;\n            },\n\n            /**\n             * 判断给定的Range对象是否和当前Range对象表示的是同一个选区\n             * @method equals\n             * @param { UE.dom.Range } 需要判断的Range对象\n             * @return { Boolean } 如果给定的Range对象与当前Range对象表示的是同一个选区， 则返回true， 否则返回false\n             */\n            equals: function (rng) {\n                for (var p in this) {\n                    if (this.hasOwnProperty(p)) {\n                        if (this[p] !== rng[p]) return false;\n                    }\n                }\n                return true;\n            },\n\n            /**\n             * 遍历range内的节点。每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点\n             * 作为其参数。\n             * @method traversal\n             * @param { Function }  doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数\n             * @return { UE.dom.Range } 当前range对象\n             * @example\n             * ```html\n             *\n             * <body>\n             *\n             *     <!-- 选区开始 -->\n             *     <span></span>\n             *     <a></a>\n             *     <!-- 选区结束 -->\n             * </body>\n             *\n             * <script>\n             *\n             *     //output: <span></span><a></a>\n             *     console.log( range.cloneContents() );\n             *\n             *     range.traversal( function ( node ) {\n             *\n             *         if ( node.nodeType === 1 ) {\n             *             node.className = \"test\";\n             *         }\n             *\n             *     } );\n             *\n             *     //output: <span class=\"test\"></span><a class=\"test\"></a>\n             *     console.log( range.cloneContents() );\n             *\n             * </script>\n             * ```\n             */\n\n            /**\n             * 遍历range内的节点。\n             * 每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点\n             * 作为其参数。\n             * 可以通过参数项 filterFn 来指定一个过滤器， 只有符合该过滤器过滤规则的节点才会触\n             * 发doFn函数的执行\n             * @method traversal\n             * @param { Function } doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数\n             * @param { Function } filterFn 过滤器， 该函数接受当前遍历的节点作为参数， 如果该节点满足过滤\n             *                      规则， 请返回true， 该节点会触发doFn， 否则， 请返回false， 则该节点不\n             *                      会触发doFn。\n             * @return { UE.dom.Range } 当前range对象\n             * @see UE.dom.Range:traversal(Function)\n             * @example\n             * ```html\n             *\n             * <body>\n             *\n             *     <!-- 选区开始 -->\n             *     <span></span>\n             *     <a></a>\n             *     <!-- 选区结束 -->\n             * </body>\n             *\n             * <script>\n             *\n             *     //output: <span></span><a></a>\n             *     console.log( range.cloneContents() );\n             *\n             *     range.traversal( function ( node ) {\n             *\n             *         node.className = \"test\";\n             *\n             *     }, function ( node ) {\n             *          return node.nodeType === 1;\n             *     } );\n             *\n             *     //output: <span class=\"test\"></span><a class=\"test\"></a>\n             *     console.log( range.cloneContents() );\n             *\n             * </script>\n             * ```\n             */\n            traversal: function (doFn, filterFn) {\n                if (this.collapsed) return this;\n                var bookmark = this.createBookmark(),\n                    end = bookmark.end,\n                    current = domUtils.getNextDomNode(bookmark.start, false, filterFn);\n                while (current && current !== end && domUtils.getPosition(current, end) & domUtils.POSITION_PRECEDING) {\n                    var tmpNode = domUtils.getNextDomNode(current, false, filterFn);\n                    doFn(current);\n                    current = tmpNode;\n                }\n                return this.moveToBookmark(bookmark);\n            }\n        };\n    })();\n\n    // core/Selection.js\n    /**\n     * 选集\n     * @file\n     * @module UE.dom\n     * @class Selection\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 选区集合\n     * @unfile\n     * @module UE.dom\n     * @class Selection\n     */\n    (function () {\n        function getBoundaryInformation(range, start) {\n            var getIndex = domUtils.getNodeIndex;\n            range = range.duplicate();\n            range.collapse(start);\n            var parent = range.parentElement();\n            //如果节点里没有子节点，直接退出\n            if (!parent.hasChildNodes()) {\n                return { container: parent, offset: 0 };\n            }\n            var siblings = parent.children,\n                child,\n                testRange = range.duplicate(),\n                startIndex = 0,\n                endIndex = siblings.length - 1,\n                index = -1,\n                distance;\n            while (startIndex <= endIndex) {\n                index = Math.floor((startIndex + endIndex) / 2);\n                child = siblings[index];\n                testRange.moveToElementText(child);\n                var position = testRange.compareEndPoints('StartToStart', range);\n                if (position > 0) {\n                    endIndex = index - 1;\n                } else if (position < 0) {\n                    startIndex = index + 1;\n                } else {\n                    //trace:1043\n                    return { container: parent, offset: getIndex(child) };\n                }\n            }\n            if (index == -1) {\n                testRange.moveToElementText(parent);\n                testRange.setEndPoint('StartToStart', range);\n                distance = testRange.text.replace(/(\\r\\n|\\r)/g, '\\n').length;\n                siblings = parent.childNodes;\n                if (!distance) {\n                    child = siblings[siblings.length - 1];\n                    return { container: child, offset: child.nodeValue.length };\n                }\n\n                var i = siblings.length;\n                while (distance > 0) {\n                    distance -= siblings[--i].nodeValue.length;\n                }\n                return { container: siblings[i], offset: -distance };\n            }\n            testRange.collapse(position > 0);\n            testRange.setEndPoint(position > 0 ? 'StartToStart' : 'EndToStart', range);\n            distance = testRange.text.replace(/(\\r\\n|\\r)/g, '\\n').length;\n            if (!distance) {\n                return dtd.$empty[child.tagName] || dtd.$nonChild[child.tagName]\n                    ? { container: parent, offset: getIndex(child) + (position > 0 ? 0 : 1) }\n                    : { container: child, offset: position > 0 ? 0 : child.childNodes.length };\n            }\n            while (distance > 0) {\n                try {\n                    var pre = child;\n                    child = child[position > 0 ? 'previousSibling' : 'nextSibling'];\n                    distance -= child.nodeValue.length;\n                } catch (e) {\n                    return { container: parent, offset: getIndex(pre) };\n                }\n            }\n            return { container: child, offset: position > 0 ? -distance : child.nodeValue.length + distance };\n        }\n\n        /**\n         * 将ieRange转换为Range对象\n         * @param {Range}   ieRange    ieRange对象\n         * @param {Range}   range      Range对象\n         * @return  {Range}  range       返回转换后的Range对象\n         */\n        function transformIERangeToRange(ieRange, range) {\n            if (ieRange.item) {\n                range.selectNode(ieRange.item(0));\n            } else {\n                var bi = getBoundaryInformation(ieRange, true);\n                range.setStart(bi.container, bi.offset);\n                if (ieRange.compareEndPoints('StartToEnd', ieRange) != 0) {\n                    bi = getBoundaryInformation(ieRange, false);\n                    range.setEnd(bi.container, bi.offset);\n                }\n            }\n            return range;\n        }\n\n        /**\n         * 获得ieRange\n         * @param {Selection} sel    Selection对象\n         * @return {ieRange}    得到ieRange\n         */\n        function _getIERange(sel) {\n            var ieRange;\n            //ie下有可能报错\n            try {\n                ieRange = sel.getNative().createRange();\n            } catch (e) {\n                return null;\n            }\n            var el = ieRange.item ? ieRange.item(0) : ieRange.parentElement();\n            if ((el.ownerDocument || el) === sel.document) {\n                return ieRange;\n            }\n            return null;\n        }\n\n        var Selection = (dom.Selection = function (doc) {\n            var me = this,\n                iframe;\n            me.document = doc;\n            if (browser.ie9below) {\n                iframe = domUtils.getWindow(doc).frameElement;\n                domUtils.on(iframe, 'beforedeactivate', function () {\n                    me._bakIERange = me.getIERange();\n                });\n                domUtils.on(iframe, 'activate', function () {\n                    try {\n                        if (!_getIERange(me) && me._bakIERange) {\n                            me._bakIERange.select();\n                        }\n                    } catch (ex) {}\n                    me._bakIERange = null;\n                });\n            }\n            iframe = doc = null;\n        });\n\n        Selection.prototype = {\n            rangeInBody: function (rng, txtRange) {\n                var node =\n                    browser.ie9below || txtRange ? (rng.item ? rng.item() : rng.parentElement()) : rng.startContainer;\n\n                return node === this.document.body || domUtils.inDoc(node, this.document);\n            },\n\n            /**\n             * 获取原生seleciton对象\n             * @method getNative\n             * @return { Object } 获得selection对象\n             * @example\n             * ```javascript\n             * editor.selection.getNative();\n             * ```\n             */\n            getNative: function () {\n                var doc = this.document;\n                try {\n                    return !doc ? null : browser.ie9below ? doc.selection : domUtils.getWindow(doc).getSelection();\n                } catch (e) {\n                    return null;\n                }\n            },\n\n            /**\n             * 获得ieRange\n             * @method getIERange\n             * @return { Object } 返回ie原生的Range\n             * @example\n             * ```javascript\n             * editor.selection.getIERange();\n             * ```\n             */\n            getIERange: function () {\n                var ieRange = _getIERange(this);\n                if (!ieRange) {\n                    if (this._bakIERange) {\n                        return this._bakIERange;\n                    }\n                }\n                return ieRange;\n            },\n\n            /**\n             * 缓存当前选区的range和选区的开始节点\n             * @method cache\n             */\n            cache: function () {\n                this.clear();\n                this._cachedRange = this.getRange();\n                this._cachedStartElement = this.getStart();\n                this._cachedStartElementPath = this.getStartElementPath();\n            },\n\n            /**\n             * 获取选区开始位置的父节点到body\n             * @method getStartElementPath\n             * @return { Array } 返回父节点集合\n             * @example\n             * ```javascript\n             * editor.selection.getStartElementPath();\n             * ```\n             */\n            getStartElementPath: function () {\n                if (this._cachedStartElementPath) {\n                    return this._cachedStartElementPath;\n                }\n                var start = this.getStart();\n                if (start) {\n                    return domUtils.findParents(start, true, null, true);\n                }\n                return [];\n            },\n\n            /**\n             * 清空缓存\n             * @method clear\n             */\n            clear: function () {\n                this._cachedStartElementPath = this._cachedRange = this._cachedStartElement = null;\n            },\n\n            /**\n             * 编辑器是否得到了选区\n             * @method isFocus\n             */\n            isFocus: function () {\n                try {\n                    if (browser.ie9below) {\n                        var nativeRange = _getIERange(this);\n                        return !!(nativeRange && this.rangeInBody(nativeRange));\n                    } else {\n                        return !!this.getNative().rangeCount;\n                    }\n                } catch (e) {\n                    return false;\n                }\n            },\n\n            /**\n             * 获取选区对应的Range\n             * @method getRange\n             * @return { Object } 得到Range对象\n             * @example\n             * ```javascript\n             * editor.selection.getRange();\n             * ```\n             */\n            getRange: function () {\n                var me = this;\n                function optimze(range) {\n                    var child = me.document.body.firstChild,\n                        collapsed = range.collapsed;\n                    while (child && child.firstChild) {\n                        range.setStart(child, 0);\n                        child = child.firstChild;\n                    }\n                    if (!range.startContainer) {\n                        range.setStart(me.document.body, 0);\n                    }\n                    if (collapsed) {\n                        range.collapse(true);\n                    }\n                }\n\n                if (me._cachedRange != null) {\n                    return this._cachedRange;\n                }\n                var range = new baidu.editor.dom.Range(me.document);\n\n                if (browser.ie9below) {\n                    var nativeRange = me.getIERange();\n                    if (nativeRange) {\n                        //备份的_bakIERange可能已经实效了，dom树发生了变化比如从源码模式切回来，所以try一下，实效就放到body开始位置\n                        try {\n                            transformIERangeToRange(nativeRange, range);\n                        } catch (e) {\n                            optimze(range);\n                        }\n                    } else {\n                        optimze(range);\n                    }\n                } else {\n                    var sel = me.getNative();\n                    if (sel && sel.rangeCount) {\n                        var firstRange = sel.getRangeAt(0);\n                        var lastRange = sel.getRangeAt(sel.rangeCount - 1);\n                        range\n                            .setStart(firstRange.startContainer, firstRange.startOffset)\n                            .setEnd(lastRange.endContainer, lastRange.endOffset);\n                        if (range.collapsed && domUtils.isBody(range.startContainer) && !range.startOffset) {\n                            optimze(range);\n                        }\n                    } else {\n                        //trace:1734 有可能已经不在dom树上了，标识的节点\n                        if (this._bakRange && domUtils.inDoc(this._bakRange.startContainer, this.document)) {\n                            return this._bakRange;\n                        }\n                        optimze(range);\n                    }\n                }\n                return (this._bakRange = range);\n            },\n\n            /**\n             * 获取开始元素，用于状态反射\n             * @method getStart\n             * @return { Element } 获得开始元素\n             * @example\n             * ```javascript\n             * editor.selection.getStart();\n             * ```\n             */\n            getStart: function () {\n                if (this._cachedStartElement) {\n                    return this._cachedStartElement;\n                }\n                var range = browser.ie9below ? this.getIERange() : this.getRange(),\n                    tmpRange,\n                    start,\n                    tmp,\n                    parent;\n                if (browser.ie9below) {\n                    if (!range) {\n                        //todo 给第一个值可能会有问题\n                        return this.document.body.firstChild;\n                    }\n                    //control元素\n                    if (range.item) {\n                        return range.item(0);\n                    }\n                    tmpRange = range.duplicate();\n                    //修正ie下<b>x</b>[xx] 闭合后 <b>x|</b>xx\n                    tmpRange.text.length > 0 && tmpRange.moveStart('character', 1);\n                    tmpRange.collapse(1);\n                    start = tmpRange.parentElement();\n                    parent = tmp = range.parentElement();\n                    while ((tmp = tmp.parentNode)) {\n                        if (tmp == start) {\n                            start = parent;\n                            break;\n                        }\n                    }\n                } else {\n                    range.shrinkBoundary();\n                    start = range.startContainer;\n                    if (start.nodeType == 1 && start.hasChildNodes()) {\n                        start = start.childNodes[Math.min(start.childNodes.length - 1, range.startOffset)];\n                    }\n                    if (start.nodeType == 3) {\n                        return start.parentNode;\n                    }\n                }\n                return start;\n            },\n\n            /**\n             * 得到选区中的文本\n             * @method getText\n             * @return { String } 选区中包含的文本\n             * @example\n             * ```javascript\n             * editor.selection.getText();\n             * ```\n             */\n            getText: function () {\n                var nativeSel, nativeRange;\n                if (this.isFocus() && (nativeSel = this.getNative())) {\n                    nativeRange = browser.ie9below ? nativeSel.createRange() : nativeSel.getRangeAt(0);\n                    return browser.ie9below ? nativeRange.text : nativeRange.toString();\n                }\n                return '';\n            },\n\n            /**\n             * 清除选区\n             * @method clearRange\n             * @example\n             * ```javascript\n             * editor.selection.clearRange();\n             * ```\n             */\n            clearRange: function () {\n                this.getNative()[browser.ie9below ? 'empty' : 'removeAllRanges']();\n            }\n        };\n    })();\n\n    // core/Editor.js\n    /**\n     * 编辑器主类，包含编辑器提供的大部分公用接口\n     * @file\n     * @module UE\n     * @class Editor\n     * @since 1.2.6.1\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @unfile\n     * @module UE\n     */\n\n    /**\n     * UEditor的核心类，为用户提供与编辑器交互的接口。\n     * @unfile\n     * @module UE\n     * @class Editor\n     */\n\n    (function () {\n        var uid = 0,\n            _selectionChangeTimer;\n\n        /**\n         * 获取编辑器的html内容，赋值到编辑器所在表单的textarea文本域里面\n         * @private\n         * @method setValue\n         * @param { UE.Editor } editor 编辑器事例\n         */\n        function setValue(form, editor) {\n            var textarea;\n            if (editor.textarea) {\n                if (utils.isString(editor.textarea)) {\n                    for (var i = 0, ti, tis = domUtils.getElementsByTagName(form, 'textarea'); (ti = tis[i++]); ) {\n                        if (ti.id == 'ueditor_textarea_' + editor.options.textarea) {\n                            textarea = ti;\n                            break;\n                        }\n                    }\n                } else {\n                    textarea = editor.textarea;\n                }\n            }\n            if (!textarea) {\n                form.appendChild(\n                    (textarea = domUtils.createElement(document, 'textarea', {\n                        name: editor.options.textarea,\n                        id: 'ueditor_textarea_' + editor.options.textarea,\n                        style: 'display:none'\n                    }))\n                );\n                //不要产生多个textarea\n                editor.textarea = textarea;\n            }\n            !textarea.getAttribute('name') && textarea.setAttribute('name', editor.options.textarea);\n            textarea.value = editor.hasContents()\n                ? editor.options.allHtmlEnabled\n                    ? editor.getAllHtml()\n                    : editor.getContent(null, null, true)\n                : '';\n        }\n        function loadPlugins(me) {\n            //初始化插件\n            for (var pi in UE.plugins) {\n                UE.plugins[pi].call(me);\n            }\n        }\n        function checkCurLang(I18N) {\n            for (var lang in I18N) {\n                return lang;\n            }\n        }\n\n        function langReadied(me) {\n            me.langIsReady = true;\n\n            me.fireEvent('langReady');\n        }\n\n        /**\n         * 编辑器准备就绪后会触发该事件\n         * @module UE\n         * @class Editor\n         * @event ready\n         * @remind render方法执行完成之后,会触发该事件\n         * @remind\n         * @example\n         * ```javascript\n         * editor.addListener( 'ready', function( editor ) {\n         *     editor.execCommand( 'focus' ); //编辑器家在完成后，让编辑器拿到焦点\n         * } );\n         * ```\n         */\n        /**\n         * 执行destroy方法,会触发该事件\n         * @module UE\n         * @class Editor\n         * @event destroy\n         * @see UE.Editor:destroy()\n         */\n        /**\n         * 执行reset方法,会触发该事件\n         * @module UE\n         * @class Editor\n         * @event reset\n         * @see UE.Editor:reset()\n         */\n        /**\n         * 执行focus方法,会触发该事件\n         * @module UE\n         * @class Editor\n         * @event focus\n         * @see UE.Editor:focus(Boolean)\n         */\n        /**\n         * 语言加载完成会触发该事件\n         * @module UE\n         * @class Editor\n         * @event langReady\n         */\n        /**\n         * 运行命令之后会触发该命令\n         * @module UE\n         * @class Editor\n         * @event beforeExecCommand\n         */\n        /**\n         * 运行命令之后会触发该命令\n         * @module UE\n         * @class Editor\n         * @event afterExecCommand\n         */\n        /**\n         * 运行命令之前会触发该命令\n         * @module UE\n         * @class Editor\n         * @event firstBeforeExecCommand\n         */\n        /**\n         * 在getContent方法执行之前会触发该事件\n         * @module UE\n         * @class Editor\n         * @event beforeGetContent\n         * @see UE.Editor:getContent()\n         */\n        /**\n         * 在getContent方法执行之后会触发该事件\n         * @module UE\n         * @class Editor\n         * @event afterGetContent\n         * @see UE.Editor:getContent()\n         */\n        /**\n         * 在getAllHtml方法执行时会触发该事件\n         * @module UE\n         * @class Editor\n         * @event getAllHtml\n         * @see UE.Editor:getAllHtml()\n         */\n        /**\n         * 在setContent方法执行之前会触发该事件\n         * @module UE\n         * @class Editor\n         * @event beforeSetContent\n         * @see UE.Editor:setContent(String)\n         */\n        /**\n         * 在setContent方法执行之后会触发该事件\n         * @module UE\n         * @class Editor\n         * @event afterSetContent\n         * @see UE.Editor:setContent(String)\n         */\n        /**\n         * 每当编辑器内部选区发生改变时，将触发该事件\n         * @event selectionchange\n         * @warning 该事件的触发非常频繁，不建议在该事件的处理过程中做重量级的处理\n         * @example\n         * ```javascript\n         * editor.addListener( 'selectionchange', function( editor ) {\n         *     console.log('选区发生改变');\n         * }\n         */\n        /**\n         * 在所有selectionchange的监听函数执行之前，会触发该事件\n         * @module UE\n         * @class Editor\n         * @event beforeSelectionChange\n         * @see UE.Editor:selectionchange\n         */\n        /**\n         * 在所有selectionchange的监听函数执行完之后，会触发该事件\n         * @module UE\n         * @class Editor\n         * @event afterSelectionChange\n         * @see UE.Editor:selectionchange\n         */\n        /**\n         * 编辑器内容发生改变时会触发该事件\n         * @module UE\n         * @class Editor\n         * @event contentChange\n         */\n\n        /**\n         * 以默认参数构建一个编辑器实例\n         * @constructor\n         * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面\n         * @example\n         * ```javascript\n         * var editor = new UE.Editor();\n         * editor.execCommand('blod');\n         * ```\n         * @see UE.Config\n         */\n\n        /**\n         * 以给定的参数集合创建一个编辑器实例，对于未指定的参数，将应用默认参数。\n         * @constructor\n         * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面\n         * @param { Object } setting 创建编辑器的参数\n         * @example\n         * ```javascript\n         * var editor = new UE.Editor();\n         * editor.execCommand('blod');\n         * ```\n         * @see UE.Config\n         */\n        var Editor = (UE.Editor = function (options) {\n            var me = this;\n            me.uid = uid++;\n            EventBase.call(me);\n            me.commands = {};\n            me.options = utils.extend(utils.clone(options || {}), UEDITOR_CONFIG, true);\n            me.shortcutkeys = {};\n            me.inputRules = [];\n            me.outputRules = [];\n            //设置默认的常用属性\n            me.setOpt(Editor.defaultOptions(me));\n\n            /* 尝试异步加载后台配置 */\n            me.loadServerConfig();\n\n            if (!utils.isEmptyObject(UE.I18N)) {\n                //修改默认的语言类型\n                me.options.lang = checkCurLang(UE.I18N);\n                UE.plugin.load(me);\n                langReadied(me);\n            } else {\n                utils.loadFile(\n                    document,\n                    {\n                        src: me.options.langPath + me.options.lang + '/' + me.options.lang + '.js',\n                        tag: 'script',\n                        type: 'text/javascript',\n                        defer: 'defer'\n                    },\n                    function () {\n                        UE.plugin.load(me);\n                        langReadied(me);\n                    }\n                );\n            }\n\n            UE.instants['ueditorInstant' + me.uid] = me;\n        });\n        Editor.prototype = {\n            registerCommand: function (name, obj) {\n                this.commands[name] = obj;\n            },\n            /**\n             * 编辑器对外提供的监听ready事件的接口， 通过调用该方法，达到的效果与监听ready事件是一致的\n             * @method ready\n             * @param { Function } fn 编辑器ready之后所执行的回调, 如果在注册事件之前编辑器已经ready，将会\n             * 立即触发该回调。\n             * @remind 需要等待编辑器加载完成后才能执行的代码,可以使用该方法传入\n             * @example\n             * ```javascript\n             * editor.ready( function( editor ) {\n             *     editor.setContent('初始化完毕');\n             * } );\n             * ```\n             * @see UE.Editor.event:ready\n             */\n            ready: function (fn) {\n                var me = this;\n                if (fn) {\n                    me.isReady ? fn.apply(me) : me.addListener('ready', fn);\n                }\n            },\n\n            /**\n             * 该方法是提供给插件里面使用，设置配置项默认值\n             * @method setOpt\n             * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置\n             * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。\n             * @param { String } key 编辑器的可接受的选项名称\n             * @param { * } val  该选项可接受的值\n             * @example\n             * ```javascript\n             * editor.setOpt( 'initContent', '欢迎使用编辑器' );\n             * ```\n             */\n\n            /**\n             * 该方法是提供给插件里面使用，以{key:value}集合的方式设置插件内用到的配置项默认值\n             * @method setOpt\n             * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置\n             * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。\n             * @param { Object } options 将要设置的选项的键值对对象\n             * @example\n             * ```javascript\n             * editor.setOpt( {\n             *     'initContent': '欢迎使用编辑器'\n             * } );\n             * ```\n             */\n            setOpt: function (key, val) {\n                var obj = {};\n                if (utils.isString(key)) {\n                    obj[key] = val;\n                } else {\n                    obj = key;\n                }\n                utils.extend(this.options, obj, true);\n            },\n            getOpt: function (key) {\n                return this.options[key];\n            },\n            /**\n             * 销毁编辑器实例，使用textarea代替\n             * @method destroy\n             * @example\n             * ```javascript\n             * editor.destroy();\n             * ```\n             */\n            destroy: function () {\n                var me = this;\n                me.fireEvent('destroy');\n                var container = me.container.parentNode;\n                var textarea = me.textarea;\n                if (!textarea) {\n                    textarea = document.createElement('textarea');\n                    container.parentNode.insertBefore(textarea, container);\n                } else {\n                    textarea.style.display = '';\n                }\n\n                textarea.style.width = me.iframe.offsetWidth + 'px';\n                textarea.style.height = me.iframe.offsetHeight + 'px';\n                textarea.value = me.getContent();\n                textarea.id = me.key;\n                container.innerHTML = '';\n                domUtils.remove(container);\n                var key = me.key;\n                //trace:2004\n                for (var p in me) {\n                    if (me.hasOwnProperty(p)) {\n                        delete this[p];\n                    }\n                }\n                UE.delEditor(key);\n            },\n\n            /**\n             * 渲染编辑器的DOM到指定容器\n             * @method render\n             * @param { String } containerId 指定一个容器ID\n             * @remind 执行该方法,会触发ready事件\n             * @warning 必须且只能调用一次\n             */\n\n            /**\n             * 渲染编辑器的DOM到指定容器\n             * @method render\n             * @param { Element } containerDom 直接指定容器对象\n             * @remind 执行该方法,会触发ready事件\n             * @warning 必须且只能调用一次\n             */\n            render: function (container) {\n                var me = this,\n                    options = me.options,\n                    getStyleValue = function (attr) {\n                        return parseInt(domUtils.getComputedStyle(container, attr));\n                    };\n                if (utils.isString(container)) {\n                    container = document.getElementById(container);\n                }\n                if (container) {\n                    if (options.initialFrameWidth) {\n                        options.minFrameWidth = options.initialFrameWidth;\n                    } else {\n                        options.minFrameWidth = options.initialFrameWidth = container.offsetWidth;\n                    }\n                    if (options.initialFrameHeight) {\n                        options.minFrameHeight = options.initialFrameHeight;\n                    } else {\n                        options.initialFrameHeight = options.minFrameHeight = container.offsetHeight;\n                    }\n\n                    container.style.width = /%$/.test(options.initialFrameWidth)\n                        ? '100%'\n                        : options.initialFrameWidth -\n                          getStyleValue('padding-left') -\n                          getStyleValue('padding-right') +\n                          'px';\n                    container.style.height = /%$/.test(options.initialFrameHeight)\n                        ? '100%'\n                        : options.initialFrameHeight -\n                          getStyleValue('padding-top') -\n                          getStyleValue('padding-bottom') +\n                          'px';\n\n                    container.style.zIndex = options.zIndex;\n\n                    var localLang = window.Lang == 'ja-jp' ? 'locale-jp' : '';\n\n                    var html =\n                        (ie && browser.version < 9 ? '' : '<!DOCTYPE html>') +\n                        \"<html xmlns='http://www.w3.org/1999/xhtml' class='view \" +\n                        localLang +\n                        \"' ><head>\" +\n                        \"<style type='text/css'>\" +\n                        //设置四周的留边\n                        '.view{padding:0;word-wrap:break-word;cursor:text;height:90%;}\\n' +\n                        \".view.locale-jp body{font-family: 'noto_sansregular', 'hiragino kaku gothic pro', 'MS Gothic', 'meiryo', Arial, 'Hiragino Sans GB';}\\n\" +\n                        //设置默认字体和字号\n                        //font-family不能呢随便改，在safari下fillchar会有解析问题\n                        'body{margin:8px;font-family:sans-serif;font-size:16px;}' +\n                        //设置段落间距\n                        'p{margin:5px 0;}</style>' +\n                        (options.iframeCssUrl\n                            ? \"<link rel='stylesheet' type='text/css' href='\" +\n                              utils.unhtml(options.iframeCssUrl) +\n                              \"'/>\"\n                            : '') +\n                        (options.initialStyle ? '<style>' + options.initialStyle + '</style>' : '') +\n                        \"</head><body class='view' ></body>\" +\n                        \"<script type='text/javascript' \" +\n                        (ie ? \"defer='defer'\" : '') +\n                        \" id='_initialScript'>\" +\n                        \"setTimeout(function(){editor = window.parent.UE.instants['ueditorInstant\" +\n                        me.uid +\n                        \"'];editor._setup(document);},0);\" +\n                        \"var _tmpScript = document.getElementById('_initialScript');_tmpScript.parentNode.removeChild(_tmpScript);</script></html>\";\n                    container.appendChild(\n                        domUtils.createElement(document, 'iframe', {\n                            id: 'ueditor_' + me.uid,\n                            width: '100%',\n                            height: '100%',\n                            frameborder: '0',\n                            //先注释掉了，加的原因忘记了，但开启会直接导致全屏模式下内容多时不会出现滚动条\n                            //                    scrolling :'no',\n                            src:\n                                'javascript:void(function(){document.open();' +\n                                (options.customDomain && document.domain != location.hostname\n                                    ? 'document.domain=\"' + document.domain + '\";'\n                                    : '') +\n                                'document.write(\"' +\n                                html +\n                                '\");document.close();}())'\n                        })\n                    );\n                    container.style.overflow = 'hidden';\n                    //解决如果是给定的百分比，会导致高度算不对的问题\n                    setTimeout(function () {\n                        if (/%$/.test(options.initialFrameWidth)) {\n                            options.minFrameWidth = options.initialFrameWidth = container.offsetWidth;\n                            //如果这里给定宽度，会导致ie在拖动窗口大小时，编辑区域不随着变化\n                            //                        container.style.width = options.initialFrameWidth + 'px';\n                        }\n                        if (/%$/.test(options.initialFrameHeight)) {\n                            options.minFrameHeight = options.initialFrameHeight = container.offsetHeight;\n                            container.style.height = options.initialFrameHeight + 'px';\n                        }\n                    });\n                }\n            },\n\n            /**\n             * 编辑器初始化\n             * @method _setup\n             * @private\n             * @param { Element } doc 编辑器Iframe中的文档对象\n             */\n\n            _setup: function (doc) {\n                var me = this,\n                    options = me.options;\n                if (ie) {\n                    doc.body.disabled = true;\n                    doc.body.contentEditable = true;\n                    doc.body.disabled = false;\n                } else {\n                    doc.body.contentEditable = true;\n                }\n                doc.body.spellcheck = false;\n                me.document = doc;\n                me.window = doc.defaultView || doc.parentWindow;\n                me.iframe = me.window.frameElement;\n                me.body = doc.body;\n                me.selection = new dom.Selection(doc);\n                //gecko初始化就能得到range,无法判断isFocus了\n                var geckoSel;\n                if (browser.gecko && (geckoSel = this.selection.getNative())) {\n                    geckoSel.removeAllRanges();\n                }\n                this._initEvents();\n                //为form提交提供一个隐藏的textarea\n                for (var form = this.iframe.parentNode; !domUtils.isBody(form); form = form.parentNode) {\n                    if (form.tagName == 'FORM') {\n                        me.form = form;\n                        if (me.options.autoSyncData) {\n                            domUtils.on(me.window, 'blur', function () {\n                                setValue(form, me);\n                            });\n                        } else {\n                            domUtils.on(form, 'submit', function () {\n                                setValue(this, me);\n                            });\n                        }\n                        break;\n                    }\n                }\n                if (options.initialContent) {\n                    if (options.autoClearinitialContent) {\n                        var oldExecCommand = me.execCommand;\n                        me.execCommand = function () {\n                            me.fireEvent('firstBeforeExecCommand');\n                            return oldExecCommand.apply(me, arguments);\n                        };\n                        this._setDefaultContent(options.initialContent);\n                    } else this.setContent(options.initialContent, false, true);\n                }\n\n                //编辑器不能为空内容\n\n                if (domUtils.isEmptyNode(me.body)) {\n                    me.body.innerHTML = '<p>' + (browser.ie ? '' : '<br/>') + '</p>';\n                }\n                //如果要求focus, 就把光标定位到内容开始\n                if (options.focus) {\n                    setTimeout(function () {\n                        me.focus(me.options.focusInEnd);\n                        //如果自动清除开着，就不需要做selectionchange;\n                        !me.options.autoClearinitialContent && me._selectionChange();\n                    }, 0);\n                }\n                if (!me.container) {\n                    me.container = this.iframe.parentNode;\n                }\n                if (options.fullscreen && me.ui) {\n                    me.ui.setFullScreen(true);\n                }\n\n                try {\n                    me.document.execCommand('2D-position', false, false);\n                } catch (e) {}\n                try {\n                    me.document.execCommand('enableInlineTableEditing', false, false);\n                } catch (e) {}\n                try {\n                    me.document.execCommand('enableObjectResizing', false, false);\n                } catch (e) {}\n\n                //挂接快捷键\n                me._bindshortcutKeys();\n                me.isReady = 1;\n                me.fireEvent('ready');\n                options.onready && options.onready.call(me);\n                if (!browser.ie9below) {\n                    domUtils.on(me.window, ['blur', 'focus'], function (e) {\n                        //chrome下会出现alt+tab切换时，导致选区位置不对\n                        if (e.type == 'blur') {\n                            me._bakRange = me.selection.getRange();\n                            try {\n                                me._bakNativeRange = me.selection.getNative().getRangeAt(0);\n                                me.selection.getNative().removeAllRanges();\n                            } catch (e) {\n                                me._bakNativeRange = null;\n                            }\n                        } else {\n                            try {\n                                me._bakRange && me._bakRange.select();\n                            } catch (e) {}\n                        }\n                    });\n                }\n                //trace:1518 ff3.6body不够寛，会导致点击空白处无法获得焦点\n                if (browser.gecko && browser.version <= 10902) {\n                    //修复ff3.6初始化进来，不能点击获得焦点\n                    me.body.contentEditable = false;\n                    setTimeout(function () {\n                        me.body.contentEditable = true;\n                    }, 100);\n                    setInterval(function () {\n                        me.body.style.height = me.iframe.offsetHeight - 20 + 'px';\n                    }, 100);\n                }\n\n                !options.isShow && me.setHide();\n                options.readonly && me.setDisabled();\n            },\n\n            /**\n             * 同步数据到编辑器所在的form\n             * 从编辑器的容器节点向上查找form元素，若找到，就同步编辑内容到找到的form里，为提交数据做准备，主要用于是手动提交的情况\n             * 后台取得数据的键值，使用你容器上的name属性，如果没有就使用参数里的textarea项\n             * @method sync\n             * @example\n             * ```javascript\n             * editor.sync();\n             * form.sumbit(); //form变量已经指向了form元素\n             * ```\n             */\n\n            /**\n             * 根据传入的formId，在页面上查找要同步数据的表单，若找到，就同步编辑内容到找到的form里，为提交数据做准备\n             * 后台取得数据的键值，该键值默认使用给定的编辑器容器的name属性，如果没有name属性则使用参数项里给定的“textarea”项\n             * @method sync\n             * @param { String } formID 指定一个要同步数据的form的id,编辑器的数据会同步到你指定form下\n             */\n            sync: function (formId) {\n                var me = this,\n                    form = formId\n                        ? document.getElementById(formId)\n                        : domUtils.findParent(\n                              me.iframe.parentNode,\n                              function (node) {\n                                  return node.tagName == 'FORM';\n                              },\n                              true\n                          );\n                form && setValue(form, me);\n            },\n\n            /**\n             * 设置编辑器高度\n             * @method setHeight\n             * @remind 当配置项autoHeightEnabled为真时,该方法无效\n             * @param { Number } number 设置的高度值，纯数值，不带单位\n             * @example\n             * ```javascript\n             * editor.setHeight(number);\n             * ```\n             */\n            setHeight: function (height, notSetHeight) {\n                if (height !== parseInt(this.iframe.parentNode.style.height)) {\n                    this.iframe.parentNode.style.height = height + 'px';\n                }\n                !notSetHeight && (this.options.minFrameHeight = this.options.initialFrameHeight = height);\n                this.body.style.height = height + 'px';\n                !notSetHeight && this.trigger('setHeight');\n            },\n\n            /**\n             * 为编辑器的编辑命令提供快捷键\n             * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口\n             * @method addshortcutkey\n             * @param { Object } keyset 命令名和快捷键键值对对象，多个按钮的快捷键用“＋”分隔\n             * @example\n             * ```javascript\n             * editor.addshortcutkey({\n             *     \"Bold\" : \"ctrl+66\",//^B\n             *     \"Italic\" : \"ctrl+73\", //^I\n             * });\n             * ```\n             */\n            /**\n             * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口\n             * @method addshortcutkey\n             * @param { String } cmd 触发快捷键时，响应的命令\n             * @param { String } keys 快捷键的字符串，多个按钮用“＋”分隔\n             * @example\n             * ```javascript\n             * editor.addshortcutkey(\"Underline\", \"ctrl+85\"); //^U\n             * ```\n             */\n            addshortcutkey: function (cmd, keys) {\n                var obj = {};\n                if (keys) {\n                    obj[cmd] = keys;\n                } else {\n                    obj = cmd;\n                }\n                utils.extend(this.shortcutkeys, obj);\n            },\n\n            /**\n             * 对编辑器设置keydown事件监听，绑定快捷键和命令，当快捷键组合触发成功，会响应对应的命令\n             * @method _bindshortcutKeys\n             * @private\n             */\n            _bindshortcutKeys: function () {\n                var me = this,\n                    shortcutkeys = this.shortcutkeys;\n                me.addListener('keydown', function (type, e) {\n                    var keyCode = e.keyCode || e.which;\n                    for (var i in shortcutkeys) {\n                        var tmp = shortcutkeys[i].split(',');\n                        for (var t = 0, ti; (ti = tmp[t++]); ) {\n                            ti = ti.split(':');\n                            var key = ti[0],\n                                param = ti[1];\n                            if (/^(ctrl)(\\+shift)?\\+(\\d+)$/.test(key.toLowerCase()) || /^(\\d+)$/.test(key)) {\n                                if (\n                                    ((RegExp.$1 == 'ctrl' ? e.ctrlKey || e.metaKey : 0) &&\n                                        (RegExp.$2 != '' ? e[RegExp.$2.slice(1) + 'Key'] : 1) &&\n                                        keyCode == RegExp.$3) ||\n                                    keyCode == RegExp.$1\n                                ) {\n                                    if (me.queryCommandState(i, param) != -1) me.execCommand(i, param);\n                                    domUtils.preventDefault(e);\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            /**\n             * 获取编辑器的内容\n             * @method getContent\n             * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容\n             * @return { String } 编辑器的内容字符串, 如果编辑器的内容为空，或者是空的标签内容（如:”&lt;p&gt;&lt;br/&gt;&lt;/p&gt;“）， 则返回空字符串\n             * @example\n             * ```javascript\n             * //编辑器html内容:<p>1<strong>2<em>34</em>5</strong>6</p>\n             * var content = editor.getContent(); //返回值:<p>1<strong>2<em>34</em>5</strong>6</p>\n             * ```\n             */\n\n            /**\n             * 获取编辑器的内容。 可以通过参数定义编辑器内置的判空规则\n             * @method getContent\n             * @param { Function } fn 自定的判空规则， 要求该方法返回一个boolean类型的值，\n             *                      代表当前编辑器的内容是否空，\n             *                      如果返回true， 则该方法将直接返回空字符串；如果返回false，则编辑器将返回\n             *                      经过内置过滤规则处理后的内容。\n             * @remind 该方法在处理包含有初始化内容的时候能起到很好的作用。\n             * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容\n             * @return { String } 编辑器的内容字符串\n             * @example\n             * ```javascript\n             * // editor 是一个编辑器的实例\n             * var content = editor.getContent( function ( editor ) {\n             *      return editor.body.innerHTML === '欢迎使用UEditor'; //返回空字符串\n             * } );\n             * ```\n             */\n            getContent: function (cmd, fn, notSetCursor, ignoreBlank, formatter) {\n                var me = this;\n                if (cmd && utils.isFunction(cmd)) {\n                    fn = cmd;\n                    cmd = '';\n                }\n                if (fn ? !fn() : !this.hasContents()) {\n                    return '';\n                }\n                me.fireEvent('beforegetcontent');\n                var root = UE.htmlparser(me.body.innerHTML, ignoreBlank);\n                me.filterOutputRule(root);\n                me.fireEvent('aftergetcontent', cmd, root);\n                return root.toHtml(formatter);\n            },\n\n            /**\n             * 取得完整的html代码，可以直接显示成完整的html文档\n             * @method getAllHtml\n             * @return { String } 编辑器的内容html文档字符串\n             * @eaxmple\n             * ```javascript\n             * editor.getAllHtml(); //返回格式大致是: <html><head>...</head><body>...</body></html>\n             * ```\n             */\n            getAllHtml: function () {\n                var me = this,\n                    headHtml = [],\n                    html = '';\n                me.fireEvent('getAllHtml', headHtml);\n                if (browser.ie && browser.version > 8) {\n                    var headHtmlForIE9 = '';\n                    utils.each(me.document.styleSheets, function (si) {\n                        headHtmlForIE9 += si.href\n                            ? '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + si.href + '\" />'\n                            : '<style>' + si.cssText + '</style>';\n                    });\n                    utils.each(me.document.getElementsByTagName('script'), function (si) {\n                        headHtmlForIE9 += si.outerHTML;\n                    });\n                }\n                return (\n                    '<html><head>' +\n                    (me.options.charset\n                        ? '<meta http-equiv=\"Content-Type\" content=\"text/html; charset=' + me.options.charset + '\"/>'\n                        : '') +\n                    (headHtmlForIE9 || me.document.getElementsByTagName('head')[0].innerHTML) +\n                    headHtml.join('\\n') +\n                    '</head>' +\n                    '<body ' +\n                    (ie && browser.version < 9 ? 'class=\"view\"' : '') +\n                    '>' +\n                    me.getContent(null, null, true) +\n                    '</body></html>'\n                );\n            },\n\n            /**\n             * 得到编辑器的纯文本内容，但会保留段落格式\n             * @method getPlainTxt\n             * @return { String } 编辑器带段落格式的纯文本内容字符串\n             * @example\n             * ```javascript\n             * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>\n             * console.log(editor.getPlainTxt()); //输出:\"1\\n2\\n\n             * ```\n             */\n            getPlainTxt: function () {\n                var reg = new RegExp(domUtils.fillChar, 'g'),\n                    html = this.body.innerHTML.replace(/[\\n\\r]/g, ''); //ie要先去了\\n在处理\n                html = html\n                    .replace(/<(p|div)[^>]*>(<br\\/?>|&nbsp;)<\\/\\1>/gi, '\\n')\n                    .replace(/<br\\/?>/gi, '\\n')\n                    .replace(/<[^>/]+>/g, '')\n                    .replace(/(\\n)?<\\/([^>]+)>/g, function (a, b, c) {\n                        return dtd.$block[c] ? '\\n' : b ? b : '';\n                    });\n                //取出来的空格会有c2a0会变成乱码，处理这种情况\\u00a0\n                return html\n                    .replace(reg, '')\n                    .replace(/\\u00a0/g, ' ')\n                    .replace(/&nbsp;/g, ' ');\n            },\n\n            /**\n             * 获取编辑器中的纯文本内容,没有段落格式\n             * @method getContentTxt\n             * @return { String } 编辑器不带段落格式的纯文本内容字符串\n             * @example\n             * ```javascript\n             * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>\n             * console.log(editor.getPlainTxt()); //输出:\"12\n             * ```\n             */\n            getContentTxt: function () {\n                var reg = new RegExp(domUtils.fillChar, 'g');\n                //取出来的空格会有c2a0会变成乱码，处理这种情况\\u00a0\n                return this.body[browser.ie ? 'innerText' : 'textContent'].replace(reg, '').replace(/\\u00a0/g, ' ');\n            },\n\n            /**\n             * 设置编辑器的内容，可修改编辑器当前的html内容\n             * @method setContent\n             * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容\n             * @warning 该方法会触发selectionchange事件\n             * @param { String } html 要插入的html内容\n             * @example\n             * ```javascript\n             * editor.getContent('<p>test</p>');\n             * ```\n             */\n\n            /**\n             * 设置编辑器的内容，可修改编辑器当前的html内容\n             * @method setContent\n             * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容\n             * @warning 该方法会触发selectionchange事件\n             * @param { String } html 要插入的html内容\n             * @param { Boolean } isAppendTo 若传入true，不清空原来的内容，在最后插入内容，否则，清空内容再插入\n             * @example\n             * ```javascript\n             * //假设设置前的编辑器内容是 <p>old text</p>\n             * editor.setContent('<p>new text</p>', true); //插入的结果是<p>old text</p><p>new text</p>\n             * ```\n             */\n            setContent: function (html, isAppendTo, notFireSelectionchange) {\n                var me = this;\n\n                me.fireEvent('beforesetcontent', html);\n                var root = UE.htmlparser(html);\n                me.filterInputRule(root);\n                html = root.toHtml();\n\n                me.body.innerHTML = (isAppendTo ? me.body.innerHTML : '') + html;\n\n                function isCdataDiv(node) {\n                    return node.tagName == 'DIV' && node.getAttribute('cdata_tag');\n                }\n                //给文本或者inline节点套p标签\n                if (me.options.enterTag == 'p') {\n                    var child = this.body.firstChild,\n                        tmpNode;\n                    if (\n                        !child ||\n                        (child.nodeType == 1 &&\n                            (dtd.$cdata[child.tagName] || isCdataDiv(child) || domUtils.isCustomeNode(child)) &&\n                            child === this.body.lastChild)\n                    ) {\n                        this.body.innerHTML = '<p>' + (browser.ie ? '&nbsp;' : '<br/>') + '</p>' + this.body.innerHTML;\n                    } else {\n                        var p = me.document.createElement('p');\n                        while (child) {\n                            while (\n                                child &&\n                                (child.nodeType == 3 ||\n                                    (child.nodeType == 1 && dtd.p[child.tagName] && !dtd.$cdata[child.tagName]))\n                            ) {\n                                tmpNode = child.nextSibling;\n                                p.appendChild(child);\n                                child = tmpNode;\n                            }\n                            if (p.firstChild) {\n                                if (!child) {\n                                    me.body.appendChild(p);\n                                    break;\n                                } else {\n                                    child.parentNode.insertBefore(p, child);\n                                    p = me.document.createElement('p');\n                                }\n                            }\n                            child = child.nextSibling;\n                        }\n                    }\n                }\n                me.fireEvent('aftersetcontent');\n                me.fireEvent('contentchange');\n\n                !notFireSelectionchange && me._selectionChange();\n                //清除保存的选区\n                me._bakRange = me._bakIERange = me._bakNativeRange = null;\n                //trace:1742 setContent后gecko能得到焦点问题\n                var geckoSel;\n                if (browser.gecko && (geckoSel = this.selection.getNative())) {\n                    geckoSel.removeAllRanges();\n                }\n                if (me.options.autoSyncData) {\n                    me.form && setValue(me.form, me);\n                }\n            },\n\n            /**\n             * 让编辑器获得焦点，默认focus到编辑器头部\n             * @method focus\n             * @example\n             * ```javascript\n             * editor.focus()\n             * ```\n             */\n\n            /**\n             * 让编辑器获得焦点，toEnd确定focus位置\n             * @method focus\n             * @param { Boolean } toEnd 默认focus到编辑器头部，toEnd为true时focus到内容尾部\n             * @example\n             * ```javascript\n             * editor.focus(true)\n             * ```\n             */\n            focus: function (toEnd) {\n                try {\n                    var me = this,\n                        rng = me.selection.getRange();\n                    if (toEnd) {\n                        var node = me.body.lastChild;\n                        if (node && node.nodeType == 1 && !dtd.$empty[node.tagName]) {\n                            if (domUtils.isEmptyBlock(node)) {\n                                rng.setStartAtFirst(node);\n                            } else {\n                                rng.setStartAtLast(node);\n                            }\n                            rng.collapse(true);\n                        }\n                        rng.setCursor(true);\n                    } else {\n                        if (!rng.collapsed && domUtils.isBody(rng.startContainer) && rng.startOffset == 0) {\n                            var node = me.body.firstChild;\n                            if (node && node.nodeType == 1 && !dtd.$empty[node.tagName]) {\n                                rng.setStartAtFirst(node).collapse(true);\n                            }\n                        }\n\n                        rng.select(true);\n                    }\n                    this.fireEvent('focus selectionchange');\n                } catch (e) {}\n            },\n            isFocus: function () {\n                return this.selection.isFocus();\n            },\n            blur: function () {\n                var sel = this.selection.getNative();\n                if (sel.empty && browser.ie) {\n                    var nativeRng = document.body.createTextRange();\n                    nativeRng.moveToElementText(document.body);\n                    nativeRng.collapse(true);\n                    nativeRng.select();\n                    sel.empty();\n                } else {\n                    sel.removeAllRanges();\n                }\n\n                //this.fireEvent('blur selectionchange');\n            },\n            /**\n             * 初始化UE事件及部分事件代理\n             * @method _initEvents\n             * @private\n             */\n            _initEvents: function () {\n                var me = this,\n                    doc = me.document,\n                    win = me.window;\n                me._proxyDomEvent = utils.bind(me._proxyDomEvent, me);\n                domUtils.on(\n                    doc,\n                    [\n                        'click',\n                        'contextmenu',\n                        'mousedown',\n                        'keydown',\n                        'keyup',\n                        'keypress',\n                        'mouseup',\n                        'mouseover',\n                        'mouseout',\n                        'selectstart'\n                    ],\n                    me._proxyDomEvent\n                );\n                domUtils.on(win, ['focus', 'blur'], me._proxyDomEvent);\n                domUtils.on(me.body, 'drop', function (e) {\n                    //阻止ff下默认的弹出新页面打开图片\n                    if (browser.gecko && e.stopPropagation) {\n                        e.stopPropagation();\n                    }\n                    me.fireEvent('contentchange');\n                });\n                domUtils.on(doc, ['mouseup', 'keydown'], function (evt) {\n                    //特殊键不触发selectionchange\n                    if (evt.type == 'keydown' && (evt.ctrlKey || evt.metaKey || evt.shiftKey || evt.altKey)) {\n                        return;\n                    }\n                    if (evt.button == 2) return;\n                    me._selectionChange(250, evt);\n                });\n            },\n            /**\n             * 触发事件代理\n             * @method _proxyDomEvent\n             * @private\n             * @return { * } fireEvent的返回值\n             * @see UE.EventBase:fireEvent(String)\n             */\n            _proxyDomEvent: function (evt) {\n                if (this.fireEvent('before' + evt.type.replace(/^on/, '').toLowerCase()) === false) {\n                    return false;\n                }\n                if (this.fireEvent(evt.type.replace(/^on/, ''), evt) === false) {\n                    return false;\n                }\n                return this.fireEvent('after' + evt.type.replace(/^on/, '').toLowerCase());\n            },\n            /**\n             * 变化选区\n             * @method _selectionChange\n             * @private\n             */\n            _selectionChange: function (delay, evt) {\n                var me = this;\n                //有光标才做selectionchange 为了解决未focus时点击source不能触发更改工具栏状态的问题（source命令notNeedUndo=1）\n                //            if ( !me.selection.isFocus() ){\n                //                return;\n                //            }\n\n                var hackForMouseUp = false;\n                var mouseX, mouseY;\n                if (browser.ie && browser.version < 9 && evt && evt.type == 'mouseup') {\n                    var range = this.selection.getRange();\n                    if (!range.collapsed) {\n                        hackForMouseUp = true;\n                        mouseX = evt.clientX;\n                        mouseY = evt.clientY;\n                    }\n                }\n                clearTimeout(_selectionChangeTimer);\n                _selectionChangeTimer = setTimeout(function () {\n                    if (!me.selection || !me.selection.getNative()) {\n                        return;\n                    }\n                    //修复一个IE下的bug: 鼠标点击一段已选择的文本中间时，可能在mouseup后的一段时间内取到的range是在selection的type为None下的错误值.\n                    //IE下如果用户是拖拽一段已选择文本，则不会触发mouseup事件，所以这里的特殊处理不会对其有影响\n                    var ieRange;\n                    if (hackForMouseUp && me.selection.getNative().type == 'None') {\n                        ieRange = me.document.body.createTextRange();\n                        try {\n                            ieRange.moveToPoint(mouseX, mouseY);\n                        } catch (ex) {\n                            ieRange = null;\n                        }\n                    }\n                    var bakGetIERange;\n                    if (ieRange) {\n                        bakGetIERange = me.selection.getIERange;\n                        me.selection.getIERange = function () {\n                            return ieRange;\n                        };\n                    }\n                    me.selection.cache();\n                    if (bakGetIERange) {\n                        me.selection.getIERange = bakGetIERange;\n                    }\n                    if (me.selection._cachedRange && me.selection._cachedStartElement) {\n                        me.fireEvent('beforeselectionchange');\n                        // 第二个参数causeByUi为true代表由用户交互造成的selectionchange.\n                        me.fireEvent('selectionchange', !!evt);\n                        me.fireEvent('afterselectionchange');\n                        me.selection.clear();\n                    }\n                }, delay || 50);\n            },\n\n            /**\n             * 执行编辑命令\n             * @method _callCmdFn\n             * @private\n             * @param { String } fnName 函数名称\n             * @param { * } args 传给命令函数的参数\n             * @return { * } 返回命令函数运行的返回值\n             */\n            _callCmdFn: function (fnName, args) {\n                var cmdName = args[0].toLowerCase(),\n                    cmd,\n                    cmdFn;\n                cmd = this.commands[cmdName] || UE.commands[cmdName];\n                cmdFn = cmd && cmd[fnName];\n                //没有querycommandstate或者没有command的都默认返回0\n                if ((!cmd || !cmdFn) && fnName == 'queryCommandState') {\n                    return 0;\n                } else if (cmdFn) {\n                    return cmdFn.apply(this, args);\n                }\n            },\n\n            /**\n             * 执行编辑命令cmdName，完成富文本编辑效果\n             * @method execCommand\n             * @param { String } cmdName 需要执行的命令\n             * @remind 具体命令的使用请参考<a href=\"#COMMAND.LIST\">命令列表</a>\n             * @return { * } 返回命令函数运行的返回值\n             * @example\n             * ```javascript\n             * editor.execCommand(cmdName);\n             * ```\n             */\n            execCommand: function (cmdName) {\n                cmdName = cmdName.toLowerCase();\n                var me = this,\n                    result,\n                    cmd = me.commands[cmdName] || UE.commands[cmdName];\n                if (!cmd || !cmd.execCommand) {\n                    return null;\n                }\n                if (!cmd.notNeedUndo && !me.__hasEnterExecCommand) {\n                    me.__hasEnterExecCommand = true;\n                    if (me.queryCommandState.apply(me, arguments) != -1) {\n                        me.fireEvent('saveScene');\n                        me.fireEvent.apply(me, ['beforeexeccommand', cmdName].concat(arguments));\n                        result = this._callCmdFn('execCommand', arguments);\n                        //保存场景时，做了内容对比，再看是否进行contentchange触发，这里多触发了一次，去掉\n                        //                    (!cmd.ignoreContentChange && !me._ignoreContentChange) && me.fireEvent('contentchange');\n                        me.fireEvent.apply(me, ['afterexeccommand', cmdName].concat(arguments));\n                        me.fireEvent('saveScene');\n                    }\n                    me.__hasEnterExecCommand = false;\n                } else {\n                    result = this._callCmdFn('execCommand', arguments);\n                    !me.__hasEnterExecCommand &&\n                        !cmd.ignoreContentChange &&\n                        !me._ignoreContentChange &&\n                        me.fireEvent('contentchange');\n                }\n                !me.__hasEnterExecCommand &&\n                    !cmd.ignoreContentChange &&\n                    !me._ignoreContentChange &&\n                    me._selectionChange();\n                return result;\n            },\n\n            /**\n             * 根据传入的command命令，查选编辑器当前的选区，返回命令的状态\n             * @method  queryCommandState\n             * @param { String } cmdName 需要查询的命令名称\n             * @remind 具体命令的使用请参考<a href=\"#COMMAND.LIST\">命令列表</a>\n             * @return { Number } number 返回放前命令的状态，返回值三种情况：(-1|0|1)\n             * @example\n             * ```javascript\n             * editor.queryCommandState(cmdName)  => (-1|0|1)\n             * ```\n             * @see COMMAND.LIST\n             */\n            queryCommandState: function (cmdName) {\n                return this._callCmdFn('queryCommandState', arguments);\n            },\n\n            /**\n             * 根据传入的command命令，查选编辑器当前的选区，根据命令返回相关的值\n             * @method queryCommandValue\n             * @param { String } cmdName 需要查询的命令名称\n             * @remind 具体命令的使用请参考<a href=\"#COMMAND.LIST\">命令列表</a>\n             * @remind 只有部分插件有此方法\n             * @return { * } 返回每个命令特定的当前状态值\n             * @grammar editor.queryCommandValue(cmdName)  =>  {*}\n             * @see COMMAND.LIST\n             */\n            queryCommandValue: function (cmdName) {\n                return this._callCmdFn('queryCommandValue', arguments);\n            },\n\n            /**\n             * 检查编辑区域中是否有内容\n             * @method  hasContents\n             * @remind 默认有文本内容，或者有以下节点都不认为是空\n             * table,ul,ol,dl,iframe,area,base,col,hr,img,embed,input,link,meta,param\n             * @return { Boolean } 检查有内容返回true，否则返回false\n             * @example\n             * ```javascript\n             * editor.hasContents()\n             * ```\n             */\n\n            /**\n             * 检查编辑区域中是否有内容，若包含参数tags中的节点类型，直接返回true\n             * @method  hasContents\n             * @param { Array } tags 传入数组判断时用到的节点类型\n             * @return { Boolean } 若文档中包含tags数组里对应的tag，返回true，否则返回false\n             * @example\n             * ```javascript\n             * editor.hasContents(['span']);\n             * ```\n             */\n            hasContents: function (tags) {\n                if (tags) {\n                    for (var i = 0, ci; (ci = tags[i++]); ) {\n                        if (this.document.getElementsByTagName(ci).length > 0) {\n                            return true;\n                        }\n                    }\n                }\n                if (!domUtils.isEmptyBlock(this.body)) {\n                    return true;\n                }\n                //随时添加,定义的特殊标签如果存在，不能认为是空\n                tags = ['div'];\n                for (i = 0; (ci = tags[i++]); ) {\n                    var nodes = domUtils.getElementsByTagName(this.document, ci);\n                    for (var n = 0, cn; (cn = nodes[n++]); ) {\n                        if (domUtils.isCustomeNode(cn)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            },\n\n            /**\n             * 重置编辑器，可用来做多个tab使用同一个编辑器实例\n             * @method  reset\n             * @remind 此方法会清空编辑器内容，清空回退列表，会触发reset事件\n             * @example\n             * ```javascript\n             * editor.reset()\n             * ```\n             */\n            reset: function () {\n                this.fireEvent('reset');\n            },\n\n            /**\n             * 设置当前编辑区域可以编辑\n             * @method setEnabled\n             * @example\n             * ```javascript\n             * editor.setEnabled()\n             * ```\n             */\n            setEnabled: function () {\n                var me = this,\n                    range;\n                if (me.body.contentEditable == 'false') {\n                    me.body.contentEditable = true;\n                    range = me.selection.getRange();\n                    //有可能内容丢失了\n                    try {\n                        range.moveToBookmark(me.lastBk);\n                        delete me.lastBk;\n                    } catch (e) {\n                        range.setStartAtFirst(me.body).collapse(true);\n                    }\n                    range.select(true);\n                    if (me.bkqueryCommandState) {\n                        me.queryCommandState = me.bkqueryCommandState;\n                        delete me.bkqueryCommandState;\n                    }\n                    if (me.bkqueryCommandValue) {\n                        me.queryCommandValue = me.bkqueryCommandValue;\n                        delete me.bkqueryCommandValue;\n                    }\n                    me.fireEvent('selectionchange');\n                }\n            },\n            enable: function () {\n                return this.setEnabled();\n            },\n\n            /** 设置当前编辑区域不可编辑\n             * @method setDisabled\n             */\n\n            /** 设置当前编辑区域不可编辑,except中的命令除外\n             * @method setDisabled\n             * @param { String } except 例外命令的字符串\n             * @remind 即使设置了disable，此处配置的例外命令仍然可以执行\n             * @example\n             * ```javascript\n             * editor.setDisabled('bold'); //禁用工具栏中除加粗之外的所有功能\n             * ```\n             */\n\n            /** 设置当前编辑区域不可编辑,except中的命令除外\n             * @method setDisabled\n             * @param { Array } except 例外命令的字符串数组，数组中的命令仍然可以执行\n             * @remind 即使设置了disable，此处配置的例外命令仍然可以执行\n             * @example\n             * ```javascript\n             * editor.setDisabled(['bold','insertimage']); //禁用工具栏中除加粗和插入图片之外的所有功能\n             * ```\n             */\n            setDisabled: function (except) {\n                var me = this;\n                except = except ? (utils.isArray(except) ? except : [except]) : [];\n                if (me.body.contentEditable == 'true') {\n                    if (!me.lastBk) {\n                        me.lastBk = me.selection.getRange().createBookmark(true);\n                    }\n                    me.body.contentEditable = false;\n                    me.bkqueryCommandState = me.queryCommandState;\n                    me.bkqueryCommandValue = me.queryCommandValue;\n                    me.queryCommandState = function (type) {\n                        if (utils.indexOf(except, type) != -1) {\n                            return me.bkqueryCommandState.apply(me, arguments);\n                        }\n                        return -1;\n                    };\n                    me.queryCommandValue = function (type) {\n                        if (utils.indexOf(except, type) != -1) {\n                            return me.bkqueryCommandValue.apply(me, arguments);\n                        }\n                        return null;\n                    };\n                    me.fireEvent('selectionchange');\n                }\n            },\n            disable: function (except) {\n                return this.setDisabled(except);\n            },\n\n            /**\n             * 设置默认内容\n             * @method _setDefaultContent\n             * @private\n             * @param  { String } cont 要存入的内容\n             */\n            _setDefaultContent: (function () {\n                function clear() {\n                    var me = this;\n                    if (me.document.getElementById('initContent')) {\n                        me.body.innerHTML = '<p>' + (ie ? '' : '<br/>') + '</p>';\n                        me.removeListener('firstBeforeExecCommand focus', clear);\n                        setTimeout(function () {\n                            me.focus();\n                            me._selectionChange();\n                        }, 0);\n                    }\n                }\n\n                return function (cont) {\n                    var me = this;\n                    me.body.innerHTML = '<p id=\"initContent\">' + cont + '</p>';\n\n                    me.addListener('firstBeforeExecCommand focus', clear);\n                };\n            })(),\n\n            /**\n             * 显示编辑器\n             * @method setShow\n             * @example\n             * ```javascript\n             * editor.setShow()\n             * ```\n             */\n            setShow: function () {\n                var me = this,\n                    range = me.selection.getRange();\n                if (me.container.style.display == 'none') {\n                    //有可能内容丢失了\n                    try {\n                        range.moveToBookmark(me.lastBk);\n                        delete me.lastBk;\n                    } catch (e) {\n                        range.setStartAtFirst(me.body).collapse(true);\n                    }\n                    //ie下focus实效，所以做了个延迟\n                    setTimeout(function () {\n                        range.select(true);\n                    }, 100);\n                    me.container.style.display = '';\n                }\n            },\n            show: function () {\n                return this.setShow();\n            },\n            /**\n             * 隐藏编辑器\n             * @method setHide\n             * @example\n             * ```javascript\n             * editor.setHide()\n             * ```\n             */\n            setHide: function () {\n                var me = this;\n                if (!me.lastBk) {\n                    me.lastBk = me.selection.getRange().createBookmark(true);\n                }\n                me.container.style.display = 'none';\n            },\n            hide: function () {\n                return this.setHide();\n            },\n\n            /**\n             * 根据指定的路径，获取对应的语言资源\n             * @method getLang\n             * @param { String } path 路径根据的是lang目录下的语言文件的路径结构\n             * @return { Object | String } 根据路径返回语言资源的Json格式对象或者语言字符串\n             * @example\n             * ```javascript\n             * editor.getLang('contextMenu.delete'); //如果当前是中文，那返回是的是'删除'\n             * ```\n             */\n            getLang: function (path) {\n                var lang = UE.I18N[this.options.lang];\n                if (!lang) {\n                    throw Error('not import language file');\n                }\n                path = (path || '').split('.');\n                for (var i = 0, ci; (ci = path[i++]); ) {\n                    lang = lang[ci];\n                    if (!lang) break;\n                }\n                return lang;\n            },\n\n            /**\n             * 计算编辑器html内容字符串的长度\n             * @method  getContentLength\n             * @return { Number } 返回计算的长度\n             * @example\n             * ```javascript\n             * //编辑器html内容<p><strong>132</strong></p>\n             * editor.getContentLength() //返回27\n             * ```\n             */\n            /**\n             * 计算编辑器当前纯文本内容的长度\n             * @method  getContentLength\n             * @param { Boolean } ingoneHtml 传入true时，只按照纯文本来计算\n             * @return { Number } 返回计算的长度，内容中有hr/img/iframe标签，长度加1\n             * @example\n             * ```javascript\n             * //编辑器html内容<p><strong>132</strong></p>\n             * editor.getContentLength() //返回3\n             * ```\n             */\n            getContentLength: function (ingoneHtml, tagNames) {\n                var count = this.getContent(false, false, true).length;\n                if (ingoneHtml) {\n                    tagNames = (tagNames || []).concat(['hr', 'img', 'iframe']);\n                    count = this.getContentTxt().replace(/[\\t\\r\\n]+/g, '').length;\n                    for (var i = 0, ci; (ci = tagNames[i++]); ) {\n                        count += this.document.getElementsByTagName(ci).length;\n                    }\n                }\n                return count;\n            },\n\n            /**\n             * 注册输入过滤规则\n             * @method  addInputRule\n             * @param { Function } rule 要添加的过滤规则\n             * @example\n             * ```javascript\n             * editor.addInputRule(function(root){\n             *   $.each(root.getNodesByTagName('div'),function(i,node){\n             *       node.tagName=\"p\";\n             *   });\n             * });\n             * ```\n             */\n            addInputRule: function (rule) {\n                this.inputRules.push(rule);\n            },\n\n            /**\n             * 执行注册的过滤规则\n             * @method  filterInputRule\n             * @param { UE.uNode } root 要过滤的uNode节点\n             * @remind 执行editor.setContent方法和执行'inserthtml'命令后，会运行该过滤函数\n             * @example\n             * ```javascript\n             * editor.filterInputRule(editor.body);\n             * ```\n             * @see UE.Editor:addInputRule\n             */\n            filterInputRule: function (root) {\n                for (var i = 0, ci; (ci = this.inputRules[i++]); ) {\n                    ci.call(this, root);\n                }\n            },\n\n            /**\n             * 注册输出过滤规则\n             * @method  addOutputRule\n             * @param { Function } rule 要添加的过滤规则\n             * @example\n             * ```javascript\n             * editor.addOutputRule(function(root){\n             *   $.each(root.getNodesByTagName('p'),function(i,node){\n             *       node.tagName=\"div\";\n             *   });\n             * });\n             * ```\n             */\n            addOutputRule: function (rule) {\n                this.outputRules.push(rule);\n            },\n\n            /**\n             * 根据输出过滤规则，过滤编辑器内容\n             * @method  filterOutputRule\n             * @remind 执行editor.getContent方法的时候，会先运行该过滤函数\n             * @param { UE.uNode } root 要过滤的uNode节点\n             * @example\n             * ```javascript\n             * editor.filterOutputRule(editor.body);\n             * ```\n             * @see UE.Editor:addOutputRule\n             */\n            filterOutputRule: function (root) {\n                for (var i = 0, ci; (ci = this.outputRules[i++]); ) {\n                    ci.call(this, root);\n                }\n            },\n\n            /**\n             * 根据action名称获取请求的路径\n             * @method  getActionUrl\n             * @remind 假如没有设置serverUrl,会根据imageUrl设置默认的controller路径\n             * @param { String } action action名称\n             * @example\n             * ```javascript\n             * editor.getActionUrl('config'); //返回 \"/ueditor/php/controller.php?action=config\"\n             * editor.getActionUrl('image'); //返回 \"/ueditor/php/controller.php?action=uplaodimage\"\n             * editor.getActionUrl('scrawl'); //返回 \"/ueditor/php/controller.php?action=uplaodscrawl\"\n             * editor.getActionUrl('imageManager'); //返回 \"/ueditor/php/controller.php?action=listimage\"\n             * ```\n             */\n            getActionUrl: function (action) {\n                var actionName = this.getOpt(action) || action,\n                    imageUrl = this.getOpt('imageUrl'),\n                    serverUrl = this.getOpt('serverUrl');\n\n                if (!serverUrl && imageUrl) {\n                    serverUrl = imageUrl.replace(/^(.*[\\/]).+([\\.].+)$/, '$1controller$2');\n                }\n\n                if (serverUrl) {\n                    serverUrl = serverUrl + (serverUrl.indexOf('?') == -1 ? '?' : '&') + 'action=' + (actionName || '');\n                    return utils.formatUrl(serverUrl);\n                } else {\n                    return '';\n                }\n            }\n        };\n        utils.inherits(Editor, EventBase);\n    })();\n\n    // core/Editor.defaultoptions.js\n    //维护编辑器一下默认的不在插件中的配置项\n    UE.Editor.defaultOptions = function (editor) {\n        var _url = editor.options.UEDITOR_HOME_URL;\n        return {\n            isShow: true,\n            initialContent: '',\n            initialStyle: '',\n            autoClearinitialContent: false,\n            iframeCssUrl: _url + 'themes/iframe.css',\n            textarea: 'editorValue',\n            focus: false,\n            focusInEnd: true,\n            autoClearEmptyNode: true,\n            fullscreen: false,\n            readonly: false,\n            zIndex: 999,\n            imagePopup: true,\n            enterTag: 'p',\n            customDomain: false,\n            lang: 'cn',\n            langPath: _url + 'lang/',\n            theme: 'default',\n            themePath: _url + 'themes/',\n            allHtmlEnabled: false,\n            scaleEnabled: false,\n            tableNativeEditInFF: false,\n            autoSyncData: true,\n            fileNameFormat: '{time}{rand:6}'\n        };\n    };\n\n    // core/loadconfig.js\n    (function () {\n        UE.Editor.prototype.loadServerConfig = function () {\n            var me = this;\n            setTimeout(function () {\n                //try{\n                /*me.options.imageUrl && me.setOpt('serverUrl', me.options.imageUrl.replace(/^(.*[\\/]).+([\\.].+)$/, '$1controller$2'));*/\n\n                //var configUrl = me.getActionUrl('config'),\n                //isJsonp = utils.isCrossDomainUrl(configUrl);\n\n                //[> 发出ajax请求 <]\n                //me._serverConfigLoaded = false;\n\n                //configUrl && UE.ajax.request(configUrl,{\n                //'method': 'GET',\n                //'dataType': isJsonp ? 'jsonp':'',\n                //'onsuccess':function(r){\n                /*try {*/\n                //var config = isJsonp ? r:eval(\"(\"+r.responseText+\")\");\n                utils.extend(me.options, {});\n                me.fireEvent('serverConfigLoaded');\n                me._serverConfigLoaded = true;\n                /*   } catch (e) {*/\n                //showErrorMsg(me.getLang('loadconfigFormatError'));\n                //}\n                //},\n                //'onerror':function(){\n                //showErrorMsg(me.getLang('loadconfigHttpError'));\n                //}\n                /*});*/\n                /*} catch(e){*/\n                /*showErrorMsg(me.getLang('loadconfigError'));*/\n                //}\n            });\n\n            function showErrorMsg(msg) {\n                console && console.error(msg);\n                //me.fireEvent('showMessage', {\n                //    'title': msg,\n                //    'type': 'error'\n                //});\n            }\n        };\n\n        UE.Editor.prototype.isServerConfigLoaded = function () {\n            var me = this;\n            return me._serverConfigLoaded || false;\n        };\n\n        UE.Editor.prototype.afterConfigReady = function (handler) {\n            if (!handler || !utils.isFunction(handler)) return;\n            var me = this;\n            var readyHandler = function () {\n                handler.apply(me, arguments);\n                me.removeListener('serverConfigLoaded', readyHandler);\n            };\n\n            if (me.isServerConfigLoaded()) {\n                handler.call(me, 'serverConfigLoaded');\n            } else {\n                me.addListener('serverConfigLoaded', readyHandler);\n            }\n        };\n    })();\n\n    // core/ajax.js\n    /**\n     * @file\n     * @module UE.ajax\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 提供对ajax请求的支持\n     * @module UE.ajax\n     */\n    UE.ajax = (function () {\n        //创建一个ajaxRequest对象\n        var fnStr = 'XMLHttpRequest()';\n        try {\n            new ActiveXObject('Msxml2.XMLHTTP');\n            fnStr = \"ActiveXObject('Msxml2.XMLHTTP')\";\n        } catch (e) {\n            try {\n                new ActiveXObject('Microsoft.XMLHTTP');\n                fnStr = \"ActiveXObject('Microsoft.XMLHTTP')\";\n            } catch (e) {}\n        }\n        var creatAjaxRequest = new Function('return new ' + fnStr);\n\n        /**\n         * 将json参数转化成适合ajax提交的参数列表\n         * @param json\n         */\n        function json2str(json) {\n            var strArr = [];\n            for (var i in json) {\n                //忽略默认的几个参数\n                if (i == 'method' || i == 'timeout' || i == 'async' || i == 'dataType' || i == 'callback') continue;\n                //忽略控制\n                if (json[i] == undefined || json[i] == null) continue;\n                //传递过来的对象和函数不在提交之列\n                if (!((typeof json[i]).toLowerCase() == 'function' || (typeof json[i]).toLowerCase() == 'object')) {\n                    strArr.push(encodeURIComponent(i) + '=' + encodeURIComponent(json[i]));\n                } else if (utils.isArray(json[i])) {\n                    //支持传数组内容\n                    for (var j = 0; j < json[i].length; j++) {\n                        strArr.push(encodeURIComponent(i) + '[]=' + encodeURIComponent(json[i][j]));\n                    }\n                }\n            }\n            return strArr.join('&');\n        }\n\n        function doAjax(url, ajaxOptions) {\n            var xhr = creatAjaxRequest(),\n                //是否超时\n                timeIsOut = false,\n                //默认参数\n                defaultAjaxOptions = {\n                    method: 'POST',\n                    timeout: 5000,\n                    async: true,\n                    data: {}, //需要传递对象的话只能覆盖\n                    onsuccess: function () {},\n                    onerror: function () {}\n                };\n\n            if (typeof url === 'object') {\n                ajaxOptions = url;\n                url = ajaxOptions.url;\n            }\n            if (!xhr || !url) return;\n            var ajaxOpts = ajaxOptions ? utils.extend(defaultAjaxOptions, ajaxOptions) : defaultAjaxOptions;\n\n            var submitStr = json2str(ajaxOpts); // { name:\"Jim\",city:\"Beijing\" } --> \"name=Jim&city=Beijing\"\n            //如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串\n            if (!utils.isEmptyObject(ajaxOpts.data)) {\n                submitStr += (submitStr ? '&' : '') + json2str(ajaxOpts.data);\n            }\n            //超时检测\n            var timerID = setTimeout(function () {\n                if (xhr.readyState != 4) {\n                    timeIsOut = true;\n                    xhr.abort();\n                    clearTimeout(timerID);\n                }\n            }, ajaxOpts.timeout);\n\n            var method = ajaxOpts.method.toUpperCase();\n            var str =\n                url +\n                (url.indexOf('?') == -1 ? '?' : '&') +\n                (method == 'POST' ? '' : submitStr + '&noCache=' + +new Date());\n            xhr.open(method, str, ajaxOpts.async);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    if (!timeIsOut && xhr.status == 200) {\n                        ajaxOpts.onsuccess(xhr);\n                    } else {\n                        ajaxOpts.onerror(xhr);\n                    }\n                }\n            };\n            if (method == 'POST') {\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n                xhr.send(submitStr);\n            } else {\n                xhr.send(null);\n            }\n        }\n\n        function doJsonp(url, opts) {\n            var successhandler = opts.onsuccess || function () {},\n                scr = document.createElement('SCRIPT'),\n                options = opts || {},\n                charset = options['charset'],\n                callbackField = options['jsonp'] || 'callback',\n                callbackFnName,\n                timeOut = options['timeOut'] || 0,\n                timer,\n                reg = new RegExp('(\\\\?|&)' + callbackField + '=([^&]*)'),\n                matches;\n\n            if (utils.isFunction(successhandler)) {\n                callbackFnName = 'bd__editor__' + Math.floor(Math.random() * 2147483648).toString(36);\n                window[callbackFnName] = getCallBack(0);\n            } else if (utils.isString(successhandler)) {\n                callbackFnName = successhandler;\n            } else {\n                if ((matches = reg.exec(url))) {\n                    callbackFnName = matches[2];\n                }\n            }\n\n            url = url.replace(reg, '\\x241' + callbackField + '=' + callbackFnName);\n\n            if (url.search(reg) < 0) {\n                url += (url.indexOf('?') < 0 ? '?' : '&') + callbackField + '=' + callbackFnName;\n            }\n\n            var queryStr = json2str(opts); // { name:\"Jim\",city:\"Beijing\" } --> \"name=Jim&city=Beijing\"\n            //如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串\n            if (!utils.isEmptyObject(opts.data)) {\n                queryStr += (queryStr ? '&' : '') + json2str(opts.data);\n            }\n            if (queryStr) {\n                url = url.replace(/\\?/, '?' + queryStr + '&');\n            }\n\n            scr.onerror = getCallBack(1);\n            if (timeOut) {\n                timer = setTimeout(getCallBack(1), timeOut);\n            }\n            createScriptTag(scr, url, charset);\n\n            function createScriptTag(scr, url, charset) {\n                scr.setAttribute('type', 'text/javascript');\n                scr.setAttribute('defer', 'defer');\n                charset && scr.setAttribute('charset', charset);\n                scr.setAttribute('src', url);\n                document.getElementsByTagName('head')[0].appendChild(scr);\n            }\n\n            function getCallBack(onTimeOut) {\n                return function () {\n                    try {\n                        if (onTimeOut) {\n                            options.onerror && options.onerror();\n                        } else {\n                            try {\n                                clearTimeout(timer);\n                                successhandler.apply(window, arguments);\n                            } catch (e) {}\n                        }\n                    } catch (exception) {\n                        options.onerror && options.onerror.call(window, exception);\n                    } finally {\n                        options.oncomplete && options.oncomplete.apply(window, arguments);\n                        scr.parentNode && scr.parentNode.removeChild(scr);\n                        window[callbackFnName] = null;\n                        try {\n                            delete window[callbackFnName];\n                        } catch (e) {}\n                    }\n                };\n            }\n        }\n\n        return {\n            /**\n             * 根据给定的参数项，向指定的url发起一个ajax请求。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求\n             * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调\n             * @method request\n             * @param { URLString } url ajax请求的url地址\n             * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：\n             * @example\n             * ```javascript\n             * //向sayhello.php发起一个异步的Ajax GET请求, 请求超时时间为10s， 请求完成后执行相应的回调。\n             * UE.ajax.requeset( 'sayhello.php', {\n             *\n             *     //请求方法。可选值： 'GET', 'POST'，默认值是'POST'\n             *     method: 'GET',\n             *\n             *     //超时时间。 默认为5000， 单位是ms\n             *     timeout: 10000,\n             *\n             *     //是否是异步请求。 true为异步请求， false为同步请求\n             *     async: true,\n             *\n             *     //请求携带的数据。如果请求为GET请求， data会经过stringify后附加到请求url之后。\n             *     data: {\n             *         name: 'ueditor'\n             *     },\n             *\n             *     //请求成功后的回调， 该回调接受当前的XMLHttpRequest对象作为参数。\n             *     onsuccess: function ( xhr ) {\n             *         console.log( xhr.responseText );\n             *     },\n             *\n             *     //请求失败或者超时后的回调。\n             *     onerror: function ( xhr ) {\n             *          alert( 'Ajax请求失败' );\n             *     }\n             *\n             * } );\n             * ```\n             */\n\n            /**\n             * 根据给定的参数项发起一个ajax请求， 参数项里必须包含一个url地址。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求\n             * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调。\n             * @method request\n             * @warning 如果在参数项里未提供一个key为“url”的地址值，则该请求将直接退出。\n             * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：\n             * @example\n             * ```javascript\n             *\n             * //向sayhello.php发起一个异步的Ajax POST请求, 请求超时时间为5s， 请求完成后不执行任何回调。\n             * UE.ajax.requeset( 'sayhello.php', {\n             *\n             *     //请求的地址， 该项是必须的。\n             *     url: 'sayhello.php'\n             *\n             * } );\n             * ```\n             */\n            request: function (url, opts) {\n                if (opts && opts.dataType == 'jsonp') {\n                    doJsonp(url, opts);\n                } else {\n                    doAjax(url, opts);\n                }\n            },\n            getJSONP: function (url, data, fn) {\n                var opts = {\n                    data: data,\n                    oncomplete: fn\n                };\n                doJsonp(url, opts);\n            }\n        };\n    })();\n\n    // core/filterword.js\n    /**\n     * UE过滤word的静态方法\n     * @file\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @module UE\n     */\n\n    /**\n     * 根据传入html字符串过滤word\n     * @module UE\n     * @since 1.2.6.1\n     * @method filterWord\n     * @param { String } html html字符串\n     * @return { String } 已过滤后的结果字符串\n     * @example\n     * ```javascript\n     * UE.filterWord(html);\n     * ```\n     */\n    var filterWord = (UE.filterWord = (function () {\n        //是否是word过来的内容\n        function isWordDocument(str) {\n            return /(class=\"?Mso|style=\"[^\"]*\\bmso\\-|w:WordDocument|<(v|o):|lang=)/gi.test(str);\n        }\n        //去掉小数\n        function transUnit(v) {\n            v = v.replace(/[\\d.]+\\w+/g, function (m) {\n                return utils.transUnitToPx(m);\n            });\n            return v;\n        }\n\n        function filterInvalidateAtrrs(str) {\n            return str.replace(/line-height:\\s*?0[^;]*;?/gi, ''); // 去掉line-height: 0;\n        }\n\n        function filterPasteWord(str) {\n            return (\n                filterInvalidateAtrrs(str)\n                    .replace(/[\\t\\r\\n]+/g, ' ')\n                    .replace(/<!--[\\s\\S]*?-->/gi, '')\n                    //转换图片\n                    .replace(/<v:shape [^>]*>[\\s\\S]*?.<\\/v:shape>/gi, function (str) {\n                        //opera能自己解析出image所这里直接返回空\n                        if (browser.opera) {\n                            return '';\n                        }\n                        try {\n                            //有可能是bitmap占为图，无用，直接过滤掉，主要体现在粘贴excel表格中\n                            if (/Bitmap/i.test(str)) {\n                                return '';\n                            }\n                            var width = str.match(/width:([ \\d.]*p[tx])/i)[1],\n                                height = str.match(/height:([ \\d.]*p[tx])/i)[1],\n                                src = str.match(/src=\\s*\"([^\"]*)\"/i)[1];\n                            return (\n                                '<img width=\"' +\n                                transUnit(width) +\n                                '\" height=\"' +\n                                transUnit(height) +\n                                '\" src=\"' +\n                                src +\n                                '\" />'\n                            );\n                        } catch (e) {\n                            return '';\n                        }\n                    })\n                    //针对wps添加的多余标签处理\n                    .replace(/<\\/?div[^>]*>/g, '')\n                    //去掉多余的属性\n                    .replace(/v:\\w+=([\"']?)[^'\"]+\\1/g, '')\n                    .replace(\n                        /<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|xml|meta|link|style|\\w+:\\w+)(?=[\\s\\/>]))[^>]*>/gi,\n                        ''\n                    )\n                    .replace(/<p [^>]*class=\"?MsoHeading\"?[^>]*>(.*?)<\\/p>/gi, '<p><strong>$1</strong></p>')\n                    //去掉多余的属性\n                    .replace(/\\s+(class|lang|align)\\s*=\\s*(['\"]?)([\\w-]+)\\2/gi, function (str, name, marks, val) {\n                        //保留list的标示\n                        return name == 'class' && val == 'MsoListParagraph' ? str : '';\n                    })\n                    //清除多余的font/span不能匹配&nbsp;有可能是空格\n                    .replace(/<(font|span)[^>]*>(\\s*)<\\/\\1>/gi, function (a, b, c) {\n                        return c.replace(/[\\t\\r\\n ]+/g, ' ');\n                    })\n                    //处理style的问题\n                    .replace(/(<[a-z][^>]*)\\sstyle=([\"'])([^\\2]*?)\\2/gi, function (str, tag, tmp, style) {\n                        var n = [],\n                            s = style\n                                .replace(/^\\s+|\\s+$/, '')\n                                .replace(/&#39;/g, \"'\")\n                                .replace(/&quot;/gi, \"'\")\n                                .replace(/[\\d.]+(cm|pt)/g, function (str) {\n                                    return utils.transUnitToPx(str);\n                                })\n                                .split(/;\\s*/g);\n\n                        for (var i = 0, v; (v = s[i]); i++) {\n                            var name,\n                                value,\n                                parts = v.split(':');\n\n                            if (parts.length == 2) {\n                                name = parts[0].toLowerCase();\n                                value = parts[1].toLowerCase();\n                                if (\n                                    (/^(background)\\w*/.test(name) && value.replace(/(initial|\\s)/g, '').length == 0) ||\n                                    (/^(margin)\\w*/.test(name) && /^0\\w+$/.test(value))\n                                ) {\n                                    continue;\n                                }\n\n                                switch (name) {\n                                    case 'mso-padding-alt':\n                                    case 'mso-padding-top-alt':\n                                    case 'mso-padding-right-alt':\n                                    case 'mso-padding-bottom-alt':\n                                    case 'mso-padding-left-alt':\n                                    case 'mso-margin-alt':\n                                    case 'mso-margin-top-alt':\n                                    case 'mso-margin-right-alt':\n                                    case 'mso-margin-bottom-alt':\n                                    case 'mso-margin-left-alt':\n                                    //ie下会出现挤到一起的情况\n                                    //case \"mso-table-layout-alt\":\n                                    case 'mso-height':\n                                    case 'mso-width':\n                                    case 'mso-vertical-align-alt':\n                                        //trace:1819 ff下会解析出padding在table上\n                                        if (!/<table/.test(tag))\n                                            n[i] = name.replace(/^mso-|-alt$/g, '') + ':' + transUnit(value);\n                                        continue;\n                                    case 'horiz-align':\n                                        n[i] = 'text-align:' + value;\n                                        continue;\n\n                                    case 'vert-align':\n                                        n[i] = 'vertical-align:' + value;\n                                        continue;\n\n                                    case 'font-color':\n                                    case 'mso-foreground':\n                                        n[i] = 'color:' + value;\n                                        continue;\n\n                                    case 'mso-background':\n                                    case 'mso-highlight':\n                                        n[i] = 'background:' + value;\n                                        continue;\n\n                                    case 'mso-default-height':\n                                        n[i] = 'min-height:' + transUnit(value);\n                                        continue;\n\n                                    case 'mso-default-width':\n                                        n[i] = 'min-width:' + transUnit(value);\n                                        continue;\n\n                                    case 'mso-padding-between-alt':\n                                        n[i] = 'border-collapse:separate;border-spacing:' + transUnit(value);\n                                        continue;\n\n                                    case 'text-line-through':\n                                        if (value == 'single' || value == 'double') {\n                                            n[i] = 'text-decoration:line-through';\n                                        }\n                                        continue;\n                                    case 'mso-zero-height':\n                                        if (value == 'yes') {\n                                            n[i] = 'display:none';\n                                        }\n                                        continue;\n                                    //                                case 'background':\n                                    //                                    break;\n                                    case 'margin':\n                                        if (!/[1-9]/.test(value)) {\n                                            continue;\n                                        }\n                                }\n\n                                if (\n                                    /^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(\n                                        name\n                                    ) ||\n                                    (/text\\-indent|padding|margin/.test(name) && /\\-[\\d.]+/.test(value))\n                                ) {\n                                    continue;\n                                }\n\n                                n[i] = name + ':' + parts[1];\n                            }\n                        }\n                        return tag + (n.length ? ' style=\"' + n.join(';').replace(/;{2,}/g, ';') + '\"' : '');\n                    })\n            );\n        }\n\n        return function (html) {\n            return isWordDocument(html) ? filterPasteWord(html) : filterInvalidateAtrrs(html);\n        };\n    })());\n\n    // core/node.js\n    /**\n     * 编辑器模拟的节点类\n     * @file\n     * @module UE\n     * @class uNode\n     * @since 1.2.6.1\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @unfile\n     * @module UE\n     */\n\n    (function () {\n        /**\n         * 编辑器模拟的节点类\n         * @unfile\n         * @module UE\n         * @class uNode\n         */\n\n        /**\n         * 通过一个键值对，创建一个uNode对象\n         * @constructor\n         * @param { Object } attr 传入要创建的uNode的初始属性\n         * @example\n         * ```javascript\n         * var node = new uNode({\n         *     type:'element',\n         *     tagName:'span',\n         *     attrs:{style:'font-size:14px;'}\n         * }\n         * ```\n         */\n        var uNode = (UE.uNode = function (obj) {\n            this.type = obj.type;\n            this.data = obj.data;\n            this.tagName = obj.tagName;\n            this.parentNode = obj.parentNode;\n            this.attrs = obj.attrs || {};\n            this.children = obj.children;\n        });\n\n        var notTransAttrs = {\n            href: 1,\n            src: 1,\n            _src: 1,\n            _href: 1,\n            cdata_data: 1\n        };\n\n        var notTransTagName = {\n            style: 1,\n            script: 1\n        };\n\n        var indentChar = '    ',\n            breakChar = '\\n';\n\n        function insertLine(arr, current, begin) {\n            arr.push(breakChar);\n            return current + (begin ? 1 : -1);\n        }\n\n        function insertIndent(arr, current) {\n            //插入缩进\n            for (var i = 0; i < current; i++) {\n                arr.push(indentChar);\n            }\n        }\n\n        //创建uNode的静态方法\n        //支持标签和html\n        uNode.createElement = function (html) {\n            if (/[<>]/.test(html)) {\n                return UE.htmlparser(html).children[0];\n            } else {\n                return new uNode({\n                    type: 'element',\n                    children: [],\n                    tagName: html\n                });\n            }\n        };\n        uNode.createText = function (data, noTrans) {\n            return new UE.uNode({\n                type: 'text',\n                data: noTrans ? data : utils.unhtml(data || '')\n            });\n        };\n        function nodeToHtml(node, arr, formatter, current) {\n            switch (node.type) {\n                case 'root':\n                    for (var i = 0, ci; (ci = node.children[i++]); ) {\n                        //插入新行\n                        if (formatter && ci.type == 'element' && !dtd.$inlineWithA[ci.tagName] && i > 1) {\n                            insertLine(arr, current, true);\n                            insertIndent(arr, current);\n                        }\n                        nodeToHtml(ci, arr, formatter, current);\n                    }\n                    break;\n                case 'text':\n                    isText(node, arr);\n                    break;\n                case 'element':\n                    isElement(node, arr, formatter, current);\n                    break;\n                case 'comment':\n                    isComment(node, arr, formatter);\n            }\n            return arr;\n        }\n\n        function isText(node, arr) {\n            if (node.parentNode.tagName == 'pre') {\n                //源码模式下输入html标签，不能做转换处理，直接输出\n                arr.push(node.data);\n            } else {\n                arr.push(\n                    notTransTagName[node.parentNode.tagName]\n                        ? utils.html(node.data)\n                        : node.data.replace(/[ ]{2}/g, ' &nbsp;')\n                );\n            }\n        }\n\n        function isElement(node, arr, formatter, current) {\n            var attrhtml = '';\n            if (node.attrs) {\n                attrhtml = [];\n                var attrs = node.attrs;\n                for (var a in attrs) {\n                    //这里就针对\n                    //<p>'<img src='http://nsclick.baidu.com/u.gif?&asdf=\\\"sdf&asdfasdfs;asdf'></p>\n                    //这里边的\\\"做转换，要不用innerHTML直接被截断了，属性src\n                    //有可能做的不够\n                    attrhtml.push(\n                        a +\n                            (attrs[a] !== undefined\n                                ? '=\"' +\n                                  (notTransAttrs[a]\n                                      ? utils.html(attrs[a]).replace(/[\"]/g, function (a) {\n                                            return '&quot;';\n                                        })\n                                      : utils.unhtml(attrs[a])) +\n                                  '\"'\n                                : '')\n                    );\n                }\n                attrhtml = attrhtml.join(' ');\n            }\n            arr.push(\n                '<' + node.tagName + (attrhtml ? ' ' + attrhtml : '') + (dtd.$empty[node.tagName] ? '/' : '') + '>'\n            );\n            //插入新行\n            if (formatter && !dtd.$inlineWithA[node.tagName] && node.tagName != 'pre') {\n                if (node.children && node.children.length) {\n                    current = insertLine(arr, current, true);\n                    insertIndent(arr, current);\n                }\n            }\n            if (node.children && node.children.length) {\n                for (var i = 0, ci; (ci = node.children[i++]); ) {\n                    if (formatter && ci.type == 'element' && !dtd.$inlineWithA[ci.tagName] && i > 1) {\n                        insertLine(arr, current);\n                        insertIndent(arr, current);\n                    }\n                    nodeToHtml(ci, arr, formatter, current);\n                }\n            }\n            if (!dtd.$empty[node.tagName]) {\n                if (formatter && !dtd.$inlineWithA[node.tagName] && node.tagName != 'pre') {\n                    if (node.children && node.children.length) {\n                        current = insertLine(arr, current);\n                        insertIndent(arr, current);\n                    }\n                }\n                arr.push('</' + node.tagName + '>');\n            }\n        }\n\n        function isComment(node, arr) {\n            arr.push('<!--' + node.data + '-->');\n        }\n\n        function getNodeById(root, id) {\n            var node;\n            if (root.type == 'element' && root.getAttr('id') == id) {\n                return root;\n            }\n            if (root.children && root.children.length) {\n                for (var i = 0, ci; (ci = root.children[i++]); ) {\n                    if ((node = getNodeById(ci, id))) {\n                        return node;\n                    }\n                }\n            }\n        }\n\n        function getNodesByTagName(node, tagName, arr) {\n            if (node.type == 'element' && node.tagName == tagName) {\n                arr.push(node);\n            }\n            if (node.children && node.children.length) {\n                for (var i = 0, ci; (ci = node.children[i++]); ) {\n                    getNodesByTagName(ci, tagName, arr);\n                }\n            }\n        }\n        function nodeTraversal(root, fn) {\n            if (root.children && root.children.length) {\n                for (var i = 0, ci; (ci = root.children[i]); ) {\n                    nodeTraversal(ci, fn);\n                    //ci被替换的情况，这里就不再走 fn了\n                    if (ci.parentNode) {\n                        if (ci.children && ci.children.length) {\n                            fn(ci);\n                        }\n                        if (ci.parentNode) i++;\n                    }\n                }\n            } else {\n                fn(root);\n            }\n        }\n        uNode.prototype = {\n            /**\n             * 当前节点对象，转换成html文本\n             * @method toHtml\n             * @return { String } 返回转换后的html字符串\n             * @example\n             * ```javascript\n             * node.toHtml();\n             * ```\n             */\n\n            /**\n             * 当前节点对象，转换成html文本\n             * @method toHtml\n             * @param { Boolean } formatter 是否格式化返回值\n             * @return { String } 返回转换后的html字符串\n             * @example\n             * ```javascript\n             * node.toHtml( true );\n             * ```\n             */\n            toHtml: function (formatter) {\n                var arr = [];\n                nodeToHtml(this, arr, formatter, 0);\n                return arr.join('');\n            },\n\n            /**\n             * 获取节点的html内容\n             * @method innerHTML\n             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点\n             * @return { String } 返回节点的html内容\n             * @example\n             * ```javascript\n             * var htmlstr = node.innerHTML();\n             * ```\n             */\n\n            /**\n             * 设置节点的html内容\n             * @method innerHTML\n             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点\n             * @param { String } htmlstr 传入要设置的html内容\n             * @return { UE.uNode } 返回节点本身\n             * @example\n             * ```javascript\n             * node.innerHTML('<span>text</span>');\n             * ```\n             */\n            innerHTML: function (htmlstr) {\n                if (this.type != 'element' || dtd.$empty[this.tagName]) {\n                    return this;\n                }\n                if (utils.isString(htmlstr)) {\n                    if (this.children) {\n                        for (var i = 0, ci; (ci = this.children[i++]); ) {\n                            ci.parentNode = null;\n                        }\n                    }\n                    this.children = [];\n                    var tmpRoot = UE.htmlparser(htmlstr);\n                    for (var i = 0, ci; (ci = tmpRoot.children[i++]); ) {\n                        this.children.push(ci);\n                        ci.parentNode = this;\n                    }\n                    return this;\n                } else {\n                    var tmpRoot = new UE.uNode({\n                        type: 'root',\n                        children: this.children\n                    });\n                    return tmpRoot.toHtml();\n                }\n            },\n\n            /**\n             * 获取节点的纯文本内容\n             * @method innerText\n             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点\n             * @return { String } 返回节点的存文本内容\n             * @example\n             * ```javascript\n             * var textStr = node.innerText();\n             * ```\n             */\n\n            /**\n             * 设置节点的纯文本内容\n             * @method innerText\n             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点\n             * @param { String } textStr 传入要设置的文本内容\n             * @return { UE.uNode } 返回节点本身\n             * @example\n             * ```javascript\n             * node.innerText('<span>text</span>');\n             * ```\n             */\n            innerText: function (textStr, noTrans) {\n                if (this.type != 'element' || dtd.$empty[this.tagName]) {\n                    return this;\n                }\n                if (textStr) {\n                    if (this.children) {\n                        for (var i = 0, ci; (ci = this.children[i++]); ) {\n                            ci.parentNode = null;\n                        }\n                    }\n                    this.children = [];\n                    this.appendChild(uNode.createText(textStr, noTrans));\n                    return this;\n                } else {\n                    return this.toHtml().replace(/<[^>]+>/g, '');\n                }\n            },\n\n            /**\n             * 获取当前对象的data属性\n             * @method getData\n             * @return { Object } 若节点的type值是elemenet，返回空字符串，否则返回节点的data属性\n             * @example\n             * ```javascript\n             * node.getData();\n             * ```\n             */\n            getData: function () {\n                if (this.type == 'element') return '';\n                return this.data;\n            },\n\n            /**\n             * 获取当前节点下的第一个子节点\n             * @method firstChild\n             * @return { UE.uNode } 返回第一个子节点\n             * @example\n             * ```javascript\n             * node.firstChild(); //返回第一个子节点\n             * ```\n             */\n            firstChild: function () {\n                //            if (this.type != 'element' || dtd.$empty[this.tagName]) {\n                //                return this;\n                //            }\n                return this.children ? this.children[0] : null;\n            },\n\n            /**\n             * 获取当前节点下的最后一个子节点\n             * @method lastChild\n             * @return { UE.uNode } 返回最后一个子节点\n             * @example\n             * ```javascript\n             * node.lastChild(); //返回最后一个子节点\n             * ```\n             */\n            lastChild: function () {\n                //            if (this.type != 'element' || dtd.$empty[this.tagName] ) {\n                //                return this;\n                //            }\n                return this.children ? this.children[this.children.length - 1] : null;\n            },\n\n            /**\n             * 获取和当前节点有相同父亲节点的前一个节点\n             * @method previousSibling\n             * @return { UE.uNode } 返回前一个节点\n             * @example\n             * ```javascript\n             * node.children[2].previousSibling(); //返回子节点node.children[1]\n             * ```\n             */\n            previousSibling: function () {\n                var parent = this.parentNode;\n                for (var i = 0, ci; (ci = parent.children[i]); i++) {\n                    if (ci === this) {\n                        return i == 0 ? null : parent.children[i - 1];\n                    }\n                }\n            },\n\n            /**\n             * 获取和当前节点有相同父亲节点的后一个节点\n             * @method nextSibling\n             * @return { UE.uNode } 返回后一个节点,找不到返回null\n             * @example\n             * ```javascript\n             * node.children[2].nextSibling(); //如果有，返回子节点node.children[3]\n             * ```\n             */\n            nextSibling: function () {\n                var parent = this.parentNode;\n                for (var i = 0, ci; (ci = parent.children[i++]); ) {\n                    if (ci === this) {\n                        return parent.children[i];\n                    }\n                }\n            },\n\n            /**\n             * 用新的节点替换当前节点\n             * @method replaceChild\n             * @param { UE.uNode } target 要替换成该节点参数\n             * @param { UE.uNode } source 要被替换掉的节点\n             * @return { UE.uNode } 返回替换之后的节点对象\n             * @example\n             * ```javascript\n             * node.replaceChild(newNode, childNode); //用newNode替换childNode,childNode是node的子节点\n             * ```\n             */\n            replaceChild: function (target, source) {\n                if (this.children) {\n                    if (target.parentNode) {\n                        target.parentNode.removeChild(target);\n                    }\n                    for (var i = 0, ci; (ci = this.children[i]); i++) {\n                        if (ci === source) {\n                            this.children.splice(i, 1, target);\n                            source.parentNode = null;\n                            target.parentNode = this;\n                            return target;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * 在节点的子节点列表最后位置插入一个节点\n             * @method appendChild\n             * @param { UE.uNode } node 要插入的节点\n             * @return { UE.uNode } 返回刚插入的子节点\n             * @example\n             * ```javascript\n             * node.appendChild( newNode ); //在node内插入子节点newNode\n             * ```\n             */\n            appendChild: function (node) {\n                if (this.type == 'root' || (this.type == 'element' && !dtd.$empty[this.tagName])) {\n                    if (!this.children) {\n                        this.children = [];\n                    }\n                    if (node.parentNode) {\n                        node.parentNode.removeChild(node);\n                    }\n                    for (var i = 0, ci; (ci = this.children[i]); i++) {\n                        if (ci === node) {\n                            this.children.splice(i, 1);\n                            break;\n                        }\n                    }\n                    this.children.push(node);\n                    node.parentNode = this;\n                    return node;\n                }\n            },\n\n            /**\n             * 在传入节点的前面插入一个节点\n             * @method insertBefore\n             * @param { UE.uNode } target 要插入的节点\n             * @param { UE.uNode } source 在该参数节点前面插入\n             * @return { UE.uNode } 返回刚插入的子节点\n             * @example\n             * ```javascript\n             * node.parentNode.insertBefore(newNode, node); //在node节点后面插入newNode\n             * ```\n             */\n            insertBefore: function (target, source) {\n                if (this.children) {\n                    if (target.parentNode) {\n                        target.parentNode.removeChild(target);\n                    }\n                    for (var i = 0, ci; (ci = this.children[i]); i++) {\n                        if (ci === source) {\n                            this.children.splice(i, 0, target);\n                            target.parentNode = this;\n                            return target;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * 在传入节点的后面插入一个节点\n             * @method insertAfter\n             * @param { UE.uNode } target 要插入的节点\n             * @param { UE.uNode } source 在该参数节点后面插入\n             * @return { UE.uNode } 返回刚插入的子节点\n             * @example\n             * ```javascript\n             * node.parentNode.insertAfter(newNode, node); //在node节点后面插入newNode\n             * ```\n             */\n            insertAfter: function (target, source) {\n                if (this.children) {\n                    if (target.parentNode) {\n                        target.parentNode.removeChild(target);\n                    }\n                    for (var i = 0, ci; (ci = this.children[i]); i++) {\n                        if (ci === source) {\n                            this.children.splice(i + 1, 0, target);\n                            target.parentNode = this;\n                            return target;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * 从当前节点的子节点列表中，移除节点\n             * @method removeChild\n             * @param { UE.uNode } node 要移除的节点引用\n             * @param { Boolean } keepChildren 是否保留移除节点的子节点，若传入true，自动把移除节点的子节点插入到移除的位置\n             * @return { * } 返回刚移除的子节点\n             * @example\n             * ```javascript\n             * node.removeChild(childNode,true); //在node的子节点列表中移除child节点，并且吧child的子节点插入到移除的位置\n             * ```\n             */\n            removeChild: function (node, keepChildren) {\n                if (this.children) {\n                    for (var i = 0, ci; (ci = this.children[i]); i++) {\n                        if (ci === node) {\n                            this.children.splice(i, 1);\n                            ci.parentNode = null;\n                            if (keepChildren && ci.children && ci.children.length) {\n                                for (var j = 0, cj; (cj = ci.children[j]); j++) {\n                                    this.children.splice(i + j, 0, cj);\n                                    cj.parentNode = this;\n                                }\n                            }\n                            return ci;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * 获取当前节点所代表的元素属性，即获取attrs对象下的属性值\n             * @method getAttr\n             * @param { String } attrName 要获取的属性名称\n             * @return { * } 返回attrs对象下的属性值\n             * @example\n             * ```javascript\n             * node.getAttr('title');\n             * ```\n             */\n            getAttr: function (attrName) {\n                return this.attrs && this.attrs[attrName.toLowerCase()];\n            },\n\n            /**\n             * 设置当前节点所代表的元素属性，即设置attrs对象下的属性值\n             * @method setAttr\n             * @param { String } attrName 要设置的属性名称\n             * @param { * } attrVal 要设置的属性值，类型视设置的属性而定\n             * @return { * } 返回attrs对象下的属性值\n             * @example\n             * ```javascript\n             * node.setAttr('title','标题');\n             * ```\n             */\n            setAttr: function (attrName, attrVal) {\n                if (!attrName) {\n                    delete this.attrs;\n                    return;\n                }\n                if (!this.attrs) {\n                    this.attrs = {};\n                }\n                if (utils.isObject(attrName)) {\n                    for (var a in attrName) {\n                        if (!attrName[a]) {\n                            delete this.attrs[a];\n                        } else {\n                            this.attrs[a.toLowerCase()] = attrName[a];\n                        }\n                    }\n                } else {\n                    if (!attrVal) {\n                        delete this.attrs[attrName];\n                    } else {\n                        this.attrs[attrName.toLowerCase()] = attrVal;\n                    }\n                }\n            },\n\n            /**\n             * 获取当前节点在父节点下的位置索引\n             * @method getIndex\n             * @return { Number } 返回索引数值，如果没有父节点，返回-1\n             * @example\n             * ```javascript\n             * node.getIndex();\n             * ```\n             */\n            getIndex: function () {\n                var parent = this.parentNode;\n                for (var i = 0, ci; (ci = parent.children[i]); i++) {\n                    if (ci === this) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n\n            /**\n             * 在当前节点下，根据id查找节点\n             * @method getNodeById\n             * @param { String } id 要查找的id\n             * @return { UE.uNode } 返回找到的节点\n             * @example\n             * ```javascript\n             * node.getNodeById('textId');\n             * ```\n             */\n            getNodeById: function (id) {\n                var node;\n                if (this.children && this.children.length) {\n                    for (var i = 0, ci; (ci = this.children[i++]); ) {\n                        if ((node = getNodeById(ci, id))) {\n                            return node;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * 在当前节点下，根据元素名称查找节点列表\n             * @method getNodesByTagName\n             * @param { String } tagNames 要查找的元素名称\n             * @return { Array } 返回找到的节点列表\n             * @example\n             * ```javascript\n             * node.getNodesByTagName('span');\n             * ```\n             */\n            getNodesByTagName: function (tagNames) {\n                tagNames = utils\n                    .trim(tagNames)\n                    .replace(/[ ]{2,}/g, ' ')\n                    .split(' ');\n                var arr = [],\n                    me = this;\n                utils.each(tagNames, function (tagName) {\n                    if (me.children && me.children.length) {\n                        for (var i = 0, ci; (ci = me.children[i++]); ) {\n                            getNodesByTagName(ci, tagName, arr);\n                        }\n                    }\n                });\n                return arr;\n            },\n\n            /**\n             * 根据样式名称，获取节点的样式值\n             * @method getStyle\n             * @param { String } name 要获取的样式名称\n             * @return { String } 返回样式值\n             * @example\n             * ```javascript\n             * node.getStyle('font-size');\n             * ```\n             */\n            getStyle: function (name) {\n                var cssStyle = this.getAttr('style');\n                if (!cssStyle) {\n                    return '';\n                }\n                var reg = new RegExp('(^|;)\\\\s*' + name + ':([^;]+)', 'i');\n                var match = cssStyle.match(reg);\n                if (match && match[0]) {\n                    return match[2];\n                }\n                return '';\n            },\n\n            /**\n             * 给节点设置样式\n             * @method setStyle\n             * @param { String } name 要设置的的样式名称\n             * @param { String } val 要设置的的样值\n             * @example\n             * ```javascript\n             * node.setStyle('font-size', '12px');\n             * ```\n             */\n            setStyle: function (name, val) {\n                function exec(name, val) {\n                    var reg = new RegExp('(^|;)\\\\s*' + name + ':([^;]+;?)', 'gi');\n                    cssStyle = cssStyle.replace(reg, '$1');\n                    if (val) {\n                        cssStyle = name + ':' + utils.unhtml(val) + ';' + cssStyle;\n                    }\n                }\n\n                var cssStyle = this.getAttr('style');\n                if (!cssStyle) {\n                    cssStyle = '';\n                }\n                if (utils.isObject(name)) {\n                    for (var a in name) {\n                        exec(a, name[a]);\n                    }\n                } else {\n                    exec(name, val);\n                }\n                this.setAttr('style', utils.trim(cssStyle));\n            },\n\n            /**\n             * 传入一个函数，递归遍历当前节点下的所有节点\n             * @method traversal\n             * @param { Function } fn 遍历到节点的时，传入节点作为参数，运行此函数\n             * @example\n             * ```javascript\n             * traversal(node, function(){\n             *     console.log(node.type);\n             * });\n             * ```\n             */\n            traversal: function (fn) {\n                if (this.children && this.children.length) {\n                    nodeTraversal(this, fn);\n                }\n                return this;\n            }\n        };\n    })();\n\n    // core/htmlparser.js\n    /**\n     * html字符串转换成uNode节点\n     * @file\n     * @module UE\n     * @since 1.2.6.1\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @unfile\n     * @module UE\n     */\n\n    /**\n     * html字符串转换成uNode节点的静态方法\n     * @method htmlparser\n     * @param { String } htmlstr 要转换的html代码\n     * @param { Boolean } ignoreBlank 若设置为true，转换的时候忽略\\n\\r\\t等空白字符\n     * @return { uNode } 给定的html片段转换形成的uNode对象\n     * @example\n     * ```javascript\n     * var root = UE.htmlparser('<p><b>htmlparser</b></p>', true);\n     * ```\n     */\n\n    var htmlparser = (UE.htmlparser = function (htmlstr, ignoreBlank) {\n        //todo 原来的方式  [^\"'<>\\/] 有\\/就不能配对上 <TD vAlign=top background=../AAA.JPG> 这样的标签了\n        //先去掉了，加上的原因忘了，这里先记录\n        var re_tag =\n                /<(?:(?:\\/([^>]+)>)|(?:!--([\\S|\\s]*?)-->)|(?:([^\\s\\/<>]+)\\s*((?:(?:\"[^\"]*\")|(?:'[^']*')|[^\"'<>])*)\\/?>))/g,\n            re_attr = /([\\w\\-:.]+)(?:(?:\\s*=\\s*(?:(?:\"([^\"]*)\")|(?:'([^']*)')|([^\\s>]+)))|(?=\\s|$))/g;\n\n        //ie下取得的html可能会有\\n存在，要去掉，在处理replace(/[\\t\\r\\n]*/g,'');代码高量的\\n不能去除\n        var allowEmptyTags = {\n            b: 1,\n            code: 1,\n            i: 1,\n            u: 1,\n            strike: 1,\n            s: 1,\n            tt: 1,\n            strong: 1,\n            q: 1,\n            samp: 1,\n            em: 1,\n            span: 1,\n            sub: 1,\n            img: 1,\n            sup: 1,\n            font: 1,\n            big: 1,\n            small: 1,\n            iframe: 1,\n            a: 1,\n            br: 1,\n            pre: 1\n        };\n        htmlstr = htmlstr.replace(new RegExp(domUtils.fillChar, 'g'), '');\n        if (!ignoreBlank) {\n            htmlstr = htmlstr.replace(\n                new RegExp(\n                    '[\\\\r\\\\t\\\\n' +\n                        (ignoreBlank ? '' : ' ') +\n                        ']*</?(\\\\w+)\\\\s*(?:[^>]*)>[\\\\r\\\\t\\\\n' +\n                        (ignoreBlank ? '' : ' ') +\n                        ']*',\n                    'g'\n                ),\n                function (a, b) {\n                    //br暂时单独处理\n                    if (b && allowEmptyTags[b.toLowerCase()]) {\n                        return a.replace(/(^[\\n\\r]+)|([\\n\\r]+$)/g, '');\n                    }\n                    return a\n                        .replace(new RegExp('^[\\\\r\\\\n' + (ignoreBlank ? '' : ' ') + ']+'), '')\n                        .replace(new RegExp('[\\\\r\\\\n' + (ignoreBlank ? '' : ' ') + ']+$'), '');\n                }\n            );\n        }\n\n        var notTransAttrs = {\n            href: 1,\n            src: 1\n        };\n\n        var uNode = UE.uNode,\n            needParentNode = {\n                td: 'tr',\n                tr: ['tbody', 'thead', 'tfoot'],\n                tbody: 'table',\n                th: 'tr',\n                thead: 'table',\n                tfoot: 'table',\n                caption: 'table',\n                li: ['ul', 'ol'],\n                dt: 'dl',\n                dd: 'dl',\n                option: 'select'\n            },\n            needChild = {\n                ol: 'li',\n                ul: 'li'\n            };\n\n        function text(parent, data) {\n            if (needChild[parent.tagName]) {\n                var tmpNode = uNode.createElement(needChild[parent.tagName]);\n                parent.appendChild(tmpNode);\n                tmpNode.appendChild(uNode.createText(data));\n                parent = tmpNode;\n            } else {\n                parent.appendChild(uNode.createText(data));\n            }\n        }\n\n        function element(parent, tagName, htmlattr) {\n            var needParentTag;\n            if ((needParentTag = needParentNode[tagName])) {\n                var tmpParent = parent,\n                    hasParent;\n                while (tmpParent.type != 'root') {\n                    if (\n                        utils.isArray(needParentTag)\n                            ? utils.indexOf(needParentTag, tmpParent.tagName) != -1\n                            : needParentTag == tmpParent.tagName\n                    ) {\n                        parent = tmpParent;\n                        hasParent = true;\n                        break;\n                    }\n                    tmpParent = tmpParent.parentNode;\n                }\n                if (!hasParent) {\n                    parent = element(parent, utils.isArray(needParentTag) ? needParentTag[0] : needParentTag);\n                }\n            }\n            //按dtd处理嵌套\n            //        if(parent.type != 'root' && !dtd[parent.tagName][tagName])\n            //            parent = parent.parentNode;\n            var elm = new uNode({\n                parentNode: parent,\n                type: 'element',\n                tagName: tagName.toLowerCase(),\n                //是自闭合的处理一下\n                children: dtd.$empty[tagName] ? null : []\n            });\n            //如果属性存在，处理属性\n            if (htmlattr) {\n                var attrs = {},\n                    match;\n                while ((match = re_attr.exec(htmlattr))) {\n                    attrs[match[1].toLowerCase()] = notTransAttrs[match[1].toLowerCase()]\n                        ? match[2] || match[3] || match[4]\n                        : utils.unhtml(match[2] || match[3] || match[4]);\n                }\n                elm.attrs = attrs;\n            }\n            //trace:3970\n            //        //如果parent下不能放elm\n            //        if(dtd.$inline[parent.tagName] && dtd.$block[elm.tagName] && !dtd[parent.tagName][elm.tagName]){\n            //            parent = parent.parentNode;\n            //            elm.parentNode = parent;\n            //        }\n            parent.children.push(elm);\n            //如果是自闭合节点返回父亲节点\n            return dtd.$empty[tagName] ? parent : elm;\n        }\n\n        function comment(parent, data) {\n            parent.children.push(\n                new uNode({\n                    type: 'comment',\n                    data: data,\n                    parentNode: parent\n                })\n            );\n        }\n\n        var match,\n            currentIndex = 0,\n            nextIndex = 0;\n        //设置根节点\n        var root = new uNode({\n            type: 'root',\n            children: []\n        });\n        var currentParent = root;\n\n        while ((match = re_tag.exec(htmlstr))) {\n            currentIndex = match.index;\n            try {\n                if (currentIndex > nextIndex) {\n                    //text node\n                    text(currentParent, htmlstr.slice(nextIndex, currentIndex));\n                }\n                if (match[3]) {\n                    if (dtd.$cdata[currentParent.tagName]) {\n                        text(currentParent, match[0]);\n                    } else {\n                        //start tag\n                        currentParent = element(currentParent, match[3].toLowerCase(), match[4]);\n                    }\n                } else if (match[1]) {\n                    if (currentParent.type != 'root') {\n                        if (dtd.$cdata[currentParent.tagName] && !dtd.$cdata[match[1]]) {\n                            text(currentParent, match[0]);\n                        } else {\n                            var tmpParent = currentParent;\n                            while (currentParent.type == 'element' && currentParent.tagName != match[1].toLowerCase()) {\n                                currentParent = currentParent.parentNode;\n                                if (currentParent.type == 'root') {\n                                    currentParent = tmpParent;\n                                    throw 'break';\n                                }\n                            }\n                            //end tag\n                            currentParent = currentParent.parentNode;\n                        }\n                    }\n                } else if (match[2]) {\n                    //comment\n                    comment(currentParent, match[2]);\n                }\n            } catch (e) {}\n\n            nextIndex = re_tag.lastIndex;\n        }\n        //如果结束是文本，就有可能丢掉，所以这里手动判断一下\n        //例如 <li>sdfsdfsdf<li>sdfsdfsdfsdf\n        if (nextIndex < htmlstr.length) {\n            text(currentParent, htmlstr.slice(nextIndex));\n        }\n        return root;\n    });\n\n    // core/filternode.js\n    /**\n     * UE过滤节点的静态方法\n     * @file\n     */\n\n    /**\n     * UEditor公用空间，UEditor所有的功能都挂载在该空间下\n     * @module UE\n     */\n\n    /**\n     * 根据传入节点和过滤规则过滤相应节点\n     * @module UE\n     * @since 1.2.6.1\n     * @method filterNode\n     * @param { Object } root 指定root节点\n     * @param { Object } rules 过滤规则json对象\n     * @example\n     * ```javascript\n     * UE.filterNode(root,editor.options.filterRules);\n     * ```\n     */\n    var filterNode = (UE.filterNode = (function () {\n        function filterNode(node, rules) {\n            switch (node.type) {\n                case 'text':\n                    break;\n                case 'element':\n                    var val;\n                    if ((val = rules[node.tagName])) {\n                        if (val === '-') {\n                            node.parentNode.removeChild(node);\n                        } else if (utils.isFunction(val)) {\n                            var parentNode = node.parentNode,\n                                index = node.getIndex();\n                            val(node);\n                            if (node.parentNode) {\n                                if (node.children) {\n                                    for (var i = 0, ci; (ci = node.children[i]); ) {\n                                        filterNode(ci, rules);\n                                        if (ci.parentNode) {\n                                            i++;\n                                        }\n                                    }\n                                }\n                            } else {\n                                for (var i = index, ci; (ci = parentNode.children[i]); ) {\n                                    filterNode(ci, rules);\n                                    if (ci.parentNode) {\n                                        i++;\n                                    }\n                                }\n                            }\n                        } else {\n                            var attrs = val['$'];\n                            if (attrs && node.attrs) {\n                                var tmpAttrs = {},\n                                    tmpVal;\n                                for (var a in attrs) {\n                                    tmpVal = node.getAttr(a);\n                                    //todo 只先对style单独处理\n                                    if (a == 'style' && utils.isArray(attrs[a])) {\n                                        var tmpCssStyle = [];\n                                        utils.each(attrs[a], function (v) {\n                                            var tmp;\n                                            if ((tmp = node.getStyle(v))) {\n                                                tmpCssStyle.push(v + ':' + tmp);\n                                            }\n                                        });\n                                        tmpVal = tmpCssStyle.join(';');\n                                    }\n                                    if (tmpVal) {\n                                        tmpAttrs[a] = tmpVal;\n                                    }\n                                }\n                                node.attrs = tmpAttrs;\n                            }\n                            if (node.children) {\n                                for (var i = 0, ci; (ci = node.children[i]); ) {\n                                    filterNode(ci, rules);\n                                    if (ci.parentNode) {\n                                        i++;\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        //如果不在名单里扣出子节点并删除该节点,cdata除外\n                        if (dtd.$cdata[node.tagName]) {\n                            node.parentNode.removeChild(node);\n                        } else {\n                            var parentNode = node.parentNode,\n                                index = node.getIndex();\n                            node.parentNode.removeChild(node, true);\n                            for (var i = index, ci; (ci = parentNode.children[i]); ) {\n                                filterNode(ci, rules);\n                                if (ci.parentNode) {\n                                    i++;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'comment':\n                    node.parentNode.removeChild(node);\n            }\n        }\n        return function (root, rules) {\n            if (utils.isEmptyObject(rules)) {\n                return root;\n            }\n            var val;\n            if ((val = rules['-'])) {\n                utils.each(val.split(' '), function (k) {\n                    rules[k] = '-';\n                });\n            }\n            for (var i = 0, ci; (ci = root.children[i]); ) {\n                filterNode(ci, rules);\n                if (ci.parentNode) {\n                    i++;\n                }\n            }\n            return root;\n        };\n    })());\n\n    // core/plugin.js\n    /**\n     * Created with JetBrains PhpStorm.\n     * User: campaign\n     * Date: 10/8/13\n     * Time: 6:15 PM\n     * To change this template use File | Settings | File Templates.\n     */\n    UE.plugin = (function () {\n        var _plugins = {};\n        return {\n            register: function (pluginName, fn, oldOptionName, afterDisabled) {\n                if (oldOptionName && utils.isFunction(oldOptionName)) {\n                    afterDisabled = oldOptionName;\n                    oldOptionName = null;\n                }\n                _plugins[pluginName] = {\n                    optionName: oldOptionName || pluginName,\n                    execFn: fn,\n                    //当插件被禁用时执行\n                    afterDisabled: afterDisabled\n                };\n            },\n            load: function (editor) {\n                utils.each(_plugins, function (plugin) {\n                    var _export = plugin.execFn.call(editor);\n                    if (editor.options[plugin.optionName] !== false) {\n                        if (_export) {\n                            //后边需要再做扩展\n                            utils.each(_export, function (v, k) {\n                                switch (k.toLowerCase()) {\n                                    case 'shortcutkey':\n                                        editor.addshortcutkey(v);\n                                        break;\n                                    case 'bindevents':\n                                        utils.each(v, function (fn, eventName) {\n                                            editor.addListener(eventName, fn);\n                                        });\n                                        break;\n                                    case 'bindmultievents':\n                                        utils.each(utils.isArray(v) ? v : [v], function (event) {\n                                            var types = utils.trim(event.type).split(/\\s+/);\n                                            utils.each(types, function (eventName) {\n                                                editor.addListener(eventName, event.handler);\n                                            });\n                                        });\n                                        break;\n                                    case 'commands':\n                                        utils.each(v, function (execFn, execName) {\n                                            editor.commands[execName] = execFn;\n                                        });\n                                        break;\n                                    case 'outputrule':\n                                        editor.addOutputRule(v);\n                                        break;\n                                    case 'inputrule':\n                                        editor.addInputRule(v);\n                                        break;\n                                    case 'defaultoptions':\n                                        editor.setOpt(v);\n                                }\n                            });\n                        }\n                    } else if (plugin.afterDisabled) {\n                        plugin.afterDisabled.call(editor);\n                    }\n                });\n                //向下兼容\n                utils.each(UE.plugins, function (plugin) {\n                    plugin.call(editor);\n                });\n            },\n            run: function (pluginName, editor) {\n                var plugin = _plugins[pluginName];\n                if (plugin) {\n                    plugin.exeFn.call(editor);\n                }\n            }\n        };\n    })();\n\n    // core/keymap.js\n    var keymap = (UE.keymap = {\n        Backspace: 8,\n        Tab: 9,\n        Enter: 13,\n\n        Shift: 16,\n        Control: 17,\n        Alt: 18,\n        CapsLock: 20,\n\n        Esc: 27,\n\n        Spacebar: 32,\n\n        PageUp: 33,\n        PageDown: 34,\n        End: 35,\n        Home: 36,\n\n        Left: 37,\n        Up: 38,\n        Right: 39,\n        Down: 40,\n\n        Insert: 45,\n\n        Del: 46,\n\n        NumLock: 144,\n\n        Cmd: 91,\n\n        '=': 187,\n        '-': 189,\n\n        b: 66,\n        i: 73,\n        //回退\n        z: 90,\n        y: 89,\n        //粘贴\n        v: 86,\n        x: 88,\n\n        s: 83,\n\n        n: 78\n    });\n\n    // core/localstorage.js\n    //存储媒介封装\n    var LocalStorage = (UE.LocalStorage = (function () {\n        var storage = window.localStorage || getUserData() || null,\n            LOCAL_FILE = 'localStorage';\n\n        return {\n            saveLocalData: function (key, data) {\n                if (storage && data) {\n                    storage.setItem(key, data);\n                    return true;\n                }\n\n                return false;\n            },\n\n            getLocalData: function (key) {\n                if (storage) {\n                    return storage.getItem(key);\n                }\n\n                return null;\n            },\n\n            removeItem: function (key) {\n                storage && storage.removeItem(key);\n            }\n        };\n\n        function getUserData() {\n            var container = document.createElement('div');\n            container.style.display = 'none';\n\n            if (!container.addBehavior) {\n                return null;\n            }\n\n            container.addBehavior('#default#userdata');\n\n            return {\n                getItem: function (key) {\n                    var result = null;\n\n                    try {\n                        document.body.appendChild(container);\n                        container.load(LOCAL_FILE);\n                        result = container.getAttribute(key);\n                        document.body.removeChild(container);\n                    } catch (e) {}\n\n                    return result;\n                },\n\n                setItem: function (key, value) {\n                    document.body.appendChild(container);\n                    container.setAttribute(key, value);\n                    container.save(LOCAL_FILE);\n                    document.body.removeChild(container);\n                },\n\n                //// 暂时没有用到\n                //clear: function () {\n                //\n                //    var expiresTime = new Date();\n                //    expiresTime.setFullYear(expiresTime.getFullYear() - 1);\n                //    document.body.appendChild(container);\n                //    container.expires = expiresTime.toUTCString();\n                //    container.save(LOCAL_FILE);\n                //    document.body.removeChild(container);\n                //\n                //},\n\n                removeItem: function (key) {\n                    document.body.appendChild(container);\n                    container.removeAttribute(key);\n                    container.save(LOCAL_FILE);\n                    document.body.removeChild(container);\n                }\n            };\n        }\n    })());\n\n    (function () {\n        var ROOTKEY = 'ueditor_preference';\n\n        UE.Editor.prototype.setPreferences = function (key, value) {\n            var obj = {};\n            if (utils.isString(key)) {\n                obj[key] = value;\n            } else {\n                obj = key;\n            }\n            var data = LocalStorage.getLocalData(ROOTKEY);\n            if (data && (data = utils.str2json(data))) {\n                utils.extend(data, obj);\n            } else {\n                data = obj;\n            }\n            data && LocalStorage.saveLocalData(ROOTKEY, utils.json2str(data));\n        };\n\n        UE.Editor.prototype.getPreferences = function (key) {\n            var data = LocalStorage.getLocalData(ROOTKEY);\n            if (data && (data = utils.str2json(data))) {\n                return key ? data[key] : data;\n            }\n            return null;\n        };\n\n        UE.Editor.prototype.removePreferences = function (key) {\n            var data = LocalStorage.getLocalData(ROOTKEY);\n            if (data && (data = utils.str2json(data))) {\n                data[key] = undefined;\n                delete data[key];\n            }\n            data && LocalStorage.saveLocalData(ROOTKEY, utils.json2str(data));\n        };\n    })();\n\n    // plugins/defaultfilter.js\n    ///import core\n    ///plugin 编辑器默认的过滤转换机制\n\n    UE.plugins['defaultfilter'] = function () {\n        var me = this;\n        me.setOpt({\n            allowDivTransToP: true,\n            disabledTableInTable: true\n        });\n        //默认的过滤处理\n        //进入编辑器的内容处理\n        me.addInputRule(function (root) {\n            var allowDivTransToP = this.options.allowDivTransToP;\n            var val;\n            function tdParent(node) {\n                while (node && node.type == 'element') {\n                    if (node.tagName == 'td') {\n                        return true;\n                    }\n                    node = node.parentNode;\n                }\n                return false;\n            }\n            //进行默认的处理\n            root.traversal(function (node) {\n                if (node.type == 'element') {\n                    if (\n                        !dtd.$cdata[node.tagName] &&\n                        me.options.autoClearEmptyNode &&\n                        dtd.$inline[node.tagName] &&\n                        !dtd.$empty[node.tagName] &&\n                        (!node.attrs || utils.isEmptyObject(node.attrs))\n                    ) {\n                        if (!node.firstChild()) node.parentNode.removeChild(node);\n                        else if (node.tagName == 'span' && (!node.attrs || utils.isEmptyObject(node.attrs))) {\n                            node.parentNode.removeChild(node, true);\n                        }\n                        return;\n                    }\n                    switch (node.tagName) {\n                        case 'style':\n                        case 'script':\n                            node.setAttr({\n                                cdata_tag: node.tagName,\n                                cdata_data: node.innerHTML() || '',\n                                _ue_custom_node_: 'true'\n                            });\n                            node.tagName = 'div';\n                            node.innerHTML('');\n                            break;\n                        case 'a':\n                            if ((val = node.getAttr('href'))) {\n                                node.setAttr('_href', val);\n                            }\n                            break;\n                        case 'img':\n                            //todo base64暂时去掉，后边做远程图片上传后，干掉这个\n                            if ((val = node.getAttr('src'))) {\n                                if (/^data:/.test(val)) {\n                                    node.parentNode.removeChild(node);\n                                    break;\n                                }\n                            }\n                            node.setAttr('_src', node.getAttr('src'));\n                            break;\n                        case 'span':\n                            if (browser.webkit && (val = node.getStyle('white-space'))) {\n                                if (/nowrap|normal/.test(val)) {\n                                    node.setStyle('white-space', '');\n                                    if (me.options.autoClearEmptyNode && utils.isEmptyObject(node.attrs)) {\n                                        node.parentNode.removeChild(node, true);\n                                    }\n                                }\n                            }\n                            val = node.getAttr('id');\n                            if (val && /^_baidu_bookmark_/i.test(val)) {\n                                node.parentNode.removeChild(node);\n                            }\n                            break;\n                        case 'p':\n                            if ((val = node.getAttr('align'))) {\n                                node.setAttr('align');\n                                node.setStyle('text-align', val);\n                            }\n                            //trace:3431\n                            //                        var cssStyle = node.getAttr('style');\n                            //                        if (cssStyle) {\n                            //                            cssStyle = cssStyle.replace(/(margin|padding)[^;]+/g, '');\n                            //                            node.setAttr('style', cssStyle)\n                            //\n                            //                        }\n                            //p标签不允许嵌套\n                            utils.each(node.children, function (n) {\n                                if (n.type == 'element' && n.tagName == 'p') {\n                                    var next = n.nextSibling();\n                                    node.parentNode.insertAfter(n, node);\n                                    var last = n;\n                                    while (next) {\n                                        var tmp = next.nextSibling();\n                                        node.parentNode.insertAfter(next, last);\n                                        last = next;\n                                        next = tmp;\n                                    }\n                                    return false;\n                                }\n                            });\n                            if (!node.firstChild()) {\n                                node.innerHTML(browser.ie ? '&nbsp;' : '<br/>');\n                            }\n                            break;\n                        case 'div':\n                            if (node.getAttr('cdata_tag')) {\n                                break;\n                            }\n                            //针对代码这里不处理插入代码的div\n                            val = node.getAttr('class');\n                            if (val && /^line number\\d+/.test(val)) {\n                                break;\n                            }\n                            if (!allowDivTransToP) {\n                                break;\n                            }\n                            var tmpNode,\n                                p = UE.uNode.createElement('p');\n                            while ((tmpNode = node.firstChild())) {\n                                if (tmpNode.type == 'text' || !UE.dom.dtd.$block[tmpNode.tagName]) {\n                                    p.appendChild(tmpNode);\n                                } else {\n                                    if (p.firstChild()) {\n                                        node.parentNode.insertBefore(p, node);\n                                        p = UE.uNode.createElement('p');\n                                    } else {\n                                        node.parentNode.insertBefore(tmpNode, node);\n                                    }\n                                }\n                            }\n                            if (p.firstChild()) {\n                                node.parentNode.insertBefore(p, node);\n                            }\n                            node.parentNode.removeChild(node);\n                            break;\n                        case 'dl':\n                            node.tagName = 'ul';\n                            break;\n                        case 'dt':\n                        case 'dd':\n                            node.tagName = 'li';\n                            break;\n                        case 'li':\n                            var className = node.getAttr('class');\n                            if (!className || !/list\\-/.test(className)) {\n                                // 粘贴word后，li标签样式会丢，所以干掉 https://app.asana.com/0/357313196454880/1205247371626226/f\n                                // node.setAttr();\n                            }\n                            var tmpNodes = node.getNodesByTagName('ol ul');\n                            UE.utils.each(tmpNodes, function (n) {\n                                node.parentNode.insertAfter(n, node);\n                            });\n                            break;\n                        case 'td':\n                        case 'th':\n                        case 'caption':\n                            if (!node.children || !node.children.length) {\n                                node.appendChild(\n                                    browser.ie11below ? UE.uNode.createText(' ') : UE.uNode.createElement('br')\n                                );\n                            }\n                            break;\n                        case 'table':\n                            if (me.options.disabledTableInTable && tdParent(node)) {\n                                node.parentNode.insertBefore(UE.uNode.createText(node.innerText()), node);\n                                node.parentNode.removeChild(node);\n                            }\n                    }\n                }\n                //            if(node.type == 'comment'){\n                //                node.parentNode.removeChild(node);\n                //            }\n            });\n        });\n\n        //从编辑器出去的内容处理\n        me.addOutputRule(function (root) {\n            var val;\n            root.traversal(function (node) {\n                if (node.type == 'element') {\n                    if (\n                        me.options.autoClearEmptyNode &&\n                        dtd.$inline[node.tagName] &&\n                        !dtd.$empty[node.tagName] &&\n                        (!node.attrs || utils.isEmptyObject(node.attrs))\n                    ) {\n                        if (!node.firstChild()) node.parentNode.removeChild(node);\n                        else if (node.tagName == 'span' && (!node.attrs || utils.isEmptyObject(node.attrs))) {\n                            node.parentNode.removeChild(node, true);\n                        }\n                        return;\n                    }\n                    switch (node.tagName) {\n                        case 'div':\n                            if ((val = node.getAttr('cdata_tag'))) {\n                                node.tagName = val;\n                                node.appendChild(UE.uNode.createText(node.getAttr('cdata_data')));\n                                node.setAttr({ cdata_tag: '', cdata_data: '', _ue_custom_node_: '' });\n                            }\n                            break;\n                        case 'a':\n                            if ((val = node.getAttr('_href'))) {\n                                node.setAttr({\n                                    href: utils.html(val),\n                                    _href: ''\n                                });\n                            }\n                            break;\n                            break;\n                        case 'span':\n                            val = node.getAttr('id');\n                            if (val && /^_baidu_bookmark_/i.test(val)) {\n                                node.parentNode.removeChild(node);\n                            }\n                            break;\n                        case 'img':\n                            if ((val = node.getAttr('_src'))) {\n                                node.setAttr({\n                                    src: node.getAttr('_src'),\n                                    _src: ''\n                                });\n                            }\n                    }\n                }\n            });\n        });\n    };\n\n    // plugins/inserthtml.js\n    /**\n     * 插入html字符串插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入html代码\n     * @command inserthtml\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } html 插入的html字符串\n     * @remaind 插入的标签内容是在当前的选区位置上插入，如果当前是闭合状态，那直接插入内容， 如果当前是选中状态，将先清除当前选中内容后，再做插入\n     * @warning 注意:该命令会对当前选区的位置，对插入的内容进行过滤转换处理。 过滤的规则遵循html语意化的原则。\n     * @example\n     * ```javascript\n     * //xxx[BB]xxx 当前选区为非闭合选区，选中BB这两个文本\n     * //执行命令，插入<b>CC</b>\n     * //插入后的效果 xxx<b>CC</b>xxx\n     * //<p>xx|xxx</p> 当前选区为闭合状态\n     * //插入<p>CC</p>\n     * //结果 <p>xx</p><p>CC</p><p>xxx</p>\n     * //<p>xxxx</p>|</p>xxx</p> 当前选区在两个p标签之间\n     * //插入 xxxx\n     * //结果 <p>xxxx</p><p>xxxx</p></p>xxx</p>\n     * ```\n     */\n\n    UE.commands['inserthtml'] = {\n        execCommand: function (command, html, notNeedFilter) {\n            var me = this,\n                range,\n                div;\n            if (!html) {\n                return;\n            }\n            if (me.fireEvent('beforeinserthtml', html) === true) {\n                return;\n            }\n            range = me.selection.getRange();\n            div = range.document.createElement('div');\n            div.style.display = 'inline';\n\n            if (!notNeedFilter) {\n                var root = UE.htmlparser(html);\n                //如果给了过滤规则就先进行过滤\n                if (me.options.filterRules) {\n                    UE.filterNode(root, me.options.filterRules);\n                }\n                //执行默认的处理\n                me.filterInputRule(root);\n                html = root.toHtml();\n            }\n            div.innerHTML = utils.trim(html);\n\n            if (!range.collapsed) {\n                var tmpNode = range.startContainer;\n                if (domUtils.isFillChar(tmpNode)) {\n                    range.setStartBefore(tmpNode);\n                }\n                tmpNode = range.endContainer;\n                if (domUtils.isFillChar(tmpNode)) {\n                    range.setEndAfter(tmpNode);\n                }\n                range.txtToElmBoundary();\n                //结束边界可能放到了br的前边，要把br包含进来\n                // x[xxx]<br/>\n                if (range.endContainer && range.endContainer.nodeType == 1) {\n                    tmpNode = range.endContainer.childNodes[range.endOffset];\n                    if (tmpNode && domUtils.isBr(tmpNode)) {\n                        range.setEndAfter(tmpNode);\n                    }\n                }\n                if (range.startOffset == 0) {\n                    tmpNode = range.startContainer;\n                    if (domUtils.isBoundaryNode(tmpNode, 'firstChild')) {\n                        tmpNode = range.endContainer;\n                        if (\n                            range.endOffset ==\n                                (tmpNode.nodeType == 3 ? tmpNode.nodeValue.length : tmpNode.childNodes.length) &&\n                            domUtils.isBoundaryNode(tmpNode, 'lastChild')\n                        ) {\n                            me.body.innerHTML = '<p>' + (browser.ie ? '' : '<br/>') + '</p>';\n                            range.setStart(me.body.firstChild, 0).collapse(true);\n                        }\n                    }\n                }\n                !range.collapsed && range.deleteContents();\n                if (range.startContainer.nodeType == 1) {\n                    var child = range.startContainer.childNodes[range.startOffset],\n                        pre;\n                    if (\n                        child &&\n                        domUtils.isBlockElm(child) &&\n                        (pre = child.previousSibling) &&\n                        domUtils.isBlockElm(pre)\n                    ) {\n                        range.setEnd(pre, pre.childNodes.length).collapse();\n                        while (child.firstChild) {\n                            pre.appendChild(child.firstChild);\n                        }\n                        domUtils.remove(child);\n                    }\n                }\n            }\n\n            var child,\n                parent,\n                pre,\n                tmp,\n                hadBreak = 0,\n                nextNode;\n            //如果当前位置选中了fillchar要干掉，要不会产生空行\n            if (range.inFillChar()) {\n                child = range.startContainer;\n                if (domUtils.isFillChar(child)) {\n                    range.setStartBefore(child).collapse(true);\n                    domUtils.remove(child);\n                } else if (domUtils.isFillChar(child, true)) {\n                    child.nodeValue = child.nodeValue.replace(fillCharReg, '');\n                    range.startOffset--;\n                    range.collapsed && range.collapse(true);\n                }\n            }\n            //列表单独处理\n            var li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n            if (li) {\n                var next, last;\n                while ((child = div.firstChild)) {\n                    //针对hr单独处理一下先\n                    while (child && (child.nodeType == 3 || !domUtils.isBlockElm(child) || child.tagName == 'HR')) {\n                        next = child.nextSibling;\n                        range.insertNode(child).collapse();\n                        last = child;\n                        child = next;\n                    }\n                    if (child) {\n                        if (/^(ol|ul)$/i.test(child.tagName)) {\n                            while (child.firstChild) {\n                                last = child.firstChild;\n                                domUtils.insertAfter(li, child.firstChild);\n                                li = li.nextSibling;\n                            }\n                            domUtils.remove(child);\n                        } else {\n                            var tmpLi;\n                            next = child.nextSibling;\n                            tmpLi = me.document.createElement('li');\n                            domUtils.insertAfter(li, tmpLi);\n                            tmpLi.appendChild(child);\n                            last = child;\n                            child = next;\n                            li = tmpLi;\n                        }\n                    }\n                }\n                li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n                if (domUtils.isEmptyBlock(li)) {\n                    domUtils.remove(li);\n                }\n                if (last) {\n                    range.setStartAfter(last).collapse(true).select(true);\n                }\n            } else {\n                while ((child = div.firstChild)) {\n                    if (hadBreak) {\n                        var p = me.document.createElement('p');\n                        while (child && (child.nodeType == 3 || !dtd.$block[child.tagName])) {\n                            nextNode = child.nextSibling;\n                            p.appendChild(child);\n                            child = nextNode;\n                        }\n                        if (p.firstChild) {\n                            child = p;\n                        }\n                    }\n                    range.insertNode(child);\n                    nextNode = child.nextSibling;\n                    if (!hadBreak && child.nodeType == domUtils.NODE_ELEMENT && domUtils.isBlockElm(child)) {\n                        parent = domUtils.findParent(child, function (node) {\n                            return domUtils.isBlockElm(node);\n                        });\n                        if (\n                            parent &&\n                            parent.tagName.toLowerCase() != 'body' &&\n                            !(dtd[parent.tagName][child.nodeName] && child.parentNode === parent)\n                        ) {\n                            if (!dtd[parent.tagName][child.nodeName]) {\n                                pre = parent;\n                            } else {\n                                tmp = child.parentNode;\n                                while (tmp !== parent) {\n                                    pre = tmp;\n                                    tmp = tmp.parentNode;\n                                }\n                            }\n\n                            domUtils.breakParent(child, pre || tmp);\n                            //去掉break后前一个多余的节点  <p>|<[p> ==> <p></p><div></div><p>|</p>\n                            var pre = child.previousSibling;\n                            domUtils.trimWhiteTextNode(pre);\n                            if (!pre.childNodes.length) {\n                                domUtils.remove(pre);\n                            }\n                            //trace:2012,在非ie的情况，切开后剩下的节点有可能不能点入光标添加br占位\n\n                            if (\n                                !browser.ie &&\n                                (next = child.nextSibling) &&\n                                domUtils.isBlockElm(next) &&\n                                next.lastChild &&\n                                !domUtils.isBr(next.lastChild)\n                            ) {\n                                next.appendChild(me.document.createElement('br'));\n                            }\n                            hadBreak = 1;\n                        }\n                    }\n                    var next = child.nextSibling;\n                    if (!div.firstChild && next && domUtils.isBlockElm(next)) {\n                        range.setStart(next, 0).collapse(true);\n                        break;\n                    }\n                    range.setEndAfter(child).collapse();\n                }\n\n                child = range.startContainer;\n\n                if (nextNode && domUtils.isBr(nextNode)) {\n                    domUtils.remove(nextNode);\n                }\n                //用chrome可能有空白展位符\n                if (domUtils.isBlockElm(child) && domUtils.isEmptyNode(child)) {\n                    if ((nextNode = child.nextSibling)) {\n                        domUtils.remove(child);\n                        if (nextNode.nodeType == 1 && dtd.$block[nextNode.tagName]) {\n                            range.setStart(nextNode, 0).collapse(true).shrinkBoundary();\n                        }\n                    } else {\n                        try {\n                            child.innerHTML = browser.ie ? domUtils.fillChar : '<br/>';\n                        } catch (e) {\n                            range.setStartBefore(child);\n                            domUtils.remove(child);\n                        }\n                    }\n                }\n                //加上true因为在删除表情等时会删两次，第一次是删的fillData\n                try {\n                    range.select(true);\n                } catch (e) {}\n            }\n\n            setTimeout(function () {\n                range = me.selection.getRange();\n                range.scrollToView(me.autoHeightEnabled, me.autoHeightEnabled ? domUtils.getXY(me.iframe).y : 0);\n                me.fireEvent('afterinserthtml', html);\n            }, 200);\n        }\n    };\n\n    // plugins/autotypeset.js\n    /**\n     * 自动排版\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 对当前编辑器的内容执行自动排版， 排版的行为根据config配置文件里的“autotypeset”选项进行控制。\n     * @command autotypeset\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'autotypeset' );\n     * ```\n     */\n\n    UE.plugins['autotypeset'] = function () {\n        this.setOpt({\n            autotypeset: {\n                mergeEmptyline: true, //合并空行\n                removeClass: true, //去掉冗余的class\n                removeEmptyline: false, //去掉空行\n                textAlign: 'left', //段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版\n                imageBlockLine: 'center', //图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版\n                pasteFilter: false, //根据规则过滤没事粘贴进来的内容\n                clearFontSize: false, //去掉所有的内嵌字号，使用编辑器默认的字号\n                clearFontFamily: false, //去掉所有的内嵌字体，使用编辑器默认的字体\n                removeEmptyNode: false, // 去掉空节点\n                //可以去掉的标签\n                removeTagNames: utils.extend({ div: 1 }, dtd.$removeEmpty),\n                indent: false, // 行首缩进\n                indentValue: '2em', //行首缩进的大小\n                bdc2sb: false,\n                tobdc: false\n            }\n        });\n\n        var me = this,\n            opt = me.options.autotypeset,\n            remainClass = {\n                selectTdClass: 1,\n                pagebreak: 1,\n                anchorclass: 1\n            },\n            remainTag = {\n                li: 1\n            },\n            tags = {\n                div: 1,\n                p: 1,\n                //trace:2183 这些也认为是行\n                blockquote: 1,\n                center: 1,\n                h1: 1,\n                h2: 1,\n                h3: 1,\n                h4: 1,\n                h5: 1,\n                h6: 1,\n                span: 1\n            },\n            highlightCont;\n        //升级了版本，但配置项目里没有autotypeset\n        if (!opt) {\n            return;\n        }\n\n        readLocalOpts();\n\n        function isLine(node, notEmpty) {\n            if (!node || node.nodeType == 3) return 0;\n            if (domUtils.isBr(node)) return 1;\n            if (node && node.parentNode && tags[node.tagName.toLowerCase()]) {\n                if ((highlightCont && highlightCont.contains(node)) || node.getAttribute('pagebreak')) {\n                    return 0;\n                }\n\n                return notEmpty\n                    ? !domUtils.isEmptyBlock(node)\n                    : domUtils.isEmptyBlock(node, new RegExp('[\\\\s' + domUtils.fillChar + ']', 'g'));\n            }\n        }\n\n        function removeNotAttributeSpan(node) {\n            if (!node.style.cssText) {\n                domUtils.removeAttributes(node, ['style']);\n                if (node.tagName.toLowerCase() == 'span' && domUtils.hasNoAttributes(node)) {\n                    domUtils.remove(node, true);\n                }\n            }\n        }\n        function autotype(type, html) {\n            var me = this,\n                cont;\n            if (html) {\n                if (!opt.pasteFilter) {\n                    return;\n                }\n                cont = me.document.createElement('div');\n                cont.innerHTML = html.html;\n            } else {\n                cont = me.document.body;\n            }\n            var nodes = domUtils.getElementsByTagName(cont, '*');\n\n            // 行首缩进，段落方向，段间距，段内间距\n            for (var i = 0, ci; (ci = nodes[i++]); ) {\n                if (me.fireEvent('excludeNodeinautotype', ci) === true) {\n                    continue;\n                }\n                //font-size\n                if (opt.clearFontSize && ci.style.fontSize) {\n                    domUtils.removeStyle(ci, 'font-size');\n\n                    removeNotAttributeSpan(ci);\n                }\n                //font-family\n                if (opt.clearFontFamily && ci.style.fontFamily) {\n                    domUtils.removeStyle(ci, 'font-family');\n                    removeNotAttributeSpan(ci);\n                }\n\n                if (isLine(ci)) {\n                    //合并空行\n                    if (opt.mergeEmptyline) {\n                        var next = ci.nextSibling,\n                            tmpNode,\n                            isBr = domUtils.isBr(ci);\n                        while (isLine(next)) {\n                            tmpNode = next;\n                            next = tmpNode.nextSibling;\n                            if (isBr && (!next || (next && !domUtils.isBr(next)))) {\n                                break;\n                            }\n                            domUtils.remove(tmpNode);\n                        }\n                    }\n                    //去掉空行，保留占位的空行\n                    if (\n                        opt.removeEmptyline &&\n                        domUtils.inDoc(ci, cont) &&\n                        !remainTag[ci.parentNode.tagName.toLowerCase()]\n                    ) {\n                        if (domUtils.isBr(ci)) {\n                            next = ci.nextSibling;\n                            if (next && !domUtils.isBr(next)) {\n                                continue;\n                            }\n                        }\n                        domUtils.remove(ci);\n                        continue;\n                    }\n                }\n                if (isLine(ci, true) && ci.tagName != 'SPAN') {\n                    if (opt.indent) {\n                        ci.style.textIndent = opt.indentValue;\n                    }\n                    if (opt.textAlign) {\n                        ci.style.textAlign = opt.textAlign;\n                    }\n                    // if(opt.lineHeight)\n                    //     ci.style.lineHeight = opt.lineHeight + 'cm';\n                }\n\n                //去掉class,保留的class不去掉\n                if (opt.removeClass && ci.className && !remainClass[ci.className.toLowerCase()]) {\n                    if (highlightCont && highlightCont.contains(ci)) {\n                        continue;\n                    }\n                    domUtils.removeAttributes(ci, ['class']);\n                }\n\n                //表情不处理\n                if (opt.imageBlockLine && ci.tagName.toLowerCase() == 'img' && !ci.getAttribute('emotion')) {\n                    if (html) {\n                        var img = ci;\n                        switch (opt.imageBlockLine) {\n                            case 'left':\n                            case 'right':\n                            case 'none':\n                                var pN = img.parentNode,\n                                    tmpNode,\n                                    pre,\n                                    next;\n                                while (dtd.$inline[pN.tagName] || pN.tagName == 'A') {\n                                    pN = pN.parentNode;\n                                }\n                                tmpNode = pN;\n                                if (tmpNode.tagName == 'P' && domUtils.getStyle(tmpNode, 'text-align') == 'center') {\n                                    if (\n                                        !domUtils.isBody(tmpNode) &&\n                                        domUtils.getChildCount(tmpNode, function (node) {\n                                            return !domUtils.isBr(node) && !domUtils.isWhitespace(node);\n                                        }) == 1\n                                    ) {\n                                        pre = tmpNode.previousSibling;\n                                        next = tmpNode.nextSibling;\n                                        if (\n                                            pre &&\n                                            next &&\n                                            pre.nodeType == 1 &&\n                                            next.nodeType == 1 &&\n                                            pre.tagName == next.tagName &&\n                                            domUtils.isBlockElm(pre)\n                                        ) {\n                                            pre.appendChild(tmpNode.firstChild);\n                                            while (next.firstChild) {\n                                                pre.appendChild(next.firstChild);\n                                            }\n                                            domUtils.remove(tmpNode);\n                                            domUtils.remove(next);\n                                        } else {\n                                            domUtils.setStyle(tmpNode, 'text-align', '');\n                                        }\n                                    }\n                                }\n                                domUtils.setStyle(img, 'float', opt.imageBlockLine);\n                                break;\n                            case 'center':\n                                if (me.queryCommandValue('imagefloat') != 'center') {\n                                    pN = img.parentNode;\n                                    domUtils.setStyle(img, 'float', 'none');\n                                    tmpNode = img;\n                                    while (\n                                        pN &&\n                                        domUtils.getChildCount(pN, function (node) {\n                                            return !domUtils.isBr(node) && !domUtils.isWhitespace(node);\n                                        }) == 1 &&\n                                        (dtd.$inline[pN.tagName] || pN.tagName == 'A')\n                                    ) {\n                                        tmpNode = pN;\n                                        pN = pN.parentNode;\n                                    }\n                                    var pNode = me.document.createElement('p');\n                                    domUtils.setAttributes(pNode, {\n                                        style: 'text-align:center'\n                                    });\n                                    tmpNode.parentNode.insertBefore(pNode, tmpNode);\n                                    pNode.appendChild(tmpNode);\n                                    domUtils.setStyle(tmpNode, 'float', '');\n                                }\n                        }\n                    } else {\n                        var range = me.selection.getRange();\n                        range.selectNode(ci).select();\n                        me.execCommand('imagefloat', opt.imageBlockLine);\n                    }\n                }\n\n                //去掉冗余的标签\n                if (opt.removeEmptyNode) {\n                    if (\n                        opt.removeTagNames[ci.tagName.toLowerCase()] &&\n                        domUtils.hasNoAttributes(ci) &&\n                        domUtils.isEmptyBlock(ci)\n                    ) {\n                        domUtils.remove(ci);\n                    }\n                }\n            }\n            if (opt.tobdc) {\n                var root = UE.htmlparser(cont.innerHTML);\n                root.traversal(function (node) {\n                    if (node.type == 'text') {\n                        node.data = ToDBC(node.data);\n                    }\n                });\n                cont.innerHTML = root.toHtml();\n            }\n            if (opt.bdc2sb) {\n                var root = UE.htmlparser(cont.innerHTML);\n                root.traversal(function (node) {\n                    if (node.type == 'text') {\n                        node.data = DBC2SB(node.data);\n                    }\n                });\n                cont.innerHTML = root.toHtml();\n            }\n            if (html) {\n                html.html = cont.innerHTML;\n            }\n        }\n        if (opt.pasteFilter) {\n            me.addListener('beforepaste', autotype);\n        }\n\n        function DBC2SB(str) {\n            var result = '';\n            for (var i = 0; i < str.length; i++) {\n                var code = str.charCodeAt(i); //获取当前字符的unicode编码\n                if (code >= 65281 && code <= 65373) {\n                    //在这个unicode编码范围中的是所有的英文字母已经各种字符\n                    result += String.fromCharCode(str.charCodeAt(i) - 65248); //把全角字符的unicode编码转换为对应半角字符的unicode码\n                } else if (code == 12288) {\n                    //空格\n                    result += String.fromCharCode(str.charCodeAt(i) - 12288 + 32);\n                } else {\n                    result += str.charAt(i);\n                }\n            }\n            return result;\n        }\n        function ToDBC(txtstring) {\n            txtstring = utils.html(txtstring);\n            var tmp = '';\n            var mark = ''; /*用于判断,如果是html尖括里的标记,则不进行全角的转换*/\n            for (var i = 0; i < txtstring.length; i++) {\n                if (txtstring.charCodeAt(i) == 32) {\n                    tmp = tmp + String.fromCharCode(12288);\n                } else if (txtstring.charCodeAt(i) < 127) {\n                    tmp = tmp + String.fromCharCode(txtstring.charCodeAt(i) + 65248);\n                } else {\n                    tmp += txtstring.charAt(i);\n                }\n            }\n            return tmp;\n        }\n\n        function readLocalOpts() {\n            var cookieOpt = me.getPreferences('autotypeset');\n            utils.extend(me.options.autotypeset, cookieOpt);\n        }\n\n        me.commands['autotypeset'] = {\n            execCommand: function () {\n                me.removeListener('beforepaste', autotype);\n                if (opt.pasteFilter) {\n                    me.addListener('beforepaste', autotype);\n                }\n                autotype.call(me);\n            }\n        };\n    };\n\n    // plugins/autosubmit.js\n    /**\n     * 快捷键提交\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 提交表单\n     * @command autosubmit\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'autosubmit' );\n     * ```\n     */\n\n    UE.plugin.register('autosubmit', function () {\n        return {\n            shortcutkey: {\n                autosubmit: 'ctrl+13' //手动提交\n            },\n            commands: {\n                autosubmit: {\n                    execCommand: function () {\n                        var me = this,\n                            form = domUtils.findParentByTagName(me.iframe, 'form', false);\n                        if (form) {\n                            if (me.fireEvent('beforesubmit') === false) {\n                                return;\n                            }\n                            me.sync();\n                            form.submit();\n                        }\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/background.js\n    /**\n     * 背景插件，为UEditor提供设置背景功能\n     * @file\n     * @since 1.2.6.1\n     */\n    UE.plugin.register('background', function () {\n        var me = this,\n            cssRuleId = 'editor_background',\n            isSetColored,\n            reg = new RegExp('body[\\\\s]*\\\\{(.+)\\\\}', 'i');\n\n        function stringToObj(str) {\n            var obj = {},\n                styles = str.split(';');\n            utils.each(styles, function (v) {\n                var index = v.indexOf(':'),\n                    key = utils.trim(v.substr(0, index)).toLowerCase();\n                key && (obj[key] = utils.trim(v.substr(index + 1) || ''));\n            });\n            return obj;\n        }\n\n        function setBackground(obj) {\n            if (obj) {\n                var styles = [];\n                for (var name in obj) {\n                    if (obj.hasOwnProperty(name)) {\n                        styles.push(name + ':' + obj[name] + '; ');\n                    }\n                }\n                utils.cssRule(cssRuleId, styles.length ? 'body{' + styles.join('') + '}' : '', me.document);\n            } else {\n                utils.cssRule(cssRuleId, '', me.document);\n            }\n        }\n        //重写editor.hasContent方法\n\n        var orgFn = me.hasContents;\n        me.hasContents = function () {\n            if (me.queryCommandValue('background')) {\n                return true;\n            }\n            return orgFn.apply(me, arguments);\n        };\n        return {\n            bindEvents: {\n                getAllHtml: function (type, headHtml) {\n                    var body = this.body,\n                        su = domUtils.getComputedStyle(body, 'background-image'),\n                        url = '';\n                    if (su.indexOf(me.options.imagePath) > 0) {\n                        url = su.substring(su.indexOf(me.options.imagePath), su.length - 1).replace(/\"|\\(|\\)/gi, '');\n                    } else {\n                        url = su != 'none' ? su.replace(/url\\(\"?|\"?\\)/gi, '') : '';\n                    }\n                    var html = '<style type=\"text/css\">body{';\n                    var bgObj = {\n                        'background-color': domUtils.getComputedStyle(body, 'background-color') || '#ffffff',\n                        'background-image': url ? 'url(' + url + ')' : '',\n                        'background-repeat': domUtils.getComputedStyle(body, 'background-repeat') || '',\n                        'background-position': browser.ie\n                            ? domUtils.getComputedStyle(body, 'background-position-x') +\n                              ' ' +\n                              domUtils.getComputedStyle(body, 'background-position-y')\n                            : domUtils.getComputedStyle(body, 'background-position'),\n                        height: domUtils.getComputedStyle(body, 'height')\n                    };\n                    for (var name in bgObj) {\n                        if (bgObj.hasOwnProperty(name)) {\n                            html += name + ':' + bgObj[name] + '; ';\n                        }\n                    }\n                    html += '}</style> ';\n                    headHtml.push(html);\n                },\n                aftersetcontent: function () {\n                    if (isSetColored == false) setBackground();\n                }\n            },\n            inputRule: function (root) {\n                isSetColored = false;\n                utils.each(root.getNodesByTagName('p'), function (p) {\n                    var styles = p.getAttr('data-background');\n                    if (styles) {\n                        isSetColored = true;\n                        setBackground(stringToObj(styles));\n                        p.parentNode.removeChild(p);\n                    }\n                });\n            },\n            outputRule: function (root) {\n                var me = this,\n                    styles = (utils.cssRule(cssRuleId, me.document) || '').replace(/[\\n\\r]+/g, '').match(reg);\n                if (styles) {\n                    root.appendChild(\n                        UE.uNode.createElement(\n                            '<p style=\"display:none;\" data-background=\"' +\n                                utils.trim(styles[1].replace(/\"/g, '').replace(/[\\s]+/g, ' ')) +\n                                '\"><br/></p>'\n                        )\n                    );\n                }\n            },\n            commands: {\n                background: {\n                    execCommand: function (cmd, obj) {\n                        setBackground(obj);\n                    },\n                    queryCommandValue: function () {\n                        var me = this,\n                            styles = (utils.cssRule(cssRuleId, me.document) || '').replace(/[\\n\\r]+/g, '').match(reg);\n                        return styles ? stringToObj(styles[1]) : null;\n                    },\n                    notNeedUndo: true\n                }\n            }\n        };\n    });\n\n    // plugins/image.js\n    /**\n     * 图片插入、排版插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 图片对齐方式\n     * @command imagefloat\n     * @method execCommand\n     * @remind 值center为独占一行居中\n     * @param { String } cmd 命令字符串\n     * @param { String } align 对齐方式，可传left、right、none、center\n     * @remaind center表示图片独占一行\n     * @example\n     * ```javascript\n     * editor.execCommand( 'imagefloat', 'center' );\n     * ```\n     */\n\n    /**\n     * 如果选区所在位置是图片区域\n     * @command imagefloat\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回图片对齐方式\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'imagefloat' );\n     * ```\n     */\n\n    UE.commands['imagefloat'] = {\n        execCommand: function (cmd, align) {\n            var me = this,\n                range = me.selection.getRange();\n            if (!range.collapsed) {\n                var img = range.getClosedNode();\n                if (img && img.tagName == 'IMG') {\n                    switch (align) {\n                        case 'left':\n                        case 'right':\n                        case 'none':\n                            var pN = img.parentNode,\n                                tmpNode,\n                                pre,\n                                next;\n                            while (dtd.$inline[pN.tagName] || pN.tagName == 'A') {\n                                pN = pN.parentNode;\n                            }\n                            tmpNode = pN;\n                            if (tmpNode.tagName == 'P' && domUtils.getStyle(tmpNode, 'text-align') == 'center') {\n                                if (\n                                    !domUtils.isBody(tmpNode) &&\n                                    domUtils.getChildCount(tmpNode, function (node) {\n                                        return !domUtils.isBr(node) && !domUtils.isWhitespace(node);\n                                    }) == 1\n                                ) {\n                                    pre = tmpNode.previousSibling;\n                                    next = tmpNode.nextSibling;\n                                    if (\n                                        pre &&\n                                        next &&\n                                        pre.nodeType == 1 &&\n                                        next.nodeType == 1 &&\n                                        pre.tagName == next.tagName &&\n                                        domUtils.isBlockElm(pre)\n                                    ) {\n                                        pre.appendChild(tmpNode.firstChild);\n                                        while (next.firstChild) {\n                                            pre.appendChild(next.firstChild);\n                                        }\n                                        domUtils.remove(tmpNode);\n                                        domUtils.remove(next);\n                                    } else {\n                                        domUtils.setStyle(tmpNode, 'text-align', '');\n                                    }\n                                }\n\n                                range.selectNode(img).select();\n                            }\n                            domUtils.setStyle(img, 'float', align == 'none' ? '' : align);\n                            if (align == 'none') {\n                                domUtils.removeAttributes(img, 'align');\n                            }\n\n                            break;\n                        case 'center':\n                            if (me.queryCommandValue('imagefloat') != 'center') {\n                                pN = img.parentNode;\n                                domUtils.setStyle(img, 'float', '');\n                                domUtils.removeAttributes(img, 'align');\n                                tmpNode = img;\n                                while (\n                                    pN &&\n                                    domUtils.getChildCount(pN, function (node) {\n                                        return !domUtils.isBr(node) && !domUtils.isWhitespace(node);\n                                    }) == 1 &&\n                                    (dtd.$inline[pN.tagName] || pN.tagName == 'A')\n                                ) {\n                                    tmpNode = pN;\n                                    pN = pN.parentNode;\n                                }\n                                range.setStartBefore(tmpNode).setCursor(false);\n                                pN = me.document.createElement('div');\n                                pN.appendChild(tmpNode);\n                                domUtils.setStyle(tmpNode, 'float', '');\n\n                                me.execCommand(\n                                    'insertHtml',\n                                    '<p id=\"_img_parent_tmp\" style=\"text-align:center\">' + pN.innerHTML + '</p>'\n                                );\n\n                                tmpNode = me.document.getElementById('_img_parent_tmp');\n                                tmpNode.removeAttribute('id');\n                                tmpNode = tmpNode.firstChild;\n                                range.selectNode(tmpNode).select();\n                                //去掉后边多余的元素\n                                next = tmpNode.parentNode.nextSibling;\n                                if (next && domUtils.isEmptyNode(next)) {\n                                    domUtils.remove(next);\n                                }\n                            }\n\n                            break;\n                    }\n                }\n            }\n        },\n        queryCommandValue: function () {\n            var range = this.selection.getRange(),\n                startNode,\n                floatStyle;\n            if (range.collapsed) {\n                return 'none';\n            }\n            startNode = range.getClosedNode();\n            if (startNode && startNode.nodeType == 1 && startNode.tagName == 'IMG') {\n                floatStyle = domUtils.getComputedStyle(startNode, 'float') || startNode.getAttribute('align');\n\n                if (floatStyle == 'none') {\n                    floatStyle =\n                        domUtils.getComputedStyle(startNode.parentNode, 'text-align') == 'center'\n                            ? 'center'\n                            : floatStyle;\n                }\n                return {\n                    left: 1,\n                    right: 1,\n                    center: 1\n                }[floatStyle]\n                    ? floatStyle\n                    : 'none';\n            }\n            return 'none';\n        },\n        queryCommandState: function () {\n            var range = this.selection.getRange(),\n                startNode;\n\n            if (range.collapsed) return -1;\n\n            startNode = range.getClosedNode();\n            if (startNode && startNode.nodeType == 1 && startNode.tagName == 'IMG') {\n                return 0;\n            }\n            return -1;\n        }\n    };\n\n    /**\n     * 插入图片\n     * @command insertimage\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { Object } opt 属性键值对，这些属性都将被复制到当前插入图片\n     * @remind 该命令第二个参数可接受一个图片配置项对象的数组，可以插入多张图片，\n     * 此时数组的每一个元素都是一个Object类型的图片属性集合。\n     * @example\n     * ```javascript\n     * editor.execCommand( 'insertimage', {\n     *     src:'a/b/c.jpg',\n     *     width:'100',\n     *     height:'100'\n     * } );\n     * ```\n     * @example\n     * ```javascript\n     * editor.execCommand( 'insertimage', [{\n     *     src:'a/b/c.jpg',\n     *     width:'100',\n     *     height:'100'\n     * },{\n     *     src:'a/b/d.jpg',\n     *     width:'100',\n     *     height:'100'\n     * }] );\n     * ```\n     */\n\n    UE.commands['insertimage'] = {\n        execCommand: function (cmd, opt) {\n            opt = utils.isArray(opt) ? opt : [opt];\n            if (!opt.length) {\n                return;\n            }\n            var me = this,\n                range = me.selection.getRange(),\n                img = range.getClosedNode();\n\n            if (me.fireEvent('beforeinsertimage', opt) === true) {\n                return;\n            }\n\n            function unhtmlData(imgCi) {\n                utils.each('width,height,border,hspace,vspace'.split(','), function (item) {\n                    if (imgCi[item]) {\n                        imgCi[item] = parseInt(imgCi[item], 10) || 0;\n                    }\n                });\n\n                utils.each('src,_src'.split(','), function (item) {\n                    if (imgCi[item]) {\n                        imgCi[item] = utils.unhtmlForUrl(imgCi[item]);\n                    }\n                });\n                utils.each('title,alt'.split(','), function (item) {\n                    if (imgCi[item]) {\n                        imgCi[item] = utils.unhtml(imgCi[item]);\n                    }\n                });\n            }\n\n            if (\n                img &&\n                /img/i.test(img.tagName) &&\n                (img.className != 'edui-faked-video' || img.className.indexOf('edui-upload-video') != -1) &&\n                !img.getAttribute('word_img')\n            ) {\n                var first = opt.shift();\n                var floatStyle = first['floatStyle'];\n                delete first['floatStyle'];\n                ////                img.style.border = (first.border||0) +\"px solid #000\";\n                ////                img.style.margin = (first.margin||0) +\"px\";\n                //                img.style.cssText += ';margin:' + (first.margin||0) +\"px;\" + 'border:' + (first.border||0) +\"px solid #000\";\n                domUtils.setAttributes(img, first);\n                me.execCommand('imagefloat', floatStyle);\n                if (opt.length > 0) {\n                    range.setStartAfter(img).setCursor(false, true);\n                    me.execCommand('insertimage', opt);\n                }\n            } else {\n                var html = [],\n                    str = '',\n                    ci;\n                ci = opt[0];\n                if (opt.length == 1) {\n                    unhtmlData(ci);\n\n                    str =\n                        '<img src=\"' +\n                        ci.src +\n                        '\" ' +\n                        (ci._src ? ' _src=\"' + ci._src + '\" ' : '') +\n                        (ci.width ? 'width=\"' + ci.width + '\" ' : '') +\n                        (ci.height ? ' height=\"' + ci.height + '\" ' : '') +\n                        (ci['floatStyle'] == 'left' || ci['floatStyle'] == 'right'\n                            ? ' style=\"float:' + ci['floatStyle'] + ';\"'\n                            : '') +\n                        (ci.title && ci.title != '' ? ' title=\"' + ci.title + '\"' : '') +\n                        (ci.border && ci.border != '0' ? ' border=\"' + ci.border + '\"' : '') +\n                        (ci.alt && ci.alt != '' ? ' alt=\"' + ci.alt + '\"' : '') +\n                        (ci.hspace && ci.hspace != '0' ? ' hspace = \"' + ci.hspace + '\"' : '') +\n                        (ci.vspace && ci.vspace != '0' ? ' vspace = \"' + ci.vspace + '\"' : '') +\n                        '/>';\n                    if (ci['floatStyle'] == 'center') {\n                        str = '<p style=\"text-align: center\">' + str + '</p>';\n                    }\n                    html.push(str);\n                } else {\n                    for (var i = 0; (ci = opt[i++]); ) {\n                        unhtmlData(ci);\n                        str =\n                            '<p ' +\n                            (ci['floatStyle'] == 'center' ? 'style=\"text-align: center\" ' : '') +\n                            '><img src=\"' +\n                            ci.src +\n                            '\" ' +\n                            (ci.width ? 'width=\"' + ci.width + '\" ' : '') +\n                            (ci._src ? ' _src=\"' + ci._src + '\" ' : '') +\n                            (ci.height ? ' height=\"' + ci.height + '\" ' : '') +\n                            ' style=\"' +\n                            (ci['floatStyle'] && ci['floatStyle'] != 'center'\n                                ? 'float:' + ci['floatStyle'] + ';'\n                                : '') +\n                            (ci.border || '') +\n                            '\" ' +\n                            (ci.title ? ' title=\"' + ci.title + '\"' : '') +\n                            ' /></p>';\n                        html.push(str);\n                    }\n                }\n\n                me.execCommand('insertHtml', html.join(''));\n            }\n\n            me.fireEvent('afterinsertimage', opt);\n        }\n    };\n\n    // plugins/justify.js\n    /**\n     * 段落格式\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 段落对齐方式\n     * @command justify\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } align 对齐方式：left => 居左，right => 居右，center => 居中，justify => 两端对齐\n     * @example\n     * ```javascript\n     * editor.execCommand( 'justify', 'center' );\n     * ```\n     */\n    /**\n     * 如果选区所在位置是段落区域，返回当前段落对齐方式\n     * @command justify\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回段落对齐方式\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'justify' );\n     * ```\n     */\n\n    UE.plugins['justify'] = function () {\n        var me = this,\n            block = domUtils.isBlockElm,\n            defaultValue = {\n                left: 1,\n                right: 1,\n                center: 1,\n                justify: 1\n            },\n            doJustify = function (range, style) {\n                var bookmark = range.createBookmark(),\n                    filterFn = function (node) {\n                        return node.nodeType == 1\n                            ? node.tagName.toLowerCase() != 'br' && !domUtils.isBookmarkNode(node)\n                            : !domUtils.isWhitespace(node);\n                    };\n\n                range.enlarge(true);\n                var bookmark2 = range.createBookmark(),\n                    current = domUtils.getNextDomNode(bookmark2.start, false, filterFn),\n                    tmpRange = range.cloneRange(),\n                    tmpNode;\n                while (current && !(domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)) {\n                    if (current.nodeType == 3 || !block(current)) {\n                        tmpRange.setStartBefore(current);\n                        while (current && current !== bookmark2.end && !block(current)) {\n                            tmpNode = current;\n                            current = domUtils.getNextDomNode(current, false, null, function (node) {\n                                return !block(node);\n                            });\n                        }\n                        tmpRange.setEndAfter(tmpNode);\n                        var common = tmpRange.getCommonAncestor();\n                        if (!domUtils.isBody(common) && block(common)) {\n                            domUtils.setStyles(common, utils.isString(style) ? { 'text-align': style } : style);\n                            current = common;\n                        } else {\n                            var p = range.document.createElement('p');\n                            domUtils.setStyles(p, utils.isString(style) ? { 'text-align': style } : style);\n                            var frag = tmpRange.extractContents();\n                            p.appendChild(frag);\n                            tmpRange.insertNode(p);\n                            current = p;\n                        }\n                        current = domUtils.getNextDomNode(current, false, filterFn);\n                    } else {\n                        current = domUtils.getNextDomNode(current, true, filterFn);\n                    }\n                }\n                return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);\n            };\n\n        UE.commands['justify'] = {\n            execCommand: function (cmdName, align) {\n                var range = this.selection.getRange(),\n                    txt;\n\n                //闭合时单独处理\n                if (range.collapsed) {\n                    txt = this.document.createTextNode('p');\n                    range.insertNode(txt);\n                }\n                doJustify(range, align);\n                if (txt) {\n                    range.setStartBefore(txt).collapse(true);\n                    domUtils.remove(txt);\n                }\n\n                range.select();\n\n                return true;\n            },\n            queryCommandValue: function () {\n                var startNode = this.selection.getStart(),\n                    value = domUtils.getComputedStyle(startNode, 'text-align');\n                return defaultValue[value] ? value : 'left';\n            },\n            queryCommandState: function () {\n                var start = this.selection.getStart(),\n                    cell = start && domUtils.findParentByTagName(start, ['td', 'th', 'caption'], true);\n\n                return cell ? -1 : 0;\n            }\n        };\n    };\n\n    // plugins/font.js\n    /**\n     * 字体颜色,背景色,字号,字体,下划线,删除线\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 字体颜色\n     * @command forecolor\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } value 色值(必须十六进制)\n     * @example\n     * ```javascript\n     * editor.execCommand( 'forecolor', '#000' );\n     * ```\n     */\n    /**\n     * 返回选区字体颜色\n     * @command forecolor\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回字体颜色\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'forecolor' );\n     * ```\n     */\n\n    /**\n     * 字体背景颜色\n     * @command backcolor\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } value 色值(必须十六进制)\n     * @example\n     * ```javascript\n     * editor.execCommand( 'backcolor', '#000' );\n     * ```\n     */\n    /**\n     * 返回选区字体颜色\n     * @command backcolor\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回字体背景颜色\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'backcolor' );\n     * ```\n     */\n\n    /**\n     * 字体大小\n     * @command fontsize\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } value 字体大小\n     * @example\n     * ```javascript\n     * editor.execCommand( 'fontsize', '14px' );\n     * ```\n     */\n    /**\n     * 返回选区字体大小\n     * @command fontsize\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回字体大小\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'fontsize' );\n     * ```\n     */\n\n    /**\n     * 字体样式\n     * @command fontfamily\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } value 字体样式\n     * @example\n     * ```javascript\n     * editor.execCommand( 'fontfamily', '微软雅黑' );\n     * ```\n     */\n    /**\n     * 返回选区字体样式\n     * @command fontfamily\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 返回字体样式\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'fontfamily' );\n     * ```\n     */\n\n    /**\n     * 字体下划线,与删除线互斥\n     * @command underline\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'underline' );\n     * ```\n     */\n\n    /**\n     * 字体删除线,与下划线互斥\n     * @command strikethrough\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'strikethrough' );\n     * ```\n     */\n\n    /**\n     * 字体边框\n     * @command fontborder\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'fontborder' );\n     * ```\n     */\n\n    UE.plugins['font'] = function () {\n        var me = this,\n            fonts = {\n                forecolor: 'color',\n                backcolor: 'background-color',\n                fontsize: 'font-size',\n                fontfamily: 'font-family',\n                underline: 'text-decoration',\n                strikethrough: 'text-decoration',\n                fontborder: 'border'\n            },\n            needCmd = { underline: 1, strikethrough: 1, fontborder: 1 },\n            needSetChild = {\n                forecolor: 'color',\n                backcolor: 'background-color',\n                fontsize: 'font-size',\n                fontfamily: 'font-family'\n            };\n        me.setOpt({\n            fontfamily: [\n                { name: 'songti', val: '宋体,SimSun' },\n                { name: 'yahei', val: '微软雅黑,Microsoft YaHei' },\n                { name: 'kaiti', val: '楷体,楷体_GB2312, SimKai' },\n                { name: 'heiti', val: '黑体, SimHei' },\n                { name: 'lishu', val: '隶书, SimLi' },\n                { name: 'andaleMono', val: 'andale mono' },\n                { name: 'arial', val: 'arial, helvetica,sans-serif' },\n                { name: 'arialBlack', val: 'arial black,avant garde' },\n                { name: 'comicSansMs', val: 'comic sans ms' },\n                { name: 'impact', val: 'impact,chicago' },\n                { name: 'timesNewRoman', val: 'times new roman' }\n            ],\n            fontsize: [10, 11, 12, 14, 16, 18, 20, 24, 36]\n        });\n\n        function mergeWithParent(node) {\n            var parent;\n            while ((parent = node.parentNode)) {\n                if (\n                    parent.tagName == 'SPAN' &&\n                    domUtils.getChildCount(parent, function (child) {\n                        return !domUtils.isBookmarkNode(child) && !domUtils.isBr(child);\n                    }) == 1\n                ) {\n                    parent.style.cssText += node.style.cssText;\n                    domUtils.remove(node, true);\n                    node = parent;\n                } else {\n                    break;\n                }\n            }\n        }\n        function mergeChild(rng, cmdName, value) {\n            if (needSetChild[cmdName]) {\n                rng.adjustmentBoundary();\n                if (!rng.collapsed && rng.startContainer.nodeType == 1) {\n                    var start = rng.startContainer.childNodes[rng.startOffset];\n                    if (start && domUtils.isTagNode(start, 'span')) {\n                        var bk = rng.createBookmark();\n                        utils.each(domUtils.getElementsByTagName(start, 'span'), function (span) {\n                            if (!span.parentNode || domUtils.isBookmarkNode(span)) return;\n                            if (\n                                cmdName == 'backcolor' &&\n                                domUtils.getComputedStyle(span, 'background-color').toLowerCase() === value\n                            ) {\n                                return;\n                            }\n                            domUtils.removeStyle(span, needSetChild[cmdName]);\n                            if (span.style.cssText.replace(/^\\s+$/, '').length == 0) {\n                                domUtils.remove(span, true);\n                            }\n                        });\n                        rng.moveToBookmark(bk);\n                    }\n                }\n            }\n        }\n        function mergesibling(rng, cmdName, value) {\n            var collapsed = rng.collapsed,\n                bk = rng.createBookmark(),\n                common;\n            if (collapsed) {\n                common = bk.start.parentNode;\n                while (dtd.$inline[common.tagName]) {\n                    common = common.parentNode;\n                }\n            } else {\n                common = domUtils.getCommonAncestor(bk.start, bk.end);\n            }\n            utils.each(domUtils.getElementsByTagName(common, 'span'), function (span) {\n                if (!span.parentNode || domUtils.isBookmarkNode(span)) return;\n                if (/\\s*border\\s*:\\s*none;?\\s*/i.test(span.style.cssText)) {\n                    if (/^\\s*border\\s*:\\s*none;?\\s*$/.test(span.style.cssText)) {\n                        domUtils.remove(span, true);\n                    } else {\n                        domUtils.removeStyle(span, 'border');\n                    }\n                    return;\n                }\n                if (\n                    /border/i.test(span.style.cssText) &&\n                    span.parentNode.tagName == 'SPAN' &&\n                    /border/i.test(span.parentNode.style.cssText)\n                ) {\n                    span.style.cssText = span.style.cssText.replace(/border[^:]*:[^;]+;?/gi, '');\n                }\n                if (!(cmdName == 'fontborder' && value == 'none')) {\n                    var next = span.nextSibling;\n                    while (next && next.nodeType == 1 && next.tagName == 'SPAN') {\n                        if (domUtils.isBookmarkNode(next) && cmdName == 'fontborder') {\n                            span.appendChild(next);\n                            next = span.nextSibling;\n                            continue;\n                        }\n                        if (next.style.cssText == span.style.cssText) {\n                            domUtils.moveChild(next, span);\n                            domUtils.remove(next);\n                        }\n                        if (span.nextSibling === next) break;\n                        next = span.nextSibling;\n                    }\n                }\n\n                mergeWithParent(span);\n                if (browser.ie && browser.version > 8) {\n                    //拷贝父亲们的特别的属性,这里只做背景颜色的处理\n                    var parent = domUtils.findParent(span, function (n) {\n                        return n.tagName == 'SPAN' && /background-color/.test(n.style.cssText);\n                    });\n                    if (parent && !/background-color/.test(span.style.cssText)) {\n                        span.style.backgroundColor = parent.style.backgroundColor;\n                    }\n                }\n            });\n            rng.moveToBookmark(bk);\n            mergeChild(rng, cmdName, value);\n        }\n\n        me.addInputRule(function (root) {\n            utils.each(root.getNodesByTagName('u s del font strike'), function (node) {\n                if (node.tagName == 'font') {\n                    var cssStyle = [];\n                    for (var p in node.attrs) {\n                        switch (p) {\n                            case 'size':\n                                cssStyle.push(\n                                    'font-size:' +\n                                        ({\n                                            1: '10',\n                                            2: '12',\n                                            3: '16',\n                                            4: '18',\n                                            5: '24',\n                                            6: '32',\n                                            7: '48'\n                                        }[node.attrs[p]] || node.attrs[p]) +\n                                        'px'\n                                );\n                                break;\n                            case 'color':\n                                cssStyle.push('color:' + node.attrs[p]);\n                                break;\n                            case 'face':\n                                cssStyle.push('font-family:' + node.attrs[p]);\n                                break;\n                            case 'style':\n                                cssStyle.push(node.attrs[p]);\n                        }\n                    }\n                    node.attrs = {\n                        style: cssStyle.join(';')\n                    };\n                } else {\n                    var val = node.tagName == 'u' ? 'underline' : 'line-through';\n                    node.attrs = {\n                        style: (node.getAttr('style') || '') + 'text-decoration:' + val + ';'\n                    };\n                }\n                node.tagName = 'span';\n            });\n            //        utils.each(root.getNodesByTagName('span'), function (node) {\n            //            var val;\n            //            if(val = node.getAttr('class')){\n            //                if(/fontstrikethrough/.test(val)){\n            //                    node.setStyle('text-decoration','line-through');\n            //                    if(node.attrs['class']){\n            //                        node.attrs['class'] = node.attrs['class'].replace(/fontstrikethrough/,'');\n            //                    }else{\n            //                        node.setAttr('class')\n            //                    }\n            //                }\n            //                if(/fontborder/.test(val)){\n            //                    node.setStyle('border','1px solid #000');\n            //                    if(node.attrs['class']){\n            //                        node.attrs['class'] = node.attrs['class'].replace(/fontborder/,'');\n            //                    }else{\n            //                        node.setAttr('class')\n            //                    }\n            //                }\n            //            }\n            //        });\n        });\n        //    me.addOutputRule(function(root){\n        //        utils.each(root.getNodesByTagName('span'), function (node) {\n        //            var val;\n        //            if(val = node.getStyle('text-decoration')){\n        //                if(/line-through/.test(val)){\n        //                    if(node.attrs['class']){\n        //                        node.attrs['class'] += ' fontstrikethrough';\n        //                    }else{\n        //                        node.setAttr('class','fontstrikethrough')\n        //                    }\n        //                }\n        //\n        //                node.setStyle('text-decoration')\n        //            }\n        //            if(val = node.getStyle('border')){\n        //                if(/1px/.test(val) && /solid/.test(val)){\n        //                    if(node.attrs['class']){\n        //                        node.attrs['class'] += ' fontborder';\n        //\n        //                    }else{\n        //                        node.setAttr('class','fontborder')\n        //                    }\n        //                }\n        //                node.setStyle('border')\n        //\n        //            }\n        //        });\n        //    });\n        for (var p in fonts) {\n            (function (cmd, style) {\n                UE.commands[cmd] = {\n                    execCommand: function (cmdName, value) {\n                        value =\n                            value ||\n                            (this.queryCommandState(cmdName)\n                                ? 'none'\n                                : cmdName == 'underline'\n                                ? 'underline'\n                                : cmdName == 'fontborder'\n                                ? '1px solid #000'\n                                : 'line-through');\n                        var me = this,\n                            range = this.selection.getRange(),\n                            text;\n\n                        if (value == 'default') {\n                            if (range.collapsed) {\n                                text = me.document.createTextNode('font');\n                                range.insertNode(text).select();\n                            }\n                            me.execCommand('removeFormat', 'span,a', style);\n                            if (text) {\n                                range.setStartBefore(text).collapse(true);\n                                domUtils.remove(text);\n                            }\n                            mergesibling(range, cmdName, value);\n                            range.select();\n                        } else {\n                            if (!range.collapsed) {\n                                if (needCmd[cmd] && me.queryCommandValue(cmd)) {\n                                    me.execCommand('removeFormat', 'span,a', style);\n                                }\n                                range = me.selection.getRange();\n\n                                range.applyInlineStyle('span', { style: style + ':' + value });\n                                mergesibling(range, cmdName, value);\n                                range.select();\n                            } else {\n                                var span = domUtils.findParentByTagName(range.startContainer, 'span', true);\n                                text = me.document.createTextNode('font');\n                                if (\n                                    span &&\n                                    !span.children.length &&\n                                    !span[browser.ie ? 'innerText' : 'textContent'].replace(fillCharReg, '').length\n                                ) {\n                                    //for ie hack when enter\n                                    range.insertNode(text);\n                                    if (needCmd[cmd]) {\n                                        range.selectNode(text).select();\n                                        me.execCommand('removeFormat', 'span,a', style, null);\n\n                                        span = domUtils.findParentByTagName(text, 'span', true);\n                                        range.setStartBefore(text);\n                                    }\n                                    span && (span.style.cssText += ';' + style + ':' + value);\n                                    range.collapse(true).select();\n                                } else {\n                                    range.insertNode(text);\n                                    range.selectNode(text).select();\n                                    span = range.document.createElement('span');\n\n                                    if (needCmd[cmd]) {\n                                        //a标签内的不处理跳过\n                                        if (domUtils.findParentByTagName(text, 'a', true)) {\n                                            range.setStartBefore(text).setCursor();\n                                            domUtils.remove(text);\n                                            return;\n                                        }\n                                        me.execCommand('removeFormat', 'span,a', style);\n                                    }\n\n                                    span.style.cssText = style + ':' + value;\n\n                                    text.parentNode.insertBefore(span, text);\n                                    //修复，span套span 但样式不继承的问题\n                                    if (!browser.ie || (browser.ie && browser.version == 9)) {\n                                        var spanParent = span.parentNode;\n                                        while (!domUtils.isBlockElm(spanParent)) {\n                                            if (spanParent.tagName == 'SPAN') {\n                                                //opera合并style不会加入\";\"\n                                                span.style.cssText =\n                                                    spanParent.style.cssText + ';' + span.style.cssText;\n                                            }\n                                            spanParent = spanParent.parentNode;\n                                        }\n                                    }\n\n                                    if (opera) {\n                                        setTimeout(function () {\n                                            range.setStart(span, 0).collapse(true);\n                                            mergesibling(range, cmdName, value);\n                                            range.select();\n                                        });\n                                    } else {\n                                        range.setStart(span, 0).collapse(true);\n                                        mergesibling(range, cmdName, value);\n                                        range.select();\n                                    }\n\n                                    //trace:981\n                                    //domUtils.mergeToParent(span)\n                                }\n                                domUtils.remove(text);\n                            }\n                        }\n                        return true;\n                    },\n                    queryCommandValue: function (cmdName) {\n                        var startNode = this.selection.getStart();\n\n                        //trace:946\n                        if (cmdName == 'underline' || cmdName == 'strikethrough') {\n                            var tmpNode = startNode,\n                                value;\n                            while (tmpNode && !domUtils.isBlockElm(tmpNode) && !domUtils.isBody(tmpNode)) {\n                                if (tmpNode.nodeType == 1) {\n                                    value = domUtils.getComputedStyle(tmpNode, style);\n                                    if (value != 'none') {\n                                        return value;\n                                    }\n                                }\n\n                                tmpNode = tmpNode.parentNode;\n                            }\n                            return 'none';\n                        }\n                        if (cmdName == 'fontborder') {\n                            var tmp = startNode,\n                                val;\n                            while (tmp && dtd.$inline[tmp.tagName]) {\n                                if ((val = domUtils.getComputedStyle(tmp, 'border'))) {\n                                    if (/1px/.test(val) && /solid/.test(val)) {\n                                        return val;\n                                    }\n                                }\n                                tmp = tmp.parentNode;\n                            }\n                            return '';\n                        }\n\n                        if (cmdName == 'FontSize') {\n                            var styleVal = domUtils.getComputedStyle(startNode, style),\n                                tmp = /^([\\d\\.]+)(\\w+)$/.exec(styleVal);\n\n                            if (tmp) {\n                                return Math.floor(tmp[1]) + tmp[2];\n                            }\n\n                            return styleVal;\n                        }\n\n                        return domUtils.getComputedStyle(startNode, style);\n                    },\n                    queryCommandState: function (cmdName) {\n                        if (!needCmd[cmdName]) return 0;\n                        var val = this.queryCommandValue(cmdName);\n                        if (cmdName == 'fontborder') {\n                            return /1px/.test(val) && /solid/.test(val);\n                        } else {\n                            return cmdName == 'underline' ? /underline/.test(val) : /line\\-through/.test(val);\n                        }\n                    }\n                };\n            })(p, fonts[p]);\n        }\n    };\n\n    // plugins/link.js\n    /**\n     * 超链接\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入超链接\n     * @command link\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { Object } options   设置自定义属性，例如：url、title、target\n     * @example\n     * ```javascript\n     * editor.execCommand( 'link', '{\n     *     url:'ueditor.baidu.com',\n     *     title:'ueditor',\n     *     target:'_blank'\n     * }' );\n     * ```\n     */\n    /**\n     * 返回当前选中的第一个超链接节点\n     * @command link\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { Element } 超链接节点\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'link' );\n     * ```\n     */\n\n    /**\n     * 取消超链接\n     * @command unlink\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'unlink');\n     * ```\n     */\n\n    UE.plugins['link'] = function () {\n        function optimize(range) {\n            var start = range.startContainer,\n                end = range.endContainer;\n\n            if ((start = domUtils.findParentByTagName(start, 'a', true))) {\n                range.setStartBefore(start);\n            }\n            if ((end = domUtils.findParentByTagName(end, 'a', true))) {\n                range.setEndAfter(end);\n            }\n        }\n\n        UE.commands['unlink'] = {\n            execCommand: function () {\n                var range = this.selection.getRange(),\n                    bookmark;\n                if (range.collapsed && !domUtils.findParentByTagName(range.startContainer, 'a', true)) {\n                    return;\n                }\n                bookmark = range.createBookmark();\n                optimize(range);\n                range.removeInlineStyle('a').moveToBookmark(bookmark).select();\n            },\n            queryCommandState: function () {\n                return !this.highlight && this.queryCommandValue('link') ? 0 : -1;\n            }\n        };\n        function doLink(range, opt, me) {\n            var rngClone = range.cloneRange(),\n                link = me.queryCommandValue('link');\n            optimize((range = range.adjustmentBoundary()));\n            var start = range.startContainer;\n            if (start.nodeType == 1 && link) {\n                start = start.childNodes[range.startOffset];\n                if (\n                    start &&\n                    start.nodeType == 1 &&\n                    start.tagName == 'A' &&\n                    /^(?:https?|ftp|file)\\s*:\\s*\\/\\//.test(start[browser.ie ? 'innerText' : 'textContent'])\n                ) {\n                    start[browser.ie ? 'innerText' : 'textContent'] = utils.html(opt.textValue || opt.href);\n                }\n            }\n            if (!rngClone.collapsed || link) {\n                range.removeInlineStyle('a');\n                rngClone = range.cloneRange();\n            }\n\n            if (rngClone.collapsed) {\n                var a = range.document.createElement('a'),\n                    text = '';\n                if (opt.textValue) {\n                    text = utils.html(opt.textValue);\n                    delete opt.textValue;\n                } else {\n                    text = utils.html(opt.href);\n                }\n                domUtils.setAttributes(a, opt);\n                start = domUtils.findParentByTagName(rngClone.startContainer, 'a', true);\n                if (start && domUtils.isInNodeEndBoundary(rngClone, start)) {\n                    range.setStartAfter(start).collapse(true);\n                }\n                a[browser.ie ? 'innerText' : 'textContent'] = text;\n                range.insertNode(a).selectNode(a);\n            } else {\n                range.applyInlineStyle('a', opt);\n            }\n        }\n        UE.commands['link'] = {\n            execCommand: function (cmdName, opt) {\n                var range;\n                opt._href && (opt._href = utils.unhtml(opt._href, /[<\">]/g));\n                opt.href && (opt.href = utils.unhtml(opt.href, /[<\">]/g));\n                opt.textValue && (opt.textValue = utils.unhtml(opt.textValue, /[<\">]/g));\n                doLink((range = this.selection.getRange()), opt, this);\n                //闭合都不加占位符，如果加了会在a后边多个占位符节点，导致a是图片背景组成的列表，出现空白问题\n                range.collapse().select(true);\n            },\n            queryCommandValue: function () {\n                var range = this.selection.getRange(),\n                    node;\n                if (range.collapsed) {\n                    //                    node = this.selection.getStart();\n                    //在ie下getstart()取值偏上了\n                    node = range.startContainer;\n                    node = node.nodeType == 1 ? node : node.parentNode;\n\n                    if (\n                        node &&\n                        (node = domUtils.findParentByTagName(node, 'a', true)) &&\n                        !domUtils.isInNodeEndBoundary(range, node)\n                    ) {\n                        return node;\n                    }\n                } else {\n                    //trace:1111  如果是<p><a>xx</a></p> startContainer是p就会找不到a\n                    range.shrinkBoundary();\n                    var start =\n                            range.startContainer.nodeType == 3 || !range.startContainer.childNodes[range.startOffset]\n                                ? range.startContainer\n                                : range.startContainer.childNodes[range.startOffset],\n                        end =\n                            range.endContainer.nodeType == 3 || range.endOffset == 0\n                                ? range.endContainer\n                                : range.endContainer.childNodes[range.endOffset - 1],\n                        common = range.getCommonAncestor();\n                    node = domUtils.findParentByTagName(common, 'a', true);\n                    if (!node && common.nodeType == 1) {\n                        var as = common.getElementsByTagName('a'),\n                            ps,\n                            pe;\n\n                        for (var i = 0, ci; (ci = as[i++]); ) {\n                            (ps = domUtils.getPosition(ci, start)), (pe = domUtils.getPosition(ci, end));\n                            if (\n                                (ps & domUtils.POSITION_FOLLOWING || ps & domUtils.POSITION_CONTAINS) &&\n                                (pe & domUtils.POSITION_PRECEDING || pe & domUtils.POSITION_CONTAINS)\n                            ) {\n                                node = ci;\n                                break;\n                            }\n                        }\n                    }\n                    return node;\n                }\n            },\n            queryCommandState: function () {\n                //判断如果是视频的话连接不可用\n                //fix 853\n                var img = this.selection.getRange().getClosedNode(),\n                    flag =\n                        img &&\n                        (img.className == 'edui-faked-video' || img.className.indexOf('edui-upload-video') != -1);\n                return flag ? -1 : 0;\n            }\n        };\n    };\n\n    // plugins/iframe.js\n    ///import core\n    ///import plugins\\inserthtml.js\n    ///commands 插入框架\n    ///commandsName  InsertFrame\n    ///commandsTitle  插入Iframe\n    ///commandsDialog  dialogs\\insertframe\n\n    UE.plugins['insertframe'] = function () {\n        var me = this;\n        function deleteIframe() {\n            me._iframe && delete me._iframe;\n        }\n\n        me.addListener('selectionchange', function () {\n            deleteIframe();\n        });\n    };\n\n    // plugins/scrawl.js\n    ///import core\n    ///commands 涂鸦\n    ///commandsName  Scrawl\n    ///commandsTitle  涂鸦\n    ///commandsDialog  dialogs\\scrawl\n    UE.commands['scrawl'] = {\n        queryCommandState: function () {\n            return browser.ie && browser.version <= 8 ? -1 : 0;\n        }\n    };\n\n    // plugins/removeformat.js\n    /**\n     * 清除格式\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 清除文字样式\n     * @command removeformat\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param   {String}   tags     以逗号隔开的标签。如：strong\n     * @param   {String}   style    样式如：color\n     * @param   {String}   attrs    属性如:width\n     * @example\n     * ```javascript\n     * editor.execCommand( 'removeformat', 'strong','color','width' );\n     * ```\n     */\n\n    UE.plugins['removeformat'] = function () {\n        var me = this;\n        me.setOpt({\n            removeFormatTags: 'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var',\n            removeFormatAttributes: 'class,style,lang,width,height,align,hspace,valign'\n        });\n        me.commands['removeformat'] = {\n            execCommand: function (cmdName, tags, style, attrs, notIncludeA) {\n                var tagReg = new RegExp(\n                        '^(?:' + (tags || this.options.removeFormatTags).replace(/,/g, '|') + ')$',\n                        'i'\n                    ),\n                    removeFormatAttributes = style ? [] : (attrs || this.options.removeFormatAttributes).split(','),\n                    range = new dom.Range(this.document),\n                    bookmark,\n                    node,\n                    parent,\n                    filter = function (node) {\n                        return node.nodeType == 1;\n                    };\n\n                function isRedundantSpan(node) {\n                    if (node.nodeType == 3 || node.tagName.toLowerCase() != 'span') {\n                        return 0;\n                    }\n                    if (browser.ie) {\n                        //ie 下判断实效，所以只能简单用style来判断\n                        //return node.style.cssText == '' ? 1 : 0;\n                        var attrs = node.attributes;\n                        if (attrs.length) {\n                            for (var i = 0, l = attrs.length; i < l; i++) {\n                                if (attrs[i].specified) {\n                                    return 0;\n                                }\n                            }\n                            return 1;\n                        }\n                    }\n                    return !node.attributes.length;\n                }\n                function doRemove(range) {\n                    var bookmark1 = range.createBookmark();\n                    if (range.collapsed) {\n                        range.enlarge(true);\n                    }\n\n                    //不能把a标签切了\n                    if (!notIncludeA) {\n                        var aNode = domUtils.findParentByTagName(range.startContainer, 'a', true);\n                        if (aNode) {\n                            range.setStartBefore(aNode);\n                        }\n\n                        aNode = domUtils.findParentByTagName(range.endContainer, 'a', true);\n                        if (aNode) {\n                            range.setEndAfter(aNode);\n                        }\n                    }\n\n                    bookmark = range.createBookmark();\n\n                    node = bookmark.start;\n\n                    //切开始\n                    while ((parent = node.parentNode) && !domUtils.isBlockElm(parent)) {\n                        domUtils.breakParent(node, parent);\n\n                        domUtils.clearEmptySibling(node);\n                    }\n                    if (bookmark.end) {\n                        //切结束\n                        node = bookmark.end;\n                        while ((parent = node.parentNode) && !domUtils.isBlockElm(parent)) {\n                            domUtils.breakParent(node, parent);\n                            domUtils.clearEmptySibling(node);\n                        }\n\n                        //开始去除样式\n                        var current = domUtils.getNextDomNode(bookmark.start, false, filter),\n                            next;\n                        while (current) {\n                            if (current == bookmark.end) {\n                                break;\n                            }\n\n                            next = domUtils.getNextDomNode(current, true, filter);\n\n                            if (!dtd.$empty[current.tagName.toLowerCase()] && !domUtils.isBookmarkNode(current)) {\n                                if (tagReg.test(current.tagName)) {\n                                    if (style) {\n                                        domUtils.removeStyle(current, style);\n                                        if (isRedundantSpan(current) && style != 'text-decoration') {\n                                            domUtils.remove(current, true);\n                                        }\n                                    } else {\n                                        domUtils.remove(current, true);\n                                    }\n                                } else {\n                                    //trace:939  不能把list上的样式去掉\n                                    if (!dtd.$tableContent[current.tagName] && !dtd.$list[current.tagName]) {\n                                        domUtils.removeAttributes(current, removeFormatAttributes);\n                                        if (isRedundantSpan(current)) {\n                                            domUtils.remove(current, true);\n                                        }\n                                    }\n                                }\n                            }\n                            current = next;\n                        }\n                    }\n                    //trace:1035\n                    //trace:1096 不能把td上的样式去掉，比如边框\n                    var pN = bookmark.start.parentNode;\n                    if (domUtils.isBlockElm(pN) && !dtd.$tableContent[pN.tagName] && !dtd.$list[pN.tagName]) {\n                        domUtils.removeAttributes(pN, removeFormatAttributes);\n                    }\n                    pN = bookmark.end.parentNode;\n                    if (\n                        bookmark.end &&\n                        domUtils.isBlockElm(pN) &&\n                        !dtd.$tableContent[pN.tagName] &&\n                        !dtd.$list[pN.tagName]\n                    ) {\n                        domUtils.removeAttributes(pN, removeFormatAttributes);\n                    }\n                    range.moveToBookmark(bookmark).moveToBookmark(bookmark1);\n                    //清除冗余的代码 <b><bookmark></b>\n                    var node = range.startContainer,\n                        tmp,\n                        collapsed = range.collapsed;\n                    while (node.nodeType == 1 && domUtils.isEmptyNode(node) && dtd.$removeEmpty[node.tagName]) {\n                        tmp = node.parentNode;\n                        range.setStartBefore(node);\n                        //trace:937\n                        //更新结束边界\n                        if (range.startContainer === range.endContainer) {\n                            range.endOffset--;\n                        }\n                        domUtils.remove(node);\n                        node = tmp;\n                    }\n\n                    if (!collapsed) {\n                        node = range.endContainer;\n                        while (node.nodeType == 1 && domUtils.isEmptyNode(node) && dtd.$removeEmpty[node.tagName]) {\n                            tmp = node.parentNode;\n                            range.setEndBefore(node);\n                            domUtils.remove(node);\n\n                            node = tmp;\n                        }\n                    }\n                }\n\n                range = this.selection.getRange();\n                doRemove(range);\n                range.select();\n            }\n        };\n    };\n\n    // plugins/blockquote.js\n    /**\n     * 添加引用\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 添加引用\n     * @command blockquote\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'blockquote' );\n     * ```\n     */\n\n    /**\n     * 添加引用\n     * @command blockquote\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { Object } attrs 节点属性\n     * @example\n     * ```javascript\n     * editor.execCommand( 'blockquote',{\n     *     style: \"color: red;\"\n     * } );\n     * ```\n     */\n\n    UE.plugins['blockquote'] = function () {\n        var me = this;\n        function getObj(editor) {\n            return domUtils.filterNodeList(editor.selection.getStartElementPath(), 'blockquote');\n        }\n        me.commands['blockquote'] = {\n            execCommand: function (cmdName, attrs) {\n                var range = this.selection.getRange(),\n                    obj = getObj(this),\n                    blockquote = dtd.blockquote,\n                    bookmark = range.createBookmark();\n\n                if (obj) {\n                    var start = range.startContainer,\n                        startBlock = domUtils.isBlockElm(start)\n                            ? start\n                            : domUtils.findParent(start, function (node) {\n                                  return domUtils.isBlockElm(node);\n                              }),\n                        end = range.endContainer,\n                        endBlock = domUtils.isBlockElm(end)\n                            ? end\n                            : domUtils.findParent(end, function (node) {\n                                  return domUtils.isBlockElm(node);\n                              });\n\n                    //处理一下li\n                    startBlock = domUtils.findParentByTagName(startBlock, 'li', true) || startBlock;\n                    endBlock = domUtils.findParentByTagName(endBlock, 'li', true) || endBlock;\n\n                    if (\n                        startBlock.tagName == 'LI' ||\n                        startBlock.tagName == 'TD' ||\n                        startBlock === obj ||\n                        domUtils.isBody(startBlock)\n                    ) {\n                        domUtils.remove(obj, true);\n                    } else {\n                        domUtils.breakParent(startBlock, obj);\n                    }\n\n                    if (startBlock !== endBlock) {\n                        obj = domUtils.findParentByTagName(endBlock, 'blockquote');\n                        if (obj) {\n                            if (endBlock.tagName == 'LI' || endBlock.tagName == 'TD' || domUtils.isBody(endBlock)) {\n                                obj.parentNode && domUtils.remove(obj, true);\n                            } else {\n                                domUtils.breakParent(endBlock, obj);\n                            }\n                        }\n                    }\n\n                    var blockquotes = domUtils.getElementsByTagName(this.document, 'blockquote');\n                    for (var i = 0, bi; (bi = blockquotes[i++]); ) {\n                        if (!bi.childNodes.length) {\n                            domUtils.remove(bi);\n                        } else if (\n                            domUtils.getPosition(bi, startBlock) & domUtils.POSITION_FOLLOWING &&\n                            domUtils.getPosition(bi, endBlock) & domUtils.POSITION_PRECEDING\n                        ) {\n                            domUtils.remove(bi, true);\n                        }\n                    }\n                } else {\n                    var tmpRange = range.cloneRange(),\n                        node =\n                            tmpRange.startContainer.nodeType == 1\n                                ? tmpRange.startContainer\n                                : tmpRange.startContainer.parentNode,\n                        preNode = node,\n                        doEnd = 1;\n\n                    //调整开始\n                    while (1) {\n                        if (domUtils.isBody(node)) {\n                            if (preNode !== node) {\n                                if (range.collapsed) {\n                                    tmpRange.selectNode(preNode);\n                                    doEnd = 0;\n                                } else {\n                                    tmpRange.setStartBefore(preNode);\n                                }\n                            } else {\n                                tmpRange.setStart(node, 0);\n                            }\n\n                            break;\n                        }\n                        if (!blockquote[node.tagName]) {\n                            if (range.collapsed) {\n                                tmpRange.selectNode(preNode);\n                            } else {\n                                tmpRange.setStartBefore(preNode);\n                            }\n                            break;\n                        }\n\n                        preNode = node;\n                        node = node.parentNode;\n                    }\n\n                    //调整结束\n                    if (doEnd) {\n                        preNode =\n                            node =\n                            node =\n                                tmpRange.endContainer.nodeType == 1\n                                    ? tmpRange.endContainer\n                                    : tmpRange.endContainer.parentNode;\n                        while (1) {\n                            if (domUtils.isBody(node)) {\n                                if (preNode !== node) {\n                                    tmpRange.setEndAfter(preNode);\n                                } else {\n                                    tmpRange.setEnd(node, node.childNodes.length);\n                                }\n\n                                break;\n                            }\n                            if (!blockquote[node.tagName]) {\n                                tmpRange.setEndAfter(preNode);\n                                break;\n                            }\n\n                            preNode = node;\n                            node = node.parentNode;\n                        }\n                    }\n\n                    node = range.document.createElement('blockquote');\n                    domUtils.setAttributes(node, attrs);\n                    node.appendChild(tmpRange.extractContents());\n                    tmpRange.insertNode(node);\n                    //去除重复的\n                    var childs = domUtils.getElementsByTagName(node, 'blockquote');\n                    for (var i = 0, ci; (ci = childs[i++]); ) {\n                        if (ci.parentNode) {\n                            domUtils.remove(ci, true);\n                        }\n                    }\n                }\n                range.moveToBookmark(bookmark).select();\n            },\n            queryCommandState: function () {\n                return getObj(this) ? 1 : 0;\n            }\n        };\n    };\n\n    // plugins/convertcase.js\n    /**\n     * 大小写转换\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 把选区内文本变大写，与“tolowercase”命令互斥\n     * @command touppercase\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'touppercase' );\n     * ```\n     */\n\n    /**\n     * 把选区内文本变小写，与“touppercase”命令互斥\n     * @command tolowercase\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'tolowercase' );\n     * ```\n     */\n    UE.commands['touppercase'] = UE.commands['tolowercase'] = {\n        execCommand: function (cmd) {\n            var me = this;\n            var rng = me.selection.getRange();\n            if (rng.collapsed) {\n                return rng;\n            }\n            var bk = rng.createBookmark(),\n                bkEnd = bk.end,\n                filterFn = function (node) {\n                    return !domUtils.isBr(node) && !domUtils.isWhitespace(node);\n                },\n                curNode = domUtils.getNextDomNode(bk.start, false, filterFn);\n            while (curNode && domUtils.getPosition(curNode, bkEnd) & domUtils.POSITION_PRECEDING) {\n                if (curNode.nodeType == 3) {\n                    curNode.nodeValue = curNode.nodeValue[cmd == 'touppercase' ? 'toUpperCase' : 'toLowerCase']();\n                }\n                curNode = domUtils.getNextDomNode(curNode, true, filterFn);\n                if (curNode === bkEnd) {\n                    break;\n                }\n            }\n            rng.moveToBookmark(bk).select();\n        }\n    };\n\n    // plugins/indent.js\n    /**\n     * 首行缩进\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 缩进\n     * @command indent\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'indent' );\n     * ```\n     */\n    UE.commands['indent'] = {\n        execCommand: function () {\n            var me = this,\n                value = me.queryCommandState('indent') ? '0em' : me.options.indentValue || '2em';\n            me.execCommand('Paragraph', 'p', { style: 'text-indent:' + value });\n        },\n        queryCommandState: function () {\n            var pN = domUtils.filterNodeList(this.selection.getStartElementPath(), 'p h1 h2 h3 h4 h5 h6');\n            return pN && pN.style.textIndent && parseInt(pN.style.textIndent) ? 1 : 0;\n        }\n    };\n\n    // plugins/print.js\n    /**\n     * 打印\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 打印\n     * @command print\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'print' );\n     * ```\n     */\n    UE.commands['print'] = {\n        execCommand: function () {\n            this.window.print();\n        },\n        notNeedUndo: 1\n    };\n\n    // plugins/preview.js\n    /**\n     * 预览\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 预览\n     * @command preview\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'preview' );\n     * ```\n     */\n    UE.commands['preview'] = {\n        execCommand: function () {\n            var w = window.open('', '_blank', ''),\n                d = w.document;\n            d.open();\n            d.write(\n                '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/><script src=\"' +\n                    this.options.UEDITOR_HOME_URL +\n                    'ueditor.parse.js\"></script><script>' +\n                    \"setTimeout(function(){uParse('div',{rootPath: '\" +\n                    this.options.UEDITOR_HOME_URL +\n                    \"'})},300)\" +\n                    '</script></head><body><div>' +\n                    this.getContent(null, null, true) +\n                    '</div></body></html>'\n            );\n            d.close();\n        },\n        notNeedUndo: 1\n    };\n\n    // plugins/selectall.js\n    /**\n     * 全选\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 选中所有内容\n     * @command selectall\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'selectall' );\n     * ```\n     */\n    UE.plugins['selectall'] = function () {\n        var me = this;\n        me.commands['selectall'] = {\n            execCommand: function () {\n                //去掉了原生的selectAll,因为会出现报错和当内容为空时，不能出现闭合状态的光标\n                var me = this,\n                    body = me.body,\n                    range = me.selection.getRange();\n                range.selectNodeContents(body);\n                if (domUtils.isEmptyBlock(body)) {\n                    //opera不能自动合并到元素的里边，要手动处理一下\n                    if (browser.opera && body.firstChild && body.firstChild.nodeType == 1) {\n                        range.setStartAtFirst(body.firstChild);\n                    }\n                    range.collapse(true);\n                }\n                range.select(true);\n            },\n            notNeedUndo: 1\n        };\n\n        //快捷键\n        me.addshortcutkey({\n            selectAll: 'ctrl+65'\n        });\n    };\n\n    // plugins/paragraph.js\n    /**\n     * 段落样式\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 段落格式\n     * @command paragraph\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param {String}   style               标签值为：'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'\n     * @param {Object}   attrs               标签的属性\n     * @example\n     * ```javascript\n     * editor.execCommand( 'Paragraph','h1','{\n     *     class:'test'\n     * }' );\n     * ```\n     */\n\n    /**\n     * 返回选区内节点标签名\n     * @command paragraph\n     * @method queryCommandValue\n     * @param { String } cmd 命令字符串\n     * @return { String } 节点标签名\n     * @example\n     * ```javascript\n     * editor.queryCommandValue( 'Paragraph' );\n     * ```\n     */\n\n    UE.plugins['paragraph'] = function () {\n        var me = this,\n            block = domUtils.isBlockElm,\n            notExchange = ['TD', 'LI', 'PRE'],\n            doParagraph = function (range, style, attrs, sourceCmdName) {\n                var bookmark = range.createBookmark(),\n                    filterFn = function (node) {\n                        return node.nodeType == 1\n                            ? node.tagName.toLowerCase() != 'br' && !domUtils.isBookmarkNode(node)\n                            : !domUtils.isWhitespace(node);\n                    },\n                    para;\n\n                range.enlarge(true);\n                var bookmark2 = range.createBookmark(),\n                    current = domUtils.getNextDomNode(bookmark2.start, false, filterFn),\n                    tmpRange = range.cloneRange(),\n                    tmpNode;\n                while (current && !(domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)) {\n                    if (current.nodeType == 3 || !block(current)) {\n                        tmpRange.setStartBefore(current);\n                        while (current && current !== bookmark2.end && !block(current)) {\n                            tmpNode = current;\n                            current = domUtils.getNextDomNode(current, false, null, function (node) {\n                                return !block(node);\n                            });\n                        }\n                        tmpRange.setEndAfter(tmpNode);\n\n                        para = range.document.createElement(style);\n                        if (attrs) {\n                            domUtils.setAttributes(para, attrs);\n                            if (sourceCmdName && sourceCmdName == 'customstyle' && attrs.style) {\n                                para.style.cssText = attrs.style;\n                            }\n                        }\n                        para.appendChild(tmpRange.extractContents());\n                        //需要内容占位\n                        if (domUtils.isEmptyNode(para)) {\n                            domUtils.fillChar(range.document, para);\n                        }\n\n                        tmpRange.insertNode(para);\n\n                        var parent = para.parentNode;\n                        //如果para上一级是一个block元素且不是body,td就删除它\n                        if (\n                            block(parent) &&\n                            !domUtils.isBody(para.parentNode) &&\n                            utils.indexOf(notExchange, parent.tagName) == -1\n                        ) {\n                            //存储dir,style\n                            if (!(sourceCmdName && sourceCmdName == 'customstyle')) {\n                                parent.getAttribute('dir') && para.setAttribute('dir', parent.getAttribute('dir'));\n                                //trace:1070\n                                parent.style.cssText &&\n                                    (para.style.cssText = parent.style.cssText + ';' + para.style.cssText);\n                                //trace:1030\n                                parent.style.textAlign &&\n                                    !para.style.textAlign &&\n                                    (para.style.textAlign = parent.style.textAlign);\n                                parent.style.textIndent &&\n                                    !para.style.textIndent &&\n                                    (para.style.textIndent = parent.style.textIndent);\n                                parent.style.padding &&\n                                    !para.style.padding &&\n                                    (para.style.padding = parent.style.padding);\n                            }\n\n                            //trace:1706 选择的就是h1-6要删除\n                            if (attrs && /h\\d/i.test(parent.tagName) && !/h\\d/i.test(para.tagName)) {\n                                domUtils.setAttributes(parent, attrs);\n                                if (sourceCmdName && sourceCmdName == 'customstyle' && attrs.style) {\n                                    parent.style.cssText = attrs.style;\n                                }\n                                domUtils.remove(para, true);\n                                para = parent;\n                            } else {\n                                domUtils.remove(para.parentNode, true);\n                            }\n                        }\n                        if (utils.indexOf(notExchange, parent.tagName) != -1) {\n                            current = parent;\n                        } else {\n                            current = para;\n                        }\n\n                        current = domUtils.getNextDomNode(current, false, filterFn);\n                    } else {\n                        current = domUtils.getNextDomNode(current, true, filterFn);\n                    }\n                }\n                return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);\n            };\n        me.setOpt('paragraph', { p: '', h1: '', h2: '', h3: '', h4: '', h5: '', h6: '' });\n        me.commands['paragraph'] = {\n            execCommand: function (cmdName, style, attrs, sourceCmdName) {\n                var range = this.selection.getRange();\n                //闭合时单独处理\n                if (range.collapsed) {\n                    var txt = this.document.createTextNode('p');\n                    range.insertNode(txt);\n                    //去掉冗余的fillchar\n                    if (browser.ie) {\n                        var node = txt.previousSibling;\n                        if (node && domUtils.isWhitespace(node)) {\n                            domUtils.remove(node);\n                        }\n                        node = txt.nextSibling;\n                        if (node && domUtils.isWhitespace(node)) {\n                            domUtils.remove(node);\n                        }\n                    }\n                }\n                range = doParagraph(range, style, attrs, sourceCmdName);\n                if (txt) {\n                    range.setStartBefore(txt).collapse(true);\n                    pN = txt.parentNode;\n\n                    domUtils.remove(txt);\n\n                    if (domUtils.isBlockElm(pN) && domUtils.isEmptyNode(pN)) {\n                        domUtils.fillNode(this.document, pN);\n                    }\n                }\n\n                if (browser.gecko && range.collapsed && range.startContainer.nodeType == 1) {\n                    var child = range.startContainer.childNodes[range.startOffset];\n                    if (child && child.nodeType == 1 && child.tagName.toLowerCase() == style) {\n                        range.setStart(child, 0).collapse(true);\n                    }\n                }\n                //trace:1097 原来有true，原因忘了，但去了就不能清除多余的占位符了\n                range.select();\n\n                return true;\n            },\n            queryCommandValue: function () {\n                var node = domUtils.filterNodeList(this.selection.getStartElementPath(), 'p h1 h2 h3 h4 h5 h6');\n                return node ? node.tagName.toLowerCase() : '';\n            }\n        };\n    };\n\n    // plugins/directionality.js\n    /**\n     * 设置文字输入的方向的插件\n     * @file\n     * @since 1.2.6.1\n     */\n    (function () {\n        var block = domUtils.isBlockElm,\n            getObj = function (editor) {\n                //            var startNode = editor.selection.getStart(),\n                //                parents;\n                //            if ( startNode ) {\n                //                //查找所有的是block的父亲节点\n                //                parents = domUtils.findParents( startNode, true, block, true );\n                //                for ( var i = 0,ci; ci = parents[i++]; ) {\n                //                    if ( ci.getAttribute( 'dir' ) ) {\n                //                        return ci;\n                //                    }\n                //                }\n                //            }\n                return domUtils.filterNodeList(editor.selection.getStartElementPath(), function (n) {\n                    return n && n.nodeType == 1 && n.getAttribute('dir');\n                });\n            },\n            doDirectionality = function (range, editor, forward) {\n                var bookmark,\n                    filterFn = function (node) {\n                        return node.nodeType == 1 ? !domUtils.isBookmarkNode(node) : !domUtils.isWhitespace(node);\n                    },\n                    obj = getObj(editor);\n\n                if (obj && range.collapsed) {\n                    obj.setAttribute('dir', forward);\n                    return range;\n                }\n                bookmark = range.createBookmark();\n                range.enlarge(true);\n                var bookmark2 = range.createBookmark(),\n                    current = domUtils.getNextDomNode(bookmark2.start, false, filterFn),\n                    tmpRange = range.cloneRange(),\n                    tmpNode;\n                while (current && !(domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)) {\n                    if (current.nodeType == 3 || !block(current)) {\n                        tmpRange.setStartBefore(current);\n                        while (current && current !== bookmark2.end && !block(current)) {\n                            tmpNode = current;\n                            current = domUtils.getNextDomNode(current, false, null, function (node) {\n                                return !block(node);\n                            });\n                        }\n                        tmpRange.setEndAfter(tmpNode);\n                        var common = tmpRange.getCommonAncestor();\n                        if (!domUtils.isBody(common) && block(common)) {\n                            //遍历到了block节点\n                            common.setAttribute('dir', forward);\n                            current = common;\n                        } else {\n                            //没有遍历到，添加一个block节点\n                            var p = range.document.createElement('p');\n                            p.setAttribute('dir', forward);\n                            var frag = tmpRange.extractContents();\n                            p.appendChild(frag);\n                            tmpRange.insertNode(p);\n                            current = p;\n                        }\n\n                        current = domUtils.getNextDomNode(current, false, filterFn);\n                    } else {\n                        current = domUtils.getNextDomNode(current, true, filterFn);\n                    }\n                }\n                return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);\n            };\n\n        /**\n         * 文字输入方向\n         * @command directionality\n         * @method execCommand\n         * @param { String } cmdName 命令字符串\n         * @param { String } forward 传入'ltr'表示从左向右输入，传入'rtl'表示从右向左输入\n         * @example\n         * ```javascript\n         * editor.execCommand( 'directionality', 'ltr');\n         * ```\n         */\n\n        /**\n         * 查询当前选区的文字输入方向\n         * @command directionality\n         * @method queryCommandValue\n         * @param { String } cmdName 命令字符串\n         * @return { String } 返回'ltr'表示从左向右输入，返回'rtl'表示从右向左输入\n         * @example\n         * ```javascript\n         * editor.queryCommandValue( 'directionality');\n         * ```\n         */\n        UE.commands['directionality'] = {\n            execCommand: function (cmdName, forward) {\n                var range = this.selection.getRange();\n                //闭合时单独处理\n                if (range.collapsed) {\n                    var txt = this.document.createTextNode('d');\n                    range.insertNode(txt);\n                }\n                doDirectionality(range, this, forward);\n                if (txt) {\n                    range.setStartBefore(txt).collapse(true);\n                    domUtils.remove(txt);\n                }\n\n                range.select();\n                return true;\n            },\n            queryCommandValue: function () {\n                var node = getObj(this);\n                return node ? node.getAttribute('dir') : 'ltr';\n            }\n        };\n    })();\n\n    // plugins/horizontal.js\n    /**\n     * 插入分割线插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入分割线\n     * @command horizontal\n     * @method execCommand\n     * @param { String } cmdName 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'horizontal' );\n     * ```\n     */\n    UE.plugins['horizontal'] = function () {\n        var me = this;\n        me.commands['horizontal'] = {\n            execCommand: function (cmdName) {\n                var me = this;\n                if (me.queryCommandState(cmdName) !== -1) {\n                    me.execCommand('insertHtml', '<hr>');\n                    var range = me.selection.getRange(),\n                        start = range.startContainer;\n                    if (start.nodeType == 1 && !start.childNodes[range.startOffset]) {\n                        var tmp;\n                        if ((tmp = start.childNodes[range.startOffset - 1])) {\n                            if (tmp.nodeType == 1 && tmp.tagName == 'HR') {\n                                if (me.options.enterTag == 'p') {\n                                    tmp = me.document.createElement('p');\n                                    range.insertNode(tmp);\n                                    range.setStart(tmp, 0).setCursor();\n                                } else {\n                                    tmp = me.document.createElement('br');\n                                    range.insertNode(tmp);\n                                    range.setStartBefore(tmp).setCursor();\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                }\n            },\n            //边界在table里不能加分隔线\n            queryCommandState: function () {\n                return domUtils.filterNodeList(this.selection.getStartElementPath(), 'table') ? -1 : 0;\n            }\n        };\n        //    me.addListener('delkeyup',function(){\n        //        var rng = this.selection.getRange();\n        //        if(browser.ie && browser.version > 8){\n        //            rng.txtToElmBoundary(true);\n        //            if(domUtils.isStartInblock(rng)){\n        //                var tmpNode = rng.startContainer;\n        //                var pre = tmpNode.previousSibling;\n        //                if(pre && domUtils.isTagNode(pre,'hr')){\n        //                    domUtils.remove(pre);\n        //                    rng.select();\n        //                    return;\n        //                }\n        //            }\n        //        }\n        //        if(domUtils.isBody(rng.startContainer)){\n        //            var hr = rng.startContainer.childNodes[rng.startOffset -1];\n        //            if(hr && hr.nodeName == 'HR'){\n        //                var next = hr.nextSibling;\n        //                if(next){\n        //                    rng.setStart(next,0)\n        //                }else if(hr.previousSibling){\n        //                    rng.setStartAtLast(hr.previousSibling)\n        //                }else{\n        //                    var p = this.document.createElement('p');\n        //                    hr.parentNode.insertBefore(p,hr);\n        //                    domUtils.fillNode(this.document,p);\n        //                    rng.setStart(p,0);\n        //                }\n        //                domUtils.remove(hr);\n        //                rng.setCursor(false,true);\n        //            }\n        //        }\n        //    })\n        me.addListener('delkeydown', function (name, evt) {\n            var rng = this.selection.getRange();\n            rng.txtToElmBoundary(true);\n            if (domUtils.isStartInblock(rng)) {\n                var tmpNode = rng.startContainer;\n                var pre = tmpNode.previousSibling;\n                if (pre && domUtils.isTagNode(pre, 'hr')) {\n                    domUtils.remove(pre);\n                    rng.select();\n                    domUtils.preventDefault(evt);\n                    return true;\n                }\n            }\n        });\n    };\n\n    // plugins/time.js\n    /**\n     * 插入时间和日期\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入时间，默认格式：12:59:59\n     * @command time\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'time');\n     * ```\n     */\n\n    /**\n     * 插入日期，默认格式：2013-08-30\n     * @command date\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'date');\n     * ```\n     */\n    UE.commands['time'] = UE.commands['date'] = {\n        execCommand: function (cmd, format) {\n            var date = new Date();\n\n            function formatTime(date, format) {\n                var hh = ('0' + date.getHours()).slice(-2),\n                    ii = ('0' + date.getMinutes()).slice(-2),\n                    ss = ('0' + date.getSeconds()).slice(-2);\n                format = format || 'hh:ii:ss';\n                return format.replace(/hh/gi, hh).replace(/ii/gi, ii).replace(/ss/gi, ss);\n            }\n            function formatDate(date, format) {\n                var yyyy = ('000' + date.getFullYear()).slice(-4),\n                    yy = yyyy.slice(-2),\n                    mm = ('0' + (date.getMonth() + 1)).slice(-2),\n                    dd = ('0' + date.getDate()).slice(-2);\n                format = format || 'yyyy-mm-dd';\n                return format.replace(/yyyy/gi, yyyy).replace(/yy/gi, yy).replace(/mm/gi, mm).replace(/dd/gi, dd);\n            }\n\n            this.execCommand('insertHtml', cmd == 'time' ? formatTime(date, format) : formatDate(date, format));\n        }\n    };\n\n    // plugins/rowspacing.js\n    /**\n     * 段前段后间距插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 设置段间距\n     * @command rowspacing\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @param { String } value 段间距的值，以px为单位\n     * @param { String } dir 间距位置，top或bottom，分别表示段前和段后\n     * @example\n     * ```javascript\n     * editor.execCommand( 'rowspacing', '10', 'top' );\n     * ```\n     */\n\n    UE.plugins['rowspacing'] = function () {\n        var me = this;\n        me.setOpt({\n            rowspacingtop: ['5', '10', '15', '20', '25'],\n            rowspacingbottom: ['5', '10', '15', '20', '25']\n        });\n        me.commands['rowspacing'] = {\n            execCommand: function (cmdName, value, dir) {\n                this.execCommand('paragraph', 'p', { style: 'margin-' + dir + ':' + value + 'px' });\n                return true;\n            },\n            queryCommandValue: function (cmdName, dir) {\n                var pN = domUtils.filterNodeList(this.selection.getStartElementPath(), function (node) {\n                        return domUtils.isBlockElm(node);\n                    }),\n                    value;\n                //trace:1026\n                if (pN) {\n                    value = domUtils.getComputedStyle(pN, 'margin-' + dir).replace(/[^\\d]/g, '');\n                    return !value ? 0 : value;\n                }\n                return 0;\n            }\n        };\n    };\n\n    // plugins/lineheight.js\n    /**\n     * 设置行内间距\n     * @file\n     * @since 1.2.6.1\n     */\n    UE.plugins['lineheight'] = function () {\n        var me = this;\n        me.setOpt({ lineheight: ['1', '1.5', '1.75', '2', '3', '4', '5'] });\n\n        /**\n         * 行距\n         * @command lineheight\n         * @method execCommand\n         * @param { String } cmdName 命令字符串\n         * @param { String } value 传入的行高值， 该值是当前字体的倍数， 例如： 1.5, 1.75\n         * @example\n         * ```javascript\n         * editor.execCommand( 'lineheight', 1.5);\n         * ```\n         */\n        /**\n         * 查询当前选区内容的行高大小\n         * @command lineheight\n         * @method queryCommandValue\n         * @param { String } cmd 命令字符串\n         * @return { String } 返回当前行高大小\n         * @example\n         * ```javascript\n         * editor.queryCommandValue( 'lineheight' );\n         * ```\n         */\n\n        me.commands['lineheight'] = {\n            execCommand: function (cmdName, value) {\n                this.execCommand('paragraph', 'p', {\n                    style: 'line-height:' + (value == '1' ? 'normal' : value + 'em')\n                });\n                return true;\n            },\n            queryCommandValue: function () {\n                var pN = domUtils.filterNodeList(this.selection.getStartElementPath(), function (node) {\n                    return domUtils.isBlockElm(node);\n                });\n                if (pN) {\n                    var value = domUtils.getComputedStyle(pN, 'line-height');\n                    return value == 'normal' ? 1 : value.replace(/[^\\d.]*/gi, '');\n                }\n            }\n        };\n    };\n\n    // plugins/insertcode.js\n    /**\n     * 插入代码插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    UE.plugins['insertcode'] = function () {\n        var me = this;\n        me.ready(function () {\n            utils.cssRule(\n                'pre',\n                'pre{margin:.5em 0;padding:.4em .6em;border-radius:8px;background:#f8f8f8;}',\n                me.document\n            );\n        });\n        me.setOpt('insertcode', {\n            as3: 'ActionScript3',\n            bash: 'Bash/Shell',\n            cpp: 'C/C++',\n            css: 'Css',\n            cf: 'CodeFunction',\n            'c#': 'C#',\n            delphi: 'Delphi',\n            diff: 'Diff',\n            erlang: 'Erlang',\n            groovy: 'Groovy',\n            html: 'Html',\n            java: 'Java',\n            jfx: 'JavaFx',\n            js: 'Javascript',\n            pl: 'Perl',\n            php: 'Php',\n            plain: 'Plain Text',\n            ps: 'PowerShell',\n            python: 'Python',\n            ruby: 'Ruby',\n            scala: 'Scala',\n            sql: 'Sql',\n            vb: 'Vb',\n            xml: 'Xml'\n        });\n\n        /**\n         * 插入代码\n         * @command insertcode\n         * @method execCommand\n         * @param { String } cmd 命令字符串\n         * @param { String } lang 插入代码的语言\n         * @example\n         * ```javascript\n         * editor.execCommand( 'insertcode', 'javascript' );\n         * ```\n         */\n\n        /**\n         * 如果选区所在位置是插入插入代码区域，返回代码的语言\n         * @command insertcode\n         * @method queryCommandValue\n         * @param { String } cmd 命令字符串\n         * @return { String } 返回代码的语言\n         * @example\n         * ```javascript\n         * editor.queryCommandValue( 'insertcode' );\n         * ```\n         */\n\n        me.commands['insertcode'] = {\n            execCommand: function (cmd, lang) {\n                var me = this,\n                    rng = me.selection.getRange(),\n                    pre = domUtils.findParentByTagName(rng.startContainer, 'pre', true);\n                if (pre) {\n                    pre.className = 'brush:' + lang + ';toolbar:false;';\n                } else {\n                    var code = '';\n                    if (rng.collapsed) {\n                        code = browser.ie && browser.ie11below ? (browser.version <= 8 ? '&nbsp;' : '') : '<br/>';\n                    } else {\n                        var frag = rng.extractContents();\n                        var div = me.document.createElement('div');\n                        div.appendChild(frag);\n\n                        utils.each(\n                            UE.filterNode(\n                                UE.htmlparser(div.innerHTML.replace(/[\\r\\t]/g, '')),\n                                me.options.filterTxtRules\n                            ).children,\n                            function (node) {\n                                if (browser.ie && browser.ie11below && browser.version > 8) {\n                                    if (node.type == 'element') {\n                                        if (node.tagName == 'br') {\n                                            code += '\\n';\n                                        } else if (!dtd.$empty[node.tagName]) {\n                                            utils.each(node.children, function (cn) {\n                                                if (cn.type == 'element') {\n                                                    if (cn.tagName == 'br') {\n                                                        code += '\\n';\n                                                    } else if (!dtd.$empty[node.tagName]) {\n                                                        code += cn.innerText();\n                                                    }\n                                                } else {\n                                                    code += cn.data;\n                                                }\n                                            });\n                                            if (!/\\n$/.test(code)) {\n                                                code += '\\n';\n                                            }\n                                        }\n                                    } else {\n                                        code += node.data + '\\n';\n                                    }\n                                    if (!node.nextSibling() && /\\n$/.test(code)) {\n                                        code = code.replace(/\\n$/, '');\n                                    }\n                                } else {\n                                    if (browser.ie && browser.ie11below) {\n                                        if (node.type == 'element') {\n                                            if (node.tagName == 'br') {\n                                                code += '<br>';\n                                            } else if (!dtd.$empty[node.tagName]) {\n                                                utils.each(node.children, function (cn) {\n                                                    if (cn.type == 'element') {\n                                                        if (cn.tagName == 'br') {\n                                                            code += '<br>';\n                                                        } else if (!dtd.$empty[node.tagName]) {\n                                                            code += cn.innerText();\n                                                        }\n                                                    } else {\n                                                        code += cn.data;\n                                                    }\n                                                });\n                                                if (!/br>$/.test(code)) {\n                                                    code += '<br>';\n                                                }\n                                            }\n                                        } else {\n                                            code += node.data + '<br>';\n                                        }\n                                        if (!node.nextSibling() && /<br>$/.test(code)) {\n                                            code = code.replace(/<br>$/, '');\n                                        }\n                                    } else {\n                                        code +=\n                                            node.type == 'element'\n                                                ? dtd.$empty[node.tagName]\n                                                    ? ''\n                                                    : node.innerText()\n                                                : node.data;\n                                        if (!/br\\/?\\s*>$/.test(code)) {\n                                            if (!node.nextSibling()) return;\n                                            code += '<br>';\n                                        }\n                                    }\n                                }\n                            }\n                        );\n                    }\n                    me.execCommand(\n                        'inserthtml',\n                        '<pre id=\"coder\"class=\"brush:' + lang + ';toolbar:false\">' + code + '</pre>',\n                        true\n                    );\n\n                    pre = me.document.getElementById('coder');\n                    domUtils.removeAttributes(pre, 'id');\n                    var tmpNode = pre.previousSibling;\n\n                    if (\n                        tmpNode &&\n                        ((tmpNode.nodeType == 3 &&\n                            tmpNode.nodeValue.length == 1 &&\n                            browser.ie &&\n                            browser.version == 6) ||\n                            domUtils.isEmptyBlock(tmpNode))\n                    ) {\n                        domUtils.remove(tmpNode);\n                    }\n                    var rng = me.selection.getRange();\n                    if (domUtils.isEmptyBlock(pre)) {\n                        rng.setStart(pre, 0).setCursor(false, true);\n                    } else {\n                        rng.selectNodeContents(pre).select();\n                    }\n                }\n            },\n            queryCommandValue: function () {\n                var path = this.selection.getStartElementPath();\n                var lang = '';\n                utils.each(path, function (node) {\n                    if (node.nodeName == 'PRE') {\n                        var match = node.className.match(/brush:([^;]+)/);\n                        lang = match && match[1] ? match[1] : '';\n                        return false;\n                    }\n                });\n                return lang;\n            }\n        };\n\n        me.addInputRule(function (root) {\n            utils.each(root.getNodesByTagName('pre'), function (pre) {\n                var brs = pre.getNodesByTagName('br');\n                if (brs.length) {\n                    browser.ie &&\n                        browser.ie11below &&\n                        browser.version > 8 &&\n                        utils.each(brs, function (br) {\n                            var txt = UE.uNode.createText('\\n');\n                            br.parentNode.insertBefore(txt, br);\n                            br.parentNode.removeChild(br);\n                        });\n                    return;\n                }\n                if (browser.ie && browser.ie11below && browser.version > 8) return;\n                var code = pre.innerText().split(/\\n/);\n                pre.innerHTML('');\n                utils.each(code, function (c) {\n                    if (c.length) {\n                        pre.appendChild(UE.uNode.createText(c));\n                    }\n                    pre.appendChild(UE.uNode.createElement('br'));\n                });\n            });\n        });\n        me.addOutputRule(function (root) {\n            utils.each(root.getNodesByTagName('pre'), function (pre) {\n                var code = '';\n                utils.each(pre.children, function (n) {\n                    if (n.type == 'text') {\n                        //在ie下文本内容有可能末尾带有\\n要去掉\n                        //trace:3396\n                        code += n.data.replace(/[ ]/g, '&nbsp;').replace(/\\n$/, '');\n                    } else {\n                        if (n.tagName == 'br') {\n                            code += '\\n';\n                        } else {\n                            code += !dtd.$empty[n.tagName] ? '' : n.innerText();\n                        }\n                    }\n                });\n\n                pre.innerText(code.replace(/(&nbsp;|\\n)+$/, ''));\n            });\n        });\n        //不需要判断highlight的command列表\n        me.notNeedCodeQuery = {\n            help: 1,\n            undo: 1,\n            redo: 1,\n            source: 1,\n            print: 1,\n            searchreplace: 1,\n            fullscreen: 1,\n            preview: 1,\n            insertparagraph: 1,\n            elementpath: 1,\n            insertcode: 1,\n            inserthtml: 1,\n            selectall: 1\n        };\n        //将queyCommamndState重置\n        var orgQuery = me.queryCommandState;\n        me.queryCommandState = function (cmd) {\n            var me = this;\n\n            if (!me.notNeedCodeQuery[cmd.toLowerCase()] && me.selection && me.queryCommandValue('insertcode')) {\n                return -1;\n            }\n            return UE.Editor.prototype.queryCommandState.apply(this, arguments);\n        };\n        me.addListener('beforeenterkeydown', function () {\n            var rng = me.selection.getRange();\n            var pre = domUtils.findParentByTagName(rng.startContainer, 'pre', true);\n            if (pre) {\n                me.fireEvent('saveScene');\n                if (!rng.collapsed) {\n                    rng.deleteContents();\n                }\n                if (!browser.ie || browser.ie9above) {\n                    var tmpNode = me.document.createElement('br'),\n                        pre;\n                    rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true);\n                    var next = tmpNode.nextSibling;\n                    if (!next && (!browser.ie || browser.version > 10)) {\n                        rng.insertNode(tmpNode.cloneNode(false));\n                    } else {\n                        rng.setStartAfter(tmpNode);\n                    }\n                    pre = tmpNode.previousSibling;\n                    var tmp;\n                    while (pre) {\n                        tmp = pre;\n                        pre = pre.previousSibling;\n                        if (!pre || pre.nodeName == 'BR') {\n                            pre = tmp;\n                            break;\n                        }\n                    }\n                    if (pre) {\n                        var str = '';\n                        while (\n                            pre &&\n                            pre.nodeName != 'BR' &&\n                            new RegExp('^[\\\\s' + domUtils.fillChar + ']*$').test(pre.nodeValue)\n                        ) {\n                            str += pre.nodeValue;\n                            pre = pre.nextSibling;\n                        }\n                        if (pre.nodeName != 'BR') {\n                            var match = pre.nodeValue.match(new RegExp('^([\\\\s' + domUtils.fillChar + ']+)'));\n                            if (match && match[1]) {\n                                str += match[1];\n                            }\n                        }\n                        if (str) {\n                            str = me.document.createTextNode(str);\n                            rng.insertNode(str).setStartAfter(str);\n                        }\n                    }\n                    rng.collapse(true).select(true);\n                } else {\n                    if (browser.version > 8) {\n                        var txt = me.document.createTextNode('\\n');\n                        var start = rng.startContainer;\n                        if (rng.startOffset == 0) {\n                            var preNode = start.previousSibling;\n                            if (preNode) {\n                                rng.insertNode(txt);\n                                var fillchar = me.document.createTextNode(' ');\n                                rng.setStartAfter(txt)\n                                    .insertNode(fillchar)\n                                    .setStart(fillchar, 0)\n                                    .collapse(true)\n                                    .select(true);\n                            }\n                        } else {\n                            rng.insertNode(txt).setStartAfter(txt);\n                            var fillchar = me.document.createTextNode(' ');\n                            start = rng.startContainer.childNodes[rng.startOffset];\n                            if (start && !/^\\n/.test(start.nodeValue)) {\n                                rng.setStartBefore(txt);\n                            }\n                            rng.insertNode(fillchar).setStart(fillchar, 0).collapse(true).select(true);\n                        }\n                    } else {\n                        var tmpNode = me.document.createElement('br');\n                        rng.insertNode(tmpNode);\n                        rng.insertNode(me.document.createTextNode(domUtils.fillChar));\n                        rng.setStartAfter(tmpNode);\n                        pre = tmpNode.previousSibling;\n                        var tmp;\n                        while (pre) {\n                            tmp = pre;\n                            pre = pre.previousSibling;\n                            if (!pre || pre.nodeName == 'BR') {\n                                pre = tmp;\n                                break;\n                            }\n                        }\n                        if (pre) {\n                            var str = '';\n                            while (\n                                pre &&\n                                pre.nodeName != 'BR' &&\n                                new RegExp('^[ ' + domUtils.fillChar + ']*$').test(pre.nodeValue)\n                            ) {\n                                str += pre.nodeValue;\n                                pre = pre.nextSibling;\n                            }\n                            if (pre.nodeName != 'BR') {\n                                var match = pre.nodeValue.match(new RegExp('^([ ' + domUtils.fillChar + ']+)'));\n                                if (match && match[1]) {\n                                    str += match[1];\n                                }\n                            }\n\n                            str = me.document.createTextNode(str);\n                            rng.insertNode(str).setStartAfter(str);\n                        }\n                        rng.collapse(true).select();\n                    }\n                }\n                me.fireEvent('saveScene');\n                return true;\n            }\n        });\n\n        me.addListener('tabkeydown', function (cmd, evt) {\n            var rng = me.selection.getRange();\n            var pre = domUtils.findParentByTagName(rng.startContainer, 'pre', true);\n            if (pre) {\n                me.fireEvent('saveScene');\n                if (evt.shiftKey) {\n                } else {\n                    if (!rng.collapsed) {\n                        var bk = rng.createBookmark();\n                        var start = bk.start.previousSibling;\n\n                        while (start) {\n                            if (pre.firstChild === start && !domUtils.isBr(start)) {\n                                pre.insertBefore(me.document.createTextNode('    '), start);\n\n                                break;\n                            }\n                            if (domUtils.isBr(start)) {\n                                pre.insertBefore(me.document.createTextNode('    '), start.nextSibling);\n\n                                break;\n                            }\n                            start = start.previousSibling;\n                        }\n                        var end = bk.end;\n                        start = bk.start.nextSibling;\n                        if (pre.firstChild === bk.start) {\n                            pre.insertBefore(me.document.createTextNode('    '), start.nextSibling);\n                        }\n                        while (start && start !== end) {\n                            if (domUtils.isBr(start) && start.nextSibling) {\n                                if (start.nextSibling === end) {\n                                    break;\n                                }\n                                pre.insertBefore(me.document.createTextNode('    '), start.nextSibling);\n                            }\n\n                            start = start.nextSibling;\n                        }\n                        rng.moveToBookmark(bk).select();\n                    } else {\n                        var tmpNode = me.document.createTextNode('    ');\n                        rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true).select(true);\n                    }\n                }\n\n                me.fireEvent('saveScene');\n                return true;\n            }\n        });\n\n        me.addListener('beforeinserthtml', function (evtName, html) {\n            var me = this,\n                rng = me.selection.getRange(),\n                pre = domUtils.findParentByTagName(rng.startContainer, 'pre', true);\n            if (pre) {\n                if (!rng.collapsed) {\n                    rng.deleteContents();\n                }\n                var htmlstr = '';\n                if (browser.ie && browser.version > 8) {\n                    utils.each(UE.filterNode(UE.htmlparser(html), me.options.filterTxtRules).children, function (node) {\n                        if (node.type == 'element') {\n                            if (node.tagName == 'br') {\n                                htmlstr += '\\n';\n                            } else if (!dtd.$empty[node.tagName]) {\n                                utils.each(node.children, function (cn) {\n                                    if (cn.type == 'element') {\n                                        if (cn.tagName == 'br') {\n                                            htmlstr += '\\n';\n                                        } else if (!dtd.$empty[node.tagName]) {\n                                            htmlstr += cn.innerText();\n                                        }\n                                    } else {\n                                        htmlstr += cn.data;\n                                    }\n                                });\n                                if (!/\\n$/.test(htmlstr)) {\n                                    htmlstr += '\\n';\n                                }\n                            }\n                        } else {\n                            htmlstr += node.data + '\\n';\n                        }\n                        if (!node.nextSibling() && /\\n$/.test(htmlstr)) {\n                            htmlstr = htmlstr.replace(/\\n$/, '');\n                        }\n                    });\n                    var tmpNode = me.document.createTextNode(utils.html(htmlstr.replace(/&nbsp;/g, ' ')));\n                    rng.insertNode(tmpNode).selectNode(tmpNode).select();\n                } else {\n                    var frag = me.document.createDocumentFragment();\n\n                    utils.each(UE.filterNode(UE.htmlparser(html), me.options.filterTxtRules).children, function (node) {\n                        if (node.type == 'element') {\n                            if (node.tagName == 'br') {\n                                frag.appendChild(me.document.createElement('br'));\n                            } else if (!dtd.$empty[node.tagName]) {\n                                utils.each(node.children, function (cn) {\n                                    if (cn.type == 'element') {\n                                        if (cn.tagName == 'br') {\n                                            frag.appendChild(me.document.createElement('br'));\n                                        } else if (!dtd.$empty[node.tagName]) {\n                                            frag.appendChild(\n                                                me.document.createTextNode(\n                                                    utils.html(cn.innerText().replace(/&nbsp;/g, ' '))\n                                                )\n                                            );\n                                        }\n                                    } else {\n                                        frag.appendChild(\n                                            me.document.createTextNode(utils.html(cn.data.replace(/&nbsp;/g, ' ')))\n                                        );\n                                    }\n                                });\n                                if (frag.lastChild.nodeName != 'BR') {\n                                    frag.appendChild(me.document.createElement('br'));\n                                }\n                            }\n                        } else {\n                            frag.appendChild(me.document.createTextNode(utils.html(node.data.replace(/&nbsp;/g, ' '))));\n                        }\n                        if (!node.nextSibling() && frag.lastChild.nodeName == 'BR') {\n                            frag.removeChild(frag.lastChild);\n                        }\n                    });\n                    rng.insertNode(frag).select();\n                }\n\n                return true;\n            }\n        });\n        //方向键的处理\n        me.addListener('keydown', function (cmd, evt) {\n            var me = this,\n                keyCode = evt.keyCode || evt.which;\n            if (keyCode == 40) {\n                var rng = me.selection.getRange(),\n                    pre,\n                    start = rng.startContainer;\n                if (\n                    rng.collapsed &&\n                    (pre = domUtils.findParentByTagName(rng.startContainer, 'pre', true)) &&\n                    !pre.nextSibling\n                ) {\n                    var last = pre.lastChild;\n                    while (last && last.nodeName == 'BR') {\n                        last = last.previousSibling;\n                    }\n                    if (last === start || (rng.startContainer === pre && rng.startOffset == pre.childNodes.length)) {\n                        me.execCommand('insertparagraph');\n                        domUtils.preventDefault(evt);\n                    }\n                }\n            }\n        });\n        //trace:3395\n        me.addListener('delkeydown', function (type, evt) {\n            var rng = this.selection.getRange();\n            rng.txtToElmBoundary(true);\n            var start = rng.startContainer;\n            if (domUtils.isTagNode(start, 'pre') && rng.collapsed && domUtils.isStartInblock(rng)) {\n                var p = me.document.createElement('p');\n                domUtils.fillNode(me.document, p);\n                start.parentNode.insertBefore(p, start);\n                domUtils.remove(start);\n                rng.setStart(p, 0).setCursor(false, true);\n                domUtils.preventDefault(evt);\n                return true;\n            }\n        });\n    };\n\n    // plugins/cleardoc.js\n    /**\n     * 清空文档插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 清空文档\n     * @command cleardoc\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * //editor 是编辑器实例\n     * editor.execCommand('cleardoc');\n     * ```\n     */\n\n    UE.commands['cleardoc'] = {\n        execCommand: function (cmdName) {\n            var me = this,\n                enterTag = me.options.enterTag,\n                range = me.selection.getRange();\n            if (enterTag == 'br') {\n                me.body.innerHTML = '<br/>';\n                range.setStart(me.body, 0).setCursor();\n            } else {\n                me.body.innerHTML = '<p>' + (ie ? '' : '<br/>') + '</p>';\n                range.setStart(me.body.firstChild, 0).setCursor(false, true);\n            }\n            setTimeout(function () {\n                me.fireEvent('clearDoc');\n            }, 0);\n        }\n    };\n\n    // plugins/anchor.js\n    /**\n     * 锚点插件，为UEditor提供插入锚点支持\n     * @file\n     * @since 1.2.6.1\n     */\n    UE.plugin.register('anchor', function () {\n        return {\n            bindEvents: {\n                ready: function () {\n                    utils.cssRule(\n                        'anchor',\n                        \".anchorclass{background: url('\" +\n                            this.options.themePath +\n                            this.options.theme +\n                            \"/images/anchor.gif') no-repeat scroll left center transparent;cursor: auto;display: inline-block;height: 16px;width: 15px;}\",\n                        this.document\n                    );\n                }\n            },\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (a) {\n                    var val;\n                    if ((val = a.getAttr('anchorname'))) {\n                        a.tagName = 'a';\n                        a.setAttr({\n                            anchorname: '',\n                            name: val,\n                            class: ''\n                        });\n                    }\n                });\n            },\n            inputRule: function (root) {\n                utils.each(root.getNodesByTagName('a'), function (a) {\n                    var val;\n                    if ((val = a.getAttr('name')) && !a.getAttr('href')) {\n                        a.tagName = 'img';\n                        a.setAttr({\n                            anchorname: a.getAttr('name'),\n                            class: 'anchorclass'\n                        });\n                        a.setAttr('name');\n                    }\n                });\n            },\n            commands: {\n                /**\n                 * 插入锚点\n                 * @command anchor\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @param { String } name 锚点名称字符串\n                 * @example\n                 * ```javascript\n                 * //editor 是编辑器实例\n                 * editor.execCommand('anchor', 'anchor1');\n                 * ```\n                 */\n                anchor: {\n                    execCommand: function (cmd, name) {\n                        var range = this.selection.getRange(),\n                            img = range.getClosedNode();\n                        if (img && img.getAttribute('anchorname')) {\n                            if (name) {\n                                img.setAttribute('anchorname', name);\n                            } else {\n                                range.setStartBefore(img).setCursor();\n                                domUtils.remove(img);\n                            }\n                        } else {\n                            if (name) {\n                                //只在选区的开始插入\n                                var anchor = this.document.createElement('img');\n                                range.collapse(true);\n                                domUtils.setAttributes(anchor, {\n                                    anchorname: name,\n                                    class: 'anchorclass'\n                                });\n                                range.insertNode(anchor).setStartAfter(anchor).setCursor(false, true);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/wordcount.js\n    ///import core\n    ///commands 字数统计\n    ///commandsName  WordCount,wordCount\n    ///commandsTitle  字数统计\n    /*\n     * Created by JetBrains WebStorm.\n     * User: taoqili\n     * Date: 11-9-7\n     * Time: 下午8:18\n     * To change this template use File | Settings | File Templates.\n     */\n\n    UE.plugins['wordcount'] = function () {\n        var me = this;\n        me.setOpt('wordCount', true);\n        me.addListener('contentchange', function () {\n            me.fireEvent('wordcount');\n        });\n        var timer;\n        me.addListener('ready', function () {\n            var me = this;\n            domUtils.on(me.body, 'keyup', function (evt) {\n                var code = evt.keyCode || evt.which,\n                    //忽略的按键,ctr,alt,shift,方向键\n                    ignores = { 16: 1, 18: 1, 20: 1, 37: 1, 38: 1, 39: 1, 40: 1 };\n                if (code in ignores) return;\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    me.fireEvent('wordcount');\n                }, 200);\n            });\n        });\n    };\n\n    // plugins/pagebreak.js\n    /**\n     * 分页功能插件\n     * @file\n     * @since 1.2.6.1\n     */\n    UE.plugins['pagebreak'] = function () {\n        var me = this,\n            notBreakTags = ['td'];\n        me.setOpt('pageBreakTag', '_ueditor_page_break_tag_');\n\n        function fillNode(node) {\n            if (domUtils.isEmptyBlock(node)) {\n                var firstChild = node.firstChild,\n                    tmpNode;\n\n                while (firstChild && firstChild.nodeType == 1 && domUtils.isEmptyBlock(firstChild)) {\n                    tmpNode = firstChild;\n                    firstChild = firstChild.firstChild;\n                }\n                !tmpNode && (tmpNode = node);\n                domUtils.fillNode(me.document, tmpNode);\n            }\n        }\n        //分页符样式添加\n\n        me.ready(function () {\n            utils.cssRule(\n                'pagebreak',\n                '.pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}',\n                me.document\n            );\n        });\n        function isHr(node) {\n            return node && node.nodeType == 1 && node.tagName == 'HR' && node.className == 'pagebreak';\n        }\n        me.addInputRule(function (root) {\n            root.traversal(function (node) {\n                if (node.type == 'text' && node.data == me.options.pageBreakTag) {\n                    var hr = UE.uNode.createElement(\n                        '<hr class=\"pagebreak\" noshade=\"noshade\" size=\"5\" style=\"-webkit-user-select: none;\">'\n                    );\n                    node.parentNode.insertBefore(hr, node);\n                    node.parentNode.removeChild(node);\n                }\n            });\n        });\n        me.addOutputRule(function (node) {\n            utils.each(node.getNodesByTagName('hr'), function (n) {\n                if (n.getAttr('class') == 'pagebreak') {\n                    var txt = UE.uNode.createText(me.options.pageBreakTag);\n                    n.parentNode.insertBefore(txt, n);\n                    n.parentNode.removeChild(n);\n                }\n            });\n        });\n\n        /**\n         * 插入分页符\n         * @command pagebreak\n         * @method execCommand\n         * @param { String } cmd 命令字符串\n         * @remind 在表格中插入分页符会把表格切分成两部分\n         * @remind 获取编辑器内的数据时， 编辑器会把分页符转换成“_ueditor_page_break_tag_”字符串，\n         *          以便于提交数据到服务器端后处理分页。\n         * @example\n         * ```javascript\n         * editor.execCommand( 'pagebreak'); //插入一个hr标签，带有样式类名pagebreak\n         * ```\n         */\n\n        me.commands['pagebreak'] = {\n            execCommand: function () {\n                var range = me.selection.getRange(),\n                    hr = me.document.createElement('hr');\n                domUtils.setAttributes(hr, {\n                    class: 'pagebreak',\n                    noshade: 'noshade',\n                    size: '5'\n                });\n                domUtils.unSelectable(hr);\n                //table单独处理\n                var node = domUtils.findParentByTagName(range.startContainer, notBreakTags, true),\n                    parents = [],\n                    pN;\n                if (node) {\n                    switch (node.tagName) {\n                        case 'TD':\n                            pN = node.parentNode;\n                            if (!pN.previousSibling) {\n                                var table = domUtils.findParentByTagName(pN, 'table');\n                                //                            var tableWrapDiv = table.parentNode;\n                                //                            if(tableWrapDiv && tableWrapDiv.nodeType == 1\n                                //                                && tableWrapDiv.tagName == 'DIV'\n                                //                                && tableWrapDiv.getAttribute('dropdrag')\n                                //                                ){\n                                //                                domUtils.remove(tableWrapDiv,true);\n                                //                            }\n                                table.parentNode.insertBefore(hr, table);\n                                parents = domUtils.findParents(hr, true);\n                            } else {\n                                pN.parentNode.insertBefore(hr, pN);\n                                parents = domUtils.findParents(hr);\n                            }\n                            pN = parents[1];\n                            if (hr !== pN) {\n                                domUtils.breakParent(hr, pN);\n                            }\n                            //table要重写绑定一下拖拽\n                            me.fireEvent('afteradjusttable', me.document);\n                    }\n                } else {\n                    if (!range.collapsed) {\n                        range.deleteContents();\n                        var start = range.startContainer;\n                        while (!domUtils.isBody(start) && domUtils.isBlockElm(start) && domUtils.isEmptyNode(start)) {\n                            range.setStartBefore(start).collapse(true);\n                            domUtils.remove(start);\n                            start = range.startContainer;\n                        }\n                    }\n                    range.insertNode(hr);\n\n                    var pN = hr.parentNode,\n                        nextNode;\n                    while (!domUtils.isBody(pN)) {\n                        domUtils.breakParent(hr, pN);\n                        nextNode = hr.nextSibling;\n                        if (nextNode && domUtils.isEmptyBlock(nextNode)) {\n                            domUtils.remove(nextNode);\n                        }\n                        pN = hr.parentNode;\n                    }\n                    nextNode = hr.nextSibling;\n                    var pre = hr.previousSibling;\n                    if (isHr(pre)) {\n                        domUtils.remove(pre);\n                    } else {\n                        pre && fillNode(pre);\n                    }\n\n                    if (!nextNode) {\n                        var p = me.document.createElement('p');\n\n                        hr.parentNode.appendChild(p);\n                        domUtils.fillNode(me.document, p);\n                        range.setStart(p, 0).collapse(true);\n                    } else {\n                        if (isHr(nextNode)) {\n                            domUtils.remove(nextNode);\n                        } else {\n                            fillNode(nextNode);\n                        }\n                        range.setEndAfter(hr).collapse(false);\n                    }\n\n                    range.select(true);\n                }\n            }\n        };\n    };\n\n    // plugins/wordimage.js\n    ///import core\n    ///commands 本地图片引导上传\n    ///commandsName  WordImage\n    ///commandsTitle  本地图片引导上传\n    ///commandsDialog  dialogs\\wordimage\n\n    UE.plugin.register('wordimage', function () {\n        var me = this,\n            images = [];\n        return {\n            commands: {\n                wordimage: {\n                    execCommand: function () {\n                        var images = domUtils.getElementsByTagName(me.body, 'img');\n                        var urlList = [];\n                        for (var i = 0, ci; (ci = images[i++]); ) {\n                            var url = ci.getAttribute('word_img');\n                            url && urlList.push(url);\n                        }\n                        return urlList;\n                    },\n                    queryCommandState: function () {\n                        images = domUtils.getElementsByTagName(me.body, 'img');\n                        for (var i = 0, ci; (ci = images[i++]); ) {\n                            if (ci.getAttribute('word_img')) {\n                                return 1;\n                            }\n                        }\n                        return -1;\n                    },\n                    notNeedUndo: true\n                }\n            },\n            inputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (img) {\n                    var attrs = img.attrs,\n                        flag = parseInt(attrs.width) < 128 || parseInt(attrs.height) < 43,\n                        opt = me.options,\n                        src = opt.themeImage.default.spacer;\n                    if (attrs['src'] && /^(?:(file:\\/+))/.test(attrs['src'])) {\n                        img.setAttr({\n                            width: attrs.width,\n                            height: attrs.height,\n                            alt: attrs.alt,\n                            word_img: attrs.src,\n                            src: src,\n                            style:\n                                'background:url(' +\n                                (flag\n                                    ? opt.themePath + opt.theme + '/images/word.gif'\n                                    : opt.langPath + opt.lang + '/images/localimage.png') +\n                                ') no-repeat center center;border:1px solid #ddd'\n                        });\n                    }\n                });\n            }\n        };\n    });\n\n    // plugins/dragdrop.js\n    UE.plugins['dragdrop'] = function () {\n        var me = this;\n        me.ready(function () {\n            domUtils.on(this.body, 'dragend', function () {\n                var rng = me.selection.getRange();\n                var node = rng.getClosedNode() || me.selection.getStart();\n\n                if (node && node.tagName == 'IMG') {\n                    var pre = node.previousSibling,\n                        next;\n                    while ((next = node.nextSibling)) {\n                        if (next.nodeType == 1 && next.tagName == 'SPAN' && !next.firstChild) {\n                            domUtils.remove(next);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (\n                        ((pre && pre.nodeType == 1 && !domUtils.isEmptyBlock(pre)) || !pre) &&\n                        (!next || (next && !domUtils.isEmptyBlock(next)))\n                    ) {\n                        if (pre && pre.tagName == 'P' && !domUtils.isEmptyBlock(pre)) {\n                            pre.appendChild(node);\n                            domUtils.moveChild(next, pre);\n                            domUtils.remove(next);\n                        } else if (next && next.tagName == 'P' && !domUtils.isEmptyBlock(next)) {\n                            next.insertBefore(node, next.firstChild);\n                        }\n\n                        if (pre && pre.tagName == 'P' && domUtils.isEmptyBlock(pre)) {\n                            domUtils.remove(pre);\n                        }\n                        if (next && next.tagName == 'P' && domUtils.isEmptyBlock(next)) {\n                            domUtils.remove(next);\n                        }\n                        rng.selectNode(node).select();\n                        me.fireEvent('saveScene');\n                    }\n                }\n            });\n        });\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n            if (keyCode == 13) {\n                var rng = me.selection.getRange(),\n                    node;\n                if ((node = domUtils.findParentByTagName(rng.startContainer, 'p', true))) {\n                    if (domUtils.getComputedStyle(node, 'text-align') == 'center') {\n                        domUtils.removeStyle(node, 'text-align');\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/undo.js\n    /**\n     * undo redo\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 撤销上一次执行的命令\n     * @command undo\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'undo' );\n     * ```\n     */\n\n    /**\n     * 重做上一次执行的命令\n     * @command redo\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'redo' );\n     * ```\n     */\n\n    UE.plugins['undo'] = function () {\n        var saveSceneTimer;\n        var me = this,\n            maxUndoCount = me.options.maxUndoCount || 20,\n            maxInputCount = me.options.maxInputCount || 20,\n            fillchar = new RegExp(domUtils.fillChar + '|</hr>', 'gi'); // ie会产生多余的</hr>\n        var noNeedFillCharTags = {\n            ol: 1,\n            ul: 1,\n            table: 1,\n            tbody: 1,\n            tr: 1,\n            body: 1\n        };\n        var orgState = me.options.autoClearEmptyNode;\n        function compareAddr(indexA, indexB) {\n            if (indexA.length != indexB.length) return 0;\n            for (var i = 0, l = indexA.length; i < l; i++) {\n                if (indexA[i] != indexB[i]) return 0;\n            }\n            return 1;\n        }\n\n        function compareRangeAddress(rngAddrA, rngAddrB) {\n            if (rngAddrA.collapsed != rngAddrB.collapsed) {\n                return 0;\n            }\n            if (\n                !compareAddr(rngAddrA.startAddress, rngAddrB.startAddress) ||\n                !compareAddr(rngAddrA.endAddress, rngAddrB.endAddress)\n            ) {\n                return 0;\n            }\n            return 1;\n        }\n\n        function UndoManager() {\n            this.list = [];\n            this.index = 0;\n            this.hasUndo = false;\n            this.hasRedo = false;\n            this.undo = function () {\n                if (this.hasUndo) {\n                    if (!this.list[this.index - 1] && this.list.length == 1) {\n                        this.reset();\n                        return;\n                    }\n                    while (this.list[this.index].content == this.list[this.index - 1].content) {\n                        this.index--;\n                        if (this.index == 0) {\n                            return this.restore(0);\n                        }\n                    }\n                    this.restore(--this.index);\n                }\n            };\n            this.redo = function () {\n                if (this.hasRedo) {\n                    while (this.list[this.index].content == this.list[this.index + 1].content) {\n                        this.index++;\n                        if (this.index == this.list.length - 1) {\n                            return this.restore(this.index);\n                        }\n                    }\n                    this.restore(++this.index);\n                }\n            };\n\n            this.restore = function () {\n                var me = this.editor;\n                var scene = this.list[this.index];\n                var root = UE.htmlparser(scene.content.replace(fillchar, ''));\n                me.options.autoClearEmptyNode = false;\n                me.filterInputRule(root);\n                me.options.autoClearEmptyNode = orgState;\n                //trace:873\n                //去掉展位符\n                me.document.body.innerHTML = root.toHtml();\n                me.fireEvent('afterscencerestore');\n                //处理undo后空格不展位的问题\n                if (browser.ie) {\n                    utils.each(domUtils.getElementsByTagName(me.document, 'td th caption p'), function (node) {\n                        if (domUtils.isEmptyNode(node)) {\n                            domUtils.fillNode(me.document, node);\n                        }\n                    });\n                }\n\n                try {\n                    var rng = new dom.Range(me.document).moveToAddress(scene.address);\n                    rng.select(noNeedFillCharTags[rng.startContainer.nodeName.toLowerCase()]);\n                } catch (e) {}\n\n                this.update();\n                this.clearKey();\n                //不能把自己reset了\n                me.fireEvent('reset', true);\n            };\n\n            this.getScene = function () {\n                var me = this.editor;\n                var rng = me.selection.getRange(),\n                    rngAddress = rng.createAddress(false, true);\n                me.fireEvent('beforegetscene');\n                var root = UE.htmlparser(me.body.innerHTML);\n                me.options.autoClearEmptyNode = false;\n                me.filterOutputRule(root);\n                me.options.autoClearEmptyNode = orgState;\n                var cont = root.toHtml();\n                //trace:3461\n                //这个会引起回退时导致空格丢失的情况\n                //            browser.ie && (cont = cont.replace(/>&nbsp;</g, '><').replace(/\\s*</g, '<').replace(/>\\s*/g, '>'));\n                me.fireEvent('aftergetscene');\n\n                return {\n                    address: rngAddress,\n                    content: cont\n                };\n            };\n            this.save = function (notCompareRange, notSetCursor) {\n                clearTimeout(saveSceneTimer);\n                var currentScene = this.getScene(notSetCursor),\n                    lastScene = this.list[this.index];\n\n                if (lastScene && lastScene.content != currentScene.content) {\n                    me.trigger('contentchange');\n                }\n                //内容相同位置相同不存\n                if (\n                    lastScene &&\n                    lastScene.content == currentScene.content &&\n                    (notCompareRange ? 1 : compareRangeAddress(lastScene.address, currentScene.address))\n                ) {\n                    return;\n                }\n                this.list = this.list.slice(0, this.index + 1);\n                this.list.push(currentScene);\n                //如果大于最大数量了，就把最前的剔除\n                if (this.list.length > maxUndoCount) {\n                    this.list.shift();\n                }\n                this.index = this.list.length - 1;\n                this.clearKey();\n                //跟新undo/redo状态\n                this.update();\n            };\n            this.update = function () {\n                this.hasRedo = !!this.list[this.index + 1];\n                this.hasUndo = !!this.list[this.index - 1];\n            };\n            this.reset = function () {\n                this.list = [];\n                this.index = 0;\n                this.hasUndo = false;\n                this.hasRedo = false;\n                this.clearKey();\n            };\n            this.clearKey = function () {\n                keycont = 0;\n                lastKeyCode = null;\n            };\n        }\n\n        me.undoManger = new UndoManager();\n        me.undoManger.editor = me;\n        function saveScene() {\n            this.undoManger.save();\n        }\n\n        me.addListener('saveScene', function () {\n            var args = Array.prototype.splice.call(arguments, 1);\n            this.undoManger.save.apply(this.undoManger, args);\n        });\n\n        //    me.addListener('beforeexeccommand', saveScene);\n        //    me.addListener('afterexeccommand', saveScene);\n\n        me.addListener('reset', function (type, exclude) {\n            if (!exclude) {\n                this.undoManger.reset();\n            }\n        });\n        me.commands['redo'] = me.commands['undo'] = {\n            execCommand: function (cmdName) {\n                this.undoManger[cmdName]();\n            },\n            queryCommandState: function (cmdName) {\n                return this.undoManger['has' + (cmdName.toLowerCase() == 'undo' ? 'Undo' : 'Redo')] ? 0 : -1;\n            },\n            notNeedUndo: 1\n        };\n\n        var keys = {\n                //  /*Backspace*/ 8:1, /*Delete*/ 46:1,\n                /*Shift*/ 16: 1,\n                /*Ctrl*/ 17: 1,\n                /*Alt*/ 18: 1,\n                37: 1,\n                38: 1,\n                39: 1,\n                40: 1\n            },\n            keycont = 0,\n            lastKeyCode;\n        //输入法状态下不计算字符数\n        var inputType = false;\n        me.addListener('ready', function () {\n            domUtils.on(this.body, 'compositionstart', function () {\n                inputType = true;\n            });\n            domUtils.on(this.body, 'compositionend', function () {\n                inputType = false;\n            });\n        });\n        //快捷键\n        me.addshortcutkey({\n            Undo: 'ctrl+90', //undo\n            Redo: 'ctrl+89' //redo\n        });\n        var isCollapsed = true;\n        me.addListener('keydown', function (type, evt) {\n            var me = this;\n            var keyCode = evt.keyCode || evt.which;\n            // !evt.shiftKey && 暂时把shift去掉了，会有些情况输入大写要触发自动保存 duanjun\n            if (!keys[keyCode] && !evt.ctrlKey && !evt.metaKey && !evt.altKey) {\n                if (inputType) return;\n\n                if (!me.selection.getRange().collapsed) {\n                    me.undoManger.save(false, true);\n                    isCollapsed = false;\n                    return;\n                }\n                if (me.undoManger.list.length == 0) {\n                    me.undoManger.save(true);\n                }\n                clearTimeout(saveSceneTimer);\n                function save(cont) {\n                    cont.undoManger.save(false, true);\n                    cont.fireEvent('selectionchange');\n                }\n                saveSceneTimer = setTimeout(function () {\n                    if (inputType) {\n                        var interalTimer = setInterval(function () {\n                            if (!inputType) {\n                                save(me);\n                                clearInterval(interalTimer);\n                            }\n                        }, 300);\n                        return;\n                    }\n                    save(me);\n                }, 200);\n\n                lastKeyCode = keyCode;\n                keycont++;\n                if (keycont >= maxInputCount) {\n                    save(me);\n                }\n            }\n        });\n        // !evt.shiftKey && 暂时把shift去掉了，会有些情况输入大写要触发自动保存 duanjun\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n            if (!keys[keyCode] && !evt.ctrlKey && !evt.metaKey && !evt.altKey) {\n                if (inputType) return;\n                if (!isCollapsed) {\n                    this.undoManger.save(false, true);\n                    isCollapsed = true;\n                }\n            }\n        });\n        //扩展实例，添加关闭和开启命令undo\n        me.stopCmdUndo = function () {\n            me.__hasEnterExecCommand = true;\n        };\n        me.startCmdUndo = function () {\n            me.__hasEnterExecCommand = false;\n        };\n    };\n\n    // plugins/copy.js\n    /*UE.plugin.register('copy', function () {*/\n\n    //var me = this;\n\n    //function initZeroClipboard() {\n\n    //ZeroClipboard.config({\n    //debug: false,\n    //swfPath: me.options.UEDITOR_HOME_URL + 'third-party/zeroclipboard/ZeroClipboard.swf'\n    //});\n\n    //var client = me.zeroclipboard = new ZeroClipboard();\n\n    //// 复制内容\n    //client.on('copy', function (e) {\n    //var client = e.client,\n    //rng = me.selection.getRange(),\n    //div = document.createElement('div');\n\n    //div.appendChild(rng.cloneContents());\n    //client.setText(div.innerText || div.textContent);\n    //client.setHtml(div.innerHTML);\n    //rng.select();\n    //});\n    //// hover事件传递到target\n    //client.on('mouseover mouseout', function (e) {\n    //var target = e.target;\n    //if (e.type == 'mouseover') {\n    //domUtils.addClass(target, 'edui-state-hover');\n    //} else if (e.type == 'mouseout') {\n    //domUtils.removeClasses(target, 'edui-state-hover');\n    //}\n    //});\n    //// flash加载不成功\n    //client.on('wrongflash noflash', function () {\n    //ZeroClipboard.destroy();\n    //});\n    //}\n\n    //return {\n    //bindEvents: {\n    //'ready': function () {\n    //if (!browser.ie) {\n    //if (window.ZeroClipboard) {\n    //initZeroClipboard();\n    //} else {\n    //utils.loadFile(document, {\n    //src: me.options.UEDITOR_HOME_URL + \"third-party/zeroclipboard/ZeroClipboard.js\",\n    //tag: \"script\",\n    //type: \"text/javascript\",\n    //defer: \"defer\"\n    //}, function () {\n    //initZeroClipboard();\n    //});\n    //}\n    //}\n    //}\n    //},\n    //commands: {\n    //'copy': {\n    //execCommand: function (cmd) {\n    //if (!me.document.execCommand('copy')) {\n    //alert(me.getLang('copymsg'));\n    //}\n    //}\n    //}\n    //}\n    //}\n    /*});*/\n\n    // plugins/paste.js\n    ///import core\n    ///import plugins/inserthtml.js\n    ///import plugins/undo.js\n    ///import plugins/serialize.js\n    ///commands 粘贴\n    ///commandsName  PastePlain\n    ///commandsTitle  纯文本粘贴模式\n    /**\n     * @description 粘贴\n     * @author zhanyi\n     */\n    UE.plugins['paste'] = function () {\n        function getClipboardData(callback) {\n            var doc = this.document;\n            if (doc.getElementById('baidu_pastebin')) {\n                return;\n            }\n            var range = this.selection.getRange(),\n                bk = range.createBookmark(),\n                //创建剪贴的容器div\n                pastebin = doc.createElement('div');\n            pastebin.id = 'baidu_pastebin';\n            // Safari 要求div必须有内容，才能粘贴内容进来\n            browser.webkit && pastebin.appendChild(doc.createTextNode(domUtils.fillChar + domUtils.fillChar));\n            doc.body.appendChild(pastebin);\n            //trace:717 隐藏的span不能得到top\n            //bk.start.innerHTML = '&nbsp;';\n            bk.start.style.display = '';\n            pastebin.style.cssText =\n                'position:absolute;width:1px;height:1px;overflow:hidden;left:-1000px;white-space:nowrap;top:' +\n                //要在现在光标平行的位置加入，否则会出现跳动的问题\n                domUtils.getXY(bk.start).y +\n                'px';\n\n            range.selectNodeContents(pastebin).select(true);\n\n            setTimeout(function () {\n                if (browser.webkit) {\n                    for (var i = 0, pastebins = doc.querySelectorAll('#baidu_pastebin'), pi; (pi = pastebins[i++]); ) {\n                        if (domUtils.isEmptyNode(pi)) {\n                            domUtils.remove(pi);\n                        } else {\n                            pastebin = pi;\n                            break;\n                        }\n                    }\n                }\n                try {\n                    pastebin.parentNode.removeChild(pastebin);\n                } catch (e) {}\n                range.moveToBookmark(bk).select(true);\n                callback(pastebin);\n            }, 0);\n        }\n\n        var me = this;\n\n        me.setOpt({\n            retainOnlyLabelPasted: false\n        });\n\n        var txtContent, htmlContent, address;\n\n        function getPureHtml(html) {\n            return html.replace(/<(\\/?)([\\w\\-]+)([^>]*)>/gi, function (a, b, tagName, attrs) {\n                tagName = tagName.toLowerCase();\n                if ({ img: 1 }[tagName]) {\n                    return a;\n                }\n                attrs = attrs.replace(\n                    /([\\w\\-]*?)\\s*=\\s*((\"([^\"]*)\")|('([^']*)')|([^\\s>]+))/gi,\n                    function (str, atr, val) {\n                        if (\n                            {\n                                src: 1,\n                                href: 1,\n                                name: 1\n                            }[atr.toLowerCase()]\n                        ) {\n                            return atr + '=' + val + ' ';\n                        }\n                        return '';\n                    }\n                );\n                if (\n                    {\n                        span: 1,\n                        div: 1\n                    }[tagName]\n                ) {\n                    return '';\n                } else {\n                    return '<' + b + tagName + ' ' + utils.trim(attrs) + '>';\n                }\n            });\n        }\n        function filter(div) {\n            var html;\n            if (div.firstChild) {\n                //去掉cut中添加的边界值\n                var nodes = domUtils.getElementsByTagName(div, 'span');\n                for (var i = 0, ni; (ni = nodes[i++]); ) {\n                    if (ni.id == '_baidu_cut_start' || ni.id == '_baidu_cut_end') {\n                        domUtils.remove(ni);\n                    }\n                }\n\n                if (browser.webkit) {\n                    var brs = div.querySelectorAll('div br');\n                    for (var i = 0, bi; (bi = brs[i++]); ) {\n                        var pN = bi.parentNode;\n                        if (pN.tagName == 'DIV' && pN.childNodes.length == 1) {\n                            pN.innerHTML = '<p><br/></p>';\n                            domUtils.remove(pN);\n                        }\n                    }\n                    var divs = div.querySelectorAll('#baidu_pastebin');\n                    for (var i = 0, di; (di = divs[i++]); ) {\n                        var tmpP = me.document.createElement('p');\n                        di.parentNode.insertBefore(tmpP, di);\n                        while (di.firstChild) {\n                            tmpP.appendChild(di.firstChild);\n                        }\n                        domUtils.remove(di);\n                    }\n\n                    var metas = div.querySelectorAll('meta');\n                    for (var i = 0, ci; (ci = metas[i++]); ) {\n                        domUtils.remove(ci);\n                    }\n\n                    var brs = div.querySelectorAll('br');\n                    for (i = 0; (ci = brs[i++]); ) {\n                        if (/^apple-/i.test(ci.className)) {\n                            domUtils.remove(ci);\n                        }\n                    }\n                }\n                if (browser.gecko) {\n                    var dirtyNodes = div.querySelectorAll('[_moz_dirty]');\n                    for (i = 0; (ci = dirtyNodes[i++]); ) {\n                        ci.removeAttribute('_moz_dirty');\n                    }\n                }\n                if (!browser.ie) {\n                    var spans = div.querySelectorAll('span.Apple-style-span');\n                    for (var i = 0, ci; (ci = spans[i++]); ) {\n                        domUtils.remove(ci, true);\n                    }\n                }\n\n                //ie下使用innerHTML会产生多余的\\r\\n字符，也会产生&nbsp;这里过滤掉\n                html = div.innerHTML; //.replace(/>(?:(\\s|&nbsp;)*?)</g,'><');\n\n                //过滤word粘贴过来的冗余属性\n                html = UE.filterWord(html);\n                //取消了忽略空白的第二个参数，粘贴过来的有些是有空白的，会被套上相关的标签\n                var root = UE.htmlparser(html);\n                //如果给了过滤规则就先进行过滤\n                if (me.options.filterRules) {\n                    UE.filterNode(root, me.options.filterRules);\n                }\n                //执行默认的处理\n                me.filterInputRule(root);\n                //针对chrome的处理\n                if (browser.webkit) {\n                    var br = root.lastChild();\n                    if (br && br.type == 'element' && br.tagName == 'br') {\n                        root.removeChild(br);\n                    }\n                    utils.each(me.body.querySelectorAll('div'), function (node) {\n                        if (domUtils.isEmptyBlock(node)) {\n                            domUtils.remove(node, true);\n                        }\n                    });\n                }\n                html = { html: root.toHtml() };\n                me.fireEvent('beforepaste', html, root);\n                //抢了默认的粘贴，那后边的内容就不执行了，比如表格粘贴\n                if (!html.html) {\n                    return;\n                }\n                root = UE.htmlparser(html.html, true);\n                //如果开启了纯文本模式\n                if (me.queryCommandState('pasteplain') === 1) {\n                    me.execCommand('insertHtml', UE.filterNode(root, me.options.filterTxtRules).toHtml(), true);\n                } else {\n                    //文本模式\n                    UE.filterNode(root, me.options.filterTxtRules);\n                    txtContent = root.toHtml();\n                    //完全模式\n                    htmlContent = html.html;\n\n                    address = me.selection.getRange().createAddress(true);\n                    me.execCommand(\n                        'insertHtml',\n                        me.getOpt('retainOnlyLabelPasted') === true ? getPureHtml(htmlContent) : htmlContent,\n                        true\n                    );\n                }\n                me.fireEvent('afterpaste', html);\n            }\n        }\n\n        me.addListener('pasteTransfer', function (cmd, plainType) {\n            if (address && txtContent && htmlContent && txtContent != htmlContent) {\n                var range = me.selection.getRange();\n                range.moveToAddress(address, true);\n\n                if (!range.collapsed) {\n                    while (!domUtils.isBody(range.startContainer)) {\n                        var start = range.startContainer;\n                        if (start.nodeType == 1) {\n                            start = start.childNodes[range.startOffset];\n                            if (!start) {\n                                range.setStartBefore(range.startContainer);\n                                continue;\n                            }\n                            var pre = start.previousSibling;\n\n                            if (\n                                pre &&\n                                pre.nodeType == 3 &&\n                                new RegExp('^[\\n\\r\\t ' + domUtils.fillChar + ']*$').test(pre.nodeValue)\n                            ) {\n                                range.setStartBefore(pre);\n                            }\n                        }\n                        if (range.startOffset == 0) {\n                            range.setStartBefore(range.startContainer);\n                        } else {\n                            break;\n                        }\n                    }\n                    while (!domUtils.isBody(range.endContainer)) {\n                        var end = range.endContainer;\n                        if (end.nodeType == 1) {\n                            end = end.childNodes[range.endOffset];\n                            if (!end) {\n                                range.setEndAfter(range.endContainer);\n                                continue;\n                            }\n                            var next = end.nextSibling;\n                            if (\n                                next &&\n                                next.nodeType == 3 &&\n                                new RegExp('^[\\n\\r\\t' + domUtils.fillChar + ']*$').test(next.nodeValue)\n                            ) {\n                                range.setEndAfter(next);\n                            }\n                        }\n                        if (\n                            range.endOffset ==\n                            range.endContainer[range.endContainer.nodeType == 3 ? 'nodeValue' : 'childNodes'].length\n                        ) {\n                            range.setEndAfter(range.endContainer);\n                        } else {\n                            break;\n                        }\n                    }\n                }\n\n                range.deleteContents();\n                range.select(true);\n                me.__hasEnterExecCommand = true;\n                var html = htmlContent;\n                if (plainType === 2) {\n                    html = getPureHtml(html);\n                } else if (plainType) {\n                    html = txtContent;\n                }\n                me.execCommand('inserthtml', html, true);\n                me.__hasEnterExecCommand = false;\n                var rng = me.selection.getRange();\n                while (\n                    !domUtils.isBody(rng.startContainer) &&\n                    !rng.startOffset &&\n                    rng.startContainer[rng.startContainer.nodeType == 3 ? 'nodeValue' : 'childNodes'].length\n                ) {\n                    rng.setStartBefore(rng.startContainer);\n                }\n                var tmpAddress = rng.createAddress(true);\n                address.endAddress = tmpAddress.startAddress;\n            }\n        });\n\n        me.addListener('ready', function () {\n            domUtils.on(me.body, 'cut', function () {\n                var range = me.selection.getRange();\n                if (!range.collapsed && me.undoManger) {\n                    me.undoManger.save();\n                }\n            });\n\n            //ie下beforepaste在点击右键时也会触发，所以用监控键盘才处理\n            domUtils.on(me.body, browser.ie || browser.opera ? 'keydown' : 'paste', function (e) {\n                if ((browser.ie || browser.opera) && ((!e.ctrlKey && !e.metaKey) || e.keyCode != '86')) {\n                    return;\n                }\n                getClipboardData.call(me, function (div) {\n                    filter(div);\n                });\n            });\n        });\n\n        me.commands['paste'] = {\n            execCommand: function (cmd) {\n                if (browser.ie) {\n                    getClipboardData.call(me, function (div) {\n                        filter(div);\n                    });\n                    me.document.execCommand('paste');\n                } else {\n                    alert(me.getLang('pastemsg'));\n                }\n            }\n        };\n    };\n\n    // plugins/puretxtpaste.js\n    /**\n     * 纯文本粘贴插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    UE.plugins['pasteplain'] = function () {\n        var me = this;\n        me.setOpt({\n            pasteplain: false,\n            filterTxtRules: (function () {\n                function transP(node) {\n                    node.tagName = 'p';\n                    node.setStyle();\n                }\n                function removeNode(node) {\n                    node.parentNode.removeChild(node, true);\n                }\n                return {\n                    //直接删除及其字节点内容\n                    '-': 'script style object iframe embed input select',\n                    p: { $: {} },\n                    br: { $: {} },\n                    div: function (node) {\n                        var tmpNode,\n                            p = UE.uNode.createElement('p');\n                        while ((tmpNode = node.firstChild())) {\n                            if (tmpNode.type == 'text' || !UE.dom.dtd.$block[tmpNode.tagName]) {\n                                p.appendChild(tmpNode);\n                            } else {\n                                if (p.firstChild()) {\n                                    node.parentNode.insertBefore(p, node);\n                                    p = UE.uNode.createElement('p');\n                                } else {\n                                    node.parentNode.insertBefore(tmpNode, node);\n                                }\n                            }\n                        }\n                        if (p.firstChild()) {\n                            node.parentNode.insertBefore(p, node);\n                        }\n                        node.parentNode.removeChild(node);\n                    },\n                    ol: removeNode,\n                    ul: removeNode,\n                    dl: removeNode,\n                    dt: removeNode,\n                    dd: removeNode,\n                    li: removeNode,\n                    caption: transP,\n                    th: transP,\n                    tr: transP,\n                    h1: transP,\n                    h2: transP,\n                    h3: transP,\n                    h4: transP,\n                    h5: transP,\n                    h6: transP,\n                    td: function (node) {\n                        //没有内容的td直接删掉\n                        var txt = !!node.innerText();\n                        if (txt) {\n                            node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'), node);\n                        }\n                        node.parentNode.removeChild(node, node.innerText());\n                    }\n                };\n            })()\n        });\n        //暂时这里支持一下老版本的属性\n        var pasteplain = me.options.pasteplain;\n\n        /**\n         * 启用或取消纯文本粘贴模式\n         * @command pasteplain\n         * @method execCommand\n         * @param { String } cmd 命令字符串\n         * @example\n         * ```javascript\n         * editor.queryCommandState( 'pasteplain' );\n         * ```\n         */\n\n        /**\n         * 查询当前是否处于纯文本粘贴模式\n         * @command pasteplain\n         * @method queryCommandState\n         * @param { String } cmd 命令字符串\n         * @return { int } 如果处于纯文本模式，返回1，否则，返回0\n         * @example\n         * ```javascript\n         * editor.queryCommandState( 'pasteplain' );\n         * ```\n         */\n        me.commands['pasteplain'] = {\n            queryCommandState: function () {\n                return pasteplain ? 1 : 0;\n            },\n            execCommand: function () {\n                pasteplain = !pasteplain | 0;\n            },\n            notNeedUndo: 1\n        };\n    };\n\n    // plugins/list.js\n    /**\n     * 有序列表,无序列表插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    UE.plugins['list'] = function () {\n        var me = this,\n            notExchange = {\n                TD: 1,\n                PRE: 1,\n                BLOCKQUOTE: 1\n            };\n        var customStyle = {\n            cn: 'cn-1-',\n            cn1: 'cn-2-',\n            cn2: 'cn-3-',\n            num: 'num-1-',\n            num1: 'num-2-',\n            num2: 'num-3-',\n            dash: 'dash',\n            dot: 'dot'\n        };\n\n        me.setOpt({\n            autoTransWordToList: false,\n            insertorderedlist: {\n                num: '',\n                num1: '',\n                num2: '',\n                cn: '',\n                cn1: '',\n                cn2: '',\n                decimal: '',\n                'lower-alpha': '',\n                'lower-roman': '',\n                'upper-alpha': '',\n                'upper-roman': ''\n            },\n            insertunorderedlist: {\n                circle: '',\n                disc: '',\n                square: '',\n                dash: '',\n                dot: ''\n            },\n            listDefaultPaddingLeft: '30',\n            listiconpath: 'http://bs.baidu.com/listicon/',\n            maxListLevel: -1, //-1不限制\n            disablePInList: false\n        });\n        function listToArray(list) {\n            var arr = [];\n            for (var p in list) {\n                arr.push(p);\n            }\n            return arr;\n        }\n        var listStyle = {\n            OL: listToArray(me.options.insertorderedlist),\n            UL: listToArray(me.options.insertunorderedlist)\n        };\n        var liiconpath = me.options.listiconpath;\n\n        //根据用户配置，调整customStyle\n        for (var s in customStyle) {\n            if (!me.options.insertorderedlist.hasOwnProperty(s) && !me.options.insertunorderedlist.hasOwnProperty(s)) {\n                delete customStyle[s];\n            }\n        }\n\n        me.ready(function () {\n            var customCss = [];\n            for (var p in customStyle) {\n                if (p == 'dash' || p == 'dot') {\n                    customCss.push(\n                        'li.list-' + customStyle[p] + '{background-image:url(' + liiconpath + customStyle[p] + '.gif)}'\n                    );\n                    customCss.push(\n                        'ul.custom_' +\n                            p +\n                            '{list-style:none;}ul.custom_' +\n                            p +\n                            ' li{background-position:0 3px;background-repeat:no-repeat}'\n                    );\n                } else {\n                    for (var i = 0; i < 99; i++) {\n                        customCss.push(\n                            'li.list-' +\n                                customStyle[p] +\n                                i +\n                                '{background-image:url(' +\n                                liiconpath +\n                                'list-' +\n                                customStyle[p] +\n                                i +\n                                '.gif)}'\n                        );\n                    }\n                    customCss.push(\n                        'ol.custom_' +\n                            p +\n                            '{list-style:none;}ol.custom_' +\n                            p +\n                            ' li{background-position:0 3px;background-repeat:no-repeat}'\n                    );\n                }\n                switch (p) {\n                    case 'cn':\n                        customCss.push('li.list-' + p + '-paddingleft-1{padding-left:25px}');\n                        customCss.push('li.list-' + p + '-paddingleft-2{padding-left:40px}');\n                        customCss.push('li.list-' + p + '-paddingleft-3{padding-left:55px}');\n                        break;\n                    case 'cn1':\n                        customCss.push('li.list-' + p + '-paddingleft-1{padding-left:30px}');\n                        customCss.push('li.list-' + p + '-paddingleft-2{padding-left:40px}');\n                        customCss.push('li.list-' + p + '-paddingleft-3{padding-left:55px}');\n                        break;\n                    case 'cn2':\n                        customCss.push('li.list-' + p + '-paddingleft-1{padding-left:40px}');\n                        customCss.push('li.list-' + p + '-paddingleft-2{padding-left:55px}');\n                        customCss.push('li.list-' + p + '-paddingleft-3{padding-left:68px}');\n                        break;\n                    case 'num':\n                    case 'num1':\n                        customCss.push('li.list-' + p + '-paddingleft-1{padding-left:25px}');\n                        break;\n                    case 'num2':\n                        customCss.push('li.list-' + p + '-paddingleft-1{padding-left:35px}');\n                        customCss.push('li.list-' + p + '-paddingleft-2{padding-left:40px}');\n                        break;\n                    case 'dash':\n                        customCss.push('li.list-' + p + '-paddingleft{padding-left:35px}');\n                        break;\n                    case 'dot':\n                        customCss.push('li.list-' + p + '-paddingleft{padding-left:20px}');\n                }\n            }\n            customCss.push('.list-paddingleft-1{padding-left:0}');\n            customCss.push('.list-paddingleft-2{padding-left:' + me.options.listDefaultPaddingLeft + 'px}');\n            customCss.push('.list-paddingleft-3{padding-left:' + me.options.listDefaultPaddingLeft * 2 + 'px}');\n            //如果不给宽度会在自定应样式里出现滚动条\n            utils.cssRule(\n                'list',\n                'ol,ul{margin:0;pading:0;' +\n                    (browser.ie ? '' : 'width:95%') +\n                    '}li{clear:both;}' +\n                    customCss.join('\\n'),\n                me.document\n            );\n        });\n        //单独处理剪切的问题\n        me.ready(function () {\n            domUtils.on(me.body, 'cut', function () {\n                setTimeout(function () {\n                    var rng = me.selection.getRange(),\n                        li;\n                    //trace:3416\n                    if (!rng.collapsed) {\n                        if ((li = domUtils.findParentByTagName(rng.startContainer, 'li', true))) {\n                            if (!li.nextSibling && domUtils.isEmptyBlock(li)) {\n                                var pn = li.parentNode,\n                                    node;\n                                if ((node = pn.previousSibling)) {\n                                    domUtils.remove(pn);\n                                    rng.setStartAtLast(node).collapse(true);\n                                    rng.select(true);\n                                } else if ((node = pn.nextSibling)) {\n                                    domUtils.remove(pn);\n                                    rng.setStartAtFirst(node).collapse(true);\n                                    rng.select(true);\n                                } else {\n                                    var tmpNode = me.document.createElement('p');\n                                    domUtils.fillNode(me.document, tmpNode);\n                                    pn.parentNode.insertBefore(tmpNode, pn);\n                                    domUtils.remove(pn);\n                                    rng.setStart(tmpNode, 0).collapse(true);\n                                    rng.select(true);\n                                }\n                            }\n                        }\n                    }\n                });\n            });\n        });\n\n        function getStyle(node) {\n            var cls = node.className;\n            if (domUtils.hasClass(node, /custom_/)) {\n                return cls.match(/custom_(\\w+)/)[1];\n            }\n            return domUtils.getStyle(node, 'list-style-type');\n        }\n\n        me.addListener('beforepaste', function (type, html) {\n            var me = this,\n                rng = me.selection.getRange(),\n                li;\n            var root = UE.htmlparser(html.html, true);\n            if ((li = domUtils.findParentByTagName(rng.startContainer, 'li', true))) {\n                var list = li.parentNode,\n                    tagName = list.tagName == 'OL' ? 'ul' : 'ol';\n                utils.each(root.getNodesByTagName(tagName), function (n) {\n                    n.tagName = list.tagName;\n                    n.setAttr();\n                    if (n.parentNode === root) {\n                        type = getStyle(list) || (list.tagName == 'OL' ? 'decimal' : 'disc');\n                    } else {\n                        var className = n.parentNode.getAttr('class');\n                        if (className && /custom_/.test(className)) {\n                            type = className.match(/custom_(\\w+)/)[1];\n                        } else {\n                            type = n.parentNode.getStyle('list-style-type');\n                        }\n                        if (!type) {\n                            type = list.tagName == 'OL' ? 'decimal' : 'disc';\n                        }\n                    }\n                    var index = utils.indexOf(listStyle[list.tagName], type);\n                    if (n.parentNode !== root) index = index + 1 == listStyle[list.tagName].length ? 0 : index + 1;\n                    var currentStyle = listStyle[list.tagName][index];\n                    if (customStyle[currentStyle]) {\n                        n.setAttr('class', 'custom_' + currentStyle);\n                    } else {\n                        n.setStyle('list-style-type', currentStyle);\n                    }\n                });\n            }\n\n            html.html = root.toHtml();\n        });\n        //导出时，去掉p标签\n        me.getOpt('disablePInList') === true &&\n            me.addOutputRule(function (root) {\n                utils.each(root.getNodesByTagName('li'), function (li) {\n                    var newChildrens = [],\n                        index = 0;\n                    utils.each(li.children, function (n) {\n                        if (n.tagName == 'p') {\n                            var tmpNode;\n                            while ((tmpNode = n.children.pop())) {\n                                newChildrens.splice(index, 0, tmpNode);\n                                tmpNode.parentNode = li;\n                                lastNode = tmpNode;\n                            }\n                            tmpNode = newChildrens[newChildrens.length - 1];\n                            if (!tmpNode || tmpNode.type != 'element' || tmpNode.tagName != 'br') {\n                                var br = UE.uNode.createElement('br');\n                                br.parentNode = li;\n                                newChildrens.push(br);\n                            }\n\n                            index = newChildrens.length;\n                        }\n                    });\n                    if (newChildrens.length) {\n                        li.children = newChildrens;\n                    }\n                });\n            });\n        //进入编辑器的li要套p标签\n        me.addInputRule(function (root) {\n            utils.each(root.getNodesByTagName('li'), function (li) {\n                var tmpP = UE.uNode.createElement('p');\n                for (var i = 0, ci; (ci = li.children[i]); ) {\n                    if (ci.type == 'text' || dtd.p[ci.tagName]) {\n                        tmpP.appendChild(ci);\n                    } else {\n                        if (tmpP.firstChild()) {\n                            li.insertBefore(tmpP, ci);\n                            tmpP = UE.uNode.createElement('p');\n                            i = i + 2;\n                        } else {\n                            i++;\n                        }\n                    }\n                }\n                if ((tmpP.firstChild() && !tmpP.parentNode) || !li.firstChild()) {\n                    li.appendChild(tmpP);\n                }\n                //trace:3357\n                //p不能为空\n                if (!tmpP.firstChild()) {\n                    tmpP.innerHTML(browser.ie ? '&nbsp;' : '<br/>');\n                }\n                //去掉末尾的空白\n                var p = li.firstChild();\n                var lastChild = p.lastChild();\n                if (lastChild && lastChild.type == 'text' && /^\\s*$/.test(lastChild.data)) {\n                    p.removeChild(lastChild);\n                }\n            });\n            if (me.options.autoTransWordToList) {\n                var orderlisttype = {\n                        num1: /^\\d+\\)/,\n                        decimal: /^\\d+\\./,\n                        'lower-alpha': /^[a-z]+\\)/,\n                        'upper-alpha': /^[A-Z]+\\./,\n                        cn: /^[\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+[\\u3001]/,\n                        cn2: /^\\([\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+\\)/\n                    },\n                    unorderlisttype = {\n                        square: 'n'\n                    };\n                function checkListType(content, container) {\n                    var span = container.firstChild();\n                    if (\n                        span &&\n                        span.type == 'element' &&\n                        span.tagName == 'span' &&\n                        /Wingdings|Symbol/.test(span.getStyle('font-family'))\n                    ) {\n                        for (var p in unorderlisttype) {\n                            if (unorderlisttype[p] == span.data) {\n                                return p;\n                            }\n                        }\n                        return 'disc';\n                    }\n                    for (var p in orderlisttype) {\n                        if (orderlisttype[p].test(content)) {\n                            return p;\n                        }\n                    }\n                }\n                utils.each(root.getNodesByTagName('p'), function (node) {\n                    if (node.getAttr('class') != 'MsoListParagraph') {\n                        return;\n                    }\n\n                    //word粘贴过来的会带有margin要去掉,但这样也可能会误命中一些央视\n                    node.setStyle('margin', '');\n                    node.setStyle('margin-left', '');\n                    node.setAttr('class', '');\n\n                    function appendLi(list, p, type) {\n                        if (list.tagName == 'ol') {\n                            if (browser.ie) {\n                                var first = p.firstChild();\n                                if (\n                                    first.type == 'element' &&\n                                    first.tagName == 'span' &&\n                                    orderlisttype[type].test(first.innerText())\n                                ) {\n                                    p.removeChild(first);\n                                }\n                            } else {\n                                p.innerHTML(p.innerHTML().replace(orderlisttype[type], ''));\n                            }\n                        } else {\n                            p.removeChild(p.firstChild());\n                        }\n\n                        var li = UE.uNode.createElement('li');\n                        li.appendChild(p);\n                        list.appendChild(li);\n                    }\n                    var tmp = node,\n                        type,\n                        cacheNode = node;\n\n                    if (node.parentNode.tagName != 'li' && (type = checkListType(node.innerText(), node))) {\n                        var list = UE.uNode.createElement(\n                            me.options.insertorderedlist.hasOwnProperty(type) ? 'ol' : 'ul'\n                        );\n                        if (customStyle[type]) {\n                            list.setAttr('class', 'custom_' + type);\n                        } else {\n                            list.setStyle('list-style-type', type);\n                        }\n                        while (node && node.parentNode.tagName != 'li' && checkListType(node.innerText(), node)) {\n                            tmp = node.nextSibling();\n                            if (!tmp) {\n                                node.parentNode.insertBefore(list, node);\n                            }\n                            appendLi(list, node, type);\n                            node = tmp;\n                        }\n                        if (!list.parentNode && node && node.parentNode) {\n                            node.parentNode.insertBefore(list, node);\n                        }\n                    }\n                    var span = cacheNode.firstChild();\n                    if (\n                        span &&\n                        span.type == 'element' &&\n                        span.tagName == 'span' &&\n                        /^\\s*(&nbsp;)+\\s*$/.test(span.innerText())\n                    ) {\n                        span.parentNode.removeChild(span);\n                    }\n                });\n            }\n        });\n\n        //调整索引标签\n        me.addListener('contentchange', function () {\n            // 保留li标签样式 https://app.asana.com/0/357313196454880/1205247371626226/f\n            // adjustListStyle(me.document);\n        });\n\n        function adjustListStyle(doc, ignore) {\n            utils.each(domUtils.getElementsByTagName(doc, 'ol ul'), function (node) {\n                if (!domUtils.inDoc(node, doc)) return;\n\n                var parent = node.parentNode;\n                if (parent.tagName == node.tagName) {\n                    var nodeStyleType = getStyle(node) || (node.tagName == 'OL' ? 'decimal' : 'disc'),\n                        parentStyleType = getStyle(parent) || (parent.tagName == 'OL' ? 'decimal' : 'disc');\n                    if (nodeStyleType == parentStyleType) {\n                        var styleIndex = utils.indexOf(listStyle[node.tagName], nodeStyleType);\n                        styleIndex = styleIndex + 1 == listStyle[node.tagName].length ? 0 : styleIndex + 1;\n                        setListStyle(node, listStyle[node.tagName][styleIndex]);\n                    }\n                }\n                var index = 0,\n                    type = 2;\n                if (domUtils.hasClass(node, /custom_/)) {\n                    if (!(/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/))) {\n                        type = 1;\n                    }\n                } else {\n                    if (/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/)) {\n                        type = 3;\n                    }\n                }\n\n                var style = domUtils.getStyle(node, 'list-style-type');\n                style && (node.style.cssText = 'list-style-type:' + style);\n                node.className =\n                    utils.trim(node.className.replace(/list-paddingleft-\\w+/, '')) + ' list-paddingleft-' + type;\n                utils.each(domUtils.getElementsByTagName(node, 'li'), function (li) {\n                    li.style.cssText && (li.style.cssText = '');\n                    if (!li.firstChild) {\n                        domUtils.remove(li);\n                        return;\n                    }\n                    if (li.parentNode !== node) {\n                        return;\n                    }\n                    index++;\n                    if (domUtils.hasClass(node, /custom_/)) {\n                        var paddingLeft = 1,\n                            currentStyle = getStyle(node);\n                        if (node.tagName == 'OL') {\n                            if (currentStyle) {\n                                switch (currentStyle) {\n                                    case 'cn':\n                                    case 'cn1':\n                                    case 'cn2':\n                                        if (index > 10 && (index % 10 == 0 || (index > 10 && index < 20))) {\n                                            paddingLeft = 2;\n                                        } else if (index > 20) {\n                                            paddingLeft = 3;\n                                        }\n                                        break;\n                                    case 'num2':\n                                        if (index > 9) {\n                                            paddingLeft = 2;\n                                        }\n                                }\n                            }\n                            li.className =\n                                'list-' +\n                                customStyle[currentStyle] +\n                                index +\n                                ' ' +\n                                'list-' +\n                                currentStyle +\n                                '-paddingleft-' +\n                                paddingLeft;\n                        } else {\n                            li.className =\n                                'list-' + customStyle[currentStyle] + ' ' + 'list-' + currentStyle + '-paddingleft';\n                        }\n                    } else {\n                        li.className = li.className.replace(/list-[\\w\\-]+/gi, '');\n                    }\n                    var className = li.getAttribute('class');\n                    if (className !== null && !className.replace(/\\s/g, '')) {\n                        domUtils.removeAttributes(li, 'class');\n                    }\n                });\n                !ignore &&\n                    adjustList(\n                        node,\n                        node.tagName.toLowerCase(),\n                        getStyle(node) || domUtils.getStyle(node, 'list-style-type'),\n                        true\n                    );\n            });\n        }\n        function adjustList(list, tag, style, ignoreEmpty) {\n            var nextList = list.nextSibling;\n            if (\n                nextList &&\n                nextList.nodeType == 1 &&\n                nextList.tagName.toLowerCase() == tag &&\n                (getStyle(nextList) ||\n                    domUtils.getStyle(nextList, 'list-style-type') ||\n                    (tag == 'ol' ? 'decimal' : 'disc')) == style\n            ) {\n                domUtils.moveChild(nextList, list);\n                if (nextList.childNodes.length == 0) {\n                    domUtils.remove(nextList);\n                }\n            }\n            if (nextList && domUtils.isFillChar(nextList)) {\n                domUtils.remove(nextList);\n            }\n            var preList = list.previousSibling;\n            if (\n                preList &&\n                preList.nodeType == 1 &&\n                preList.tagName.toLowerCase() == tag &&\n                (getStyle(preList) ||\n                    domUtils.getStyle(preList, 'list-style-type') ||\n                    (tag == 'ol' ? 'decimal' : 'disc')) == style\n            ) {\n                domUtils.moveChild(list, preList);\n            }\n            if (preList && domUtils.isFillChar(preList)) {\n                domUtils.remove(preList);\n            }\n            !ignoreEmpty && domUtils.isEmptyBlock(list) && domUtils.remove(list);\n            if (getStyle(list)) {\n                adjustListStyle(list.ownerDocument, true);\n            }\n        }\n\n        function setListStyle(list, style) {\n            if (customStyle[style]) {\n                list.className = 'custom_' + style;\n            }\n            try {\n                domUtils.setStyle(list, 'list-style-type', style);\n            } catch (e) {}\n        }\n        function clearEmptySibling(node) {\n            var tmpNode = node.previousSibling;\n            if (tmpNode && domUtils.isEmptyBlock(tmpNode)) {\n                domUtils.remove(tmpNode);\n            }\n            tmpNode = node.nextSibling;\n            if (tmpNode && domUtils.isEmptyBlock(tmpNode)) {\n                domUtils.remove(tmpNode);\n            }\n        }\n\n        me.addListener('keydown', function (type, evt) {\n            function preventAndSave() {\n                evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n                me.fireEvent('contentchange');\n                me.undoManger && me.undoManger.save();\n            }\n            function findList(node, filterFn) {\n                while (node && !domUtils.isBody(node)) {\n                    if (filterFn(node)) {\n                        return null;\n                    }\n                    if (node.nodeType == 1 && /[ou]l/i.test(node.tagName)) {\n                        return node;\n                    }\n                    node = node.parentNode;\n                }\n                return null;\n            }\n            var keyCode = evt.keyCode || evt.which;\n            if (keyCode == 13 && !evt.shiftKey) {\n                //回车\n                var rng = me.selection.getRange(),\n                    parent = domUtils.findParent(\n                        rng.startContainer,\n                        function (node) {\n                            return domUtils.isBlockElm(node);\n                        },\n                        true\n                    ),\n                    li = domUtils.findParentByTagName(rng.startContainer, 'li', true);\n                if (parent && parent.tagName != 'PRE' && !li) {\n                    var html = parent.innerHTML.replace(new RegExp(domUtils.fillChar, 'g'), '');\n                    if (/^\\s*1\\s*\\.[^\\d]/.test(html)) {\n                        parent.innerHTML = html.replace(/^\\s*1\\s*\\./, '');\n                        rng.setStartAtLast(parent).collapse(true).select();\n                        me.__hasEnterExecCommand = true;\n                        me.execCommand('insertorderedlist');\n                        me.__hasEnterExecCommand = false;\n                    }\n                }\n                var range = me.selection.getRange(),\n                    start = findList(range.startContainer, function (node) {\n                        return node.tagName == 'TABLE';\n                    }),\n                    end = range.collapsed\n                        ? start\n                        : findList(range.endContainer, function (node) {\n                              return node.tagName == 'TABLE';\n                          });\n\n                if (start && end && start === end) {\n                    if (!range.collapsed) {\n                        start = domUtils.findParentByTagName(range.startContainer, 'li', true);\n                        end = domUtils.findParentByTagName(range.endContainer, 'li', true);\n                        if (start && end && start === end) {\n                            range.deleteContents();\n                            li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n                            if (li && domUtils.isEmptyBlock(li)) {\n                                pre = li.previousSibling;\n                                next = li.nextSibling;\n                                p = me.document.createElement('p');\n\n                                domUtils.fillNode(me.document, p);\n                                parentList = li.parentNode;\n                                if (pre && next) {\n                                    range.setStart(next, 0).collapse(true).select(true);\n                                    domUtils.remove(li);\n                                } else {\n                                    if ((!pre && !next) || !pre) {\n                                        parentList.parentNode.insertBefore(p, parentList);\n                                    } else {\n                                        li.parentNode.parentNode.insertBefore(p, parentList.nextSibling);\n                                    }\n                                    domUtils.remove(li);\n                                    if (!parentList.firstChild) {\n                                        domUtils.remove(parentList);\n                                    }\n                                    range.setStart(p, 0).setCursor();\n                                }\n                                preventAndSave();\n                                return;\n                            }\n                        } else {\n                            var tmpRange = range.cloneRange(),\n                                bk = tmpRange.collapse(false).createBookmark();\n\n                            range.deleteContents();\n                            tmpRange.moveToBookmark(bk);\n                            var li = domUtils.findParentByTagName(tmpRange.startContainer, 'li', true);\n\n                            clearEmptySibling(li);\n                            tmpRange.select();\n                            preventAndSave();\n                            return;\n                        }\n                    }\n\n                    li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n\n                    if (li) {\n                        if (domUtils.isEmptyBlock(li)) {\n                            bk = range.createBookmark();\n                            var parentList = li.parentNode;\n                            if (li !== parentList.lastChild) {\n                                domUtils.breakParent(li, parentList);\n                                clearEmptySibling(li);\n                            } else {\n                                parentList.parentNode.insertBefore(li, parentList.nextSibling);\n                                if (domUtils.isEmptyNode(parentList)) {\n                                    domUtils.remove(parentList);\n                                }\n                            }\n                            //嵌套不处理\n                            if (!dtd.$list[li.parentNode.tagName]) {\n                                if (!domUtils.isBlockElm(li.firstChild)) {\n                                    p = me.document.createElement('p');\n                                    li.parentNode.insertBefore(p, li);\n                                    while (li.firstChild) {\n                                        p.appendChild(li.firstChild);\n                                    }\n                                    domUtils.remove(li);\n                                } else {\n                                    domUtils.remove(li, true);\n                                }\n                            }\n                            range.moveToBookmark(bk).select();\n                        } else {\n                            var first = li.firstChild;\n                            if (!first || !domUtils.isBlockElm(first)) {\n                                var p = me.document.createElement('p');\n\n                                !li.firstChild && domUtils.fillNode(me.document, p);\n                                while (li.firstChild) {\n                                    p.appendChild(li.firstChild);\n                                }\n                                li.appendChild(p);\n                                first = p;\n                            }\n\n                            var span = me.document.createElement('span');\n\n                            range.insertNode(span);\n                            domUtils.breakParent(span, li);\n\n                            var nextLi = span.nextSibling;\n                            first = nextLi.firstChild;\n\n                            if (!first) {\n                                p = me.document.createElement('p');\n\n                                domUtils.fillNode(me.document, p);\n                                nextLi.appendChild(p);\n                                first = p;\n                            }\n                            if (domUtils.isEmptyNode(first)) {\n                                first.innerHTML = '';\n                                domUtils.fillNode(me.document, first);\n                            }\n\n                            range.setStart(first, 0).collapse(true).shrinkBoundary().select();\n                            domUtils.remove(span);\n                            var pre = nextLi.previousSibling;\n                            if (pre && domUtils.isEmptyBlock(pre)) {\n                                pre.innerHTML = '<p></p>';\n                                domUtils.fillNode(me.document, pre.firstChild);\n                            }\n                        }\n                        //                        }\n                        preventAndSave();\n                    }\n                }\n            }\n            if (keyCode == 8) {\n                //修中ie中li下的问题\n                range = me.selection.getRange();\n                if (range.collapsed && domUtils.isStartInblock(range)) {\n                    tmpRange = range.cloneRange().trimBoundary();\n                    li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n                    //要在li的最左边，才能处理\n                    if (li && domUtils.isStartInblock(tmpRange)) {\n                        start = domUtils.findParentByTagName(range.startContainer, 'p', true);\n                        if (start && start !== li.firstChild) {\n                            var parentList = domUtils.findParentByTagName(start, ['ol', 'ul']);\n                            domUtils.breakParent(start, parentList);\n                            clearEmptySibling(start);\n                            me.fireEvent('contentchange');\n                            range.setStart(start, 0).setCursor(false, true);\n                            me.fireEvent('saveScene');\n                            domUtils.preventDefault(evt);\n                            return;\n                        }\n\n                        if (li && (pre = li.previousSibling)) {\n                            if (keyCode == 46 && li.childNodes.length) {\n                                return;\n                            }\n                            //有可能上边的兄弟节点是个2级菜单，要追加到2级菜单的最后的li\n                            if (dtd.$list[pre.tagName]) {\n                                pre = pre.lastChild;\n                            }\n                            me.undoManger && me.undoManger.save();\n                            first = li.firstChild;\n                            if (domUtils.isBlockElm(first)) {\n                                if (domUtils.isEmptyNode(first)) {\n                                    //                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);\n                                    pre.appendChild(first);\n                                    range.setStart(first, 0).setCursor(false, true);\n                                    //first不是唯一的节点\n                                    while (li.firstChild) {\n                                        pre.appendChild(li.firstChild);\n                                    }\n                                } else {\n                                    span = me.document.createElement('span');\n                                    range.insertNode(span);\n                                    //判断pre是否是空的节点,如果是<p><br/></p>类型的空节点，干掉p标签防止它占位\n                                    if (domUtils.isEmptyBlock(pre)) {\n                                        pre.innerHTML = '';\n                                    }\n                                    domUtils.moveChild(li, pre);\n                                    range.setStartBefore(span).collapse(true).select(true);\n\n                                    domUtils.remove(span);\n                                }\n                            } else {\n                                if (domUtils.isEmptyNode(li)) {\n                                    var p = me.document.createElement('p');\n                                    pre.appendChild(p);\n                                    range.setStart(p, 0).setCursor();\n                                    //                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);\n                                } else {\n                                    range.setEnd(pre, pre.childNodes.length).collapse().select(true);\n                                    while (li.firstChild) {\n                                        pre.appendChild(li.firstChild);\n                                    }\n                                }\n                            }\n                            domUtils.remove(li);\n                            me.fireEvent('contentchange');\n                            me.fireEvent('saveScene');\n                            domUtils.preventDefault(evt);\n                            return;\n                        }\n                        //trace:980\n\n                        if (li && !li.previousSibling) {\n                            var parentList = li.parentNode;\n                            var bk = range.createBookmark();\n                            if (domUtils.isTagNode(parentList.parentNode, 'ol ul')) {\n                                parentList.parentNode.insertBefore(li, parentList);\n                                if (domUtils.isEmptyNode(parentList)) {\n                                    domUtils.remove(parentList);\n                                }\n                            } else {\n                                while (li.firstChild) {\n                                    parentList.parentNode.insertBefore(li.firstChild, parentList);\n                                }\n\n                                domUtils.remove(li);\n                                if (domUtils.isEmptyNode(parentList)) {\n                                    domUtils.remove(parentList);\n                                }\n                            }\n                            range.moveToBookmark(bk).setCursor(false, true);\n                            me.fireEvent('contentchange');\n                            me.fireEvent('saveScene');\n                            domUtils.preventDefault(evt);\n                            return;\n                        }\n                    }\n                }\n            }\n        });\n\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n            if (keyCode == 8) {\n                var rng = me.selection.getRange(),\n                    list;\n                if ((list = domUtils.findParentByTagName(rng.startContainer, ['ol', 'ul'], true))) {\n                    adjustList(\n                        list,\n                        list.tagName.toLowerCase(),\n                        getStyle(list) || domUtils.getComputedStyle(list, 'list-style-type'),\n                        true\n                    );\n                }\n            }\n        });\n        //处理tab键\n        me.addListener('tabkeydown', function () {\n            var range = me.selection.getRange();\n\n            //控制级数\n            function checkLevel(li) {\n                if (me.options.maxListLevel != -1) {\n                    var level = li.parentNode,\n                        levelNum = 0;\n                    while (/[ou]l/i.test(level.tagName)) {\n                        levelNum++;\n                        level = level.parentNode;\n                    }\n                    if (levelNum >= me.options.maxListLevel) {\n                        return true;\n                    }\n                }\n            }\n            //只以开始为准\n            //todo 后续改进\n            var li = domUtils.findParentByTagName(range.startContainer, 'li', true);\n            if (li) {\n                var bk;\n                if (range.collapsed) {\n                    if (checkLevel(li)) return true;\n                    var parentLi = li.parentNode,\n                        list = me.document.createElement(parentLi.tagName),\n                        index = utils.indexOf(\n                            listStyle[list.tagName],\n                            getStyle(parentLi) || domUtils.getComputedStyle(parentLi, 'list-style-type')\n                        );\n                    index = index + 1 == listStyle[list.tagName].length ? 0 : index + 1;\n                    var currentStyle = listStyle[list.tagName][index];\n                    setListStyle(list, currentStyle);\n                    if (domUtils.isStartInblock(range)) {\n                        me.fireEvent('saveScene');\n                        bk = range.createBookmark();\n                        parentLi.insertBefore(list, li);\n                        list.appendChild(li);\n                        adjustList(list, list.tagName.toLowerCase(), currentStyle);\n                        me.fireEvent('contentchange');\n                        range.moveToBookmark(bk).select(true);\n                        return true;\n                    }\n                } else {\n                    me.fireEvent('saveScene');\n                    bk = range.createBookmark();\n                    for (var i = 0, closeList, parents = domUtils.findParents(li), ci; (ci = parents[i++]); ) {\n                        if (domUtils.isTagNode(ci, 'ol ul')) {\n                            closeList = ci;\n                            break;\n                        }\n                    }\n                    var current = li;\n                    if (bk.end) {\n                        while (current && !(domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)) {\n                            if (checkLevel(current)) {\n                                current = domUtils.getNextDomNode(current, false, null, function (node) {\n                                    return node !== closeList;\n                                });\n                                continue;\n                            }\n                            var parentLi = current.parentNode,\n                                list = me.document.createElement(parentLi.tagName),\n                                index = utils.indexOf(\n                                    listStyle[list.tagName],\n                                    getStyle(parentLi) || domUtils.getComputedStyle(parentLi, 'list-style-type')\n                                );\n                            var currentIndex = index + 1 == listStyle[list.tagName].length ? 0 : index + 1;\n                            var currentStyle = listStyle[list.tagName][currentIndex];\n                            setListStyle(list, currentStyle);\n                            parentLi.insertBefore(list, current);\n                            while (current && !(domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)) {\n                                li = current.nextSibling;\n                                list.appendChild(current);\n                                if (!li || domUtils.isTagNode(li, 'ol ul')) {\n                                    if (li) {\n                                        while ((li = li.firstChild)) {\n                                            if (li.tagName == 'LI') {\n                                                break;\n                                            }\n                                        }\n                                    } else {\n                                        li = domUtils.getNextDomNode(current, false, null, function (node) {\n                                            return node !== closeList;\n                                        });\n                                    }\n                                    break;\n                                }\n                                current = li;\n                            }\n                            adjustList(list, list.tagName.toLowerCase(), currentStyle);\n                            current = li;\n                        }\n                    }\n                    me.fireEvent('contentchange');\n                    range.moveToBookmark(bk).select();\n                    return true;\n                }\n            }\n        });\n        function getLi(start) {\n            while (start && !domUtils.isBody(start)) {\n                if (start.nodeName == 'TABLE') {\n                    return null;\n                }\n                if (start.nodeName == 'LI') {\n                    return start;\n                }\n                start = start.parentNode;\n            }\n        }\n\n        /**\n         * 有序列表，与“insertunorderedlist”命令互斥\n         * @command insertorderedlist\n         * @method execCommand\n         * @param { String } command 命令字符串\n         * @param { String } style 插入的有序列表类型，值为：decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2\n         * @example\n         * ```javascript\n         * editor.execCommand( 'insertorderedlist','decimal');\n         * ```\n         */\n        /**\n         * 查询当前选区内容是否有序列表\n         * @command insertorderedlist\n         * @method queryCommandState\n         * @param { String } cmd 命令字符串\n         * @return { int } 如果当前选区是有序列表返回1，否则返回0\n         * @example\n         * ```javascript\n         * editor.queryCommandState( 'insertorderedlist' );\n         * ```\n         */\n        /**\n         * 查询当前选区内容是否有序列表\n         * @command insertorderedlist\n         * @method queryCommandValue\n         * @param { String } cmd 命令字符串\n         * @return { String } 返回当前有序列表的类型，值为null或decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2\n         * @example\n         * ```javascript\n         * editor.queryCommandValue( 'insertorderedlist' );\n         * ```\n         */\n\n        /**\n         * 无序列表，与“insertorderedlist”命令互斥\n         * @command insertunorderedlist\n         * @method execCommand\n         * @param { String } command 命令字符串\n         * @param { String } style 插入的无序列表类型，值为：circle,disc,square,dash,dot\n         * @example\n         * ```javascript\n         * editor.execCommand( 'insertunorderedlist','circle');\n         * ```\n         */\n        /**\n         * 查询当前是否有word文档粘贴进来的图片\n         * @command insertunorderedlist\n         * @method insertunorderedlist\n         * @param { String } command 命令字符串\n         * @return { int } 如果当前选区是无序列表返回1，否则返回0\n         * @example\n         * ```javascript\n         * editor.queryCommandState( 'insertunorderedlist' );\n         * ```\n         */\n        /**\n         * 查询当前选区内容是否有序列表\n         * @command insertunorderedlist\n         * @method queryCommandValue\n         * @param { String } command 命令字符串\n         * @return { String } 返回当前无序列表的类型，值为null或circle,disc,square,dash,dot\n         * @example\n         * ```javascript\n         * editor.queryCommandValue( 'insertunorderedlist' );\n         * ```\n         */\n\n        me.commands['insertorderedlist'] = me.commands['insertunorderedlist'] = {\n            execCommand: function (command, style) {\n                if (!style) {\n                    style = command.toLowerCase() == 'insertorderedlist' ? 'decimal' : 'disc';\n                }\n                var me = this,\n                    range = this.selection.getRange(),\n                    filterFn = function (node) {\n                        return node.nodeType == 1 ? node.tagName.toLowerCase() != 'br' : !domUtils.isWhitespace(node);\n                    },\n                    tag = command.toLowerCase() == 'insertorderedlist' ? 'ol' : 'ul',\n                    frag = me.document.createDocumentFragment();\n                //去掉是因为会出现选到末尾，导致adjustmentBoundary缩到ol/ul的位置\n                //range.shrinkBoundary();//.adjustmentBoundary();\n                range.adjustmentBoundary().shrinkBoundary();\n                var bko = range.createBookmark(true),\n                    start = getLi(me.document.getElementById(bko.start)),\n                    modifyStart = 0,\n                    end = getLi(me.document.getElementById(bko.end)),\n                    modifyEnd = 0,\n                    startParent,\n                    endParent,\n                    list,\n                    tmp;\n\n                if (start || end) {\n                    start && (startParent = start.parentNode);\n                    if (!bko.end) {\n                        end = start;\n                    }\n                    end && (endParent = end.parentNode);\n\n                    if (startParent === endParent) {\n                        while (start !== end) {\n                            tmp = start;\n                            start = start.nextSibling;\n                            if (!domUtils.isBlockElm(tmp.firstChild)) {\n                                var p = me.document.createElement('p');\n                                while (tmp.firstChild) {\n                                    p.appendChild(tmp.firstChild);\n                                }\n                                tmp.appendChild(p);\n                            }\n                            frag.appendChild(tmp);\n                        }\n                        tmp = me.document.createElement('span');\n                        startParent.insertBefore(tmp, end);\n                        if (!domUtils.isBlockElm(end.firstChild)) {\n                            p = me.document.createElement('p');\n                            while (end.firstChild) {\n                                p.appendChild(end.firstChild);\n                            }\n                            end.appendChild(p);\n                        }\n                        frag.appendChild(end);\n                        domUtils.breakParent(tmp, startParent);\n                        if (domUtils.isEmptyNode(tmp.previousSibling)) {\n                            domUtils.remove(tmp.previousSibling);\n                        }\n                        if (domUtils.isEmptyNode(tmp.nextSibling)) {\n                            domUtils.remove(tmp.nextSibling);\n                        }\n                        var nodeStyle =\n                            getStyle(startParent) ||\n                            domUtils.getComputedStyle(startParent, 'list-style-type') ||\n                            (command.toLowerCase() == 'insertorderedlist' ? 'decimal' : 'disc');\n                        if (startParent.tagName.toLowerCase() == tag && nodeStyle == style) {\n                            for (\n                                var i = 0, ci, tmpFrag = me.document.createDocumentFragment();\n                                (ci = frag.firstChild);\n\n                            ) {\n                                if (domUtils.isTagNode(ci, 'ol ul')) {\n                                    //                                  删除时，子列表不处理\n                                    //                                  utils.each(domUtils.getElementsByTagName(ci,'li'),function(li){\n                                    //                                        while(li.firstChild){\n                                    //                                            tmpFrag.appendChild(li.firstChild);\n                                    //                                        }\n                                    //\n                                    //                                    });\n                                    tmpFrag.appendChild(ci);\n                                } else {\n                                    while (ci.firstChild) {\n                                        tmpFrag.appendChild(ci.firstChild);\n                                        domUtils.remove(ci);\n                                    }\n                                }\n                            }\n                            tmp.parentNode.insertBefore(tmpFrag, tmp);\n                        } else {\n                            list = me.document.createElement(tag);\n                            setListStyle(list, style);\n                            list.appendChild(frag);\n                            tmp.parentNode.insertBefore(list, tmp);\n                        }\n\n                        domUtils.remove(tmp);\n                        list && adjustList(list, tag, style);\n                        range.moveToBookmark(bko).select();\n                        return;\n                    }\n                    //开始\n                    if (start) {\n                        while (start) {\n                            tmp = start.nextSibling;\n                            if (domUtils.isTagNode(start, 'ol ul')) {\n                                frag.appendChild(start);\n                            } else {\n                                var tmpfrag = me.document.createDocumentFragment(),\n                                    hasBlock = 0;\n                                while (start.firstChild) {\n                                    if (domUtils.isBlockElm(start.firstChild)) {\n                                        hasBlock = 1;\n                                    }\n                                    tmpfrag.appendChild(start.firstChild);\n                                }\n                                if (!hasBlock) {\n                                    var tmpP = me.document.createElement('p');\n                                    tmpP.appendChild(tmpfrag);\n                                    frag.appendChild(tmpP);\n                                } else {\n                                    frag.appendChild(tmpfrag);\n                                }\n                                domUtils.remove(start);\n                            }\n\n                            start = tmp;\n                        }\n                        startParent.parentNode.insertBefore(frag, startParent.nextSibling);\n                        if (domUtils.isEmptyNode(startParent)) {\n                            range.setStartBefore(startParent);\n                            domUtils.remove(startParent);\n                        } else {\n                            range.setStartAfter(startParent);\n                        }\n                        modifyStart = 1;\n                    }\n\n                    if (end && domUtils.inDoc(endParent, me.document)) {\n                        //结束\n                        start = endParent.firstChild;\n                        while (start && start !== end) {\n                            tmp = start.nextSibling;\n                            if (domUtils.isTagNode(start, 'ol ul')) {\n                                frag.appendChild(start);\n                            } else {\n                                tmpfrag = me.document.createDocumentFragment();\n                                hasBlock = 0;\n                                while (start.firstChild) {\n                                    if (domUtils.isBlockElm(start.firstChild)) {\n                                        hasBlock = 1;\n                                    }\n                                    tmpfrag.appendChild(start.firstChild);\n                                }\n                                if (!hasBlock) {\n                                    tmpP = me.document.createElement('p');\n                                    tmpP.appendChild(tmpfrag);\n                                    frag.appendChild(tmpP);\n                                } else {\n                                    frag.appendChild(tmpfrag);\n                                }\n                                domUtils.remove(start);\n                            }\n                            start = tmp;\n                        }\n                        var tmpDiv = domUtils.createElement(me.document, 'div', {\n                            tmpDiv: 1\n                        });\n                        domUtils.moveChild(end, tmpDiv);\n\n                        frag.appendChild(tmpDiv);\n                        domUtils.remove(end);\n                        endParent.parentNode.insertBefore(frag, endParent);\n                        range.setEndBefore(endParent);\n                        if (domUtils.isEmptyNode(endParent)) {\n                            domUtils.remove(endParent);\n                        }\n\n                        modifyEnd = 1;\n                    }\n                }\n\n                if (!modifyStart) {\n                    range.setStartBefore(me.document.getElementById(bko.start));\n                }\n                if (bko.end && !modifyEnd) {\n                    range.setEndAfter(me.document.getElementById(bko.end));\n                }\n                range.enlarge(true, function (node) {\n                    return notExchange[node.tagName];\n                });\n\n                frag = me.document.createDocumentFragment();\n\n                var bk = range.createBookmark(),\n                    current = domUtils.getNextDomNode(bk.start, false, filterFn),\n                    tmpRange = range.cloneRange(),\n                    tmpNode,\n                    block = domUtils.isBlockElm;\n\n                while (\n                    current &&\n                    current !== bk.end &&\n                    domUtils.getPosition(current, bk.end) & domUtils.POSITION_PRECEDING\n                ) {\n                    if (current.nodeType == 3 || dtd.li[current.tagName]) {\n                        if (current.nodeType == 1 && dtd.$list[current.tagName]) {\n                            while (current.firstChild) {\n                                frag.appendChild(current.firstChild);\n                            }\n                            tmpNode = domUtils.getNextDomNode(current, false, filterFn);\n                            domUtils.remove(current);\n                            current = tmpNode;\n                            continue;\n                        }\n                        tmpNode = current;\n                        tmpRange.setStartBefore(current);\n\n                        while (current && current !== bk.end && (!block(current) || domUtils.isBookmarkNode(current))) {\n                            tmpNode = current;\n                            current = domUtils.getNextDomNode(current, false, null, function (node) {\n                                return !notExchange[node.tagName];\n                            });\n                        }\n\n                        if (current && block(current)) {\n                            tmp = domUtils.getNextDomNode(tmpNode, false, filterFn);\n                            if (tmp && domUtils.isBookmarkNode(tmp)) {\n                                current = domUtils.getNextDomNode(tmp, false, filterFn);\n                                tmpNode = tmp;\n                            }\n                        }\n                        tmpRange.setEndAfter(tmpNode);\n\n                        current = domUtils.getNextDomNode(tmpNode, false, filterFn);\n\n                        var li = range.document.createElement('li');\n\n                        li.appendChild(tmpRange.extractContents());\n                        if (domUtils.isEmptyNode(li)) {\n                            var tmpNode = range.document.createElement('p');\n                            while (li.firstChild) {\n                                tmpNode.appendChild(li.firstChild);\n                            }\n                            li.appendChild(tmpNode);\n                        }\n                        frag.appendChild(li);\n                    } else {\n                        current = domUtils.getNextDomNode(current, true, filterFn);\n                    }\n                }\n                range.moveToBookmark(bk).collapse(true);\n                list = me.document.createElement(tag);\n                setListStyle(list, style);\n                list.appendChild(frag);\n                range.insertNode(list);\n                //当前list上下看能否合并\n                adjustList(list, tag, style);\n                //去掉冗余的tmpDiv\n                for (var i = 0, ci, tmpDivs = domUtils.getElementsByTagName(list, 'div'); (ci = tmpDivs[i++]); ) {\n                    if (ci.getAttribute('tmpDiv')) {\n                        domUtils.remove(ci, true);\n                    }\n                }\n                range.moveToBookmark(bko).select();\n            },\n            queryCommandState: function (command) {\n                var tag = command.toLowerCase() == 'insertorderedlist' ? 'ol' : 'ul';\n                var path = this.selection.getStartElementPath();\n                for (var i = 0, ci; (ci = path[i++]); ) {\n                    if (ci.nodeName == 'TABLE') {\n                        return 0;\n                    }\n                    if (tag == ci.nodeName.toLowerCase()) {\n                        return 1;\n                    }\n                }\n                return 0;\n            },\n            queryCommandValue: function (command) {\n                var tag = command.toLowerCase() == 'insertorderedlist' ? 'ol' : 'ul';\n                var path = this.selection.getStartElementPath(),\n                    node;\n                for (var i = 0, ci; (ci = path[i++]); ) {\n                    if (ci.nodeName == 'TABLE') {\n                        node = null;\n                        break;\n                    }\n                    if (tag == ci.nodeName.toLowerCase()) {\n                        node = ci;\n                        break;\n                    }\n                }\n                return node ? getStyle(node) || domUtils.getComputedStyle(node, 'list-style-type') : null;\n            }\n        };\n    };\n\n    // plugins/source.js\n    /**\n     * 源码编辑插件\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /*(function (){*/\n    //var sourceEditors = {\n    //textarea: function (editor, holder){\n    //var textarea = holder.ownerDocument.createElement('textarea');\n    //textarea.style.cssText = 'position:absolute;resize:none;width:100%;height:100%;border:0;padding:0;margin:0;overflow-y:auto;';\n    //// todo: IE下只有onresize属性可用... 很纠结\n    //if (browser.ie && browser.version < 8) {\n    //textarea.style.width = holder.offsetWidth + 'px';\n    //textarea.style.height = holder.offsetHeight + 'px';\n    //holder.onresize = function (){\n    //textarea.style.width = holder.offsetWidth + 'px';\n    //textarea.style.height = holder.offsetHeight + 'px';\n    //};\n    //}\n    //holder.appendChild(textarea);\n    //return {\n    //setContent: function (content){\n    //textarea.value = content;\n    //},\n    //getContent: function (){\n    //return textarea.value;\n    //},\n    //select: function (){\n    //var range;\n    //if (browser.ie) {\n    //range = textarea.createTextRange();\n    //range.collapse(true);\n    //range.select();\n    //} else {\n    ////todo: chrome下无法设置焦点\n    //textarea.setSelectionRange(0, 0);\n    //textarea.focus();\n    //}\n    //},\n    //dispose: function (){\n    //holder.removeChild(textarea);\n    //// todo\n    //holder.onresize = null;\n    //textarea = null;\n    //holder = null;\n    //}\n    //};\n    //},\n    //codemirror: function (editor, holder){\n    //var codeEditor = window.CodeMirror(holder, {\n    //mode: \"text/html\",\n    //tabMode: \"indent\",\n    //lineNumbers: true,\n    //lineWrapping:true\n    //});\n    //var dom = codeEditor.getWrapperElement();\n    //dom.style.cssText = 'position:absolute;left:0;top:0;width:100%;height:100%;font-family:consolas,\"Courier new\",monospace;font-size:13px;';\n    //codeEditor.getScrollerElement().style.cssText = 'position:absolute;left:0;top:0;width:100%;height:100%;';\n    //codeEditor.refresh();\n    //return {\n    //getCodeMirror:function(){\n    //return codeEditor;\n    //},\n    //setContent: function (content){\n    //codeEditor.setValue(content);\n    //},\n    //getContent: function (){\n    //return codeEditor.getValue();\n    //},\n    //select: function (){\n    //codeEditor.focus();\n    //},\n    //dispose: function (){\n    //holder.removeChild(dom);\n    //dom = null;\n    //codeEditor = null;\n    //}\n    //};\n    //}\n    //};\n\n    //UE.plugins['source'] = function (){\n    //var me = this;\n    //var opt = this.options;\n    //var sourceMode = false;\n    //var sourceEditor;\n    //var orgSetContent;\n    //opt.sourceEditor = browser.ie  ? 'textarea' : (opt.sourceEditor || 'codemirror');\n\n    //me.setOpt({\n    //sourceEditorFirst:false\n    //});\n    //function createSourceEditor(holder){\n    //return sourceEditors[opt.sourceEditor == 'codemirror' && window.CodeMirror ? 'codemirror' : 'textarea'](me, holder);\n    //}\n\n    //var bakCssText;\n    ////解决在源码模式下getContent不能得到最新的内容问题\n    //var oldGetContent,\n    //bakAddress;\n\n    /**\n     * 切换源码模式和编辑模式\n     * @command source\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'source');\n     * ```\n     */\n\n    /**\n     * 查询当前编辑区域的状态是源码模式还是可视化模式\n     * @command source\n     * @method queryCommandState\n     * @param { String } cmd 命令字符串\n     * @return { int } 如果当前是源码编辑模式，返回1，否则返回0\n     * @example\n     * ```javascript\n     * editor.queryCommandState( 'source' );\n     * ```\n     */\n\n    //me.commands['source'] = {\n    //execCommand: function (){\n\n    //sourceMode = !sourceMode;\n    //if (sourceMode) {\n    //bakAddress = me.selection.getRange().createAddress(false,true);\n    //me.undoManger && me.undoManger.save(true);\n    //if(browser.gecko){\n    //me.body.contentEditable = false;\n    //}\n\n    //bakCssText = me.iframe.style.cssText;\n    //me.iframe.style.cssText += 'position:absolute;left:-32768px;top:-32768px;';\n\n    //me.fireEvent('beforegetcontent');\n    //var root = UE.htmlparser(me.body.innerHTML);\n    //me.filterOutputRule(root);\n    //root.traversal(function (node) {\n    //if (node.type == 'element') {\n    //switch (node.tagName) {\n    //case 'td':\n    //case 'th':\n    //case 'caption':\n    //if(node.children && node.children.length == 1){\n    //if(node.firstChild().tagName == 'br' ){\n    //node.removeChild(node.firstChild())\n    //}\n    //};\n    //break;\n    //case 'pre':\n    //node.innerText(node.innerText().replace(/&nbsp;/g,' '))\n\n    //}\n    //}\n    //});\n\n    //me.fireEvent('aftergetcontent');\n\n    //var content = root.toHtml(true);\n\n    //sourceEditor = createSourceEditor(me.iframe.parentNode);\n\n    //sourceEditor.setContent(content);\n\n    //orgSetContent = me.setContent;\n\n    //me.setContent = function(html){\n    ////这里暂时不触发事件，防止报错\n    //var root = UE.htmlparser(html);\n    //me.filterInputRule(root);\n    //html = root.toHtml();\n    //sourceEditor.setContent(html);\n    //};\n\n    //setTimeout(function (){\n    //sourceEditor.select();\n    //me.addListener('fullscreenchanged', function(){\n    //try{\n    //sourceEditor.getCodeMirror().refresh()\n    //}catch(e){}\n    //});\n    //});\n\n    ////重置getContent，源码模式下取值也能是最新的数据\n    //oldGetContent = me.getContent;\n    //me.getContent = function (){\n    //return sourceEditor.getContent() || '<p>' + (browser.ie ? '' : '<br/>')+'</p>';\n    //};\n    //} else {\n    //me.iframe.style.cssText = bakCssText;\n    //var cont = sourceEditor.getContent() || '<p>' + (browser.ie ? '' : '<br/>')+'</p>';\n    ////处理掉block节点前后的空格,有可能会误命中，暂时不考虑\n    //cont = cont.replace(new RegExp('[\\\\r\\\\t\\\\n ]*<\\/?(\\\\w+)\\\\s*(?:[^>]*)>','g'), function(a,b){\n    //if(b && !dtd.$inlineWithA[b.toLowerCase()]){\n    //return a.replace(/(^[\\n\\r\\t ]*)|([\\n\\r\\t ]*$)/g,'');\n    //}\n    //return a.replace(/(^[\\n\\r\\t]*)|([\\n\\r\\t]*$)/g,'')\n    //});\n\n    //me.setContent = orgSetContent;\n\n    //me.setContent(cont);\n    //sourceEditor.dispose();\n    //sourceEditor = null;\n    ////还原getContent方法\n    //me.getContent = oldGetContent;\n    //var first = me.body.firstChild;\n    ////trace:1106 都删除空了，下边会报错，所以补充一个p占位\n    //if(!first){\n    //me.body.innerHTML = '<p>'+(browser.ie?'':'<br/>')+'</p>';\n    //first = me.body.firstChild;\n    //}\n\n    ////要在ifm为显示时ff才能取到selection,否则报错\n    ////这里不能比较位置了\n    //me.undoManger && me.undoManger.save(true);\n\n    //if(browser.gecko){\n\n    //var input = document.createElement('input');\n    //input.style.cssText = 'position:absolute;left:0;top:-32768px';\n\n    //document.body.appendChild(input);\n\n    //me.body.contentEditable = false;\n    //setTimeout(function(){\n    //domUtils.setViewportOffset(input, { left: -32768, top: 0 });\n    //input.focus();\n    //setTimeout(function(){\n    //me.body.contentEditable = true;\n    //me.selection.getRange().moveToAddress(bakAddress).select(true);\n    //domUtils.remove(input);\n    //});\n\n    //});\n    //}else{\n    ////ie下有可能报错，比如在代码顶头的情况\n    //try{\n    //me.selection.getRange().moveToAddress(bakAddress).select(true);\n    //}catch(e){}\n\n    //}\n    //}\n    //this.fireEvent('sourcemodechanged', sourceMode);\n    //},\n    //queryCommandState: function (){\n    //return sourceMode|0;\n    //},\n    //notNeedUndo : 1\n    //};\n    //var oldQueryCommandState = me.queryCommandState;\n\n    //me.queryCommandState = function (cmdName){\n    //cmdName = cmdName.toLowerCase();\n    //if (sourceMode) {\n    ////源码模式下可以开启的命令\n    //return cmdName in {\n    //'source' : 1,\n    //'fullscreen' : 1\n    //} ? 1 : -1\n    //}\n    //return oldQueryCommandState.apply(this, arguments);\n    //};\n\n    //if(opt.sourceEditor == \"codemirror\"){\n\n    //me.addListener(\"ready\",function(){\n    //utils.loadFile(document,{\n    //src : opt.codeMirrorJsUrl || opt.UEDITOR_HOME_URL + \"third-party/codemirror/codemirror.js\",\n    //tag : \"script\",\n    //type : \"text/javascript\",\n    //defer : \"defer\"\n    //},function(){\n    //if(opt.sourceEditorFirst){\n    //setTimeout(function(){\n    //me.execCommand(\"source\");\n    //},0);\n    //}\n    //});\n    //utils.loadFile(document,{\n    //tag : \"link\",\n    //rel : \"stylesheet\",\n    //type : \"text/css\",\n    //href : opt.codeMirrorCssUrl || opt.UEDITOR_HOME_URL + \"third-party/codemirror/codemirror.css\"\n    //});\n\n    //});\n    //}\n\n    //};\n\n    /*})();*/\n\n    // plugins/enterkey.js\n    ///import core\n    ///import plugins/undo.js\n    ///commands 设置回车标签p或br\n    ///commandsName  EnterKey\n    ///commandsTitle  设置回车标签p或br\n    /**\n     * @description 处理回车\n     * @author zhanyi\n     */\n    UE.plugins['enterkey'] = function () {\n        var hTag,\n            me = this,\n            tag = me.options.enterTag;\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n            if (keyCode == 13) {\n                var range = me.selection.getRange(),\n                    start = range.startContainer,\n                    doSave;\n\n                //修正在h1-h6里边回车后不能嵌套p的问题\n                if (!browser.ie) {\n                    if (/h\\d/i.test(hTag)) {\n                        if (browser.gecko) {\n                            var h = domUtils.findParentByTagName(\n                                start,\n                                ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'caption', 'table'],\n                                true\n                            );\n                            if (!h) {\n                                me.document.execCommand('formatBlock', false, '<p>');\n                                doSave = 1;\n                            }\n                        } else {\n                            //chrome remove div\n                            if (start.nodeType == 1) {\n                                var tmp = me.document.createTextNode(''),\n                                    div;\n                                range.insertNode(tmp);\n                                div = domUtils.findParentByTagName(tmp, 'div', true);\n                                if (div) {\n                                    var p = me.document.createElement('p');\n                                    while (div.firstChild) {\n                                        p.appendChild(div.firstChild);\n                                    }\n                                    div.parentNode.insertBefore(p, div);\n                                    domUtils.remove(div);\n                                    range.setStartBefore(tmp).setCursor();\n                                    doSave = 1;\n                                }\n                                domUtils.remove(tmp);\n                            }\n                        }\n\n                        if (me.undoManger && doSave) {\n                            me.undoManger.save();\n                        }\n                    }\n                    //没有站位符，会出现多行的问题\n                    browser.opera && range.select();\n                } else {\n                    me.fireEvent('saveScene', true, true);\n                }\n            }\n        });\n\n        me.addListener('keydown', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n            if (keyCode == 13) {\n                //回车\n                if (me.fireEvent('beforeenterkeydown')) {\n                    domUtils.preventDefault(evt);\n                    return;\n                }\n                me.fireEvent('saveScene', true, true);\n                hTag = '';\n\n                var range = me.selection.getRange();\n\n                if (!range.collapsed) {\n                    //跨td不能删\n                    var start = range.startContainer,\n                        end = range.endContainer,\n                        startTd = domUtils.findParentByTagName(start, 'td', true),\n                        endTd = domUtils.findParentByTagName(end, 'td', true);\n                    if ((startTd && endTd && startTd !== endTd) || (!startTd && endTd) || (startTd && !endTd)) {\n                        evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n                        return;\n                    }\n                }\n                if (tag == 'p') {\n                    if (!browser.ie) {\n                        start = domUtils.findParentByTagName(\n                            range.startContainer,\n                            ['ol', 'ul', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'caption'],\n                            true\n                        );\n\n                        //opera下执行formatblock会在table的场景下有问题，回车在opera原生支持很好，所以暂时在opera去掉调用这个原生的command\n                        //trace:2431\n                        if (!start && !browser.opera) {\n                            me.document.execCommand('formatBlock', false, '<p>');\n\n                            if (browser.gecko) {\n                                range = me.selection.getRange();\n                                start = domUtils.findParentByTagName(range.startContainer, 'p', true);\n                                start && domUtils.removeDirtyAttr(start);\n                            }\n                        } else {\n                            hTag = start.tagName;\n                            start.tagName.toLowerCase() == 'p' && browser.gecko && domUtils.removeDirtyAttr(start);\n                        }\n                    }\n                } else {\n                    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n                    if (!range.collapsed) {\n                        range.deleteContents();\n                        start = range.startContainer;\n                        if (start.nodeType == 1 && (start = start.childNodes[range.startOffset])) {\n                            while (start.nodeType == 1) {\n                                if (dtd.$empty[start.tagName]) {\n                                    range.setStartBefore(start).setCursor();\n                                    if (me.undoManger) {\n                                        me.undoManger.save();\n                                    }\n                                    return false;\n                                }\n                                if (!start.firstChild) {\n                                    var br = range.document.createElement('br');\n                                    start.appendChild(br);\n                                    range.setStart(start, 0).setCursor();\n                                    if (me.undoManger) {\n                                        me.undoManger.save();\n                                    }\n                                    return false;\n                                }\n                                start = start.firstChild;\n                            }\n                            if (start === range.startContainer.childNodes[range.startOffset]) {\n                                br = range.document.createElement('br');\n                                range.insertNode(br).setCursor();\n                            } else {\n                                range.setStart(start, 0).setCursor();\n                            }\n                        } else {\n                            br = range.document.createElement('br');\n                            range.insertNode(br).setStartAfter(br).setCursor();\n                        }\n                    } else {\n                        br = range.document.createElement('br');\n                        range.insertNode(br);\n                        var parent = br.parentNode;\n                        if (parent.lastChild === br) {\n                            br.parentNode.insertBefore(br.cloneNode(true), br);\n                            range.setStartBefore(br);\n                        } else {\n                            range.setStartAfter(br);\n                        }\n                        range.setCursor();\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/keystrokes.js\n    /* 处理特殊键的兼容性问题 */\n    UE.plugins['keystrokes'] = function () {\n        var me = this;\n        var collapsed = true;\n        me.addListener('keydown', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which,\n                rng = me.selection.getRange();\n\n            //处理全选的情况\n            if (\n                !rng.collapsed &&\n                !(evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey) &&\n                ((keyCode >= 65 && keyCode <= 90) ||\n                    (keyCode >= 48 && keyCode <= 57) ||\n                    (keyCode >= 96 && keyCode <= 111) ||\n                    {\n                        13: 1,\n                        8: 1,\n                        46: 1\n                    }[keyCode])\n            ) {\n                var tmpNode = rng.startContainer;\n                if (domUtils.isFillChar(tmpNode)) {\n                    rng.setStartBefore(tmpNode);\n                }\n                tmpNode = rng.endContainer;\n                if (domUtils.isFillChar(tmpNode)) {\n                    rng.setEndAfter(tmpNode);\n                }\n                rng.txtToElmBoundary();\n                //结束边界可能放到了br的前边，要把br包含进来\n                // x[xxx]<br/>\n                if (rng.endContainer && rng.endContainer.nodeType == 1) {\n                    tmpNode = rng.endContainer.childNodes[rng.endOffset];\n                    if (tmpNode && domUtils.isBr(tmpNode)) {\n                        rng.setEndAfter(tmpNode);\n                    }\n                }\n                if (rng.startOffset == 0) {\n                    tmpNode = rng.startContainer;\n                    if (domUtils.isBoundaryNode(tmpNode, 'firstChild')) {\n                        tmpNode = rng.endContainer;\n                        if (\n                            rng.endOffset ==\n                                (tmpNode.nodeType == 3 ? tmpNode.nodeValue.length : tmpNode.childNodes.length) &&\n                            domUtils.isBoundaryNode(tmpNode, 'lastChild')\n                        ) {\n                            me.fireEvent('saveScene');\n                            me.body.innerHTML = '<p>' + (browser.ie ? '' : '<br/>') + '</p>';\n                            rng.setStart(me.body.firstChild, 0).setCursor(false, true);\n                            me._selectionChange();\n                            return;\n                        }\n                    }\n                }\n            }\n\n            //处理backspace\n            if (keyCode == keymap.Backspace) {\n                rng = me.selection.getRange();\n                collapsed = rng.collapsed;\n                if (me.fireEvent('delkeydown', evt)) {\n                    return;\n                }\n                var start, end;\n                //避免按两次删除才能生效的问题\n                if (rng.collapsed && rng.inFillChar()) {\n                    start = rng.startContainer;\n\n                    if (domUtils.isFillChar(start)) {\n                        rng.setStartBefore(start).shrinkBoundary(true).collapse(true);\n                        domUtils.remove(start);\n                    } else {\n                        start.nodeValue = start.nodeValue.replace(new RegExp('^' + domUtils.fillChar), '');\n                        rng.startOffset--;\n                        rng.collapse(true).select(true);\n                    }\n                }\n\n                //解决选中control元素不能删除的问题\n                if ((start = rng.getClosedNode())) {\n                    me.fireEvent('saveScene');\n                    rng.setStartBefore(start);\n                    domUtils.remove(start);\n                    rng.setCursor();\n                    me.fireEvent('saveScene');\n                    domUtils.preventDefault(evt);\n                    return;\n                }\n                //阻止在table上的删除\n                if (!browser.ie) {\n                    start = domUtils.findParentByTagName(rng.startContainer, 'table', true);\n                    end = domUtils.findParentByTagName(rng.endContainer, 'table', true);\n                    if ((start && !end) || (!start && end) || start !== end) {\n                        evt.preventDefault();\n                        return;\n                    }\n                }\n            }\n            //处理tab键的逻辑\n            if (keyCode == keymap.Tab) {\n                //不处理以下标签\n                var excludeTagNameForTabKey = {\n                    ol: 1,\n                    ul: 1,\n                    table: 1\n                };\n                //处理组件里的tab按下事件\n                if (me.fireEvent('tabkeydown', evt)) {\n                    domUtils.preventDefault(evt);\n                    return;\n                }\n                var range = me.selection.getRange();\n                me.fireEvent('saveScene');\n                for (\n                    var i = 0, txt = '', tabSize = me.options.tabSize || 4, tabNode = me.options.tabNode || '&nbsp;';\n                    i < tabSize;\n                    i++\n                ) {\n                    txt += tabNode;\n                }\n                var span = me.document.createElement('span');\n                span.innerHTML = txt + domUtils.fillChar;\n                if (range.collapsed) {\n                    range.insertNode(span.cloneNode(true).firstChild).setCursor(true);\n                } else {\n                    var filterFn = function (node) {\n                        return domUtils.isBlockElm(node) && !excludeTagNameForTabKey[node.tagName.toLowerCase()];\n                    };\n                    //普通的情况\n                    start = domUtils.findParent(range.startContainer, filterFn, true);\n                    end = domUtils.findParent(range.endContainer, filterFn, true);\n                    if (start && end && start === end) {\n                        range.deleteContents();\n                        range.insertNode(span.cloneNode(true).firstChild).setCursor(true);\n                    } else {\n                        var bookmark = range.createBookmark();\n                        range.enlarge(true);\n                        var bookmark2 = range.createBookmark(),\n                            current = domUtils.getNextDomNode(bookmark2.start, false, filterFn);\n                        while (\n                            current &&\n                            !(domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)\n                        ) {\n                            current.insertBefore(span.cloneNode(true).firstChild, current.firstChild);\n                            current = domUtils.getNextDomNode(current, false, filterFn);\n                        }\n                        range.moveToBookmark(bookmark2).moveToBookmark(bookmark).select();\n                    }\n                }\n                domUtils.preventDefault(evt);\n            }\n            //trace:1634\n            //ff的del键在容器空的时候，也会删除\n            if (browser.gecko && keyCode == 46) {\n                range = me.selection.getRange();\n                if (range.collapsed) {\n                    start = range.startContainer;\n                    if (domUtils.isEmptyBlock(start)) {\n                        var parent = start.parentNode;\n                        while (domUtils.getChildCount(parent) == 1 && !domUtils.isBody(parent)) {\n                            start = parent;\n                            parent = parent.parentNode;\n                        }\n                        if (start === parent.lastChild) evt.preventDefault();\n                        return;\n                    }\n                }\n            }\n        });\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which,\n                rng,\n                me = this;\n            if (keyCode == keymap.Backspace) {\n                if (me.fireEvent('delkeyup')) {\n                    return;\n                }\n                rng = me.selection.getRange();\n                if (rng.collapsed) {\n                    var tmpNode,\n                        autoClearTagName = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n                    if ((tmpNode = domUtils.findParentByTagName(rng.startContainer, autoClearTagName, true))) {\n                        if (domUtils.isEmptyBlock(tmpNode)) {\n                            var pre = tmpNode.previousSibling;\n                            if (pre && pre.nodeName != 'TABLE') {\n                                domUtils.remove(tmpNode);\n                                rng.setStartAtLast(pre).setCursor(false, true);\n                                return;\n                            } else {\n                                var next = tmpNode.nextSibling;\n                                if (next && next.nodeName != 'TABLE') {\n                                    domUtils.remove(tmpNode);\n                                    rng.setStartAtFirst(next).setCursor(false, true);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    //处理当删除到body时，要重新给p标签展位\n                    if (domUtils.isBody(rng.startContainer)) {\n                        var tmpNode = domUtils.createElement(me.document, 'p', {\n                            innerHTML: browser.ie ? domUtils.fillChar : '<br/>'\n                        });\n                        rng.insertNode(tmpNode).setStart(tmpNode, 0).setCursor(false, true);\n                    }\n                }\n\n                //chrome下如果删除了inline标签，浏览器会有记忆，在输入文字还是会套上刚才删除的标签，所以这里再选一次就不会了\n                if (\n                    !collapsed &&\n                    (rng.startContainer.nodeType == 3 ||\n                        (rng.startContainer.nodeType == 1 && domUtils.isEmptyBlock(rng.startContainer)))\n                ) {\n                    if (browser.ie) {\n                        var span = rng.document.createElement('span');\n                        rng.insertNode(span).setStartBefore(span).collapse(true);\n                        rng.select();\n                        domUtils.remove(span);\n                    } else {\n                        rng.select();\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/fiximgclick.js\n    ///import core\n    ///commands 修复chrome下图片不能点击的问题，出现八个角可改变大小\n    ///commandsName  FixImgClick\n    ///commandsTitle  修复chrome下图片不能点击的问题，出现八个角可改变大小\n    //修复chrome下图片不能点击的问题，出现八个角可改变大小\n\n    UE.plugins['fiximgclick'] = (function () {\n        var elementUpdated = false;\n        function Scale() {\n            this.editor = null;\n            this.resizer = null;\n            this.cover = null;\n            this.doc = document;\n            this.prePos = { x: 0, y: 0 };\n            this.startPos = { x: 0, y: 0 };\n        }\n\n        (function () {\n            var rect = [\n                //[left, top, width, height]\n                [0, 0, -1, -1],\n                [0, 0, 0, -1],\n                [0, 0, 1, -1],\n                [0, 0, -1, 0],\n                [0, 0, 1, 0],\n                [0, 0, -1, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 1]\n            ];\n\n            Scale.prototype = {\n                init: function (editor) {\n                    var me = this;\n                    me.editor = editor;\n                    me.startPos = this.prePos = { x: 0, y: 0 };\n                    me.dragId = -1;\n\n                    var hands = [],\n                        cover = (me.cover = document.createElement('div')),\n                        resizer = (me.resizer = document.createElement('div'));\n\n                    cover.id = me.editor.ui.id + '_imagescale_cover';\n                    cover.style.cssText =\n                        'position:absolute;display:none;z-index:' +\n                        me.editor.options.zIndex +\n                        ';filter:alpha(opacity=0); opacity:0;background:#CCC;';\n                    domUtils.on(cover, 'mousedown click', function () {\n                        me.hide();\n                    });\n\n                    for (i = 0; i < 8; i++) {\n                        hands.push('<span class=\"edui-editor-imagescale-hand' + i + '\"></span>');\n                    }\n                    resizer.id = me.editor.ui.id + '_imagescale';\n                    resizer.className = 'edui-editor-imagescale';\n                    resizer.innerHTML = hands.join('');\n                    resizer.style.cssText +=\n                        ';display:none;border:1px solid #3b77ff;z-index:' + me.editor.options.zIndex + ';';\n\n                    me.editor.ui.getDom().appendChild(cover);\n                    me.editor.ui.getDom().appendChild(resizer);\n\n                    me.initStyle();\n                    me.initEvents();\n                },\n                initStyle: function () {\n                    utils.cssRule(\n                        'imagescale',\n                        '.edui-editor-imagescale{display:none;position:absolute;border:1px solid #38B2CE;cursor:hand;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}' +\n                            '.edui-editor-imagescale span{position:absolute;width:6px;height:6px;overflow:hidden;font-size:0px;display:block;background-color:#3C9DD0;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand0{cursor:nw-resize;top:0;margin-top:-4px;left:0;margin-left:-4px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand1{cursor:n-resize;top:0;margin-top:-4px;left:50%;margin-left:-4px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand2{cursor:ne-resize;top:0;margin-top:-4px;left:100%;margin-left:-3px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand3{cursor:w-resize;top:50%;margin-top:-4px;left:0;margin-left:-4px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand4{cursor:e-resize;top:50%;margin-top:-4px;left:100%;margin-left:-3px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand5{cursor:sw-resize;top:100%;margin-top:-3px;left:0;margin-left:-4px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand6{cursor:s-resize;top:100%;margin-top:-3px;left:50%;margin-left:-4px;}' +\n                            '.edui-editor-imagescale .edui-editor-imagescale-hand7{cursor:se-resize;top:100%;margin-top:-3px;left:100%;margin-left:-3px;}'\n                    );\n                },\n                initEvents: function () {\n                    var me = this;\n\n                    me.startPos.x = me.startPos.y = 0;\n                    me.isDraging = false;\n                },\n                _eventHandler: function (e) {\n                    var me = this;\n                    switch (e.type) {\n                        case 'mousedown':\n                            var hand = e.target || e.srcElement,\n                                hand;\n                            if (hand.className.indexOf('edui-editor-imagescale-hand') != -1 && me.dragId == -1) {\n                                me.dragId = hand.className.slice(-1);\n                                me.startPos.x = me.prePos.x = e.clientX;\n                                me.startPos.y = me.prePos.y = e.clientY;\n                                domUtils.on(me.doc, 'mousemove', me.proxy(me._eventHandler, me));\n                            }\n                            break;\n                        case 'mousemove':\n                            if (me.dragId != -1) {\n                                me.updateContainerStyle(me.dragId, {\n                                    x: e.clientX - me.prePos.x,\n                                    y: e.clientY - me.prePos.y\n                                });\n                                me.prePos.x = e.clientX;\n                                me.prePos.y = e.clientY;\n                                elementUpdated = true;\n                                me.updateTargetElement();\n                            }\n                            break;\n                        case 'mouseup':\n                            if (me.dragId != -1) {\n                                me.updateContainerStyle(me.dragId, {\n                                    x: e.clientX - me.prePos.x,\n                                    y: e.clientY - me.prePos.y\n                                });\n                                me.updateTargetElement();\n                                if (me.target.parentNode) me.attachTo(me.target);\n                                me.dragId = -1;\n                            }\n                            domUtils.un(me.doc, 'mousemove', me.proxy(me._eventHandler, me));\n                            //修复只是点击挪动点，但没有改变大小，不应该触发contentchange\n                            if (elementUpdated) {\n                                elementUpdated = false;\n                                me.editor.fireEvent('contentchange');\n                            }\n\n                            break;\n                        default:\n                            break;\n                    }\n                },\n                updateTargetElement: function () {\n                    var me = this;\n                    domUtils.setStyles(me.target, {\n                        width: me.resizer.style.width,\n                        height: me.resizer.style.height\n                    });\n                    me.target.width = parseInt(me.resizer.style.width);\n                    me.target.height = parseInt(me.resizer.style.height);\n                    me.attachTo(me.target);\n                },\n                updateContainerStyle: function (dir, offset) {\n                    var me = this,\n                        dom = me.resizer,\n                        tmp;\n\n                    if (rect[dir][0] != 0) {\n                        tmp = parseInt(dom.style.left) + offset.x;\n                        dom.style.left = me._validScaledProp('left', tmp) + 'px';\n                    }\n                    if (rect[dir][1] != 0) {\n                        tmp = parseInt(dom.style.top) + offset.y;\n                        dom.style.top = me._validScaledProp('top', tmp) + 'px';\n                    }\n                    if (rect[dir][2] != 0) {\n                        tmp = dom.clientWidth + rect[dir][2] * offset.x;\n                        dom.style.width = me._validScaledProp('width', tmp) + 'px';\n                    }\n                    if (rect[dir][3] != 0) {\n                        tmp = dom.clientHeight + rect[dir][3] * offset.y;\n                        dom.style.height = me._validScaledProp('height', tmp) + 'px';\n                    }\n                },\n                _validScaledProp: function (prop, value) {\n                    var ele = this.resizer,\n                        wrap = document;\n\n                    value = isNaN(value) ? 0 : value;\n                    switch (prop) {\n                        case 'left':\n                            return value < 0\n                                ? 0\n                                : value + ele.clientWidth > wrap.clientWidth\n                                ? wrap.clientWidth - ele.clientWidth\n                                : value;\n                        case 'top':\n                            return value < 0\n                                ? 0\n                                : value + ele.clientHeight > wrap.clientHeight\n                                ? wrap.clientHeight - ele.clientHeight\n                                : value;\n                        case 'width':\n                            return value <= 0\n                                ? 1\n                                : value + ele.offsetLeft > wrap.clientWidth\n                                ? wrap.clientWidth - ele.offsetLeft\n                                : value;\n                        case 'height':\n                            return value <= 0\n                                ? 1\n                                : value + ele.offsetTop > wrap.clientHeight\n                                ? wrap.clientHeight - ele.offsetTop\n                                : value;\n                    }\n                },\n                hideCover: function () {\n                    this.cover.style.display = 'none';\n                },\n                showCover: function () {\n                    var me = this,\n                        editorPos = domUtils.getXY(me.editor.ui.getDom()),\n                        iframePos = domUtils.getXY(me.editor.iframe);\n\n                    domUtils.setStyles(me.cover, {\n                        width: me.editor.iframe.offsetWidth + 'px',\n                        height: me.editor.iframe.offsetHeight + 'px',\n                        top: iframePos.y - editorPos.y + 'px',\n                        left: iframePos.x - editorPos.x + 'px',\n                        position: 'absolute',\n                        display: ''\n                    });\n                },\n                show: function (targetObj) {\n                    var me = this;\n                    me.resizer.style.display = 'block';\n                    if (targetObj) me.attachTo(targetObj);\n\n                    domUtils.on(this.resizer, 'mousedown', me.proxy(me._eventHandler, me));\n                    domUtils.on(me.doc, 'mouseup', me.proxy(me._eventHandler, me));\n\n                    me.showCover();\n                    me.editor.fireEvent('afterscaleshow', me);\n                    me.editor.fireEvent('saveScene');\n                },\n                hide: function () {\n                    var me = this;\n                    me.hideCover();\n                    me.resizer.style.display = 'none';\n\n                    domUtils.un(me.resizer, 'mousedown', me.proxy(me._eventHandler, me));\n                    domUtils.un(me.doc, 'mouseup', me.proxy(me._eventHandler, me));\n                    me.editor.fireEvent('afterscalehide', me);\n                },\n                proxy: function (fn, context) {\n                    return function (e) {\n                        return fn.apply(context || this, arguments);\n                    };\n                },\n                attachTo: function (targetObj) {\n                    var me = this,\n                        target = (me.target = targetObj),\n                        resizer = this.resizer,\n                        imgPos = domUtils.getXY(target),\n                        iframePos = domUtils.getXY(me.editor.iframe),\n                        editorPos = domUtils.getXY(resizer.parentNode);\n\n                    domUtils.setStyles(resizer, {\n                        width: target.width + 'px',\n                        height: target.height + 'px',\n                        left:\n                            iframePos.x +\n                            imgPos.x -\n                            me.editor.document.body.scrollLeft -\n                            editorPos.x -\n                            parseInt(resizer.style.borderLeftWidth) +\n                            'px',\n                        top:\n                            iframePos.y +\n                            imgPos.y -\n                            me.editor.document.body.scrollTop -\n                            editorPos.y -\n                            parseInt(resizer.style.borderTopWidth) +\n                            'px'\n                    });\n                }\n            };\n        })();\n\n        return function () {\n            var me = this,\n                imageScale;\n\n            me.setOpt('imageScaleEnabled', true);\n\n            if (!browser.ie && me.options.imageScaleEnabled) {\n                me.addListener('click', function (type, e) {\n                    var range = me.selection.getRange(),\n                        img = range.getClosedNode();\n\n                    if (img && img.tagName == 'IMG' && me.body.contentEditable != 'false') {\n                        if (\n                            img.className.indexOf('edui-faked-music') != -1 ||\n                            img.getAttribute('anchorname') ||\n                            domUtils.hasClass(img, 'loadingclass') ||\n                            domUtils.hasClass(img, 'loaderrorclass')\n                        ) {\n                            return;\n                        }\n\n                        if (!imageScale) {\n                            imageScale = new Scale();\n                            imageScale.init(me);\n                            me.ui.getDom().appendChild(imageScale.resizer);\n\n                            var _keyDownHandler = function (e) {\n                                    imageScale.hide();\n                                    if (imageScale.target)\n                                        me.selection.getRange().selectNode(imageScale.target).select();\n                                },\n                                _mouseDownHandler = function (e) {\n                                    var ele = e.target || e.srcElement;\n                                    if (\n                                        ele &&\n                                        (ele.className === undefined ||\n                                            ele.className.indexOf('edui-editor-imagescale') == -1)\n                                    ) {\n                                        _keyDownHandler(e);\n                                    }\n                                },\n                                timer;\n\n                            me.addListener('afterscaleshow', function (e) {\n                                me.addListener('beforekeydown', _keyDownHandler);\n                                me.addListener('beforemousedown', _mouseDownHandler);\n                                domUtils.on(document, 'keydown', _keyDownHandler);\n                                domUtils.on(document, 'mousedown', _mouseDownHandler);\n                                me.selection.getNative().removeAllRanges();\n                            });\n                            me.addListener('afterscalehide', function (e) {\n                                me.removeListener('beforekeydown', _keyDownHandler);\n                                me.removeListener('beforemousedown', _mouseDownHandler);\n                                domUtils.un(document, 'keydown', _keyDownHandler);\n                                domUtils.un(document, 'mousedown', _mouseDownHandler);\n                                var target = imageScale.target;\n                                if (target.parentNode) {\n                                    me.selection.getRange().selectNode(target).select();\n                                }\n                            });\n                            //TODO 有iframe的情况，mousedown不能往下传。。\n                            domUtils.on(imageScale.resizer, 'mousedown', function (e) {\n                                me.selection.getNative().removeAllRanges();\n                                var ele = e.target || e.srcElement;\n                                if (ele && ele.className.indexOf('edui-editor-imagescale-hand') == -1) {\n                                    timer = setTimeout(function () {\n                                        imageScale.hide();\n                                        if (imageScale.target) me.selection.getRange().selectNode(ele).select();\n                                    }, 200);\n                                }\n                            });\n                            domUtils.on(imageScale.resizer, 'mouseup', function (e) {\n                                var ele = e.target || e.srcElement;\n                                if (ele && ele.className.indexOf('edui-editor-imagescale-hand') == -1) {\n                                    clearTimeout(timer);\n                                }\n                            });\n                        }\n                        imageScale.show(img);\n                    } else {\n                        if (imageScale && imageScale.resizer.style.display != 'none') imageScale.hide();\n                    }\n                });\n            }\n\n            if (browser.webkit) {\n                me.addListener('click', function (type, e) {\n                    if (e.target.tagName == 'IMG' && me.body.contentEditable != 'false') {\n                        var range = new dom.Range(me.document);\n                        range.selectNode(e.target).select();\n                    }\n                });\n            }\n        };\n    })();\n\n    // plugins/autolink.js\n    ///import core\n    ///commands 为非ie浏览器自动添加a标签\n    ///commandsName  AutoLink\n    ///commandsTitle  自动增加链接\n    /**\n     * @description 为非ie浏览器自动添加a标签\n     * @author zhanyi\n     */\n\n    UE.plugin.register(\n        'autolink',\n        function () {\n            var cont = 0;\n\n            return !browser.ie\n                ? {\n                      bindEvents: {\n                          reset: function () {\n                              cont = 0;\n                          },\n                          keydown: function (type, evt) {\n                              var me = this;\n                              var keyCode = evt.keyCode || evt.which;\n\n                              if (keyCode == 32 || keyCode == 13) {\n                                  var sel = me.selection.getNative(),\n                                      range = sel.getRangeAt(0).cloneRange(),\n                                      offset,\n                                      charCode;\n\n                                  var start = range.startContainer;\n                                  while (start.nodeType == 1 && range.startOffset > 0) {\n                                      start = range.startContainer.childNodes[range.startOffset - 1];\n                                      if (!start) {\n                                          break;\n                                      }\n                                      range.setStart(\n                                          start,\n                                          start.nodeType == 1 ? start.childNodes.length : start.nodeValue.length\n                                      );\n                                      range.collapse(true);\n                                      start = range.startContainer;\n                                  }\n\n                                  do {\n                                      if (range.startOffset == 0) {\n                                          start = range.startContainer.previousSibling;\n\n                                          while (start && start.nodeType == 1) {\n                                              start = start.lastChild;\n                                          }\n                                          if (!start || domUtils.isFillChar(start)) {\n                                              break;\n                                          }\n                                          offset = start.nodeValue.length;\n                                      } else {\n                                          start = range.startContainer;\n                                          offset = range.startOffset;\n                                      }\n                                      range.setStart(start, offset - 1);\n                                      charCode = range.toString().charCodeAt(0);\n                                  } while (charCode != 160 && charCode != 32);\n\n                                  if (\n                                      range\n                                          .toString()\n                                          .replace(new RegExp(domUtils.fillChar, 'g'), '')\n                                          .match(/(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i)\n                                  ) {\n                                      while (range.toString().length) {\n                                          if (\n                                              /^(?:https?:\\/\\/|ssh:\\/\\/|ftp:\\/\\/|file:\\/|www\\.)/i.test(range.toString())\n                                          ) {\n                                              break;\n                                          }\n                                          try {\n                                              range.setStart(range.startContainer, range.startOffset + 1);\n                                          } catch (e) {\n                                              //trace:2121\n                                              var start = range.startContainer;\n                                              while (!(next = start.nextSibling)) {\n                                                  if (domUtils.isBody(start)) {\n                                                      return;\n                                                  }\n                                                  start = start.parentNode;\n                                              }\n                                              range.setStart(next, 0);\n                                          }\n                                      }\n                                      //range的开始边界已经在a标签里的不再处理\n                                      if (domUtils.findParentByTagName(range.startContainer, 'a', true)) {\n                                          return;\n                                      }\n                                      var a = me.document.createElement('a'),\n                                          text = me.document.createTextNode(' '),\n                                          href;\n\n                                      me.undoManger && me.undoManger.save();\n                                      a.appendChild(range.extractContents());\n                                      a.href = a.innerHTML = a.innerHTML.replace(/<[^>]+>/g, '');\n                                      href = a.getAttribute('href').replace(new RegExp(domUtils.fillChar, 'g'), '');\n                                      href = /^(?:https?:\\/\\/)/gi.test(href) ? href : 'http://' + href;\n                                      a.setAttribute('_src', utils.html(href));\n                                      a.href = utils.html(href);\n\n                                      range.insertNode(a);\n                                      a.parentNode.insertBefore(text, a.nextSibling);\n                                      range.setStart(text, 0);\n                                      range.collapse(true);\n                                      sel.removeAllRanges();\n                                      sel.addRange(range);\n                                      me.undoManger && me.undoManger.save();\n                                  }\n                              }\n                          }\n                      }\n                  }\n                : {};\n        },\n        function () {\n            var keyCodes = {\n                37: 1,\n                38: 1,\n                39: 1,\n                40: 1,\n                13: 1,\n                32: 1\n            };\n            function checkIsCludeLink(node) {\n                if (node.nodeType == 3) {\n                    return null;\n                }\n                if (node.nodeName == 'A') {\n                    return node;\n                }\n                var lastChild = node.lastChild;\n\n                while (lastChild) {\n                    if (lastChild.nodeName == 'A') {\n                        return lastChild;\n                    }\n                    if (lastChild.nodeType == 3) {\n                        if (domUtils.isWhitespace(lastChild)) {\n                            lastChild = lastChild.previousSibling;\n                            continue;\n                        }\n                        return null;\n                    }\n                    lastChild = lastChild.lastChild;\n                }\n            }\n            browser.ie &&\n                this.addListener('keyup', function (cmd, evt) {\n                    var me = this,\n                        keyCode = evt.keyCode;\n                    if (keyCodes[keyCode]) {\n                        var rng = me.selection.getRange();\n                        var start = rng.startContainer;\n\n                        if (keyCode == 13) {\n                            while (start && !domUtils.isBody(start) && !domUtils.isBlockElm(start)) {\n                                start = start.parentNode;\n                            }\n                            if (start && !domUtils.isBody(start) && start.nodeName == 'P') {\n                                var pre = start.previousSibling;\n                                if (pre && pre.nodeType == 1) {\n                                    var pre = checkIsCludeLink(pre);\n                                    if (pre && !pre.getAttribute('_href')) {\n                                        domUtils.remove(pre, true);\n                                    }\n                                }\n                            }\n                        } else if (keyCode == 32) {\n                            if (start.nodeType == 3 && /^\\s$/.test(start.nodeValue)) {\n                                start = start.previousSibling;\n                                if (start && start.nodeName == 'A' && !start.getAttribute('_href')) {\n                                    domUtils.remove(start, true);\n                                }\n                            }\n                        } else {\n                            start = domUtils.findParentByTagName(start, 'a', true);\n                            if (start && !start.getAttribute('_href')) {\n                                var bk = rng.createBookmark();\n\n                                domUtils.remove(start, true);\n                                rng.moveToBookmark(bk).select(true);\n                            }\n                        }\n                    }\n                });\n        }\n    );\n\n    // plugins/autoheight.js\n    ///import core\n    ///commands 当输入内容超过编辑器高度时，编辑器自动增高\n    ///commandsName  AutoHeight,autoHeightEnabled\n    ///commandsTitle  自动增高\n    /**\n     * @description 自动伸展\n     * @author zhanyi\n     */\n    UE.plugins['autoheight'] = function () {\n        var me = this;\n        //提供开关，就算加载也可以关闭\n        me.autoHeightEnabled = me.options.autoHeightEnabled !== false;\n        if (!me.autoHeightEnabled) {\n            return;\n        }\n\n        var bakOverflow,\n            lastHeight = 0,\n            options = me.options,\n            currentHeight,\n            timer;\n\n        function adjustHeight() {\n            var me = this;\n            clearTimeout(timer);\n            if (isFullscreen) return;\n            if (!me.queryCommandState || (me.queryCommandState && me.queryCommandState('source') != 1)) {\n                timer = setTimeout(function () {\n                    var node = me.body.lastChild;\n                    while (node && node.nodeType != 1) {\n                        node = node.previousSibling;\n                    }\n                    if (node && node.nodeType == 1) {\n                        node.style.clear = 'both';\n                        currentHeight = Math.max(\n                            domUtils.getXY(node).y + node.offsetHeight + 25,\n                            Math.max(options.minFrameHeight, options.initialFrameHeight)\n                        );\n                        if (currentHeight != lastHeight) {\n                            if (currentHeight !== parseInt(me.iframe.parentNode.style.height)) {\n                                me.iframe.parentNode.style.height = currentHeight + 'px';\n                            }\n                            me.body.style.height = currentHeight + 'px';\n                            lastHeight = currentHeight;\n                        }\n                        domUtils.removeStyle(node, 'clear');\n                    }\n                }, 50);\n            }\n        }\n        var isFullscreen;\n        me.addListener('fullscreenchanged', function (cmd, f) {\n            isFullscreen = f;\n        });\n        me.addListener('destroy', function () {\n            me.removeListener('contentchange afterinserthtml keyup mouseup', adjustHeight);\n        });\n        me.enableAutoHeight = function () {\n            var me = this;\n            if (!me.autoHeightEnabled) {\n                return;\n            }\n            var doc = me.document;\n            me.autoHeightEnabled = true;\n            bakOverflow = doc.body.style.overflowY;\n            doc.body.style.overflowY = 'hidden';\n            me.addListener('contentchange afterinserthtml keyup mouseup', adjustHeight);\n            //ff不给事件算得不对\n\n            setTimeout(\n                function () {\n                    adjustHeight.call(me);\n                },\n                browser.gecko ? 100 : 0\n            );\n            me.fireEvent('autoheightchanged', me.autoHeightEnabled);\n        };\n        me.disableAutoHeight = function () {\n            me.body.style.overflowY = bakOverflow || '';\n\n            me.removeListener('contentchange', adjustHeight);\n            me.removeListener('keyup', adjustHeight);\n            me.removeListener('mouseup', adjustHeight);\n            me.autoHeightEnabled = false;\n            me.fireEvent('autoheightchanged', me.autoHeightEnabled);\n        };\n\n        me.on('setHeight', function () {\n            me.disableAutoHeight();\n        });\n        me.addListener('ready', function () {\n            me.enableAutoHeight();\n            //trace:1764\n            var timer;\n            domUtils.on(browser.ie ? me.body : me.document, browser.webkit ? 'dragover' : 'drop', function () {\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    //trace:3681\n                    adjustHeight.call(me);\n                }, 100);\n            });\n            //修复内容过多时，回到顶部，顶部内容被工具栏遮挡问题\n            var lastScrollY;\n            window.onscroll = function () {\n                if (lastScrollY === null) {\n                    lastScrollY = this.scrollY;\n                } else if (this.scrollY == 0 && lastScrollY != 0) {\n                    if (!me.window) {\n                        return;\n                    }\n                    me.window.scrollTo(0, 0);\n                    lastScrollY = null;\n                }\n            };\n        });\n    };\n\n    // plugins/autofloat.js\n    ///import core\n    ///commands 悬浮工具栏\n    ///commandsName  AutoFloat,autoFloatEnabled\n    ///commandsTitle  悬浮工具栏\n    /**\n     *  modified by chengchao01\n     *  注意： 引入此功能后，在IE6下会将body的背景图片覆盖掉！\n     */\n    UE.plugins['autofloat'] = function () {\n        var me = this,\n            lang = me.getLang();\n        me.setOpt({\n            topOffset: 0\n        });\n        var optsAutoFloatEnabled = me.options.autoFloatEnabled !== false,\n            topOffset = me.options.topOffset;\n\n        //如果不固定toolbar的位置，则直接退出\n        if (!optsAutoFloatEnabled) {\n            return;\n        }\n        var uiUtils = UE.ui.uiUtils,\n            LteIE6 = browser.ie && browser.version <= 6,\n            quirks = browser.quirks;\n\n        function checkHasUI() {\n            if (!UE.ui) {\n                alert(lang.autofloatMsg);\n                return 0;\n            }\n            return 1;\n        }\n        function fixIE6FixedPos() {\n            var docStyle = document.body.style;\n            docStyle.backgroundImage = 'url(\"about:blank\")';\n            docStyle.backgroundAttachment = 'fixed';\n        }\n        var bakCssText,\n            placeHolder = document.createElement('div'),\n            toolbarBox,\n            orgTop,\n            getPosition,\n            flag = true; //ie7模式下需要偏移\n        function setFloating() {\n            var toobarBoxPos = domUtils.getXY(toolbarBox),\n                origalFloat = domUtils.getComputedStyle(toolbarBox, 'position'),\n                origalLeft = domUtils.getComputedStyle(toolbarBox, 'left');\n            toolbarBox.style.width = toolbarBox.offsetWidth + 'px';\n            toolbarBox.style.zIndex = me.options.zIndex * 1 + 1;\n            //duanjun 防止抖动\n            placeHolder.style.height = toolbarBox.offsetHeight + 'px';\n            toolbarBox.parentNode.insertBefore(placeHolder, toolbarBox);\n            if (LteIE6 || (quirks && browser.ie)) {\n                if (toolbarBox.style.position != 'absolute') {\n                    toolbarBox.style.position = 'absolute';\n                }\n                toolbarBox.style.top =\n                    (document.body.scrollTop || document.documentElement.scrollTop) - orgTop + topOffset + 'px';\n            } else {\n                if (browser.ie7Compat && flag) {\n                    flag = false;\n                    toolbarBox.style.left =\n                        domUtils.getXY(toolbarBox).x - document.documentElement.getBoundingClientRect().left + 2 + 'px';\n                }\n                if (toolbarBox.style.position != 'fixed') {\n                    toolbarBox.style.position = 'fixed';\n                    toolbarBox.style.top = topOffset + 'px';\n                    (origalFloat == 'absolute' || origalFloat == 'relative') &&\n                        parseFloat(origalLeft) &&\n                        (toolbarBox.style.left = toobarBoxPos.x + 'px');\n                }\n            }\n        }\n        function unsetFloating() {\n            flag = true;\n            toolbarBox.style.cssText = bakCssText;\n            if (placeHolder.parentNode) {\n                placeHolder.parentNode.removeChild(placeHolder);\n            }\n        }\n\n        function updateFloating() {\n            var rect3 = getPosition(me.container);\n            var offset = me.options.toolbarTopOffset || 0;\n            //by duanjun 不是到浏览器顶部才浮动\n            if (rect3.top < me.options.topOffset && rect3.bottom - toolbarBox.offsetHeight > offset) {\n                setFloating();\n            } else {\n                unsetFloating();\n            }\n        }\n        var defer_updateFloating = utils.defer(\n            function () {\n                updateFloating();\n            },\n            browser.ie ? 200 : 100,\n            true\n        );\n\n        me.addListener('destroy', function () {\n            domUtils.un(window, ['scroll', 'resize'], updateFloating);\n            me.removeListener('keydown', defer_updateFloating);\n        });\n\n        me.addListener('ready', function () {\n            if (checkHasUI(me)) {\n                //加载了ui组件，但在new时，没有加载ui，导致编辑器实例上没有ui类，所以这里做判断\n                if (!me.ui) {\n                    return;\n                }\n                getPosition = uiUtils.getClientRect;\n                toolbarBox = me.ui.getDom('toolbarbox');\n                orgTop = getPosition(toolbarBox).top;\n                bakCssText = toolbarBox.style.cssText;\n                placeHolder.style.height = toolbarBox.offsetHeight + 'px';\n                if (LteIE6) {\n                    fixIE6FixedPos();\n                }\n                domUtils.on(window, ['scroll', 'resize'], updateFloating);\n                me.addListener('keydown', defer_updateFloating);\n\n                me.addListener('beforefullscreenchange', function (t, enabled) {\n                    if (enabled) {\n                        unsetFloating();\n                    }\n                });\n                me.addListener('fullscreenchanged', function (t, enabled) {\n                    if (!enabled) {\n                        updateFloating();\n                    }\n                });\n                me.addListener('sourcemodechanged', function (t, enabled) {\n                    setTimeout(function () {\n                        updateFloating();\n                    }, 0);\n                });\n                me.addListener('clearDoc', function () {\n                    setTimeout(function () {\n                        updateFloating();\n                    }, 0);\n                });\n            }\n        });\n    };\n\n    // plugins/table.core.js\n    /**\n     * Created with JetBrains WebStorm.\n     * User: taoqili\n     * Date: 13-1-18\n     * Time: 上午11:09\n     * To change this template use File | Settings | File Templates.\n     */\n    /**\n     * UE表格操作类\n     * @param table\n     * @constructor\n     */\n    (function () {\n        var UETable = (UE.UETable = function (table) {\n            this.table = table;\n            this.indexTable = [];\n            this.selectedTds = [];\n            this.cellsRange = {};\n            this.update(table);\n        });\n\n        //===以下为静态工具方法===\n        UETable.removeSelectedClass = function (cells) {\n            utils.each(cells, function (cell) {\n                domUtils.removeClasses(cell, 'selectTdClass');\n            });\n        };\n        UETable.addSelectedClass = function (cells) {\n            utils.each(cells, function (cell) {\n                domUtils.addClass(cell, 'selectTdClass');\n            });\n        };\n        UETable.isEmptyBlock = function (node) {\n            var reg = new RegExp(domUtils.fillChar, 'g');\n            if (node[browser.ie ? 'innerText' : 'textContent'].replace(/^\\s*$/, '').replace(reg, '').length > 0) {\n                return 0;\n            }\n            for (var i in dtd.$isNotEmpty)\n                if (dtd.$isNotEmpty.hasOwnProperty(i)) {\n                    if (node.getElementsByTagName(i).length) {\n                        return 0;\n                    }\n                }\n            return 1;\n        };\n        UETable.getWidth = function (cell) {\n            if (!cell) return 0;\n            return parseInt(domUtils.getComputedStyle(cell, 'width'), 10);\n        };\n\n        /**\n         * 获取单元格或者单元格组的“对齐”状态。 如果当前的检测对象是一个单元格组， 只有在满足所有单元格的 水平和竖直 对齐属性都相同的\n         * 条件时才会返回其状态值，否则将返回null； 如果当前只检测了一个单元格， 则直接返回当前单元格的对齐状态；\n         * @param table cell or table cells , 支持单个单元格dom对象 或者 单元格dom对象数组\n         * @return { align: 'left' || 'right' || 'center', valign: 'top' || 'middle' || 'bottom' } 或者 null\n         */\n        UETable.getTableCellAlignState = function (cells) {\n            !utils.isArray(cells) && (cells = [cells]);\n\n            var result = {},\n                status = ['align', 'valign'],\n                tempStatus = null,\n                isSame = true; //状态是否相同\n\n            utils.each(cells, function (cellNode) {\n                utils.each(status, function (currentState) {\n                    tempStatus = cellNode.getAttribute(currentState);\n\n                    if (!result[currentState] && tempStatus) {\n                        result[currentState] = tempStatus;\n                    } else if (!result[currentState] || tempStatus !== result[currentState]) {\n                        isSame = false;\n                        return false;\n                    }\n                });\n\n                return isSame;\n            });\n\n            return isSame ? result : null;\n        };\n\n        /**\n         * 根据当前选区获取相关的table信息\n         * @return {Object}\n         */\n        UETable.getTableItemsByRange = function (editor) {\n            var start = editor.selection.getStart();\n\n            //ff下会选中bookmark\n            if (start && start.id && start.id.indexOf('_baidu_bookmark_start_') === 0 && start.nextSibling) {\n                start = start.nextSibling;\n            }\n\n            //在table或者td边缘有可能存在选中tr的情况\n            var cell = start && domUtils.findParentByTagName(start, ['td', 'th'], true),\n                tr = cell && cell.parentNode,\n                caption = start && domUtils.findParentByTagName(start, 'caption', true),\n                table = caption ? caption.parentNode : tr && tr.parentNode.parentNode;\n\n            return {\n                cell: cell,\n                tr: tr,\n                table: table,\n                caption: caption\n            };\n        };\n        UETable.getUETableBySelected = function (editor) {\n            var table = UETable.getTableItemsByRange(editor).table;\n            if (table && table.ueTable && table.ueTable.selectedTds.length) {\n                return table.ueTable;\n            }\n            return null;\n        };\n\n        UETable.getDefaultValue = function (editor, table) {\n            var borderMap = {\n                    thin: '0px',\n                    medium: '1px',\n                    thick: '2px'\n                },\n                tableBorder,\n                tdPadding,\n                tdBorder,\n                tmpValue;\n            if (!table) {\n                table = editor.document.createElement('table');\n                table.insertRow(0).insertCell(0).innerHTML = 'xxx';\n                editor.body.appendChild(table);\n                var td = table.getElementsByTagName('td')[0];\n                tmpValue = domUtils.getComputedStyle(table, 'border-left-width');\n                tableBorder = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                tmpValue = domUtils.getComputedStyle(td, 'padding-left');\n                tdPadding = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                tmpValue = domUtils.getComputedStyle(td, 'border-left-width');\n                tdBorder = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                domUtils.remove(table);\n                return {\n                    tableBorder: tableBorder,\n                    tdPadding: tdPadding,\n                    tdBorder: tdBorder\n                };\n            } else {\n                td = table.getElementsByTagName('td')[0];\n                tmpValue = domUtils.getComputedStyle(table, 'border-left-width');\n                tableBorder = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                tmpValue = domUtils.getComputedStyle(td, 'padding-left');\n                tdPadding = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                tmpValue = domUtils.getComputedStyle(td, 'border-left-width');\n                tdBorder = parseInt(borderMap[tmpValue] || tmpValue, 10);\n                return {\n                    tableBorder: tableBorder,\n                    tdPadding: tdPadding,\n                    tdBorder: tdBorder\n                };\n            }\n        };\n        /**\n         * 根据当前点击的td或者table获取索引对象\n         * @param tdOrTable\n         */\n        UETable.getUETable = function (tdOrTable) {\n            var tag = tdOrTable.tagName.toLowerCase();\n            tdOrTable =\n                tag == 'td' || tag == 'th' || tag == 'caption'\n                    ? domUtils.findParentByTagName(tdOrTable, 'table', true)\n                    : tdOrTable;\n            if (!tdOrTable.ueTable) {\n                tdOrTable.ueTable = new UETable(tdOrTable);\n            }\n            return tdOrTable.ueTable;\n        };\n\n        UETable.cloneCell = function (cell, ignoreMerge, keepPro) {\n            if (!cell || utils.isString(cell)) {\n                return this.table.ownerDocument.createElement(cell || 'td');\n            }\n            var flag = domUtils.hasClass(cell, 'selectTdClass');\n            flag && domUtils.removeClasses(cell, 'selectTdClass');\n            var tmpCell = cell.cloneNode(true);\n            if (ignoreMerge) {\n                tmpCell.rowSpan = tmpCell.colSpan = 1;\n            }\n            //去掉宽高\n            !keepPro && domUtils.removeAttributes(tmpCell, 'width height');\n            !keepPro && domUtils.removeAttributes(tmpCell, 'style');\n\n            tmpCell.style.borderLeftStyle = '';\n            tmpCell.style.borderTopStyle = '';\n            tmpCell.style.borderLeftColor = cell.style.borderRightColor;\n            tmpCell.style.borderLeftWidth = cell.style.borderRightWidth;\n            tmpCell.style.borderTopColor = cell.style.borderBottomColor;\n            tmpCell.style.borderTopWidth = cell.style.borderBottomWidth;\n            flag && domUtils.addClass(cell, 'selectTdClass');\n            return tmpCell;\n        };\n\n        UETable.prototype = {\n            getMaxRows: function () {\n                var rows = this.table.rows,\n                    maxLen = 1;\n                for (var i = 0, row; (row = rows[i]); i++) {\n                    var currentMax = 1;\n                    for (var j = 0, cj; (cj = row.cells[j++]); ) {\n                        currentMax = Math.max(cj.rowSpan || 1, currentMax);\n                    }\n                    maxLen = Math.max(currentMax + i, maxLen);\n                }\n                return maxLen;\n            },\n            /**\n             * 获取当前表格的最大列数\n             */\n            getMaxCols: function () {\n                var rows = this.table.rows,\n                    maxLen = 0,\n                    cellRows = {};\n                for (var i = 0, row; (row = rows[i]); i++) {\n                    var cellsNum = 0;\n                    for (var j = 0, cj; (cj = row.cells[j++]); ) {\n                        cellsNum += cj.colSpan || 1;\n                        if (cj.rowSpan && cj.rowSpan > 1) {\n                            for (var k = 1; k < cj.rowSpan; k++) {\n                                if (!cellRows['row_' + (i + k)]) {\n                                    cellRows['row_' + (i + k)] = cj.colSpan || 1;\n                                } else {\n                                    cellRows['row_' + (i + k)]++;\n                                }\n                            }\n                        }\n                    }\n                    cellsNum += cellRows['row_' + i] || 0;\n                    maxLen = Math.max(cellsNum, maxLen);\n                }\n                return maxLen;\n            },\n            getCellColIndex: function (cell) {},\n            /**\n             * 获取当前cell旁边的单元格，\n             * @param cell\n             * @param right\n             */\n            getHSideCell: function (cell, right) {\n                try {\n                    var cellInfo = this.getCellInfo(cell),\n                        previewRowIndex,\n                        previewColIndex;\n                    var len = this.selectedTds.length,\n                        range = this.cellsRange;\n                    //首行或者首列没有前置单元格\n                    if (\n                        (!right && (!len ? !cellInfo.colIndex : !range.beginColIndex)) ||\n                        (right &&\n                            (!len ? cellInfo.colIndex == this.colsNum - 1 : range.endColIndex == this.colsNum - 1))\n                    )\n                        return null;\n\n                    previewRowIndex = !len ? cellInfo.rowIndex : range.beginRowIndex;\n                    previewColIndex = !right\n                        ? !len\n                            ? cellInfo.colIndex < 1\n                                ? 0\n                                : cellInfo.colIndex - 1\n                            : range.beginColIndex - 1\n                        : !len\n                        ? cellInfo.colIndex + 1\n                        : range.endColIndex + 1;\n                    return this.getCell(\n                        this.indexTable[previewRowIndex][previewColIndex].rowIndex,\n                        this.indexTable[previewRowIndex][previewColIndex].cellIndex\n                    );\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            getTabNextCell: function (cell, preRowIndex) {\n                var cellInfo = this.getCellInfo(cell),\n                    rowIndex = preRowIndex || cellInfo.rowIndex,\n                    colIndex = cellInfo.colIndex + 1 + (cellInfo.colSpan - 1),\n                    nextCell;\n                try {\n                    nextCell = this.getCell(\n                        this.indexTable[rowIndex][colIndex].rowIndex,\n                        this.indexTable[rowIndex][colIndex].cellIndex\n                    );\n                } catch (e) {\n                    try {\n                        rowIndex = rowIndex * 1 + 1;\n                        colIndex = 0;\n                        nextCell = this.getCell(\n                            this.indexTable[rowIndex][colIndex].rowIndex,\n                            this.indexTable[rowIndex][colIndex].cellIndex\n                        );\n                    } catch (e) {}\n                }\n                return nextCell;\n            },\n            /**\n             * 获取视觉上的后置单元格\n             * @param cell\n             * @param bottom\n             */\n            getVSideCell: function (cell, bottom, ignoreRange) {\n                try {\n                    var cellInfo = this.getCellInfo(cell),\n                        nextRowIndex,\n                        nextColIndex;\n                    var len = this.selectedTds.length && !ignoreRange,\n                        range = this.cellsRange;\n                    //末行或者末列没有后置单元格\n                    if (\n                        (!bottom && cellInfo.rowIndex == 0) ||\n                        (bottom &&\n                            (!len\n                                ? cellInfo.rowIndex + cellInfo.rowSpan > this.rowsNum - 1\n                                : range.endRowIndex == this.rowsNum - 1))\n                    )\n                        return null;\n\n                    nextRowIndex = !bottom\n                        ? !len\n                            ? cellInfo.rowIndex - 1\n                            : range.beginRowIndex - 1\n                        : !len\n                        ? cellInfo.rowIndex + cellInfo.rowSpan\n                        : range.endRowIndex + 1;\n                    nextColIndex = !len ? cellInfo.colIndex : range.beginColIndex;\n                    return this.getCell(\n                        this.indexTable[nextRowIndex][nextColIndex].rowIndex,\n                        this.indexTable[nextRowIndex][nextColIndex].cellIndex\n                    );\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            /**\n             * 获取相同结束位置的单元格，xOrY指代了是获取x轴相同还是y轴相同\n             */\n            getSameEndPosCells: function (cell, xOrY) {\n                try {\n                    var flag = xOrY.toLowerCase() === 'x',\n                        end = domUtils.getXY(cell)[flag ? 'x' : 'y'] + cell['offset' + (flag ? 'Width' : 'Height')],\n                        rows = this.table.rows,\n                        cells = null,\n                        returns = [];\n                    for (var i = 0; i < this.rowsNum; i++) {\n                        cells = rows[i].cells;\n                        for (var j = 0, tmpCell; (tmpCell = cells[j++]); ) {\n                            var tmpEnd =\n                                domUtils.getXY(tmpCell)[flag ? 'x' : 'y'] +\n                                tmpCell['offset' + (flag ? 'Width' : 'Height')];\n                            //对应行的td已经被上面行rowSpan了\n                            if (tmpEnd > end && flag) break;\n                            if (cell == tmpCell || end == tmpEnd) {\n                                //只获取单一的单元格\n                                //todo 仅获取单一单元格在特定情况下会造成returns为空，从而影响后续的拖拽实现，修正这个。需考虑性能\n                                if (tmpCell[flag ? 'colSpan' : 'rowSpan'] == 1) {\n                                    returns.push(tmpCell);\n                                }\n                                if (flag) break;\n                            }\n                        }\n                    }\n                    return returns;\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            setCellContent: function (cell, content) {\n                cell.innerHTML = content || (browser.ie ? domUtils.fillChar : '<br />');\n            },\n            cloneCell: UETable.cloneCell,\n            /**\n             * 获取跟当前单元格的右边竖线为左边的所有未合并单元格\n             */\n            getSameStartPosXCells: function (cell) {\n                try {\n                    var start = domUtils.getXY(cell).x + cell.offsetWidth,\n                        rows = this.table.rows,\n                        cells,\n                        returns = [];\n                    for (var i = 0; i < this.rowsNum; i++) {\n                        cells = rows[i].cells;\n                        for (var j = 0, tmpCell; (tmpCell = cells[j++]); ) {\n                            var tmpStart = domUtils.getXY(tmpCell).x;\n                            if (tmpStart > start) break;\n                            if (tmpStart == start && tmpCell.colSpan == 1) {\n                                returns.push(tmpCell);\n                                break;\n                            }\n                        }\n                    }\n                    return returns;\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            /**\n             * 更新table对应的索引表\n             */\n            update: function (table) {\n                this.table = table || this.table;\n                this.selectedTds = [];\n                this.cellsRange = {};\n                this.indexTable = [];\n                var rows = this.table.rows,\n                    rowsNum = this.getMaxRows(),\n                    dNum = rowsNum - rows.length,\n                    colsNum = this.getMaxCols();\n                while (dNum--) {\n                    this.table.insertRow(rows.length);\n                }\n                this.rowsNum = rowsNum;\n                this.colsNum = colsNum;\n                for (var i = 0, len = rows.length; i < len; i++) {\n                    this.indexTable[i] = new Array(colsNum);\n                }\n                //填充索引表\n                for (var rowIndex = 0, row; (row = rows[rowIndex]); rowIndex++) {\n                    for (var cellIndex = 0, cell, cells = row.cells; (cell = cells[cellIndex]); cellIndex++) {\n                        //修正整行被rowSpan时导致的行数计算错误\n                        if (cell.rowSpan > rowsNum) {\n                            cell.rowSpan = rowsNum;\n                        }\n                        var colIndex = cellIndex,\n                            rowSpan = cell.rowSpan || 1,\n                            colSpan = cell.colSpan || 1;\n                        //当已经被上一行rowSpan或者被前一列colSpan了，则跳到下一个单元格进行\n                        while (this.indexTable[rowIndex][colIndex]) colIndex++;\n                        for (var j = 0; j < rowSpan; j++) {\n                            for (var k = 0; k < colSpan; k++) {\n                                this.indexTable[rowIndex + j][colIndex + k] = {\n                                    rowIndex: rowIndex,\n                                    cellIndex: cellIndex,\n                                    colIndex: colIndex,\n                                    rowSpan: rowSpan,\n                                    colSpan: colSpan\n                                };\n                            }\n                        }\n                    }\n                }\n                //修复残缺td\n                for (j = 0; j < rowsNum; j++) {\n                    for (k = 0; k < colsNum; k++) {\n                        if (this.indexTable[j][k] === undefined) {\n                            row = rows[j];\n                            cell = row.cells[row.cells.length - 1];\n                            cell = cell ? cell.cloneNode(true) : this.table.ownerDocument.createElement('td');\n                            this.setCellContent(cell);\n                            if (cell.colSpan !== 1) cell.colSpan = 1;\n                            if (cell.rowSpan !== 1) cell.rowSpan = 1;\n                            row.appendChild(cell);\n                            this.indexTable[j][k] = {\n                                rowIndex: j,\n                                cellIndex: cell.cellIndex,\n                                colIndex: k,\n                                rowSpan: 1,\n                                colSpan: 1\n                            };\n                        }\n                    }\n                }\n                //当框选后删除行或者列后撤销，需要重建选区。\n                var tds = domUtils.getElementsByTagName(this.table, 'td'),\n                    selectTds = [];\n                utils.each(tds, function (td) {\n                    if (domUtils.hasClass(td, 'selectTdClass')) {\n                        selectTds.push(td);\n                    }\n                });\n                if (selectTds.length) {\n                    var start = selectTds[0],\n                        end = selectTds[selectTds.length - 1],\n                        startInfo = this.getCellInfo(start),\n                        endInfo = this.getCellInfo(end);\n                    this.selectedTds = selectTds;\n                    this.cellsRange = {\n                        beginRowIndex: startInfo.rowIndex,\n                        beginColIndex: startInfo.colIndex,\n                        endRowIndex: endInfo.rowIndex + endInfo.rowSpan - 1,\n                        endColIndex: endInfo.colIndex + endInfo.colSpan - 1\n                    };\n                }\n                //给第一行设置firstRow的样式名称,在排序图标的样式上使用到\n                if (!domUtils.hasClass(this.table.rows[0], 'firstRow')) {\n                    domUtils.addClass(this.table.rows[0], 'firstRow');\n                    for (var i = 1; i < this.table.rows.length; i++) {\n                        domUtils.removeClasses(this.table.rows[i], 'firstRow');\n                    }\n                }\n            },\n            /**\n             * 获取单元格的索引信息\n             */\n            getCellInfo: function (cell) {\n                if (!cell) return;\n                var cellIndex = cell.cellIndex,\n                    rowIndex = cell.parentNode.rowIndex,\n                    rowInfo = this.indexTable[rowIndex],\n                    numCols = this.colsNum;\n                for (var colIndex = cellIndex; colIndex < numCols; colIndex++) {\n                    var cellInfo = rowInfo[colIndex];\n                    if (cellInfo.rowIndex === rowIndex && cellInfo.cellIndex === cellIndex) {\n                        return cellInfo;\n                    }\n                }\n            },\n            /**\n             * 根据行列号获取单元格\n             */\n            getCell: function (rowIndex, cellIndex) {\n                return (rowIndex < this.rowsNum && this.table.rows[rowIndex].cells[cellIndex]) || null;\n            },\n            /**\n             * 删除单元格\n             */\n            deleteCell: function (cell, rowIndex) {\n                rowIndex = typeof rowIndex == 'number' ? rowIndex : cell.parentNode.rowIndex;\n                var row = this.table.rows[rowIndex];\n                row.deleteCell(cell.cellIndex);\n            },\n            /**\n             * 根据始末两个单元格获取被框选的所有单元格范围\n             */\n            getCellsRange: function (cellA, cellB) {\n                function checkRange(beginRowIndex, beginColIndex, endRowIndex, endColIndex) {\n                    var tmpBeginRowIndex = beginRowIndex,\n                        tmpBeginColIndex = beginColIndex,\n                        tmpEndRowIndex = endRowIndex,\n                        tmpEndColIndex = endColIndex,\n                        cellInfo,\n                        colIndex,\n                        rowIndex;\n                    // 通过indexTable检查是否存在超出TableRange上边界的情况\n                    if (beginRowIndex > 0) {\n                        for (colIndex = beginColIndex; colIndex < endColIndex; colIndex++) {\n                            cellInfo = me.indexTable[beginRowIndex][colIndex];\n                            rowIndex = cellInfo.rowIndex;\n                            if (rowIndex < beginRowIndex) {\n                                tmpBeginRowIndex = Math.min(rowIndex, tmpBeginRowIndex);\n                            }\n                        }\n                    }\n                    // 通过indexTable检查是否存在超出TableRange右边界的情况\n                    if (endColIndex < me.colsNum) {\n                        for (rowIndex = beginRowIndex; rowIndex < endRowIndex; rowIndex++) {\n                            cellInfo = me.indexTable[rowIndex][endColIndex];\n                            colIndex = cellInfo.colIndex + cellInfo.colSpan - 1;\n                            if (colIndex > endColIndex) {\n                                tmpEndColIndex = Math.max(colIndex, tmpEndColIndex);\n                            }\n                        }\n                    }\n                    // 检查是否有超出TableRange下边界的情况\n                    if (endRowIndex < me.rowsNum) {\n                        for (colIndex = beginColIndex; colIndex < endColIndex; colIndex++) {\n                            cellInfo = me.indexTable[endRowIndex][colIndex];\n                            rowIndex = cellInfo.rowIndex + cellInfo.rowSpan - 1;\n                            if (rowIndex > endRowIndex) {\n                                tmpEndRowIndex = Math.max(rowIndex, tmpEndRowIndex);\n                            }\n                        }\n                    }\n                    // 检查是否有超出TableRange左边界的情况\n                    if (beginColIndex > 0) {\n                        for (rowIndex = beginRowIndex; rowIndex < endRowIndex; rowIndex++) {\n                            cellInfo = me.indexTable[rowIndex][beginColIndex];\n                            colIndex = cellInfo.colIndex;\n                            if (colIndex < beginColIndex) {\n                                tmpBeginColIndex = Math.min(cellInfo.colIndex, tmpBeginColIndex);\n                            }\n                        }\n                    }\n                    //递归调用直至所有完成所有框选单元格的扩展\n                    if (\n                        tmpBeginRowIndex != beginRowIndex ||\n                        tmpBeginColIndex != beginColIndex ||\n                        tmpEndRowIndex != endRowIndex ||\n                        tmpEndColIndex != endColIndex\n                    ) {\n                        return checkRange(tmpBeginRowIndex, tmpBeginColIndex, tmpEndRowIndex, tmpEndColIndex);\n                    } else {\n                        // 不需要扩展TableRange的情况\n                        return {\n                            beginRowIndex: beginRowIndex,\n                            beginColIndex: beginColIndex,\n                            endRowIndex: endRowIndex,\n                            endColIndex: endColIndex\n                        };\n                    }\n                }\n\n                try {\n                    var me = this,\n                        cellAInfo = me.getCellInfo(cellA);\n                    if (cellA === cellB) {\n                        return {\n                            beginRowIndex: cellAInfo.rowIndex,\n                            beginColIndex: cellAInfo.colIndex,\n                            endRowIndex: cellAInfo.rowIndex + cellAInfo.rowSpan - 1,\n                            endColIndex: cellAInfo.colIndex + cellAInfo.colSpan - 1\n                        };\n                    }\n                    var cellBInfo = me.getCellInfo(cellB);\n                    // 计算TableRange的四个边\n                    var beginRowIndex = Math.min(cellAInfo.rowIndex, cellBInfo.rowIndex),\n                        beginColIndex = Math.min(cellAInfo.colIndex, cellBInfo.colIndex),\n                        endRowIndex = Math.max(\n                            cellAInfo.rowIndex + cellAInfo.rowSpan - 1,\n                            cellBInfo.rowIndex + cellBInfo.rowSpan - 1\n                        ),\n                        endColIndex = Math.max(\n                            cellAInfo.colIndex + cellAInfo.colSpan - 1,\n                            cellBInfo.colIndex + cellBInfo.colSpan - 1\n                        );\n\n                    return checkRange(beginRowIndex, beginColIndex, endRowIndex, endColIndex);\n                } catch (e) {\n                    //throw e;\n                }\n            },\n            /**\n             * 依据cellsRange获取对应的单元格集合\n             */\n            getCells: function (range) {\n                //每次获取cells之前必须先清除上次的选择，否则会对后续获取操作造成影响\n                this.clearSelected();\n                var beginRowIndex = range.beginRowIndex,\n                    beginColIndex = range.beginColIndex,\n                    endRowIndex = range.endRowIndex,\n                    endColIndex = range.endColIndex,\n                    cellInfo,\n                    rowIndex,\n                    colIndex,\n                    tdHash = {},\n                    returnTds = [];\n                for (var i = beginRowIndex; i <= endRowIndex; i++) {\n                    for (var j = beginColIndex; j <= endColIndex; j++) {\n                        cellInfo = this.indexTable[i][j];\n                        rowIndex = cellInfo.rowIndex;\n                        colIndex = cellInfo.colIndex;\n                        // 如果Cells里已经包含了此Cell则跳过\n                        var key = rowIndex + '|' + colIndex;\n                        if (tdHash[key]) continue;\n                        tdHash[key] = 1;\n                        if (\n                            rowIndex < i ||\n                            colIndex < j ||\n                            rowIndex + cellInfo.rowSpan - 1 > endRowIndex ||\n                            colIndex + cellInfo.colSpan - 1 > endColIndex\n                        ) {\n                            return null;\n                        }\n                        returnTds.push(this.getCell(rowIndex, cellInfo.cellIndex));\n                    }\n                }\n                return returnTds;\n            },\n            /**\n             * 清理已经选中的单元格\n             */\n            clearSelected: function () {\n                UETable.removeSelectedClass(this.selectedTds);\n                this.selectedTds = [];\n                this.cellsRange = {};\n            },\n            /**\n             * 根据range设置已经选中的单元格\n             */\n            setSelected: function (range) {\n                var cells = this.getCells(range);\n                UETable.addSelectedClass(cells);\n                this.selectedTds = cells;\n                this.cellsRange = range;\n            },\n            isFullRow: function () {\n                var range = this.cellsRange;\n                return range.endColIndex - range.beginColIndex + 1 == this.colsNum;\n            },\n            isFullCol: function () {\n                var range = this.cellsRange,\n                    table = this.table,\n                    ths = table.getElementsByTagName('th'),\n                    rows = range.endRowIndex - range.beginRowIndex + 1;\n                return !ths.length ? rows == this.rowsNum : rows == this.rowsNum || rows == this.rowsNum - 1;\n            },\n            /**\n             * 获取视觉上的前置单元格，默认是左边，top传入时\n             * @param cell\n             * @param top\n             */\n            getNextCell: function (cell, bottom, ignoreRange) {\n                try {\n                    var cellInfo = this.getCellInfo(cell),\n                        nextRowIndex,\n                        nextColIndex;\n                    var len = this.selectedTds.length && !ignoreRange,\n                        range = this.cellsRange;\n                    //末行或者末列没有后置单元格\n                    if (\n                        (!bottom && cellInfo.rowIndex == 0) ||\n                        (bottom &&\n                            (!len\n                                ? cellInfo.rowIndex + cellInfo.rowSpan > this.rowsNum - 1\n                                : range.endRowIndex == this.rowsNum - 1))\n                    )\n                        return null;\n\n                    nextRowIndex = !bottom\n                        ? !len\n                            ? cellInfo.rowIndex - 1\n                            : range.beginRowIndex - 1\n                        : !len\n                        ? cellInfo.rowIndex + cellInfo.rowSpan\n                        : range.endRowIndex + 1;\n                    nextColIndex = !len ? cellInfo.colIndex : range.beginColIndex;\n                    return this.getCell(\n                        this.indexTable[nextRowIndex][nextColIndex].rowIndex,\n                        this.indexTable[nextRowIndex][nextColIndex].cellIndex\n                    );\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            getPreviewCell: function (cell, top) {\n                try {\n                    var cellInfo = this.getCellInfo(cell),\n                        previewRowIndex,\n                        previewColIndex;\n                    var len = this.selectedTds.length,\n                        range = this.cellsRange;\n                    //首行或者首列没有前置单元格\n                    if (\n                        (!top && (!len ? !cellInfo.colIndex : !range.beginColIndex)) ||\n                        (top && (!len ? cellInfo.rowIndex > this.colsNum - 1 : range.endColIndex == this.colsNum - 1))\n                    )\n                        return null;\n\n                    previewRowIndex = !top\n                        ? !len\n                            ? cellInfo.rowIndex\n                            : range.beginRowIndex\n                        : !len\n                        ? cellInfo.rowIndex < 1\n                            ? 0\n                            : cellInfo.rowIndex - 1\n                        : range.beginRowIndex;\n                    previewColIndex = !top\n                        ? !len\n                            ? cellInfo.colIndex < 1\n                                ? 0\n                                : cellInfo.colIndex - 1\n                            : range.beginColIndex - 1\n                        : !len\n                        ? cellInfo.colIndex\n                        : range.endColIndex + 1;\n                    return this.getCell(\n                        this.indexTable[previewRowIndex][previewColIndex].rowIndex,\n                        this.indexTable[previewRowIndex][previewColIndex].cellIndex\n                    );\n                } catch (e) {\n                    showError(e);\n                }\n            },\n            /**\n             * 移动单元格中的内容\n             */\n            moveContent: function (cellTo, cellFrom) {\n                if (UETable.isEmptyBlock(cellFrom)) return;\n                if (UETable.isEmptyBlock(cellTo)) {\n                    cellTo.innerHTML = cellFrom.innerHTML;\n                    return;\n                }\n                var child = cellTo.lastChild;\n                if (child.nodeType == 3 || !dtd.$block[child.tagName]) {\n                    cellTo.appendChild(cellTo.ownerDocument.createElement('br'));\n                }\n                while ((child = cellFrom.firstChild)) {\n                    cellTo.appendChild(child);\n                }\n            },\n            /**\n             * 向右合并单元格\n             */\n            mergeRight: function (cell) {\n                var cellInfo = this.getCellInfo(cell),\n                    rightColIndex = cellInfo.colIndex + cellInfo.colSpan,\n                    rightCellInfo = this.indexTable[cellInfo.rowIndex][rightColIndex],\n                    rightCell = this.getCell(rightCellInfo.rowIndex, rightCellInfo.cellIndex);\n                //合并\n                cell.colSpan = cellInfo.colSpan + rightCellInfo.colSpan;\n                //被合并的单元格不应存在宽度属性\n                cell.removeAttribute('width');\n                //移动内容\n                this.moveContent(cell, rightCell);\n                //删掉被合并的Cell\n                this.deleteCell(rightCell, rightCellInfo.rowIndex);\n                this.update();\n            },\n            /**\n             * 向下合并单元格\n             */\n            mergeDown: function (cell) {\n                var cellInfo = this.getCellInfo(cell),\n                    downRowIndex = cellInfo.rowIndex + cellInfo.rowSpan,\n                    downCellInfo = this.indexTable[downRowIndex][cellInfo.colIndex],\n                    downCell = this.getCell(downCellInfo.rowIndex, downCellInfo.cellIndex);\n                cell.rowSpan = cellInfo.rowSpan + downCellInfo.rowSpan;\n                cell.removeAttribute('height');\n                this.moveContent(cell, downCell);\n                this.deleteCell(downCell, downCellInfo.rowIndex);\n                this.update();\n            },\n            /**\n             * 合并整个range中的内容\n             */\n            mergeRange: function () {\n                //由于合并操作可以在任意时刻进行，所以无法通过鼠标位置等信息实时生成range，只能通过缓存实例中的cellsRange对象来访问\n                var range = this.cellsRange,\n                    leftTopCell = this.getCell(\n                        range.beginRowIndex,\n                        this.indexTable[range.beginRowIndex][range.beginColIndex].cellIndex\n                    );\n\n                if (leftTopCell.tagName == 'TH' && range.endRowIndex !== range.beginRowIndex) {\n                    var index = this.indexTable,\n                        info = this.getCellInfo(leftTopCell);\n                    leftTopCell = this.getCell(1, index[1][info.colIndex].cellIndex);\n                    range = this.getCellsRange(\n                        leftTopCell,\n                        this.getCell(\n                            index[this.rowsNum - 1][info.colIndex].rowIndex,\n                            index[this.rowsNum - 1][info.colIndex].cellIndex\n                        )\n                    );\n                }\n\n                // 删除剩余的Cells\n                var cells = this.getCells(range);\n                for (var i = 0, ci; (ci = cells[i++]); ) {\n                    if (ci !== leftTopCell) {\n                        this.moveContent(leftTopCell, ci);\n                        this.deleteCell(ci);\n                    }\n                }\n                // 修改左上角Cell的rowSpan和colSpan，并调整宽度属性设置\n                leftTopCell.rowSpan = range.endRowIndex - range.beginRowIndex + 1;\n                leftTopCell.rowSpan > 1 && leftTopCell.removeAttribute('height');\n                leftTopCell.colSpan = range.endColIndex - range.beginColIndex + 1;\n                leftTopCell.colSpan > 1 && leftTopCell.removeAttribute('width');\n                if (leftTopCell.rowSpan == this.rowsNum && leftTopCell.colSpan != 1) {\n                    leftTopCell.colSpan = 1;\n                }\n\n                if (leftTopCell.colSpan == this.colsNum && leftTopCell.rowSpan != 1) {\n                    var rowIndex = leftTopCell.parentNode.rowIndex;\n                    //解决IE下的表格操作问题\n                    if (this.table.deleteRow) {\n                        for (var i = rowIndex + 1, curIndex = rowIndex + 1, len = leftTopCell.rowSpan; i < len; i++) {\n                            this.table.deleteRow(curIndex);\n                        }\n                    } else {\n                        for (var i = 0, len = leftTopCell.rowSpan - 1; i < len; i++) {\n                            var row = this.table.rows[rowIndex + 1];\n                            row.parentNode.removeChild(row);\n                        }\n                    }\n                    leftTopCell.rowSpan = 1;\n                }\n                this.update();\n            },\n            /**\n             * 插入一行单元格\n             */\n            insertRow: function (rowIndex, sourceCell) {\n                var numCols = this.colsNum,\n                    table = this.table,\n                    row = table.insertRow(rowIndex),\n                    cell,\n                    isInsertTitle = typeof sourceCell == 'string' && sourceCell.toUpperCase() == 'TH';\n\n                function replaceTdToTh(colIndex, cell, tableRow) {\n                    if (colIndex == 0) {\n                        var tr = tableRow.nextSibling || tableRow.previousSibling,\n                            th = tr.cells[colIndex];\n                        if (th.tagName == 'TH') {\n                            th = cell.ownerDocument.createElement('th');\n                            th.appendChild(cell.firstChild);\n                            tableRow.insertBefore(th, cell);\n                            domUtils.remove(cell);\n                        }\n                    } else {\n                        if (cell.tagName == 'TH') {\n                            var td = cell.ownerDocument.createElement('td');\n                            td.appendChild(cell.firstChild);\n                            tableRow.insertBefore(td, cell);\n                            domUtils.remove(cell);\n                        }\n                    }\n                }\n\n                //首行直接插入,无需考虑部分单元格被rowspan的情况\n                if (rowIndex == 0 || rowIndex == this.rowsNum) {\n                    for (var colIndex = 0; colIndex < numCols; colIndex++) {\n                        cell = this.cloneCell(sourceCell, true);\n                        this.setCellContent(cell);\n                        cell.getAttribute('vAlign') && cell.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                        row.appendChild(cell);\n                        if (!isInsertTitle) replaceTdToTh(colIndex, cell, row);\n                    }\n                } else {\n                    var infoRow = this.indexTable[rowIndex],\n                        cellIndex = 0;\n                    for (colIndex = 0; colIndex < numCols; colIndex++) {\n                        var cellInfo = infoRow[colIndex];\n                        //如果存在某个单元格的rowspan穿过待插入行的位置，则修改该单元格的rowspan即可，无需插入单元格\n                        if (cellInfo.rowIndex < rowIndex) {\n                            cell = this.getCell(cellInfo.rowIndex, cellInfo.cellIndex);\n                            cell.rowSpan = cellInfo.rowSpan + 1;\n                        } else {\n                            cell = this.cloneCell(sourceCell, true);\n                            this.setCellContent(cell);\n                            row.appendChild(cell);\n                        }\n                        if (!isInsertTitle) replaceTdToTh(colIndex, cell, row);\n                    }\n                }\n                //框选时插入不触发contentchange，需要手动更新索引。\n                this.update();\n                return row;\n            },\n            /**\n             * 删除一行单元格\n             * @param rowIndex\n             */\n            deleteRow: function (rowIndex) {\n                var row = this.table.rows[rowIndex],\n                    infoRow = this.indexTable[rowIndex],\n                    colsNum = this.colsNum,\n                    count = 0; //处理计数\n                for (var colIndex = 0; colIndex < colsNum; ) {\n                    var cellInfo = infoRow[colIndex],\n                        cell = this.getCell(cellInfo.rowIndex, cellInfo.cellIndex);\n                    if (cell.rowSpan > 1) {\n                        if (cellInfo.rowIndex == rowIndex) {\n                            var clone = cell.cloneNode(true);\n                            clone.rowSpan = cell.rowSpan - 1;\n                            clone.innerHTML = '';\n                            cell.rowSpan = 1;\n                            var nextRowIndex = rowIndex + 1,\n                                nextRow = this.table.rows[nextRowIndex],\n                                insertCellIndex,\n                                preMerged = this.getPreviewMergedCellsNum(nextRowIndex, colIndex) - count;\n                            if (preMerged < colIndex) {\n                                insertCellIndex = colIndex - preMerged - 1;\n                                //nextRow.insertCell(insertCellIndex);\n                                domUtils.insertAfter(nextRow.cells[insertCellIndex], clone);\n                            } else {\n                                if (nextRow.cells.length) nextRow.insertBefore(clone, nextRow.cells[0]);\n                            }\n                            count += 1;\n                            //cell.parentNode.removeChild(cell);\n                        }\n                    }\n                    colIndex += cell.colSpan || 1;\n                }\n                var deleteTds = [],\n                    cacheMap = {};\n                for (colIndex = 0; colIndex < colsNum; colIndex++) {\n                    var tmpRowIndex = infoRow[colIndex].rowIndex,\n                        tmpCellIndex = infoRow[colIndex].cellIndex,\n                        key = tmpRowIndex + '_' + tmpCellIndex;\n                    if (cacheMap[key]) continue;\n                    cacheMap[key] = 1;\n                    cell = this.getCell(tmpRowIndex, tmpCellIndex);\n                    deleteTds.push(cell);\n                }\n                var mergeTds = [];\n                utils.each(deleteTds, function (td) {\n                    if (td.rowSpan == 1) {\n                        td.parentNode.removeChild(td);\n                    } else {\n                        mergeTds.push(td);\n                    }\n                });\n                utils.each(mergeTds, function (td) {\n                    td.rowSpan--;\n                });\n                row.parentNode.removeChild(row);\n                //浏览器方法本身存在bug,采用自定义方法删除\n                //this.table.deleteRow(rowIndex);\n                this.update();\n            },\n            insertCol: function (colIndex, sourceCell, defaultValue) {\n                var rowsNum = this.rowsNum,\n                    rowIndex = 0,\n                    tableRow,\n                    cell,\n                    backWidth = parseInt(\n                        (this.table.offsetWidth - (this.colsNum + 1) * 20 - (this.colsNum + 1)) / (this.colsNum + 1),\n                        10\n                    ),\n                    isInsertTitleCol = typeof sourceCell == 'string' && sourceCell.toUpperCase() == 'TH';\n\n                function replaceTdToTh(rowIndex, cell, tableRow) {\n                    if (rowIndex == 0) {\n                        var th = cell.nextSibling || cell.previousSibling;\n                        if (th.tagName == 'TH') {\n                            th = cell.ownerDocument.createElement('th');\n                            th.appendChild(cell.firstChild);\n                            tableRow.insertBefore(th, cell);\n                            domUtils.remove(cell);\n                        }\n                    } else {\n                        if (cell.tagName == 'TH') {\n                            var td = cell.ownerDocument.createElement('td');\n                            td.appendChild(cell.firstChild);\n                            tableRow.insertBefore(td, cell);\n                            domUtils.remove(cell);\n                        }\n                    }\n                }\n\n                var preCell;\n                if (colIndex == 0 || colIndex == this.colsNum) {\n                    for (; rowIndex < rowsNum; rowIndex++) {\n                        tableRow = this.table.rows[rowIndex];\n                        preCell = tableRow.cells[colIndex == 0 ? colIndex : tableRow.cells.length];\n                        cell = this.cloneCell(sourceCell, true); //tableRow.insertCell(colIndex == 0 ? colIndex : tableRow.cells.length);\n                        this.setCellContent(cell);\n                        cell.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                        preCell && cell.setAttribute('width', preCell.getAttribute('width'));\n                        if (!colIndex) {\n                            tableRow.insertBefore(cell, tableRow.cells[0]);\n                        } else {\n                            domUtils.insertAfter(tableRow.cells[tableRow.cells.length - 1], cell);\n                        }\n                        if (!isInsertTitleCol) replaceTdToTh(rowIndex, cell, tableRow);\n                    }\n                } else {\n                    for (; rowIndex < rowsNum; rowIndex++) {\n                        var cellInfo = this.indexTable[rowIndex][colIndex];\n                        if (cellInfo.colIndex < colIndex) {\n                            cell = this.getCell(cellInfo.rowIndex, cellInfo.cellIndex);\n                            cell.colSpan = cellInfo.colSpan + 1;\n                        } else {\n                            tableRow = this.table.rows[rowIndex];\n                            preCell = tableRow.cells[cellInfo.cellIndex];\n\n                            cell = this.cloneCell(sourceCell, true); //tableRow.insertCell(cellInfo.cellIndex);\n                            this.setCellContent(cell);\n                            cell.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                            preCell && cell.setAttribute('width', preCell.getAttribute('width'));\n                            //防止IE下报错\n                            preCell ? tableRow.insertBefore(cell, preCell) : tableRow.appendChild(cell);\n                        }\n                        if (!isInsertTitleCol) replaceTdToTh(rowIndex, cell, tableRow);\n                    }\n                }\n                //框选时插入不触发contentchange，需要手动更新索引\n                this.update();\n                this.updateWidth(backWidth, defaultValue || { tdPadding: 10, tdBorder: 1 });\n            },\n            updateWidth: function (width, defaultValue) {\n                var table = this.table,\n                    tmpWidth = UETable.getWidth(table) - defaultValue.tdPadding * 2 - defaultValue.tdBorder + width;\n                if (tmpWidth < table.ownerDocument.body.offsetWidth) {\n                    table.setAttribute('width', tmpWidth);\n                    return;\n                }\n                var tds = domUtils.getElementsByTagName(this.table, 'td th');\n                utils.each(tds, function (td) {\n                    td.setAttribute('width', width);\n                });\n            },\n            deleteCol: function (colIndex) {\n                var indexTable = this.indexTable,\n                    tableRows = this.table.rows,\n                    backTableWidth = this.table.getAttribute('width'),\n                    backTdWidth = 0,\n                    rowsNum = this.rowsNum,\n                    cacheMap = {};\n                for (var rowIndex = 0; rowIndex < rowsNum; ) {\n                    var infoRow = indexTable[rowIndex],\n                        cellInfo = infoRow[colIndex],\n                        key = cellInfo.rowIndex + '_' + cellInfo.colIndex;\n                    // 跳过已经处理过的Cell\n                    if (cacheMap[key]) continue;\n                    cacheMap[key] = 1;\n                    var cell = this.getCell(cellInfo.rowIndex, cellInfo.cellIndex);\n                    if (!backTdWidth) backTdWidth = cell && parseInt(cell.offsetWidth / cell.colSpan, 10).toFixed(0);\n                    // 如果Cell的colSpan大于1, 就修改colSpan, 否则就删掉这个Cell\n                    if (cell.colSpan > 1) {\n                        cell.colSpan--;\n                    } else {\n                        tableRows[rowIndex].deleteCell(cellInfo.cellIndex);\n                    }\n                    rowIndex += cellInfo.rowSpan || 1;\n                }\n                this.table.setAttribute('width', backTableWidth - backTdWidth);\n                this.update();\n            },\n            splitToCells: function (cell) {\n                var me = this,\n                    cells = this.splitToRows(cell);\n                utils.each(cells, function (cell) {\n                    me.splitToCols(cell);\n                });\n            },\n            splitToRows: function (cell) {\n                var cellInfo = this.getCellInfo(cell),\n                    rowIndex = cellInfo.rowIndex,\n                    colIndex = cellInfo.colIndex,\n                    results = [];\n                // 修改Cell的rowSpan\n                cell.rowSpan = 1;\n                results.push(cell);\n                // 补齐单元格\n                for (var i = rowIndex, endRow = rowIndex + cellInfo.rowSpan; i < endRow; i++) {\n                    if (i == rowIndex) continue;\n                    var tableRow = this.table.rows[i],\n                        tmpCell = tableRow.insertCell(colIndex - this.getPreviewMergedCellsNum(i, colIndex));\n                    tmpCell.colSpan = cellInfo.colSpan;\n                    this.setCellContent(tmpCell);\n                    tmpCell.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                    tmpCell.setAttribute('align', cell.getAttribute('align'));\n                    if (cell.style.cssText) {\n                        tmpCell.style.cssText = cell.style.cssText;\n                    }\n                    results.push(tmpCell);\n                }\n                this.update();\n                return results;\n            },\n            getPreviewMergedCellsNum: function (rowIndex, colIndex) {\n                var indexRow = this.indexTable[rowIndex],\n                    num = 0;\n                for (var i = 0; i < colIndex; ) {\n                    var colSpan = indexRow[i].colSpan,\n                        tmpRowIndex = indexRow[i].rowIndex;\n                    num += colSpan - (tmpRowIndex == rowIndex ? 1 : 0);\n                    i += colSpan;\n                }\n                return num;\n            },\n            splitToCols: function (cell) {\n                var backWidth = (cell.offsetWidth / cell.colSpan - 22).toFixed(0),\n                    cellInfo = this.getCellInfo(cell),\n                    rowIndex = cellInfo.rowIndex,\n                    colIndex = cellInfo.colIndex,\n                    results = [];\n                // 修改Cell的rowSpan\n                cell.colSpan = 1;\n                cell.setAttribute('width', backWidth);\n                results.push(cell);\n                // 补齐单元格\n                for (var j = colIndex, endCol = colIndex + cellInfo.colSpan; j < endCol; j++) {\n                    if (j == colIndex) continue;\n                    var tableRow = this.table.rows[rowIndex],\n                        tmpCell = tableRow.insertCell(this.indexTable[rowIndex][j].cellIndex + 1);\n                    tmpCell.rowSpan = cellInfo.rowSpan;\n                    this.setCellContent(tmpCell);\n                    tmpCell.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                    tmpCell.setAttribute('align', cell.getAttribute('align'));\n                    tmpCell.setAttribute('width', backWidth);\n                    if (cell.style.cssText) {\n                        tmpCell.style.cssText = cell.style.cssText;\n                    }\n                    //处理th的情况\n                    if (cell.tagName == 'TH') {\n                        var th = cell.ownerDocument.createElement('th');\n                        th.appendChild(tmpCell.firstChild);\n                        th.setAttribute('vAlign', cell.getAttribute('vAlign'));\n                        th.rowSpan = tmpCell.rowSpan;\n                        tableRow.insertBefore(th, tmpCell);\n                        domUtils.remove(tmpCell);\n                    }\n                    results.push(tmpCell);\n                }\n                this.update();\n                return results;\n            },\n            isLastCell: function (cell, rowsNum, colsNum) {\n                rowsNum = rowsNum || this.rowsNum;\n                colsNum = colsNum || this.colsNum;\n                var cellInfo = this.getCellInfo(cell);\n                return (\n                    cellInfo.rowIndex + cellInfo.rowSpan == rowsNum && cellInfo.colIndex + cellInfo.colSpan == colsNum\n                );\n            },\n            getLastCell: function (cells) {\n                cells = cells || this.table.getElementsByTagName('td');\n                var firstInfo = this.getCellInfo(cells[0]);\n                var me = this,\n                    last = cells[0],\n                    tr = last.parentNode,\n                    cellsNum = 0,\n                    cols = 0,\n                    rows;\n                utils.each(cells, function (cell) {\n                    if (cell.parentNode == tr) cols += cell.colSpan || 1;\n                    cellsNum += cell.rowSpan * cell.colSpan || 1;\n                });\n                rows = cellsNum / cols;\n                utils.each(cells, function (cell) {\n                    if (me.isLastCell(cell, rows, cols)) {\n                        last = cell;\n                        return false;\n                    }\n                });\n                return last;\n            },\n            selectRow: function (rowIndex) {\n                var indexRow = this.indexTable[rowIndex],\n                    start = this.getCell(indexRow[0].rowIndex, indexRow[0].cellIndex),\n                    end = this.getCell(indexRow[this.colsNum - 1].rowIndex, indexRow[this.colsNum - 1].cellIndex),\n                    range = this.getCellsRange(start, end);\n                this.setSelected(range);\n            },\n            selectTable: function () {\n                var tds = this.table.getElementsByTagName('td'),\n                    range = this.getCellsRange(tds[0], tds[tds.length - 1]);\n                this.setSelected(range);\n            },\n            setBackground: function (cells, value) {\n                if (typeof value === 'string') {\n                    utils.each(cells, function (cell) {\n                        cell.style.backgroundColor = value;\n                    });\n                } else if (typeof value === 'object') {\n                    value = utils.extend(\n                        {\n                            repeat: true,\n                            colorList: ['#ddd', '#fff']\n                        },\n                        value\n                    );\n                    var rowIndex = this.getCellInfo(cells[0]).rowIndex,\n                        count = 0,\n                        colors = value.colorList,\n                        getColor = function (list, index, repeat) {\n                            return list[index] ? list[index] : repeat ? list[index % list.length] : '';\n                        };\n                    for (var i = 0, cell; (cell = cells[i++]); ) {\n                        var cellInfo = this.getCellInfo(cell);\n                        cell.style.backgroundColor = getColor(\n                            colors,\n                            rowIndex + count == cellInfo.rowIndex ? count : ++count,\n                            value.repeat\n                        );\n                    }\n                }\n            },\n            removeBackground: function (cells) {\n                utils.each(cells, function (cell) {\n                    cell.style.backgroundColor = '';\n                });\n            }\n        };\n        function showError(e) {}\n    })();\n\n    // plugins/table.cmds.js\n    /**\n     * Created with JetBrains PhpStorm.\n     * User: taoqili\n     * Date: 13-2-20\n     * Time: 下午6:25\n     * To change this template use File | Settings | File Templates.\n     */\n    (function () {\n        var UT = UE.UETable,\n            getTableItemsByRange = function (editor) {\n                return UT.getTableItemsByRange(editor);\n            },\n            getUETableBySelected = function (editor) {\n                return UT.getUETableBySelected(editor);\n            },\n            getDefaultValue = function (editor, table) {\n                return UT.getDefaultValue(editor, table);\n            },\n            getUETable = function (tdOrTable) {\n                return UT.getUETable(tdOrTable);\n            };\n\n        UE.commands['inserttable'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).table ? -1 : 0;\n            },\n            execCommand: function (cmd, opt) {\n                function createTable(opt, tdWidth) {\n                    var html = [],\n                        rowsNum = opt.numRows,\n                        colsNum = opt.numCols;\n                    for (var r = 0; r < rowsNum; r++) {\n                        html.push('<tr' + (r == 0 ? ' class=\"firstRow\"' : '') + '>');\n                        for (var c = 0; c < colsNum; c++) {\n                            html.push(\n                                '<td width=\"' +\n                                    tdWidth +\n                                    '\"  vAlign=\"' +\n                                    opt.tdvalign +\n                                    '\" >' +\n                                    (browser.ie && browser.version < 11 ? domUtils.fillChar : '<br/>') +\n                                    '</td>'\n                            );\n                        }\n                        html.push('</tr>');\n                    }\n                    //禁止指定table-width\n                    return '<table><tbody>' + html.join('') + '</tbody></table>';\n                }\n\n                if (!opt) {\n                    opt = utils.extend(\n                        {},\n                        {\n                            numCols: this.options.defaultCols,\n                            numRows: this.options.defaultRows,\n                            tdvalign: this.options.tdvalign\n                        }\n                    );\n                }\n                var me = this;\n                var range = this.selection.getRange(),\n                    start = range.startContainer,\n                    firstParentBlock =\n                        domUtils.findParent(\n                            start,\n                            function (node) {\n                                return domUtils.isBlockElm(node);\n                            },\n                            true\n                        ) || me.body;\n\n                var defaultValue = getDefaultValue(me),\n                    tableWidth = firstParentBlock.offsetWidth,\n                    tdWidth = Math.floor(tableWidth / opt.numCols - defaultValue.tdPadding * 2 - defaultValue.tdBorder);\n\n                //todo其他属性\n                !opt.tdvalign && (opt.tdvalign = me.options.tdvalign);\n                me.execCommand('inserthtml', createTable(opt, tdWidth));\n            }\n        };\n\n        UE.commands['insertparagraphbeforetable'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).cell ? 0 : -1;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var p = this.document.createElement('p');\n                    p.innerHTML = browser.ie ? '&nbsp;' : '<br />';\n                    table.parentNode.insertBefore(p, table);\n                    this.selection.getRange().setStart(p, 0).setCursor();\n                }\n            }\n        };\n\n        UE.commands['deletetable'] = {\n            queryCommandState: function () {\n                var rng = this.selection.getRange();\n                return domUtils.findParentByTagName(rng.startContainer, 'table', true) ? 0 : -1;\n            },\n            execCommand: function (cmd, table) {\n                var rng = this.selection.getRange();\n                table = table || domUtils.findParentByTagName(rng.startContainer, 'table', true);\n                if (table) {\n                    var next = table.nextSibling;\n                    if (!next) {\n                        next = domUtils.createElement(this.document, 'p', {\n                            innerHTML: browser.ie ? domUtils.fillChar : '<br/>'\n                        });\n                        table.parentNode.insertBefore(next, table);\n                    }\n                    domUtils.remove(table);\n                    rng = this.selection.getRange();\n                    if (next.nodeType == 3) {\n                        rng.setStartBefore(next);\n                    } else {\n                        rng.setStart(next, 0);\n                    }\n                    rng.setCursor(false, true);\n                    this.fireEvent('tablehasdeleted');\n                }\n            }\n        };\n        UE.commands['cellalign'] = {\n            queryCommandState: function () {\n                return getSelectedArr(this).length ? 0 : -1;\n            },\n            execCommand: function (cmd, align) {\n                var selectedTds = getSelectedArr(this);\n                if (selectedTds.length) {\n                    for (var i = 0, ci; (ci = selectedTds[i++]); ) {\n                        ci.setAttribute('align', align);\n                    }\n                }\n            }\n        };\n        UE.commands['cellvalign'] = {\n            queryCommandState: function () {\n                return getSelectedArr(this).length ? 0 : -1;\n            },\n            execCommand: function (cmd, valign) {\n                var selectedTds = getSelectedArr(this);\n                if (selectedTds.length) {\n                    for (var i = 0, ci; (ci = selectedTds[i++]); ) {\n                        ci.setAttribute('vAlign', valign);\n                    }\n                }\n            }\n        };\n        UE.commands['insertcaption'] = {\n            queryCommandState: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    return table.getElementsByTagName('caption').length == 0 ? 1 : -1;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var caption = this.document.createElement('caption');\n                    caption.innerHTML = browser.ie ? domUtils.fillChar : '<br/>';\n                    table.insertBefore(caption, table.firstChild);\n                    var range = this.selection.getRange();\n                    range.setStart(caption, 0).setCursor();\n                }\n            }\n        };\n        UE.commands['deletecaption'] = {\n            queryCommandState: function () {\n                var rng = this.selection.getRange(),\n                    table = domUtils.findParentByTagName(rng.startContainer, 'table');\n                if (table) {\n                    return table.getElementsByTagName('caption').length == 0 ? -1 : 1;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    table = domUtils.findParentByTagName(rng.startContainer, 'table');\n                if (table) {\n                    domUtils.remove(table.getElementsByTagName('caption')[0]);\n                    var range = this.selection.getRange();\n                    range.setStart(table.rows[0].cells[0], 0).setCursor();\n                }\n            }\n        };\n        UE.commands['inserttitle'] = {\n            queryCommandState: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var firstRow = table.rows[0];\n                    return firstRow.cells[firstRow.cells.length - 1].tagName.toLowerCase() != 'th' ? 0 : -1;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    getUETable(table).insertRow(0, 'th');\n                }\n                var th = table.getElementsByTagName('th')[0];\n                this.selection.getRange().setStart(th, 0).setCursor(false, true);\n            }\n        };\n        UE.commands['deletetitle'] = {\n            queryCommandState: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var firstRow = table.rows[0];\n                    return firstRow.cells[firstRow.cells.length - 1].tagName.toLowerCase() == 'th' ? 0 : -1;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    domUtils.remove(table.rows[0]);\n                }\n                var td = table.getElementsByTagName('td')[0];\n                this.selection.getRange().setStart(td, 0).setCursor(false, true);\n            }\n        };\n        UE.commands['inserttitlecol'] = {\n            queryCommandState: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var lastRow = table.rows[table.rows.length - 1];\n                    return lastRow.getElementsByTagName('th').length ? -1 : 0;\n                }\n                return -1;\n            },\n            execCommand: function (cmd) {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    getUETable(table).insertCol(0, 'th');\n                }\n                resetTdWidth(table, this);\n                var th = table.getElementsByTagName('th')[0];\n                this.selection.getRange().setStart(th, 0).setCursor(false, true);\n            }\n        };\n        UE.commands['deletetitlecol'] = {\n            queryCommandState: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    var lastRow = table.rows[table.rows.length - 1];\n                    return lastRow.getElementsByTagName('th').length ? 0 : -1;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                if (table) {\n                    for (var i = 0; i < table.rows.length; i++) {\n                        domUtils.remove(table.rows[i].children[0]);\n                    }\n                }\n                resetTdWidth(table, this);\n                var td = table.getElementsByTagName('td')[0];\n                this.selection.getRange().setStart(td, 0).setCursor(false, true);\n            }\n        };\n\n        UE.commands['mergeright'] = {\n            queryCommandState: function (cmd) {\n                var tableItems = getTableItemsByRange(this),\n                    table = tableItems.table,\n                    cell = tableItems.cell;\n\n                if (!table || !cell) return -1;\n                var ut = getUETable(table);\n                if (ut.selectedTds.length) return -1;\n\n                var cellInfo = ut.getCellInfo(cell),\n                    rightColIndex = cellInfo.colIndex + cellInfo.colSpan;\n                if (rightColIndex >= ut.colsNum) return -1; // 如果处于最右边则不能向右合并\n\n                var rightCellInfo = ut.indexTable[cellInfo.rowIndex][rightColIndex],\n                    rightCell = table.rows[rightCellInfo.rowIndex].cells[rightCellInfo.cellIndex];\n                if (!rightCell || cell.tagName != rightCell.tagName) return -1; // TH和TD不能相互合并\n\n                // 当且仅当两个Cell的开始列号和结束列号一致时能进行合并\n                return rightCellInfo.rowIndex == cellInfo.rowIndex && rightCellInfo.rowSpan == cellInfo.rowSpan\n                    ? 0\n                    : -1;\n            },\n            execCommand: function (cmd) {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell);\n                ut.mergeRight(cell);\n                rng.moveToBookmark(bk).select();\n            }\n        };\n        UE.commands['mergedown'] = {\n            queryCommandState: function (cmd) {\n                var tableItems = getTableItemsByRange(this),\n                    table = tableItems.table,\n                    cell = tableItems.cell;\n\n                if (!table || !cell) return -1;\n                var ut = getUETable(table);\n                if (ut.selectedTds.length) return -1;\n\n                var cellInfo = ut.getCellInfo(cell),\n                    downRowIndex = cellInfo.rowIndex + cellInfo.rowSpan;\n                if (downRowIndex >= ut.rowsNum) return -1; // 如果处于最下边则不能向下合并\n\n                var downCellInfo = ut.indexTable[downRowIndex][cellInfo.colIndex],\n                    downCell = table.rows[downCellInfo.rowIndex].cells[downCellInfo.cellIndex];\n                if (!downCell || cell.tagName != downCell.tagName) return -1; // TH和TD不能相互合并\n\n                // 当且仅当两个Cell的开始列号和结束列号一致时能进行合并\n                return downCellInfo.colIndex == cellInfo.colIndex && downCellInfo.colSpan == cellInfo.colSpan ? 0 : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell);\n                ut.mergeDown(cell);\n                rng.moveToBookmark(bk).select();\n            }\n        };\n        UE.commands['mergecells'] = {\n            queryCommandState: function () {\n                return getUETableBySelected(this) ? 0 : -1;\n            },\n            execCommand: function () {\n                var ut = getUETableBySelected(this);\n                if (ut && ut.selectedTds.length) {\n                    var cell = ut.selectedTds[0];\n                    ut.mergeRange();\n                    var rng = this.selection.getRange();\n                    if (domUtils.isEmptyBlock(cell)) {\n                        rng.setStart(cell, 0).collapse(true);\n                    } else {\n                        rng.selectNodeContents(cell);\n                    }\n                    rng.select();\n                }\n            }\n        };\n        UE.commands['insertrow'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                return cell &&\n                    (cell.tagName == 'TD' || (cell.tagName == 'TH' && tableItems.tr !== tableItems.table.rows[0])) &&\n                    getUETable(tableItems.table).rowsNum < this.options.maxRowNum\n                    ? 0\n                    : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell,\n                    table = tableItems.table,\n                    ut = getUETable(table),\n                    cellInfo = ut.getCellInfo(cell);\n                //ut.insertRow(!ut.selectedTds.length ? cellInfo.rowIndex:ut.cellsRange.beginRowIndex,'');\n                if (!ut.selectedTds.length) {\n                    ut.insertRow(cellInfo.rowIndex, cell);\n                } else {\n                    var range = ut.cellsRange;\n                    for (var i = 0, len = range.endRowIndex - range.beginRowIndex + 1; i < len; i++) {\n                        ut.insertRow(range.beginRowIndex, cell);\n                    }\n                }\n                rng.moveToBookmark(bk).select();\n                if (table.getAttribute('interlaced') === 'enabled') this.fireEvent('interlacetable', table);\n            }\n        };\n        //后插入行\n        UE.commands['insertrownext'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                return cell && cell.tagName == 'TD' && getUETable(tableItems.table).rowsNum < this.options.maxRowNum\n                    ? 0\n                    : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell,\n                    table = tableItems.table,\n                    ut = getUETable(table),\n                    cellInfo = ut.getCellInfo(cell);\n                //ut.insertRow(!ut.selectedTds.length? cellInfo.rowIndex + cellInfo.rowSpan : ut.cellsRange.endRowIndex + 1,'');\n                if (!ut.selectedTds.length) {\n                    ut.insertRow(cellInfo.rowIndex + cellInfo.rowSpan, cell);\n                } else {\n                    var range = ut.cellsRange;\n                    for (var i = 0, len = range.endRowIndex - range.beginRowIndex + 1; i < len; i++) {\n                        ut.insertRow(range.endRowIndex + 1, cell);\n                    }\n                }\n                rng.moveToBookmark(bk).select();\n                if (table.getAttribute('interlaced') === 'enabled') this.fireEvent('interlacetable', table);\n            }\n        };\n        UE.commands['deleterow'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this);\n                return tableItems.cell ? 0 : -1;\n            },\n            execCommand: function () {\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell),\n                    cellsRange = ut.cellsRange,\n                    cellInfo = ut.getCellInfo(cell),\n                    preCell = ut.getVSideCell(cell),\n                    nextCell = ut.getVSideCell(cell, true),\n                    rng = this.selection.getRange();\n                if (utils.isEmptyObject(cellsRange)) {\n                    ut.deleteRow(cellInfo.rowIndex);\n                } else {\n                    for (var i = cellsRange.beginRowIndex; i < cellsRange.endRowIndex + 1; i++) {\n                        ut.deleteRow(cellsRange.beginRowIndex);\n                    }\n                }\n                var table = ut.table;\n                if (!table.getElementsByTagName('td').length) {\n                    var nextSibling = table.nextSibling;\n                    domUtils.remove(table);\n                    if (nextSibling) {\n                        rng.setStart(nextSibling, 0).setCursor(false, true);\n                    }\n                } else {\n                    if (\n                        cellInfo.rowSpan == 1 ||\n                        cellInfo.rowSpan == cellsRange.endRowIndex - cellsRange.beginRowIndex + 1\n                    ) {\n                        if (nextCell || preCell) rng.selectNodeContents(nextCell || preCell).setCursor(false, true);\n                    } else {\n                        var newCell = ut.getCell(\n                            cellInfo.rowIndex,\n                            ut.indexTable[cellInfo.rowIndex][cellInfo.colIndex].cellIndex\n                        );\n                        if (newCell) rng.selectNodeContents(newCell).setCursor(false, true);\n                    }\n                }\n                if (table.getAttribute('interlaced') === 'enabled') this.fireEvent('interlacetable', table);\n            }\n        };\n        UE.commands['insertcol'] = {\n            queryCommandState: function (cmd) {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                return cell &&\n                    (cell.tagName == 'TD' || (cell.tagName == 'TH' && cell !== tableItems.tr.cells[0])) &&\n                    getUETable(tableItems.table).colsNum < this.options.maxColNum\n                    ? 0\n                    : -1;\n            },\n            execCommand: function (cmd) {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                if (this.queryCommandState(cmd) == -1) return;\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell),\n                    cellInfo = ut.getCellInfo(cell);\n\n                //ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex:ut.cellsRange.beginColIndex);\n                if (!ut.selectedTds.length) {\n                    ut.insertCol(cellInfo.colIndex, cell);\n                } else {\n                    var range = ut.cellsRange;\n                    for (var i = 0, len = range.endColIndex - range.beginColIndex + 1; i < len; i++) {\n                        ut.insertCol(range.beginColIndex, cell);\n                    }\n                }\n                rng.moveToBookmark(bk).select(true);\n            }\n        };\n        UE.commands['insertcolnext'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                return cell && getUETable(tableItems.table).colsNum < this.options.maxColNum ? 0 : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell),\n                    cellInfo = ut.getCellInfo(cell);\n                //ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex + cellInfo.colSpan:ut.cellsRange.endColIndex +1);\n                if (!ut.selectedTds.length) {\n                    ut.insertCol(cellInfo.colIndex + cellInfo.colSpan, cell);\n                } else {\n                    var range = ut.cellsRange;\n                    for (var i = 0, len = range.endColIndex - range.beginColIndex + 1; i < len; i++) {\n                        ut.insertCol(range.endColIndex + 1, cell);\n                    }\n                }\n                rng.moveToBookmark(bk).select();\n            }\n        };\n\n        UE.commands['deletecol'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this);\n                return tableItems.cell ? 0 : -1;\n            },\n            execCommand: function () {\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell),\n                    range = ut.cellsRange,\n                    cellInfo = ut.getCellInfo(cell),\n                    preCell = ut.getHSideCell(cell),\n                    nextCell = ut.getHSideCell(cell, true);\n                if (utils.isEmptyObject(range)) {\n                    ut.deleteCol(cellInfo.colIndex);\n                } else {\n                    for (var i = range.beginColIndex; i < range.endColIndex + 1; i++) {\n                        ut.deleteCol(range.beginColIndex);\n                    }\n                }\n                var table = ut.table,\n                    rng = this.selection.getRange();\n\n                if (!table.getElementsByTagName('td').length) {\n                    var nextSibling = table.nextSibling;\n                    domUtils.remove(table);\n                    if (nextSibling) {\n                        rng.setStart(nextSibling, 0).setCursor(false, true);\n                    }\n                } else {\n                    if (domUtils.inDoc(cell, this.document)) {\n                        rng.setStart(cell, 0).setCursor(false, true);\n                    } else {\n                        if (nextCell && domUtils.inDoc(nextCell, this.document)) {\n                            rng.selectNodeContents(nextCell).setCursor(false, true);\n                        } else {\n                            if (preCell && domUtils.inDoc(preCell, this.document)) {\n                                rng.selectNodeContents(preCell).setCursor(true, true);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        UE.commands['splittocells'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                if (!cell) return -1;\n                var ut = getUETable(tableItems.table);\n                if (ut.selectedTds.length > 0) return -1;\n                return cell && (cell.colSpan > 1 || cell.rowSpan > 1) ? 0 : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell);\n                ut.splitToCells(cell);\n                rng.moveToBookmark(bk).select();\n            }\n        };\n        UE.commands['splittorows'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                if (!cell) return -1;\n                var ut = getUETable(tableItems.table);\n                if (ut.selectedTds.length > 0) return -1;\n                return cell && cell.rowSpan > 1 ? 0 : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell);\n                ut.splitToRows(cell);\n                rng.moveToBookmark(bk).select();\n            }\n        };\n        UE.commands['splittocols'] = {\n            queryCommandState: function () {\n                var tableItems = getTableItemsByRange(this),\n                    cell = tableItems.cell;\n                if (!cell) return -1;\n                var ut = getUETable(tableItems.table);\n                if (ut.selectedTds.length > 0) return -1;\n                return cell && cell.colSpan > 1 ? 0 : -1;\n            },\n            execCommand: function () {\n                var rng = this.selection.getRange(),\n                    bk = rng.createBookmark(true);\n                var cell = getTableItemsByRange(this).cell,\n                    ut = getUETable(cell);\n                ut.splitToCols(cell);\n                rng.moveToBookmark(bk).select();\n            }\n        };\n\n        UE.commands['adaptbytext'] = UE.commands['adaptbywindow'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).table ? 0 : -1;\n            },\n            execCommand: function (cmd) {\n                var tableItems = getTableItemsByRange(this),\n                    table = tableItems.table;\n                if (table) {\n                    if (cmd == 'adaptbywindow') {\n                        resetTdWidth(table, this);\n                    } else {\n                        var cells = domUtils.getElementsByTagName(table, 'td th');\n                        utils.each(cells, function (cell) {\n                            cell.removeAttribute('width');\n                        });\n                        table.removeAttribute('width');\n                    }\n                }\n            }\n        };\n\n        //平均分配各列\n        UE.commands['averagedistributecol'] = {\n            queryCommandState: function () {\n                var ut = getUETableBySelected(this);\n                if (!ut) return -1;\n                return ut.isFullRow() || ut.isFullCol() ? 0 : -1;\n            },\n            execCommand: function (cmd) {\n                var me = this,\n                    ut = getUETableBySelected(me);\n\n                function getAverageWidth() {\n                    var tb = ut.table,\n                        averageWidth,\n                        sumWidth = 0,\n                        colsNum = 0,\n                        tbAttr = getDefaultValue(me, tb);\n\n                    if (ut.isFullRow()) {\n                        sumWidth = tb.offsetWidth;\n                        colsNum = ut.colsNum;\n                    } else {\n                        var begin = ut.cellsRange.beginColIndex,\n                            end = ut.cellsRange.endColIndex,\n                            node;\n                        for (var i = begin; i <= end; ) {\n                            node = ut.selectedTds[i];\n                            sumWidth += node.offsetWidth;\n                            i += node.colSpan;\n                            colsNum += 1;\n                        }\n                    }\n                    averageWidth = Math.ceil(sumWidth / colsNum) - tbAttr.tdBorder * 2 - tbAttr.tdPadding * 2;\n                    return averageWidth;\n                }\n\n                function setAverageWidth(averageWidth) {\n                    utils.each(domUtils.getElementsByTagName(ut.table, 'th'), function (node) {\n                        node.setAttribute('width', '');\n                    });\n                    var cells = ut.isFullRow() ? domUtils.getElementsByTagName(ut.table, 'td') : ut.selectedTds;\n\n                    utils.each(cells, function (node) {\n                        if (node.colSpan == 1) {\n                            node.setAttribute('width', averageWidth);\n                        }\n                    });\n                }\n\n                if (ut && ut.selectedTds.length) {\n                    setAverageWidth(getAverageWidth());\n                }\n            }\n        };\n        //平均分配各行\n        UE.commands['averagedistributerow'] = {\n            queryCommandState: function () {\n                var ut = getUETableBySelected(this);\n                if (!ut) return -1;\n                if (ut.selectedTds && /th/gi.test(ut.selectedTds[0].tagName)) return -1;\n                return ut.isFullRow() || ut.isFullCol() ? 0 : -1;\n            },\n            execCommand: function (cmd) {\n                var me = this,\n                    ut = getUETableBySelected(me);\n\n                function getAverageHeight() {\n                    var averageHeight,\n                        rowNum,\n                        sumHeight = 0,\n                        tb = ut.table,\n                        tbAttr = getDefaultValue(me, tb),\n                        tdpadding = parseInt(\n                            domUtils.getComputedStyle(tb.getElementsByTagName('td')[0], 'padding-top')\n                        );\n\n                    if (ut.isFullCol()) {\n                        var captionArr = domUtils.getElementsByTagName(tb, 'caption'),\n                            thArr = domUtils.getElementsByTagName(tb, 'th'),\n                            captionHeight,\n                            thHeight;\n\n                        if (captionArr.length > 0) {\n                            captionHeight = captionArr[0].offsetHeight;\n                        }\n                        if (thArr.length > 0) {\n                            thHeight = thArr[0].offsetHeight;\n                        }\n\n                        sumHeight = tb.offsetHeight - (captionHeight || 0) - (thHeight || 0);\n                        rowNum = thArr.length == 0 ? ut.rowsNum : ut.rowsNum - 1;\n                    } else {\n                        var begin = ut.cellsRange.beginRowIndex,\n                            end = ut.cellsRange.endRowIndex,\n                            count = 0,\n                            trs = domUtils.getElementsByTagName(tb, 'tr');\n                        for (var i = begin; i <= end; i++) {\n                            sumHeight += trs[i].offsetHeight;\n                            count += 1;\n                        }\n                        rowNum = count;\n                    }\n                    //ie8下是混杂模式\n                    if (browser.ie && browser.version < 9) {\n                        averageHeight = Math.ceil(sumHeight / rowNum);\n                    } else {\n                        averageHeight = Math.ceil(sumHeight / rowNum) - tbAttr.tdBorder * 2 - tdpadding * 2;\n                    }\n                    return averageHeight;\n                }\n\n                function setAverageHeight(averageHeight) {\n                    var cells = ut.isFullCol() ? domUtils.getElementsByTagName(ut.table, 'td') : ut.selectedTds;\n                    utils.each(cells, function (node) {\n                        if (node.rowSpan == 1) {\n                            node.setAttribute('height', averageHeight);\n                        }\n                    });\n                }\n\n                if (ut && ut.selectedTds.length) {\n                    setAverageHeight(getAverageHeight());\n                }\n            }\n        };\n\n        //单元格对齐方式\n        UE.commands['cellalignment'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).table ? 0 : -1;\n            },\n            execCommand: function (cmd, data) {\n                var me = this,\n                    ut = getUETableBySelected(me);\n\n                if (!ut) {\n                    var start = me.selection.getStart(),\n                        cell = start && domUtils.findParentByTagName(start, ['td', 'th', 'caption'], true);\n                    if (!/caption/gi.test(cell.tagName)) {\n                        domUtils.setAttributes(cell, data);\n                    } else {\n                        cell.style.textAlign = data.align;\n                        cell.style.verticalAlign = data.vAlign;\n                    }\n                    me.selection.getRange().setCursor(true);\n                } else {\n                    utils.each(ut.selectedTds, function (cell) {\n                        domUtils.setAttributes(cell, data);\n                    });\n                }\n            },\n            /**\n             * 查询当前点击的单元格的对齐状态， 如果当前已经选择了多个单元格， 则会返回所有单元格经过统一协调过后的状态\n             * @see UE.UETable.getTableCellAlignState\n             */\n            queryCommandValue: function (cmd) {\n                var activeMenuCell = getTableItemsByRange(this).cell;\n\n                if (!activeMenuCell) {\n                    activeMenuCell = getSelectedArr(this)[0];\n                }\n\n                if (!activeMenuCell) {\n                    return null;\n                } else {\n                    //获取同时选中的其他单元格\n                    var cells = UE.UETable.getUETable(activeMenuCell).selectedTds;\n\n                    !cells.length && (cells = activeMenuCell);\n\n                    return UE.UETable.getTableCellAlignState(cells);\n                }\n            }\n        };\n        //表格对齐方式\n        UE.commands['tablealignment'] = {\n            queryCommandState: function () {\n                if (browser.ie && browser.version < 8) {\n                    return -1;\n                }\n                return getTableItemsByRange(this).table ? 0 : -1;\n            },\n            execCommand: function (cmd, value) {\n                var me = this,\n                    start = me.selection.getStart(),\n                    table = start && domUtils.findParentByTagName(start, ['table'], true);\n\n                if (table) {\n                    table.setAttribute('align', value);\n                }\n            }\n        };\n\n        //表格属性\n        UE.commands['edittable'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).table ? 0 : -1;\n            },\n            execCommand: function (cmd, color) {\n                var rng = this.selection.getRange(),\n                    table = domUtils.findParentByTagName(rng.startContainer, 'table');\n                if (table) {\n                    var arr = domUtils\n                        .getElementsByTagName(table, 'td')\n                        .concat(\n                            domUtils.getElementsByTagName(table, 'th'),\n                            domUtils.getElementsByTagName(table, 'caption')\n                        );\n                    utils.each(arr, function (node) {\n                        node.style.borderColor = color;\n                    });\n                }\n            }\n        };\n        //单元格属性\n        UE.commands['edittd'] = {\n            queryCommandState: function () {\n                return getTableItemsByRange(this).table ? 0 : -1;\n            },\n            execCommand: function (cmd, bkColor) {\n                var me = this,\n                    ut = getUETableBySelected(me);\n\n                if (!ut) {\n                    var start = me.selection.getStart(),\n                        cell = start && domUtils.findParentByTagName(start, ['td', 'th', 'caption'], true);\n                    if (cell) {\n                        cell.style.backgroundColor = bkColor;\n                    }\n                } else {\n                    utils.each(ut.selectedTds, function (cell) {\n                        cell.style.backgroundColor = bkColor;\n                    });\n                }\n            }\n        };\n\n        UE.commands['settablebackground'] = {\n            queryCommandState: function () {\n                return getSelectedArr(this).length > 1 ? 0 : -1;\n            },\n            execCommand: function (cmd, value) {\n                var cells, ut;\n                cells = getSelectedArr(this);\n                ut = getUETable(cells[0]);\n                ut.setBackground(cells, value);\n            }\n        };\n\n        UE.commands['cleartablebackground'] = {\n            queryCommandState: function () {\n                var cells = getSelectedArr(this);\n                if (!cells.length) return -1;\n                for (var i = 0, cell; (cell = cells[i++]); ) {\n                    if (cell.style.backgroundColor !== '') return 0;\n                }\n                return -1;\n            },\n            execCommand: function () {\n                var cells = getSelectedArr(this),\n                    ut = getUETable(cells[0]);\n                ut.removeBackground(cells);\n            }\n        };\n\n        UE.commands['interlacetable'] = UE.commands['uninterlacetable'] = {\n            queryCommandState: function (cmd) {\n                var table = getTableItemsByRange(this).table;\n                if (!table) return -1;\n                var interlaced = table.getAttribute('interlaced');\n                if (cmd == 'interlacetable') {\n                    //TODO 待定\n                    //是否需要待定，如果设置，则命令只能单次执行成功，但反射具备toggle效果；否则可以覆盖前次命令，但反射将不存在toggle效果\n                    return interlaced === 'enabled' ? -1 : 0;\n                } else {\n                    return !interlaced || interlaced === 'disabled' ? -1 : 0;\n                }\n            },\n            execCommand: function (cmd, classList) {\n                var table = getTableItemsByRange(this).table;\n                if (cmd == 'interlacetable') {\n                    table.setAttribute('interlaced', 'enabled');\n                    this.fireEvent('interlacetable', table, classList);\n                } else {\n                    table.setAttribute('interlaced', 'disabled');\n                    this.fireEvent('uninterlacetable', table);\n                }\n            }\n        };\n        UE.commands['setbordervisible'] = {\n            queryCommandState: function (cmd) {\n                var table = getTableItemsByRange(this).table;\n                if (!table) return -1;\n                return 0;\n            },\n            execCommand: function () {\n                var table = getTableItemsByRange(this).table;\n                utils.each(domUtils.getElementsByTagName(table, 'td'), function (td) {\n                    td.style.borderWidth = '1px';\n                    td.style.borderStyle = 'solid';\n                });\n            }\n        };\n        function resetTdWidth(table, editor) {\n            var tds = domUtils.getElementsByTagName(table, 'td th');\n            utils.each(tds, function (td) {\n                td.removeAttribute('width');\n            });\n            table.setAttribute('width', getTableWidth(editor, true, getDefaultValue(editor, table)));\n            var tdsWidths = [];\n            setTimeout(function () {\n                utils.each(tds, function (td) {\n                    td.colSpan == 1 && tdsWidths.push(td.offsetWidth);\n                });\n                utils.each(tds, function (td, i) {\n                    td.colSpan == 1 && td.setAttribute('width', tdsWidths[i] + '');\n                });\n            }, 0);\n        }\n\n        function getTableWidth(editor, needIEHack, defaultValue) {\n            var body = editor.body;\n            return (\n                body.offsetWidth -\n                (needIEHack ? parseInt(domUtils.getComputedStyle(body, 'margin-left'), 10) * 2 : 0) -\n                defaultValue.tableBorder * 2 -\n                (editor.options.offsetWidth || 0)\n            );\n        }\n\n        function getSelectedArr(editor) {\n            var cell = getTableItemsByRange(editor).cell;\n            if (cell) {\n                var ut = getUETable(cell);\n                return ut.selectedTds.length ? ut.selectedTds : [cell];\n            } else {\n                return [];\n            }\n        }\n    })();\n\n    // plugins/table.action.js\n    /**\n     * Created with JetBrains PhpStorm.\n     * User: taoqili\n     * Date: 12-10-12\n     * Time: 上午10:05\n     * To change this template use File | Settings | File Templates.\n     */\n    UE.plugins['table'] = function () {\n        var me = this,\n            tabTimer = null,\n            //拖动计时器\n            tableDragTimer = null,\n            //双击计时器\n            tableResizeTimer = null,\n            //单元格最小宽度\n            cellMinWidth = 5,\n            isInResizeBuffer = false,\n            //单元格边框大小\n            cellBorderWidth = 5,\n            //鼠标偏移距离\n            offsetOfTableCell = 10,\n            //记录在有限时间内的点击状态， 共有3个取值， 0, 1, 2。 0代表未初始化， 1代表单击了1次，2代表2次\n            singleClickState = 0,\n            userActionStatus = null,\n            //双击允许的时间范围\n            dblclickTime = 360,\n            UT = UE.UETable,\n            getUETable = function (tdOrTable) {\n                return UT.getUETable(tdOrTable);\n            },\n            getUETableBySelected = function (editor) {\n                return UT.getUETableBySelected(editor);\n            },\n            getDefaultValue = function (editor, table) {\n                return UT.getDefaultValue(editor, table);\n            },\n            removeSelectedClass = function (cells) {\n                return UT.removeSelectedClass(cells);\n            };\n\n        function showError(e) {\n            //        throw e;\n        }\n        me.ready(function () {\n            var me = this;\n            var orgGetText = me.selection.getText;\n            me.selection.getText = function () {\n                var table = getUETableBySelected(me);\n                if (table) {\n                    var str = '';\n                    utils.each(table.selectedTds, function (td) {\n                        str += td[browser.ie ? 'innerText' : 'textContent'];\n                    });\n                    return str;\n                } else {\n                    return orgGetText.call(me.selection);\n                }\n            };\n        });\n\n        //处理拖动及框选相关方法\n        var startTd = null, //鼠标按下时的锚点td\n            currentTd = null, //当前鼠标经过时的td\n            onDrag = '', //指示当前拖动状态，其值可为\"\",\"h\",\"v\" ,分别表示未拖动状态，横向拖动状态，纵向拖动状态，用于鼠标移动过程中的判断\n            onBorder = false, //检测鼠标按下时是否处在单元格边缘位置\n            dragButton = null,\n            dragOver = false,\n            dragLine = null, //模拟的拖动线\n            dragTd = null; //发生拖动的目标td\n\n        var mousedown = false,\n            //todo 判断混乱模式\n            needIEHack = true;\n\n        me.setOpt({\n            maxColNum: 20,\n            maxRowNum: 100,\n            defaultCols: 5,\n            defaultRows: 5,\n            tdvalign: 'top',\n            cursorpath: me.options.UEDITOR_HOME_URL + 'themes/default/images/cursor_',\n            tableDragable: false,\n            classList: ['ue-table-interlace-color-single', 'ue-table-interlace-color-double']\n        });\n        me.getUETable = getUETable;\n        var commands = {\n            deletetable: 1,\n            inserttable: 1,\n            cellvalign: 1,\n            insertcaption: 1,\n            deletecaption: 1,\n            inserttitle: 1,\n            deletetitle: 1,\n            mergeright: 1,\n            mergedown: 1,\n            mergecells: 1,\n            insertrow: 1,\n            insertrownext: 1,\n            deleterow: 1,\n            insertcol: 1,\n            insertcolnext: 1,\n            deletecol: 1,\n            splittocells: 1,\n            splittorows: 1,\n            splittocols: 1,\n            adaptbytext: 1,\n            adaptbywindow: 1,\n            adaptbycustomer: 1,\n            insertparagraph: 1,\n            insertparagraphbeforetable: 1,\n            averagedistributecol: 1,\n            averagedistributerow: 1\n        };\n        me.ready(function () {\n            utils.cssRule(\n                'table',\n                //选中的td上的样式\n                '.selectTdClass{background-color:#edf5fa !important}' +\n                    'table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}' +\n                    //插入的表格的默认样式\n                    'table{margin-bottom:10px;border-collapse:collapse;display:table;}' +\n                    'td,th{padding: 5px 10px;border: 1px solid #DDD;}' +\n                    'caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}' +\n                    'th{border-top:1px solid #BBB;background-color:#F7F7F7;}' +\n                    'table tr.firstRow th{border-top-width:2px;}' +\n                    '.ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }' +\n                    'td p{margin:0;padding:0;}',\n                me.document\n            );\n\n            var tableCopyList, isFullCol, isFullRow;\n            //注册del/backspace事件\n            me.addListener('keydown', function (cmd, evt) {\n                var me = this;\n                var keyCode = evt.keyCode || evt.which;\n\n                if (keyCode == 8) {\n                    var ut = getUETableBySelected(me);\n                    if (ut && ut.selectedTds.length) {\n                        if (ut.isFullCol()) {\n                            me.execCommand('deletecol');\n                        } else if (ut.isFullRow()) {\n                            me.execCommand('deleterow');\n                        } else {\n                            me.fireEvent('delcells');\n                        }\n                        domUtils.preventDefault(evt);\n                    }\n\n                    var caption = domUtils.findParentByTagName(me.selection.getStart(), 'caption', true),\n                        range = me.selection.getRange();\n                    if (range.collapsed && caption && isEmptyBlock(caption)) {\n                        me.fireEvent('saveScene');\n                        var table = caption.parentNode;\n                        domUtils.remove(caption);\n                        if (table) {\n                            range.setStart(table.rows[0].cells[0], 0).setCursor(false, true);\n                        }\n                        me.fireEvent('saveScene');\n                    }\n                }\n\n                if (keyCode == 46) {\n                    ut = getUETableBySelected(me);\n                    if (ut) {\n                        me.fireEvent('saveScene');\n                        for (var i = 0, ci; (ci = ut.selectedTds[i++]); ) {\n                            domUtils.fillNode(me.document, ci);\n                        }\n                        me.fireEvent('saveScene');\n                        domUtils.preventDefault(evt);\n                    }\n                }\n                if (keyCode == 13) {\n                    var rng = me.selection.getRange(),\n                        caption = domUtils.findParentByTagName(rng.startContainer, 'caption', true);\n                    if (caption) {\n                        var table = domUtils.findParentByTagName(caption, 'table');\n                        if (!rng.collapsed) {\n                            rng.deleteContents();\n                            me.fireEvent('saveScene');\n                        } else {\n                            if (caption) {\n                                rng.setStart(table.rows[0].cells[0], 0).setCursor(false, true);\n                            }\n                        }\n                        domUtils.preventDefault(evt);\n                        return;\n                    }\n                    if (rng.collapsed) {\n                        var table = domUtils.findParentByTagName(rng.startContainer, 'table');\n                        if (table) {\n                            var cell = table.rows[0].cells[0],\n                                start = domUtils.findParentByTagName(me.selection.getStart(), ['td', 'th'], true),\n                                preNode = table.previousSibling;\n                            if (\n                                cell === start &&\n                                (!preNode || (preNode.nodeType == 1 && preNode.tagName == 'TABLE')) &&\n                                domUtils.isStartInblock(rng)\n                            ) {\n                                var first = domUtils.findParent(\n                                    me.selection.getStart(),\n                                    function (n) {\n                                        return domUtils.isBlockElm(n);\n                                    },\n                                    true\n                                );\n                                if (first && (/t(h|d)/i.test(first.tagName) || first === start.firstChild)) {\n                                    me.execCommand('insertparagraphbeforetable');\n                                    domUtils.preventDefault(evt);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if ((evt.ctrlKey || evt.metaKey) && evt.keyCode == '67') {\n                    tableCopyList = null;\n                    var ut = getUETableBySelected(me);\n                    if (ut) {\n                        var tds = ut.selectedTds;\n                        isFullCol = ut.isFullCol();\n                        isFullRow = ut.isFullRow();\n                        tableCopyList = [[ut.cloneCell(tds[0], null, true)]];\n                        for (var i = 1, ci; (ci = tds[i]); i++) {\n                            if (ci.parentNode !== tds[i - 1].parentNode) {\n                                tableCopyList.push([ut.cloneCell(ci, null, true)]);\n                            } else {\n                                tableCopyList[tableCopyList.length - 1].push(ut.cloneCell(ci, null, true));\n                            }\n                        }\n                    }\n                }\n            });\n            me.addListener('tablehasdeleted', function () {\n                toggleDraggableState(this, false, '', null);\n                if (dragButton) domUtils.remove(dragButton);\n            });\n\n            me.addListener('beforepaste', function (cmd, html) {\n                var me = this;\n                var rng = me.selection.getRange();\n                if (domUtils.findParentByTagName(rng.startContainer, 'caption', true)) {\n                    var div = me.document.createElement('div');\n                    div.innerHTML = html.html;\n                    //trace:3729\n                    html.html = div[browser.ie9below ? 'innerText' : 'textContent'];\n                    return;\n                }\n                var table = getUETableBySelected(me);\n                if (tableCopyList) {\n                    me.fireEvent('saveScene');\n                    var rng = me.selection.getRange();\n                    var td = domUtils.findParentByTagName(rng.startContainer, ['td', 'th'], true),\n                        tmpNode,\n                        preNode;\n                    if (td) {\n                        var ut = getUETable(td);\n                        if (isFullRow) {\n                            var rowIndex = ut.getCellInfo(td).rowIndex;\n                            if (td.tagName == 'TH') {\n                                rowIndex++;\n                            }\n                            for (var i = 0, ci; (ci = tableCopyList[i++]); ) {\n                                var tr = ut.insertRow(rowIndex++, 'td');\n                                for (var j = 0, cj; (cj = ci[j]); j++) {\n                                    var cell = tr.cells[j];\n                                    if (!cell) {\n                                        cell = tr.insertCell(j);\n                                    }\n                                    cell.innerHTML = cj.innerHTML;\n                                    cj.getAttribute('width') && cell.setAttribute('width', cj.getAttribute('width'));\n                                    cj.getAttribute('vAlign') && cell.setAttribute('vAlign', cj.getAttribute('vAlign'));\n                                    cj.getAttribute('align') && cell.setAttribute('align', cj.getAttribute('align'));\n                                    cj.style.cssText && (cell.style.cssText = cj.style.cssText);\n                                }\n                                for (var j = 0, cj; (cj = tr.cells[j]); j++) {\n                                    if (!ci[j]) break;\n                                    cj.innerHTML = ci[j].innerHTML;\n                                    ci[j].getAttribute('width') &&\n                                        cj.setAttribute('width', ci[j].getAttribute('width'));\n                                    ci[j].getAttribute('vAlign') &&\n                                        cj.setAttribute('vAlign', ci[j].getAttribute('vAlign'));\n                                    ci[j].getAttribute('align') &&\n                                        cj.setAttribute('align', ci[j].getAttribute('align'));\n                                    ci[j].style.cssText && (cj.style.cssText = ci[j].style.cssText);\n                                }\n                            }\n                        } else {\n                            if (isFullCol) {\n                                cellInfo = ut.getCellInfo(td);\n                                var maxColNum = 0;\n                                for (var j = 0, ci = tableCopyList[0], cj; (cj = ci[j++]); ) {\n                                    maxColNum += cj.colSpan || 1;\n                                }\n                                me.__hasEnterExecCommand = true;\n                                for (i = 0; i < maxColNum; i++) {\n                                    me.execCommand('insertcol');\n                                }\n                                me.__hasEnterExecCommand = false;\n                                td = ut.table.rows[0].cells[cellInfo.cellIndex];\n                                if (td.tagName == 'TH') {\n                                    td = ut.table.rows[1].cells[cellInfo.cellIndex];\n                                }\n                            }\n                            for (var i = 0, ci; (ci = tableCopyList[i++]); ) {\n                                tmpNode = td;\n                                for (var j = 0, cj; (cj = ci[j++]); ) {\n                                    if (td) {\n                                        td.innerHTML = cj.innerHTML;\n                                        //todo 定制处理\n                                        cj.getAttribute('width') && td.setAttribute('width', cj.getAttribute('width'));\n                                        cj.getAttribute('vAlign') &&\n                                            td.setAttribute('vAlign', cj.getAttribute('vAlign'));\n                                        cj.getAttribute('align') && td.setAttribute('align', cj.getAttribute('align'));\n                                        cj.style.cssText && (td.style.cssText = cj.style.cssText);\n                                        preNode = td;\n                                        td = td.nextSibling;\n                                    } else {\n                                        var cloneTd = cj.cloneNode(true);\n                                        domUtils.removeAttributes(cloneTd, ['class', 'rowSpan', 'colSpan']);\n\n                                        preNode.parentNode.appendChild(cloneTd);\n                                    }\n                                }\n                                td = ut.getNextCell(tmpNode, true, true);\n                                if (!tableCopyList[i]) break;\n                                if (!td) {\n                                    var cellInfo = ut.getCellInfo(tmpNode);\n                                    ut.table.insertRow(ut.table.rows.length);\n                                    ut.update();\n                                    td = ut.getVSideCell(tmpNode, true);\n                                }\n                            }\n                        }\n                        ut.update();\n                    } else {\n                        table = me.document.createElement('table');\n                        for (var i = 0, ci; (ci = tableCopyList[i++]); ) {\n                            var tr = table.insertRow(table.rows.length);\n                            for (var j = 0, cj; (cj = ci[j++]); ) {\n                                cloneTd = UT.cloneCell(cj, null, true);\n                                domUtils.removeAttributes(cloneTd, ['class']);\n                                tr.appendChild(cloneTd);\n                            }\n                            if (j == 2 && cloneTd.rowSpan > 1) {\n                                cloneTd.rowSpan = 1;\n                            }\n                        }\n\n                        var defaultValue = getDefaultValue(me),\n                            width =\n                                me.body.offsetWidth -\n                                (needIEHack ? parseInt(domUtils.getComputedStyle(me.body, 'margin-left'), 10) * 2 : 0) -\n                                defaultValue.tableBorder * 2 -\n                                (me.options.offsetWidth || 0);\n                        me.execCommand(\n                            'insertHTML',\n                            '<table  ' +\n                                (isFullCol && isFullRow ? 'width=\"' + width + '\"' : '') +\n                                '>' +\n                                table.innerHTML.replace(/>\\s*</g, '><').replace(/\\bth\\b/gi, 'td') +\n                                '</table>'\n                        );\n                    }\n                    me.fireEvent('contentchange');\n                    me.fireEvent('saveScene');\n                    html.html = '';\n                    return true;\n                } else {\n                    var div = me.document.createElement('div'),\n                        tables;\n                    div.innerHTML = html.html;\n                    tables = div.getElementsByTagName('table');\n                    if (domUtils.findParentByTagName(me.selection.getStart(), 'table')) {\n                        utils.each(tables, function (t) {\n                            domUtils.remove(t);\n                        });\n                        if (domUtils.findParentByTagName(me.selection.getStart(), 'caption', true)) {\n                            div.innerHTML = div[browser.ie ? 'innerText' : 'textContent'];\n                        }\n                    } else {\n                        utils.each(tables, function (table) {\n                            removeStyleSize(table, true);\n                            domUtils.removeAttributes(table, ['style', 'border']);\n                            utils.each(domUtils.getElementsByTagName(table, 'td'), function (td) {\n                                if (isEmptyBlock(td)) {\n                                    domUtils.fillNode(me.document, td);\n                                }\n                                removeStyleSize(td, true);\n                                //                            domUtils.removeAttributes(td, ['style'])\n                            });\n                        });\n                    }\n                    html.html = div.innerHTML;\n                }\n            });\n\n            me.addListener('afterpaste', function () {\n                utils.each(domUtils.getElementsByTagName(me.body, 'table'), function (table) {\n                    if (table.offsetWidth > me.body.offsetWidth) {\n                        var defaultValue = getDefaultValue(me, table);\n                        table.style.width =\n                            me.body.offsetWidth -\n                            (needIEHack ? parseInt(domUtils.getComputedStyle(me.body, 'margin-left'), 10) * 2 : 0) -\n                            defaultValue.tableBorder * 2 -\n                            (me.options.offsetWidth || 0) +\n                            'px';\n                    }\n                });\n            });\n            me.addListener('blur', function () {\n                tableCopyList = null;\n            });\n            var timer;\n            me.addListener('keydown', function () {\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    var rng = me.selection.getRange(),\n                        cell = domUtils.findParentByTagName(rng.startContainer, ['th', 'td'], true);\n                    if (cell) {\n                        var table = cell.parentNode.parentNode.parentNode;\n                        if (table.offsetWidth > table.getAttribute('width')) {\n                            cell.style.wordBreak = 'break-all';\n                        }\n                    }\n                }, 100);\n            });\n            me.addListener('selectionchange', function () {\n                toggleDraggableState(me, false, '', null);\n            });\n\n            //内容变化时触发索引更新\n            //todo 可否考虑标记检测，如果不涉及表格的变化就不进行索引重建和更新\n            me.addListener('contentchange', function () {\n                var me = this;\n                //尽可能排除一些不需要更新的状况\n                hideDragLine(me);\n                if (getUETableBySelected(me)) return;\n                var rng = me.selection.getRange();\n                var start = rng.startContainer;\n                start = domUtils.findParentByTagName(start, ['td', 'th'], true);\n                utils.each(domUtils.getElementsByTagName(me.document, 'table'), function (table) {\n                    if (me.fireEvent('excludetable', table) === true) return;\n                    table.ueTable = new UT(table);\n                    //trace:3742\n                    //                utils.each(domUtils.getElementsByTagName(me.document, 'td'), function (td) {\n                    //\n                    //                    if (domUtils.isEmptyBlock(td) && td !== start) {\n                    //                        domUtils.fillNode(me.document, td);\n                    //                        if (browser.ie && browser.version == 6) {\n                    //                            td.innerHTML = '&nbsp;'\n                    //                        }\n                    //                    }\n                    //                });\n                    //                utils.each(domUtils.getElementsByTagName(me.document, 'th'), function (th) {\n                    //                    if (domUtils.isEmptyBlock(th) && th !== start) {\n                    //                        domUtils.fillNode(me.document, th);\n                    //                        if (browser.ie && browser.version == 6) {\n                    //                            th.innerHTML = '&nbsp;'\n                    //                        }\n                    //                    }\n                    //                });\n                    table.onmouseover = function () {\n                        me.fireEvent('tablemouseover', table);\n                    };\n                    table.onmousemove = function () {\n                        me.fireEvent('tablemousemove', table);\n                        me.options.tableDragable && toggleDragButton(true, this, me);\n                        utils.defer(function () {\n                            me.fireEvent('contentchange', 50);\n                        }, true);\n                    };\n                    table.onmouseout = function () {\n                        me.fireEvent('tablemouseout', table);\n                        toggleDraggableState(me, false, '', null);\n                        hideDragLine(me);\n                    };\n                    table.onclick = function (evt) {\n                        evt = me.window.event || evt;\n                        var target = getParentTdOrTh(evt.target || evt.srcElement);\n                        if (!target) return;\n                        var ut = getUETable(target),\n                            table = ut.table,\n                            cellInfo = ut.getCellInfo(target),\n                            cellsRange,\n                            rng = me.selection.getRange();\n                        //                    if (\"topLeft\" == inPosition(table, mouseCoords(evt))) {\n                        //                        cellsRange = ut.getCellsRange(ut.table.rows[0].cells[0], ut.getLastCell());\n                        //                        ut.setSelected(cellsRange);\n                        //                        return;\n                        //                    }\n                        //                    if (\"bottomRight\" == inPosition(table, mouseCoords(evt))) {\n                        //\n                        //                        return;\n                        //                    }\n                        if (inTableSide(table, target, evt, true)) {\n                            var endTdCol = ut.getCell(\n                                ut.indexTable[ut.rowsNum - 1][cellInfo.colIndex].rowIndex,\n                                ut.indexTable[ut.rowsNum - 1][cellInfo.colIndex].cellIndex\n                            );\n                            if (evt.shiftKey && ut.selectedTds.length) {\n                                if (ut.selectedTds[0] !== endTdCol) {\n                                    cellsRange = ut.getCellsRange(ut.selectedTds[0], endTdCol);\n                                    ut.setSelected(cellsRange);\n                                } else {\n                                    rng && rng.selectNodeContents(endTdCol).select();\n                                }\n                            } else {\n                                if (target !== endTdCol) {\n                                    cellsRange = ut.getCellsRange(target, endTdCol);\n                                    ut.setSelected(cellsRange);\n                                } else {\n                                    rng && rng.selectNodeContents(endTdCol).select();\n                                }\n                            }\n                            return;\n                        }\n                        if (inTableSide(table, target, evt)) {\n                            var endTdRow = ut.getCell(\n                                ut.indexTable[cellInfo.rowIndex][ut.colsNum - 1].rowIndex,\n                                ut.indexTable[cellInfo.rowIndex][ut.colsNum - 1].cellIndex\n                            );\n                            if (evt.shiftKey && ut.selectedTds.length) {\n                                if (ut.selectedTds[0] !== endTdRow) {\n                                    cellsRange = ut.getCellsRange(ut.selectedTds[0], endTdRow);\n                                    ut.setSelected(cellsRange);\n                                } else {\n                                    rng && rng.selectNodeContents(endTdRow).select();\n                                }\n                            } else {\n                                if (target !== endTdRow) {\n                                    cellsRange = ut.getCellsRange(target, endTdRow);\n                                    ut.setSelected(cellsRange);\n                                } else {\n                                    rng && rng.selectNodeContents(endTdRow).select();\n                                }\n                            }\n                        }\n                    };\n                });\n\n                switchBorderColor(me, true);\n            });\n\n            domUtils.on(me.document, 'mousemove', mouseMoveEvent);\n\n            domUtils.on(me.document, 'mouseout', function (evt) {\n                var target = evt.target || evt.srcElement;\n                if (target.tagName == 'TABLE') {\n                    toggleDraggableState(me, false, '', null);\n                }\n            });\n            /**\n             * 表格隔行变色\n             */\n            me.addListener('interlacetable', function (type, table, classList) {\n                if (!table) return;\n                var me = this,\n                    rows = table.rows,\n                    len = rows.length,\n                    getClass = function (list, index, repeat) {\n                        return list[index] ? list[index] : repeat ? list[index % list.length] : '';\n                    };\n                for (var i = 0; i < len; i++) {\n                    rows[i].className = getClass(classList || me.options.classList, i, true);\n                }\n            });\n            me.addListener('uninterlacetable', function (type, table) {\n                if (!table) return;\n                var me = this,\n                    rows = table.rows,\n                    classList = me.options.classList,\n                    len = rows.length;\n                for (var i = 0; i < len; i++) {\n                    domUtils.removeClasses(rows[i], classList);\n                }\n            });\n\n            me.addListener('mousedown', mouseDownEvent);\n            me.addListener('mouseup', mouseUpEvent);\n            //拖动的时候触发mouseup\n            domUtils.on(me.body, 'dragstart', function (evt) {\n                mouseUpEvent.call(me, 'dragstart', evt);\n            });\n            me.addOutputRule(function (root) {\n                utils.each(root.getNodesByTagName('div'), function (n) {\n                    if (n.getAttr('id') == 'ue_tableDragLine') {\n                        n.parentNode.removeChild(n);\n                    }\n                });\n            });\n\n            var currentRowIndex = 0;\n            me.addListener('mousedown', function () {\n                currentRowIndex = 0;\n            });\n            me.addListener('tabkeydown', function () {\n                var range = this.selection.getRange(),\n                    common = range.getCommonAncestor(true, true),\n                    table = domUtils.findParentByTagName(common, 'table');\n                if (table) {\n                    if (domUtils.findParentByTagName(common, 'caption', true)) {\n                        var cell = domUtils.getElementsByTagName(table, 'th td');\n                        if (cell && cell.length) {\n                            range.setStart(cell[0], 0).setCursor(false, true);\n                        }\n                    } else {\n                        var cell = domUtils.findParentByTagName(common, ['td', 'th'], true),\n                            ua = getUETable(cell);\n                        currentRowIndex = cell.rowSpan > 1 ? currentRowIndex : ua.getCellInfo(cell).rowIndex;\n                        var nextCell = ua.getTabNextCell(cell, currentRowIndex);\n                        if (nextCell) {\n                            if (isEmptyBlock(nextCell)) {\n                                range.setStart(nextCell, 0).setCursor(false, true);\n                            } else {\n                                range.selectNodeContents(nextCell).select();\n                            }\n                        } else {\n                            me.fireEvent('saveScene');\n                            me.__hasEnterExecCommand = true;\n                            this.execCommand('insertrownext');\n                            me.__hasEnterExecCommand = false;\n                            range = this.selection.getRange();\n                            range.setStart(table.rows[table.rows.length - 1].cells[0], 0).setCursor();\n                            me.fireEvent('saveScene');\n                        }\n                    }\n                    return true;\n                }\n            });\n            browser.ie &&\n                me.addListener('selectionchange', function () {\n                    toggleDraggableState(this, false, '', null);\n                });\n            me.addListener('keydown', function (type, evt) {\n                var me = this;\n                //处理在表格的最后一个输入tab产生新的表格\n                var keyCode = evt.keyCode || evt.which;\n                if (keyCode == 8 || keyCode == 46) {\n                    return;\n                }\n                var notCtrlKey = !evt.ctrlKey && !evt.metaKey && !evt.shiftKey && !evt.altKey;\n                notCtrlKey && removeSelectedClass(domUtils.getElementsByTagName(me.body, 'td'));\n                var ut = getUETableBySelected(me);\n                if (!ut) return;\n                notCtrlKey && ut.clearSelected();\n            });\n\n            me.addListener('beforegetcontent', function () {\n                switchBorderColor(this, false);\n                browser.ie &&\n                    utils.each(this.document.getElementsByTagName('caption'), function (ci) {\n                        if (domUtils.isEmptyNode(ci)) {\n                            ci.innerHTML = '&nbsp;';\n                        }\n                    });\n            });\n            me.addListener('aftergetcontent', function () {\n                switchBorderColor(this, true);\n            });\n            me.addListener('getAllHtml', function () {\n                removeSelectedClass(me.document.getElementsByTagName('td'));\n            });\n            //修正全屏状态下插入的表格宽度在非全屏状态下撑开编辑器的情况\n            me.addListener('fullscreenchanged', function (type, fullscreen) {\n                if (!fullscreen) {\n                    var ratio = this.body.offsetWidth / document.body.offsetWidth,\n                        tables = domUtils.getElementsByTagName(this.body, 'table');\n                    utils.each(tables, function (table) {\n                        if (table.offsetWidth < me.body.offsetWidth) return false;\n                        var tds = domUtils.getElementsByTagName(table, 'td'),\n                            backWidths = [];\n                        utils.each(tds, function (td) {\n                            backWidths.push(td.offsetWidth);\n                        });\n                        for (var i = 0, td; (td = tds[i]); i++) {\n                            td.setAttribute('width', Math.floor(backWidths[i] * ratio));\n                        }\n                        table.setAttribute('width', Math.floor(getTableWidth(me, needIEHack, getDefaultValue(me))));\n                    });\n                }\n            });\n\n            //重写execCommand命令，用于处理框选时的处理\n            var oldExecCommand = me.execCommand;\n            me.execCommand = function (cmd, datatat) {\n                var me = this,\n                    args = arguments;\n\n                cmd = cmd.toLowerCase();\n                var ut = getUETableBySelected(me),\n                    tds,\n                    range = new dom.Range(me.document),\n                    cmdFun = me.commands[cmd] || UE.commands[cmd],\n                    result;\n                if (!cmdFun) return;\n                if (ut && !commands[cmd] && !cmdFun.notNeedUndo && !me.__hasEnterExecCommand) {\n                    me.__hasEnterExecCommand = true;\n                    me.fireEvent('beforeexeccommand', cmd);\n                    tds = ut.selectedTds;\n                    var lastState = -2,\n                        lastValue = -2,\n                        value,\n                        state;\n                    for (var i = 0, td; (td = tds[i]); i++) {\n                        if (isEmptyBlock(td)) {\n                            range.setStart(td, 0).setCursor(false, true);\n                        } else {\n                            range.selectNode(td).select(true);\n                        }\n                        state = me.queryCommandState(cmd);\n                        value = me.queryCommandValue(cmd);\n                        if (state != -1) {\n                            if (lastState !== state || lastValue !== value) {\n                                me._ignoreContentChange = true;\n                                result = oldExecCommand.apply(me, arguments);\n                                me._ignoreContentChange = false;\n                            }\n                            lastState = me.queryCommandState(cmd);\n                            lastValue = me.queryCommandValue(cmd);\n                            if (domUtils.isEmptyBlock(td)) {\n                                domUtils.fillNode(me.document, td);\n                            }\n                        }\n                    }\n                    range.setStart(tds[0], 0).shrinkBoundary(true).setCursor(false, true);\n                    me.fireEvent('contentchange');\n                    me.fireEvent('afterexeccommand', cmd);\n                    me.__hasEnterExecCommand = false;\n                    me._selectionChange();\n                } else {\n                    result = oldExecCommand.apply(me, arguments);\n                }\n                return result;\n            };\n        });\n        /**\n         * 删除obj的宽高style，改成属性宽高\n         * @param obj\n         * @param replaceToProperty\n         */\n        function removeStyleSize(obj, replaceToProperty) {\n            removeStyle(obj, 'width', true);\n            removeStyle(obj, 'height', true);\n        }\n\n        function removeStyle(obj, styleName, replaceToProperty) {\n            if (obj.style[styleName]) {\n                replaceToProperty && obj.setAttribute(styleName, parseInt(obj.style[styleName], 10));\n                obj.style[styleName] = '';\n            }\n        }\n\n        function getParentTdOrTh(ele) {\n            if (ele.tagName == 'TD' || ele.tagName == 'TH') return ele;\n            var td;\n            if ((td = domUtils.findParentByTagName(ele, 'td', true) || domUtils.findParentByTagName(ele, 'th', true)))\n                return td;\n            return null;\n        }\n\n        function isEmptyBlock(node) {\n            var reg = new RegExp(domUtils.fillChar, 'g');\n            if (node[browser.ie ? 'innerText' : 'textContent'].replace(/^\\s*$/, '').replace(reg, '').length > 0) {\n                return 0;\n            }\n            for (var n in dtd.$isNotEmpty) {\n                if (node.getElementsByTagName(n).length) {\n                    return 0;\n                }\n            }\n            return 1;\n        }\n\n        function mouseCoords(evt) {\n            if (evt.pageX || evt.pageY) {\n                return { x: evt.pageX, y: evt.pageY };\n            }\n            return {\n                x: evt.clientX + me.document.body.scrollLeft - me.document.body.clientLeft,\n                y: evt.clientY + me.document.body.scrollTop - me.document.body.clientTop\n            };\n        }\n\n        function mouseMoveEvent(evt) {\n            if (isEditorDisabled()) {\n                return;\n            }\n\n            try {\n                //普通状态下鼠标移动\n                var target = getParentTdOrTh(evt.target || evt.srcElement),\n                    pos;\n\n                //区分用户的行为是拖动还是双击\n                if (isInResizeBuffer) {\n                    me.body.style.webkitUserSelect = 'none';\n\n                    if (\n                        Math.abs(userActionStatus.x - evt.clientX) > offsetOfTableCell ||\n                        Math.abs(userActionStatus.y - evt.clientY) > offsetOfTableCell\n                    ) {\n                        clearTableDragTimer();\n                        isInResizeBuffer = false;\n                        singleClickState = 0;\n                        //drag action\n                        tableBorderDrag(evt);\n                    }\n                }\n\n                //修改单元格大小时的鼠标移动\n                if (onDrag && dragTd) {\n                    singleClickState = 0;\n                    me.body.style.webkitUserSelect = 'none';\n                    me.selection.getNative()[browser.ie9below ? 'empty' : 'removeAllRanges']();\n                    pos = mouseCoords(evt);\n                    toggleDraggableState(me, true, onDrag, pos, target);\n                    if (onDrag == 'h') {\n                        dragLine.style.left = getPermissionX(dragTd, evt) + 'px';\n                    } else if (onDrag == 'v') {\n                        dragLine.style.top = getPermissionY(dragTd, evt) + 'px';\n                    }\n                    return;\n                }\n                //当鼠标处于table上时，修改移动过程中的光标状态\n                if (target) {\n                    //针对使用table作为容器的组件不触发拖拽效果\n                    if (me.fireEvent('excludetable', target) === true) return;\n                    pos = mouseCoords(evt);\n                    var state = getRelation(target, pos),\n                        table = domUtils.findParentByTagName(target, 'table', true);\n\n                    if (inTableSide(table, target, evt, true)) {\n                        if (me.fireEvent('excludetable', table) === true) return;\n                        me.body.style.cursor = 'url(' + me.options.cursorpath + 'h.png),pointer';\n                    } else if (inTableSide(table, target, evt)) {\n                        if (me.fireEvent('excludetable', table) === true) return;\n                        me.body.style.cursor = 'url(' + me.options.cursorpath + 'v.png),pointer';\n                    } else {\n                        me.body.style.cursor = 'text';\n                        var curCell = target;\n                        if (/\\d/.test(state)) {\n                            state = state.replace(/\\d/, '');\n                            target = getUETable(target).getPreviewCell(target, state == 'v');\n                        }\n                        //位于第一行的顶部或者第一列的左边时不可拖动\n                        toggleDraggableState(me, target ? !!state : false, target ? state : '', pos, target);\n                    }\n                } else {\n                    toggleDragButton(false, table, me);\n                }\n            } catch (e) {\n                showError(e);\n            }\n        }\n\n        var dragButtonTimer;\n\n        function toggleDragButton(show, table, editor) {\n            if (!show) {\n                if (dragOver) return;\n                dragButtonTimer = setTimeout(function () {\n                    !dragOver && dragButton && dragButton.parentNode && dragButton.parentNode.removeChild(dragButton);\n                }, 2000);\n            } else {\n                createDragButton(table, editor);\n            }\n        }\n\n        function createDragButton(table, editor) {\n            var pos = domUtils.getXY(table),\n                doc = table.ownerDocument;\n            if (dragButton && dragButton.parentNode) return dragButton;\n            dragButton = doc.createElement('div');\n            dragButton.contentEditable = false;\n            dragButton.innerHTML = '';\n            dragButton.style.cssText =\n                'width:15px;height:15px;background-image:url(' +\n                editor.options.UEDITOR_HOME_URL +\n                'dialogs/table/dragicon.png);position: absolute;cursor:move;top:' +\n                (pos.y - 15) +\n                'px;left:' +\n                pos.x +\n                'px;';\n            domUtils.unSelectable(dragButton);\n            dragButton.onmouseover = function (evt) {\n                dragOver = true;\n            };\n            dragButton.onmouseout = function (evt) {\n                dragOver = false;\n            };\n            domUtils.on(dragButton, 'click', function (type, evt) {\n                doClick(evt, this);\n            });\n            domUtils.on(dragButton, 'dblclick', function (type, evt) {\n                doDblClick(evt);\n            });\n            domUtils.on(dragButton, 'dragstart', function (type, evt) {\n                domUtils.preventDefault(evt);\n            });\n            var timer;\n\n            function doClick(evt, button) {\n                // 部分浏览器下需要清理\n                clearTimeout(timer);\n                timer = setTimeout(function () {\n                    editor.fireEvent('tableClicked', table, button);\n                }, 300);\n            }\n\n            function doDblClick(evt) {\n                clearTimeout(timer);\n                var ut = getUETable(table),\n                    start = table.rows[0].cells[0],\n                    end = ut.getLastCell(),\n                    range = ut.getCellsRange(start, end);\n                editor.selection.getRange().setStart(start, 0).setCursor(false, true);\n                ut.setSelected(range);\n            }\n\n            doc.body.appendChild(dragButton);\n        }\n\n        //    function inPosition(table, pos) {\n        //        var tablePos = domUtils.getXY(table),\n        //            width = table.offsetWidth,\n        //            height = table.offsetHeight;\n        //        if (pos.x - tablePos.x < 5 && pos.y - tablePos.y < 5) {\n        //            return \"topLeft\";\n        //        } else if (tablePos.x + width - pos.x < 5 && tablePos.y + height - pos.y < 5) {\n        //            return \"bottomRight\";\n        //        }\n        //    }\n\n        function inTableSide(table, cell, evt, top) {\n            var pos = mouseCoords(evt),\n                state = getRelation(cell, pos);\n\n            if (top) {\n                var caption = table.getElementsByTagName('caption')[0],\n                    capHeight = caption ? caption.offsetHeight : 0;\n                return state == 'v1' && pos.y - domUtils.getXY(table).y - capHeight < 8;\n            } else {\n                return state == 'h1' && pos.x - domUtils.getXY(table).x < 8;\n            }\n        }\n\n        /**\n         * 获取拖动时允许的X轴坐标\n         * @param dragTd\n         * @param evt\n         */\n        function getPermissionX(dragTd, evt) {\n            var ut = getUETable(dragTd);\n            if (ut) {\n                var preTd = ut.getSameEndPosCells(dragTd, 'x')[0],\n                    nextTd = ut.getSameStartPosXCells(dragTd)[0],\n                    mouseX = mouseCoords(evt).x,\n                    left = (preTd ? domUtils.getXY(preTd).x : domUtils.getXY(ut.table).x) + 20,\n                    right = nextTd\n                        ? domUtils.getXY(nextTd).x + nextTd.offsetWidth - 20\n                        : me.body.offsetWidth + 5 || parseInt(domUtils.getComputedStyle(me.body, 'width'), 10);\n\n                left += cellMinWidth;\n                right -= cellMinWidth;\n\n                return mouseX < left ? left : mouseX > right ? right : mouseX;\n            }\n        }\n\n        /**\n         * 获取拖动时允许的Y轴坐标\n         */\n        function getPermissionY(dragTd, evt) {\n            try {\n                var top = domUtils.getXY(dragTd).y,\n                    mousePosY = mouseCoords(evt).y;\n                return mousePosY < top ? top : mousePosY;\n            } catch (e) {\n                showError(e);\n            }\n        }\n\n        /**\n         * 移动状态切换\n         */\n        function toggleDraggableState(editor, draggable, dir, mousePos, cell) {\n            try {\n                editor.body.style.cursor = dir == 'h' ? 'col-resize' : dir == 'v' ? 'row-resize' : 'text';\n                if (browser.ie) {\n                    if (dir && !mousedown && !getUETableBySelected(editor)) {\n                        getDragLine(editor, editor.document);\n                        showDragLineAt(dir, cell);\n                    } else {\n                        hideDragLine(editor);\n                    }\n                }\n                onBorder = draggable;\n            } catch (e) {\n                showError(e);\n            }\n        }\n\n        /**\n         * 获取与UETable相关的resize line\n         * @param uetable UETable对象\n         */\n        function getResizeLineByUETable() {\n            var lineId = '_UETableResizeLine',\n                line = this.document.getElementById(lineId);\n\n            if (!line) {\n                line = this.document.createElement('div');\n                line.id = lineId;\n                line.contnetEditable = false;\n                line.setAttribute('unselectable', 'on');\n\n                var styles = {\n                    width: 2 * cellBorderWidth + 1 + 'px',\n                    position: 'absolute',\n                    'z-index': 100000,\n                    cursor: 'col-resize',\n                    background: 'red',\n                    display: 'none'\n                };\n\n                //切换状态\n                line.onmouseout = function () {\n                    this.style.display = 'none';\n                };\n\n                utils.extend(line.style, styles);\n\n                this.document.body.appendChild(line);\n            }\n\n            return line;\n        }\n\n        /**\n         * 更新resize-line\n         */\n        function updateResizeLine(cell, uetable) {\n            var line = getResizeLineByUETable.call(this),\n                table = uetable.table,\n                styles = {\n                    top: domUtils.getXY(table).y + 'px',\n                    left: domUtils.getXY(cell).x + cell.offsetWidth - cellBorderWidth + 'px',\n                    display: 'block',\n                    height: table.offsetHeight + 'px'\n                };\n\n            utils.extend(line.style, styles);\n        }\n\n        /**\n         * 显示resize-line\n         */\n        function showResizeLine(cell) {\n            var uetable = getUETable(cell);\n\n            updateResizeLine.call(this, cell, uetable);\n        }\n\n        /**\n         * 获取鼠标与当前单元格的相对位置\n         * @param ele\n         * @param mousePos\n         */\n        function getRelation(ele, mousePos) {\n            var elePos = domUtils.getXY(ele);\n\n            if (!elePos) {\n                return '';\n            }\n\n            if (elePos.x + ele.offsetWidth - mousePos.x < cellBorderWidth) {\n                return 'h';\n            }\n            if (mousePos.x - elePos.x < cellBorderWidth) {\n                return 'h1';\n            }\n            if (elePos.y + ele.offsetHeight - mousePos.y < cellBorderWidth) {\n                return 'v';\n            }\n            if (mousePos.y - elePos.y < cellBorderWidth) {\n                return 'v1';\n            }\n            return '';\n        }\n\n        function mouseDownEvent(type, evt) {\n            if (isEditorDisabled()) {\n                return;\n            }\n\n            userActionStatus = {\n                x: evt.clientX,\n                y: evt.clientY\n            };\n\n            //右键菜单单独处理\n            if (evt.button == 2) {\n                var ut = getUETableBySelected(me),\n                    flag = false;\n\n                if (ut) {\n                    var td = getTargetTd(me, evt);\n                    utils.each(ut.selectedTds, function (ti) {\n                        if (ti === td) {\n                            flag = true;\n                        }\n                    });\n                    if (!flag) {\n                        removeSelectedClass(domUtils.getElementsByTagName(me.body, 'th td'));\n                        ut.clearSelected();\n                    } else {\n                        td = ut.selectedTds[0];\n                        setTimeout(function () {\n                            me.selection.getRange().setStart(td, 0).setCursor(false, true);\n                        }, 0);\n                    }\n                }\n            } else {\n                tableClickHander(evt);\n            }\n        }\n\n        //清除表格的计时器\n        function clearTableTimer() {\n            tabTimer && clearTimeout(tabTimer);\n            tabTimer = null;\n        }\n\n        //双击收缩\n        function tableDbclickHandler(evt) {\n            singleClickState = 0;\n            evt = evt || me.window.event;\n            var target = getParentTdOrTh(evt.target || evt.srcElement);\n            if (target) {\n                var h;\n                if ((h = getRelation(target, mouseCoords(evt)))) {\n                    hideDragLine(me);\n\n                    if (h == 'h1') {\n                        h = 'h';\n                        if (inTableSide(domUtils.findParentByTagName(target, 'table'), target, evt)) {\n                            me.execCommand('adaptbywindow');\n                        } else {\n                            target = getUETable(target).getPreviewCell(target);\n                            if (target) {\n                                var rng = me.selection.getRange();\n                                rng.selectNodeContents(target).setCursor(true, true);\n                            }\n                        }\n                    }\n                    if (h == 'h') {\n                        var ut = getUETable(target),\n                            table = ut.table,\n                            cells = getCellsByMoveBorder(target, table, true);\n\n                        cells = extractArray(cells, 'left');\n\n                        ut.width = ut.offsetWidth;\n\n                        var oldWidth = [],\n                            newWidth = [];\n\n                        utils.each(cells, function (cell) {\n                            oldWidth.push(cell.offsetWidth);\n                        });\n\n                        utils.each(cells, function (cell) {\n                            cell.removeAttribute('width');\n                        });\n\n                        window.setTimeout(function () {\n                            //是否允许改变\n                            var changeable = true;\n\n                            utils.each(cells, function (cell, index) {\n                                var width = cell.offsetWidth;\n\n                                if (width > oldWidth[index]) {\n                                    changeable = false;\n                                    return false;\n                                }\n\n                                newWidth.push(width);\n                            });\n\n                            var change = changeable ? newWidth : oldWidth;\n\n                            utils.each(cells, function (cell, index) {\n                                cell.width = change[index] - getTabcellSpace();\n                            });\n                        }, 0);\n\n                        //                    minWidth -= cellMinWidth;\n                        //\n                        //                    table.removeAttribute(\"width\");\n                        //                    utils.each(cells, function (cell) {\n                        //                        cell.style.width = \"\";\n                        //                        cell.width -= minWidth;\n                        //                    });\n                    }\n                }\n            }\n        }\n\n        function tableClickHander(evt) {\n            removeSelectedClass(domUtils.getElementsByTagName(me.body, 'td th'));\n            //trace:3113\n            //选中单元格，点击table外部，不会清掉table上挂的ueTable,会引起getUETableBySelected方法返回值\n            utils.each(me.document.getElementsByTagName('table'), function (t) {\n                t.ueTable = null;\n            });\n            startTd = getTargetTd(me, evt);\n            if (!startTd) return;\n            var table = domUtils.findParentByTagName(startTd, 'table', true);\n            ut = getUETable(table);\n            ut && ut.clearSelected();\n\n            //判断当前鼠标状态\n            if (!onBorder) {\n                me.document.body.style.webkitUserSelect = '';\n                mousedown = true;\n                me.addListener('mouseover', mouseOverEvent);\n            } else {\n                //边框上的动作处理\n                borderActionHandler(evt);\n            }\n        }\n\n        //处理表格边框上的动作, 这里做延时处理，避免两种动作互相影响\n        function borderActionHandler(evt) {\n            if (browser.ie) {\n                evt = reconstruct(evt);\n            }\n\n            clearTableDragTimer();\n\n            //是否正在等待resize的缓冲中\n            isInResizeBuffer = true;\n\n            tableDragTimer = setTimeout(function () {\n                tableBorderDrag(evt);\n            }, dblclickTime);\n        }\n\n        function extractArray(originArr, key) {\n            var result = [],\n                tmp = null;\n\n            for (var i = 0, len = originArr.length; i < len; i++) {\n                tmp = originArr[i][key];\n\n                if (tmp) {\n                    result.push(tmp);\n                }\n            }\n\n            return result;\n        }\n\n        function clearTableDragTimer() {\n            tableDragTimer && clearTimeout(tableDragTimer);\n            tableDragTimer = null;\n        }\n\n        function reconstruct(obj) {\n            var attrs = ['pageX', 'pageY', 'clientX', 'clientY', 'srcElement', 'target'],\n                newObj = {};\n\n            if (obj) {\n                for (var i = 0, key, val; (key = attrs[i]); i++) {\n                    val = obj[key];\n                    val && (newObj[key] = val);\n                }\n            }\n\n            return newObj;\n        }\n\n        //边框拖动\n        function tableBorderDrag(evt) {\n            isInResizeBuffer = false;\n\n            startTd = evt.target || evt.srcElement;\n            if (!startTd) return;\n            var state = getRelation(startTd, mouseCoords(evt));\n            if (/\\d/.test(state)) {\n                state = state.replace(/\\d/, '');\n                startTd = getUETable(startTd).getPreviewCell(startTd, state == 'v');\n            }\n            hideDragLine(me);\n            getDragLine(me, me.document);\n            me.fireEvent('saveScene');\n            showDragLineAt(state, startTd);\n            mousedown = true;\n            //拖动开始\n            onDrag = state;\n            dragTd = startTd;\n        }\n\n        function mouseUpEvent(type, evt) {\n            if (isEditorDisabled()) {\n                return;\n            }\n\n            clearTableDragTimer();\n\n            isInResizeBuffer = false;\n\n            if (onBorder) {\n                singleClickState = ++singleClickState % 3;\n\n                userActionStatus = {\n                    x: evt.clientX,\n                    y: evt.clientY\n                };\n\n                tableResizeTimer = setTimeout(function () {\n                    singleClickState > 0 && singleClickState--;\n                }, dblclickTime);\n\n                if (singleClickState === 2) {\n                    singleClickState = 0;\n                    tableDbclickHandler(evt);\n                    return;\n                }\n            }\n\n            if (evt.button == 2) return;\n            var me = this;\n            //清除表格上原生跨选问题\n            var range = me.selection.getRange(),\n                start = domUtils.findParentByTagName(range.startContainer, 'table', true),\n                end = domUtils.findParentByTagName(range.endContainer, 'table', true);\n\n            if (start || end) {\n                if (start === end) {\n                    start = domUtils.findParentByTagName(range.startContainer, ['td', 'th', 'caption'], true);\n                    end = domUtils.findParentByTagName(range.endContainer, ['td', 'th', 'caption'], true);\n                    if (start !== end) {\n                        me.selection.clearRange();\n                    }\n                } else {\n                    me.selection.clearRange();\n                }\n            }\n            mousedown = false;\n            me.document.body.style.webkitUserSelect = '';\n            //拖拽状态下的mouseUP\n            if (onDrag && dragTd) {\n                me.selection.getNative()[browser.ie9below ? 'empty' : 'removeAllRanges']();\n\n                singleClickState = 0;\n                dragLine = me.document.getElementById('ue_tableDragLine');\n\n                // trace 3973\n                if (dragLine) {\n                    var dragTdPos = domUtils.getXY(dragTd),\n                        dragLinePos = domUtils.getXY(dragLine);\n\n                    switch (onDrag) {\n                        case 'h':\n                            changeColWidth(dragTd, dragLinePos.x - dragTdPos.x);\n                            break;\n                        case 'v':\n                            changeRowHeight(dragTd, dragLinePos.y - dragTdPos.y - dragTd.offsetHeight);\n                            break;\n                        default:\n                    }\n                    onDrag = '';\n                    dragTd = null;\n\n                    hideDragLine(me);\n                    me.fireEvent('saveScene');\n                    return;\n                }\n            }\n            //正常状态下的mouseup\n            if (!startTd) {\n                var target = domUtils.findParentByTagName(evt.target || evt.srcElement, 'td', true);\n                if (!target) target = domUtils.findParentByTagName(evt.target || evt.srcElement, 'th', true);\n                if (target && (target.tagName == 'TD' || target.tagName == 'TH')) {\n                    if (me.fireEvent('excludetable', target) === true) return;\n                    range = new dom.Range(me.document);\n                    range.setStart(target, 0).setCursor(false, true);\n                }\n            } else {\n                var ut = getUETable(startTd),\n                    cell = ut ? ut.selectedTds[0] : null;\n                if (cell) {\n                    range = new dom.Range(me.document);\n                    if (domUtils.isEmptyBlock(cell)) {\n                        range.setStart(cell, 0).setCursor(false, true);\n                    } else {\n                        range.selectNodeContents(cell).shrinkBoundary().setCursor(false, true);\n                    }\n                } else {\n                    range = me.selection.getRange().shrinkBoundary();\n                    if (!range.collapsed) {\n                        var start = domUtils.findParentByTagName(range.startContainer, ['td', 'th'], true),\n                            end = domUtils.findParentByTagName(range.endContainer, ['td', 'th'], true);\n                        //在table里边的不能清除\n                        if ((start && !end) || (!start && end) || (start && end && start !== end)) {\n                            range.setCursor(false, true);\n                        }\n                    }\n                }\n                startTd = null;\n                me.removeListener('mouseover', mouseOverEvent);\n            }\n            me._selectionChange(250, evt);\n        }\n\n        function mouseOverEvent(type, evt) {\n            if (isEditorDisabled()) {\n                return;\n            }\n\n            var me = this,\n                tar = evt.target || evt.srcElement;\n            currentTd = domUtils.findParentByTagName(tar, 'td', true) || domUtils.findParentByTagName(tar, 'th', true);\n            //需要判断两个TD是否位于同一个表格内\n            if (\n                startTd &&\n                currentTd &&\n                ((startTd.tagName == 'TD' && currentTd.tagName == 'TD') ||\n                    (startTd.tagName == 'TH' && currentTd.tagName == 'TH')) &&\n                domUtils.findParentByTagName(startTd, 'table') == domUtils.findParentByTagName(currentTd, 'table')\n            ) {\n                var ut = getUETable(currentTd);\n                if (startTd != currentTd) {\n                    me.document.body.style.webkitUserSelect = 'none';\n                    me.selection.getNative()[browser.ie9below ? 'empty' : 'removeAllRanges']();\n                    var range = ut.getCellsRange(startTd, currentTd);\n                    ut.setSelected(range);\n                } else {\n                    me.document.body.style.webkitUserSelect = '';\n                    ut.clearSelected();\n                }\n            }\n            evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n        }\n\n        function setCellHeight(cell, height, backHeight) {\n            var lineHight = parseInt(domUtils.getComputedStyle(cell, 'line-height'), 10),\n                tmpHeight = backHeight + height;\n            height = tmpHeight < lineHight ? lineHight : tmpHeight;\n            if (cell.style.height) cell.style.height = '';\n            cell.rowSpan == 1\n                ? cell.setAttribute('height', height)\n                : cell.removeAttribute && cell.removeAttribute('height');\n        }\n\n        function getWidth(cell) {\n            if (!cell) return 0;\n            return parseInt(domUtils.getComputedStyle(cell, 'width'), 10);\n        }\n\n        function changeColWidth(cell, changeValue) {\n            var ut = getUETable(cell);\n            if (ut) {\n                //根据当前移动的边框获取相关的单元格\n                var table = ut.table,\n                    cells = getCellsByMoveBorder(cell, table);\n\n                table.style.width = '';\n                table.removeAttribute('width');\n\n                //修正改变量\n                changeValue = correctChangeValue(changeValue, cell, cells);\n\n                if (cell.nextSibling) {\n                    var i = 0;\n\n                    utils.each(cells, function (cellGroup) {\n                        cellGroup.left.width = +cellGroup.left.width + changeValue;\n                        cellGroup.right && (cellGroup.right.width = +cellGroup.right.width - changeValue);\n                    });\n                } else {\n                    utils.each(cells, function (cellGroup) {\n                        cellGroup.left.width -= -changeValue;\n                    });\n                }\n            }\n        }\n\n        function isEditorDisabled() {\n            return me.body.contentEditable === 'false';\n        }\n\n        function changeRowHeight(td, changeValue) {\n            if (Math.abs(changeValue) < 10) return;\n            var ut = getUETable(td);\n            if (ut) {\n                var cells = ut.getSameEndPosCells(td, 'y'),\n                    //备份需要连带变化的td的原始高度，否则后期无法获取正确的值\n                    backHeight = cells[0] ? cells[0].offsetHeight : 0;\n                for (var i = 0, cell; (cell = cells[i++]); ) {\n                    setCellHeight(cell, changeValue, backHeight);\n                }\n            }\n        }\n\n        /**\n         * 获取调整单元格大小的相关单元格\n         * @isContainMergeCell 返回的结果中是否包含发生合并后的单元格\n         */\n        function getCellsByMoveBorder(cell, table, isContainMergeCell) {\n            if (!table) {\n                table = domUtils.findParentByTagName(cell, 'table');\n            }\n\n            if (!table) {\n                return null;\n            }\n\n            //获取到该单元格所在行的序列号\n            var index = domUtils.getNodeIndex(cell),\n                temp = cell,\n                rows = table.rows,\n                colIndex = 0;\n\n            while (temp) {\n                //获取到当前单元格在未发生单元格合并时的序列\n                if (temp.nodeType === 1) {\n                    colIndex += temp.colSpan || 1;\n                }\n                temp = temp.previousSibling;\n            }\n\n            temp = null;\n\n            //记录想关的单元格\n            var borderCells = [];\n\n            utils.each(rows, function (tabRow) {\n                var cells = tabRow.cells,\n                    currIndex = 0;\n\n                utils.each(cells, function (tabCell) {\n                    currIndex += tabCell.colSpan || 1;\n\n                    if (currIndex === colIndex) {\n                        borderCells.push({\n                            left: tabCell,\n                            right: tabCell.nextSibling || null\n                        });\n\n                        return false;\n                    } else if (currIndex > colIndex) {\n                        if (isContainMergeCell) {\n                            borderCells.push({\n                                left: tabCell\n                            });\n                        }\n\n                        return false;\n                    }\n                });\n            });\n\n            return borderCells;\n        }\n\n        /**\n         * 通过给定的单元格集合获取最小的单元格width\n         */\n        function getMinWidthByTableCells(cells) {\n            var minWidth = Number.MAX_VALUE;\n\n            for (var i = 0, curCell; (curCell = cells[i]); i++) {\n                minWidth = Math.min(minWidth, curCell.width || getTableCellWidth(curCell));\n            }\n\n            return minWidth;\n        }\n\n        function correctChangeValue(changeValue, relatedCell, cells) {\n            //为单元格的paading预留空间\n            changeValue -= getTabcellSpace();\n\n            if (changeValue < 0) {\n                return 0;\n            }\n\n            changeValue -= getTableCellWidth(relatedCell);\n\n            //确定方向\n            var direction = changeValue < 0 ? 'left' : 'right';\n\n            changeValue = Math.abs(changeValue);\n\n            //只关心非最后一个单元格就可以\n            utils.each(cells, function (cellGroup) {\n                var curCell = cellGroup[direction];\n\n                //为单元格保留最小空间\n                if (curCell) {\n                    changeValue = Math.min(changeValue, getTableCellWidth(curCell) - cellMinWidth);\n                }\n            });\n\n            //修正越界\n            changeValue = changeValue < 0 ? 0 : changeValue;\n\n            return direction === 'left' ? -changeValue : changeValue;\n        }\n\n        function getTableCellWidth(cell) {\n            var width = 0,\n                //偏移纠正量\n                offset = 0,\n                width = cell.offsetWidth - getTabcellSpace();\n\n            //最后一个节点纠正一下\n            if (!cell.nextSibling) {\n                width -= getTableCellOffset(cell);\n            }\n\n            width = width < 0 ? 0 : width;\n\n            try {\n                cell.width = width;\n            } catch (e) {}\n\n            return width;\n        }\n\n        /**\n         * 获取单元格所在表格的最末单元格的偏移量\n         */\n        function getTableCellOffset(cell) {\n            tab = domUtils.findParentByTagName(cell, 'table', false);\n\n            if (tab.offsetVal === undefined) {\n                var prev = cell.previousSibling;\n\n                if (prev) {\n                    //最后一个单元格和前一个单元格的width diff结果 如果恰好为一个border width， 则条件成立\n                    tab.offsetVal = cell.offsetWidth - prev.offsetWidth === UT.borderWidth ? UT.borderWidth : 0;\n                } else {\n                    tab.offsetVal = 0;\n                }\n            }\n\n            return tab.offsetVal;\n        }\n\n        function getTabcellSpace() {\n            if (UT.tabcellSpace === undefined) {\n                var cell = null,\n                    tab = me.document.createElement('table'),\n                    tbody = me.document.createElement('tbody'),\n                    trow = me.document.createElement('tr'),\n                    tabcell = me.document.createElement('td'),\n                    mirror = null;\n\n                tabcell.style.cssText = 'border: 0;';\n                tabcell.width = 1;\n\n                trow.appendChild(tabcell);\n                trow.appendChild((mirror = tabcell.cloneNode(false)));\n\n                tbody.appendChild(trow);\n\n                tab.appendChild(tbody);\n\n                tab.style.cssText = 'visibility: hidden;';\n\n                me.body.appendChild(tab);\n\n                UT.paddingSpace = tabcell.offsetWidth - 1;\n\n                var tmpTabWidth = tab.offsetWidth;\n\n                tabcell.style.cssText = '';\n                mirror.style.cssText = '';\n\n                UT.borderWidth = (tab.offsetWidth - tmpTabWidth) / 3;\n\n                UT.tabcellSpace = UT.paddingSpace + UT.borderWidth;\n\n                me.body.removeChild(tab);\n            }\n\n            getTabcellSpace = function () {\n                return UT.tabcellSpace;\n            };\n\n            return UT.tabcellSpace;\n        }\n\n        function getDragLine(editor, doc) {\n            if (mousedown) return;\n            dragLine = editor.document.createElement('div');\n            domUtils.setAttributes(dragLine, {\n                id: 'ue_tableDragLine',\n                unselectable: 'on',\n                contenteditable: false,\n                onresizestart: 'return false',\n                ondragstart: 'return false',\n                onselectstart: 'return false',\n                style: 'background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)'\n            });\n            editor.body.appendChild(dragLine);\n        }\n\n        function hideDragLine(editor) {\n            if (mousedown) return;\n            var line;\n            while ((line = editor.document.getElementById('ue_tableDragLine'))) {\n                domUtils.remove(line);\n            }\n        }\n\n        /**\n         * 依据state（v|h）在cell位置显示横线\n         * @param state\n         * @param cell\n         */\n        function showDragLineAt(state, cell) {\n            if (!cell) return;\n            var table = domUtils.findParentByTagName(cell, 'table'),\n                caption = table.getElementsByTagName('caption'),\n                width = table.offsetWidth,\n                height = table.offsetHeight - (caption.length > 0 ? caption[0].offsetHeight : 0),\n                tablePos = domUtils.getXY(table),\n                cellPos = domUtils.getXY(cell),\n                css;\n            switch (state) {\n                case 'h':\n                    css =\n                        'height:' +\n                        height +\n                        'px;top:' +\n                        (tablePos.y + (caption.length > 0 ? caption[0].offsetHeight : 0)) +\n                        'px;left:' +\n                        (cellPos.x + cell.offsetWidth);\n                    dragLine.style.cssText =\n                        css +\n                        'px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)';\n                    break;\n                case 'v':\n                    css = 'width:' + width + 'px;left:' + tablePos.x + 'px;top:' + (cellPos.y + cell.offsetHeight);\n                    //必须加上border:0和color:blue，否则低版ie不支持背景色显示\n                    dragLine.style.cssText =\n                        css +\n                        'px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)';\n                    break;\n                default:\n            }\n        }\n\n        /**\n         * 当表格边框颜色为白色时设置为虚线,true为添加虚线\n         * @param editor\n         * @param flag\n         */\n        function switchBorderColor(editor, flag) {\n            var tableArr = domUtils.getElementsByTagName(editor.body, 'table'),\n                color;\n            for (var i = 0, node; (node = tableArr[i++]); ) {\n                var td = domUtils.getElementsByTagName(node, 'td');\n                if (td[0]) {\n                    if (flag) {\n                        color = td[0].style.borderColor.replace(/\\s/g, '');\n                        if (/(#ffffff)|(rgb\\(255,255,255\\))/gi.test(color)) domUtils.addClass(node, 'noBorderTable');\n                    } else {\n                        domUtils.removeClasses(node, 'noBorderTable');\n                    }\n                }\n            }\n        }\n\n        function getTableWidth(editor, needIEHack, defaultValue) {\n            var body = editor.body;\n            return (\n                body.offsetWidth -\n                (needIEHack ? parseInt(domUtils.getComputedStyle(body, 'margin-left'), 10) * 2 : 0) -\n                defaultValue.tableBorder * 2 -\n                (editor.options.offsetWidth || 0)\n            );\n        }\n\n        /**\n         * 获取当前拖动的单元格\n         */\n        function getTargetTd(editor, evt) {\n            var target = domUtils.findParentByTagName(evt.target || evt.srcElement, ['td', 'th'], true),\n                dir = null;\n\n            if (!target) {\n                return null;\n            }\n\n            dir = getRelation(target, mouseCoords(evt));\n\n            //如果有前一个节点， 需要做一个修正， 否则可能会得到一个错误的td\n\n            if (!target) {\n                return null;\n            }\n\n            if (dir === 'h1' && target.previousSibling) {\n                var position = domUtils.getXY(target),\n                    cellWidth = target.offsetWidth;\n\n                if (Math.abs(position.x + cellWidth - evt.clientX) > cellWidth / 3) {\n                    target = target.previousSibling;\n                }\n            } else if (dir === 'v1' && target.parentNode.previousSibling) {\n                var position = domUtils.getXY(target),\n                    cellHeight = target.offsetHeight;\n\n                if (Math.abs(position.y + cellHeight - evt.clientY) > cellHeight / 3) {\n                    target = target.parentNode.previousSibling.firstChild;\n                }\n            }\n\n            //排除了非td内部以及用于代码高亮部分的td\n            return target && !(editor.fireEvent('excludetable', target) === true) ? target : null;\n        }\n    };\n\n    // plugins/table.sort.js\n    /**\n     * Created with JetBrains PhpStorm.\n     * User: Jinqn\n     * Date: 13-10-12\n     * Time: 上午10:20\n     * To change this template use File | Settings | File Templates.\n     */\n\n    UE.UETable.prototype.sortTable = function (sortByCellIndex, compareFn) {\n        var table = this.table,\n            rows = table.rows,\n            trArray = [],\n            flag = rows[0].cells[0].tagName === 'TH',\n            lastRowIndex = 0;\n        if (this.selectedTds.length) {\n            var range = this.cellsRange,\n                len = range.endRowIndex + 1;\n            for (var i = range.beginRowIndex; i < len; i++) {\n                trArray[i] = rows[i];\n            }\n            trArray.splice(0, range.beginRowIndex);\n            lastRowIndex = range.endRowIndex + 1 === this.rowsNum ? 0 : range.endRowIndex + 1;\n        } else {\n            for (var i = 0, len = rows.length; i < len; i++) {\n                trArray[i] = rows[i];\n            }\n        }\n\n        var Fn = {\n            reversecurrent: function (td1, td2) {\n                return 1;\n            },\n            orderbyasc: function (td1, td2) {\n                var value1 = td1.innerText || td1.textContent,\n                    value2 = td2.innerText || td2.textContent;\n                return value1.localeCompare(value2);\n            },\n            reversebyasc: function (td1, td2) {\n                var value1 = td1.innerHTML,\n                    value2 = td2.innerHTML;\n                return value2.localeCompare(value1);\n            },\n            orderbynum: function (td1, td2) {\n                var value1 = td1[browser.ie ? 'innerText' : 'textContent'].match(/\\d+/),\n                    value2 = td2[browser.ie ? 'innerText' : 'textContent'].match(/\\d+/);\n                if (value1) value1 = +value1[0];\n                if (value2) value2 = +value2[0];\n                return (value1 || 0) - (value2 || 0);\n            },\n            reversebynum: function (td1, td2) {\n                var value1 = td1[browser.ie ? 'innerText' : 'textContent'].match(/\\d+/),\n                    value2 = td2[browser.ie ? 'innerText' : 'textContent'].match(/\\d+/);\n                if (value1) value1 = +value1[0];\n                if (value2) value2 = +value2[0];\n                return (value2 || 0) - (value1 || 0);\n            }\n        };\n\n        //对表格设置排序的标记data-sort-type\n        table.setAttribute(\n            'data-sort-type',\n            compareFn && typeof compareFn === 'string' && Fn[compareFn] ? compareFn : ''\n        );\n\n        //th不参与排序\n        flag && trArray.splice(0, 1);\n        trArray = utils.sort(trArray, function (tr1, tr2) {\n            var result;\n            if (compareFn && typeof compareFn === 'function') {\n                result = compareFn.call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);\n            } else if (compareFn && typeof compareFn === 'number') {\n                result = 1;\n            } else if (compareFn && typeof compareFn === 'string' && Fn[compareFn]) {\n                result = Fn[compareFn].call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);\n            } else {\n                result = Fn['orderbyasc'].call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);\n            }\n            return result;\n        });\n        var fragment = table.ownerDocument.createDocumentFragment();\n        for (var j = 0, len = trArray.length; j < len; j++) {\n            fragment.appendChild(trArray[j]);\n        }\n        var tbody = table.getElementsByTagName('tbody')[0];\n        if (!lastRowIndex) {\n            tbody.appendChild(fragment);\n        } else {\n            tbody.insertBefore(fragment, rows[lastRowIndex - range.endRowIndex + range.beginRowIndex - 1]);\n        }\n    };\n\n    UE.plugins['tablesort'] = function () {\n        var me = this,\n            UT = UE.UETable,\n            getUETable = function (tdOrTable) {\n                return UT.getUETable(tdOrTable);\n            },\n            getTableItemsByRange = function (editor) {\n                return UT.getTableItemsByRange(editor);\n            };\n\n        me.ready(function () {\n            //添加表格可排序的样式\n            utils.cssRule(\n                'tablesort',\n                'table.sortEnabled tr.firstRow th,table.sortEnabled tr.firstRow td{padding-right:20px;background-repeat: no-repeat;background-position: center right;' +\n                    '   background-image:url(' +\n                    me.options.themePath +\n                    me.options.theme +\n                    '/images/sortable.png);}',\n                me.document\n            );\n\n            //做单元格合并操作时,清除可排序标识\n            me.addListener('afterexeccommand', function (type, cmd) {\n                if (cmd == 'mergeright' || cmd == 'mergedown' || cmd == 'mergecells') {\n                    this.execCommand('disablesort');\n                }\n            });\n        });\n\n        //表格排序\n        UE.commands['sorttable'] = {\n            queryCommandState: function () {\n                var me = this,\n                    tableItems = getTableItemsByRange(me);\n                if (!tableItems.cell) return -1;\n                var table = tableItems.table,\n                    cells = table.getElementsByTagName('td');\n                for (var i = 0, cell; (cell = cells[i++]); ) {\n                    if (cell.rowSpan != 1 || cell.colSpan != 1) return -1;\n                }\n                return 0;\n            },\n            execCommand: function (cmd, fn) {\n                var me = this,\n                    range = me.selection.getRange(),\n                    bk = range.createBookmark(true),\n                    tableItems = getTableItemsByRange(me),\n                    cell = tableItems.cell,\n                    ut = getUETable(tableItems.table),\n                    cellInfo = ut.getCellInfo(cell);\n                ut.sortTable(cellInfo.cellIndex, fn);\n                range.moveToBookmark(bk);\n                try {\n                    range.select();\n                } catch (e) {}\n            }\n        };\n\n        //设置表格可排序,清除表格可排序\n        UE.commands['enablesort'] = UE.commands['disablesort'] = {\n            queryCommandState: function (cmd) {\n                var table = getTableItemsByRange(this).table;\n                if (table && cmd == 'enablesort') {\n                    var cells = domUtils.getElementsByTagName(table, 'th td');\n                    for (var i = 0; i < cells.length; i++) {\n                        if (cells[i].getAttribute('colspan') > 1 || cells[i].getAttribute('rowspan') > 1) return -1;\n                    }\n                }\n\n                return !table\n                    ? -1\n                    : (cmd == 'enablesort') ^ (table.getAttribute('data-sort') != 'sortEnabled')\n                    ? -1\n                    : 0;\n            },\n            execCommand: function (cmd) {\n                var table = getTableItemsByRange(this).table;\n                table.setAttribute('data-sort', cmd == 'enablesort' ? 'sortEnabled' : 'sortDisabled');\n                cmd == 'enablesort'\n                    ? domUtils.addClass(table, 'sortEnabled')\n                    : domUtils.removeClasses(table, 'sortEnabled');\n            }\n        };\n    };\n\n    // plugins/contextmenu.js\n    ///import core\n    ///commands 右键菜单\n    ///commandsName  ContextMenu\n    ///commandsTitle  右键菜单\n    /**\n     * 右键菜单\n     * @function\n     * @name baidu.editor.plugins.contextmenu\n     * @author zhanyi\n     */\n\n    UE.plugins['contextmenu'] = function () {\n        var me = this;\n        me.setOpt('enableContextMenu', true);\n        if (me.getOpt('enableContextMenu') === false) {\n            return;\n        }\n        var lang = me.getLang('contextMenu'),\n            menu,\n            items = me.options.contextMenu || [\n                { label: lang['selectall'], cmdName: 'selectall' },\n                {\n                    label: lang.cleardoc,\n                    cmdName: 'cleardoc',\n                    exec: function () {\n                        if (confirm(lang.confirmclear)) {\n                            this.execCommand('cleardoc');\n                        }\n                    }\n                },\n                '-',\n                {\n                    label: lang.unlink,\n                    cmdName: 'unlink'\n                },\n                '-',\n                {\n                    group: lang.paragraph,\n                    icon: 'justifyjustify',\n                    subMenu: [\n                        {\n                            label: lang.justifyleft,\n                            cmdName: 'justify',\n                            value: 'left'\n                        },\n                        {\n                            label: lang.justifyright,\n                            cmdName: 'justify',\n                            value: 'right'\n                        },\n                        {\n                            label: lang.justifycenter,\n                            cmdName: 'justify',\n                            value: 'center'\n                        },\n                        {\n                            label: lang.justifyjustify,\n                            cmdName: 'justify',\n                            value: 'justify'\n                        }\n                    ]\n                },\n                '-',\n                {\n                    group: lang.table,\n                    icon: 'table',\n                    subMenu: [\n                        {\n                            label: lang.inserttable,\n                            cmdName: 'inserttable'\n                        },\n                        {\n                            label: lang.deletetable,\n                            cmdName: 'deletetable'\n                        },\n                        '-',\n                        {\n                            label: lang.deleterow,\n                            cmdName: 'deleterow'\n                        },\n                        {\n                            label: lang.deletecol,\n                            cmdName: 'deletecol'\n                        },\n                        {\n                            label: lang.insertcol,\n                            cmdName: 'insertcol'\n                        },\n                        {\n                            label: lang.insertcolnext,\n                            cmdName: 'insertcolnext'\n                        },\n                        {\n                            label: lang.insertrow,\n                            cmdName: 'insertrow'\n                        },\n                        {\n                            label: lang.insertrownext,\n                            cmdName: 'insertrownext'\n                        },\n                        '-',\n                        {\n                            label: lang.insertcaption,\n                            cmdName: 'insertcaption'\n                        },\n                        {\n                            label: lang.deletecaption,\n                            cmdName: 'deletecaption'\n                        },\n                        {\n                            label: lang.inserttitle,\n                            cmdName: 'inserttitle'\n                        },\n                        {\n                            label: lang.deletetitle,\n                            cmdName: 'deletetitle'\n                        },\n                        {\n                            label: lang.inserttitlecol,\n                            cmdName: 'inserttitlecol'\n                        },\n                        {\n                            label: lang.deletetitlecol,\n                            cmdName: 'deletetitlecol'\n                        },\n                        '-',\n                        {\n                            label: lang.mergecells,\n                            cmdName: 'mergecells'\n                        },\n                        {\n                            label: lang.mergeright,\n                            cmdName: 'mergeright'\n                        },\n                        {\n                            label: lang.mergedown,\n                            cmdName: 'mergedown'\n                        },\n                        '-',\n                        {\n                            label: lang.splittorows,\n                            cmdName: 'splittorows'\n                        },\n                        {\n                            label: lang.splittocols,\n                            cmdName: 'splittocols'\n                        },\n                        {\n                            label: lang.splittocells,\n                            cmdName: 'splittocells'\n                        },\n                        '-',\n                        {\n                            label: lang.averageDiseRow,\n                            cmdName: 'averagedistributerow'\n                        },\n                        {\n                            label: lang.averageDisCol,\n                            cmdName: 'averagedistributecol'\n                        },\n                        '-',\n                        {\n                            label: lang.edittd,\n                            cmdName: 'edittd',\n                            exec: function () {\n                                if (UE.ui['edittd']) {\n                                    new UE.ui['edittd'](this);\n                                }\n                                this.getDialog('edittd').open();\n                            }\n                        },\n                        {\n                            label: lang.edittable,\n                            cmdName: 'edittable',\n                            exec: function () {\n                                if (UE.ui['edittable']) {\n                                    new UE.ui['edittable'](this);\n                                }\n                                this.getDialog('edittable').open();\n                            }\n                        },\n                        {\n                            label: lang.setbordervisible,\n                            cmdName: 'setbordervisible'\n                        }\n                    ]\n                },\n                {\n                    group: lang.tablesort,\n                    icon: 'tablesort',\n                    subMenu: [\n                        {\n                            label: lang.enablesort,\n                            cmdName: 'enablesort'\n                        },\n                        {\n                            label: lang.disablesort,\n                            cmdName: 'disablesort'\n                        },\n                        '-',\n                        {\n                            label: lang.reversecurrent,\n                            cmdName: 'sorttable',\n                            value: 'reversecurrent'\n                        },\n                        {\n                            label: lang.orderbyasc,\n                            cmdName: 'sorttable',\n                            value: 'orderbyasc'\n                        },\n                        {\n                            label: lang.reversebyasc,\n                            cmdName: 'sorttable',\n                            value: 'reversebyasc'\n                        },\n                        {\n                            label: lang.orderbynum,\n                            cmdName: 'sorttable',\n                            value: 'orderbynum'\n                        },\n                        {\n                            label: lang.reversebynum,\n                            cmdName: 'sorttable',\n                            value: 'reversebynum'\n                        }\n                    ]\n                },\n                {\n                    group: lang.borderbk,\n                    icon: 'borderBack',\n                    subMenu: [\n                        {\n                            label: lang.setcolor,\n                            cmdName: 'interlacetable',\n                            exec: function () {\n                                this.execCommand('interlacetable');\n                            }\n                        },\n                        {\n                            label: lang.unsetcolor,\n                            cmdName: 'uninterlacetable',\n                            exec: function () {\n                                this.execCommand('uninterlacetable');\n                            }\n                        },\n                        {\n                            label: lang.setbackground,\n                            cmdName: 'settablebackground',\n                            exec: function () {\n                                this.execCommand('settablebackground', { repeat: true, colorList: ['#bbb', '#ccc'] });\n                            }\n                        },\n                        {\n                            label: lang.unsetbackground,\n                            cmdName: 'cleartablebackground',\n                            exec: function () {\n                                this.execCommand('cleartablebackground');\n                            }\n                        },\n                        {\n                            label: lang.redandblue,\n                            cmdName: 'settablebackground',\n                            exec: function () {\n                                this.execCommand('settablebackground', { repeat: true, colorList: ['red', 'blue'] });\n                            }\n                        },\n                        {\n                            label: lang.threecolorgradient,\n                            cmdName: 'settablebackground',\n                            exec: function () {\n                                this.execCommand('settablebackground', {\n                                    repeat: true,\n                                    colorList: ['#aaa', '#bbb', '#ccc']\n                                });\n                            }\n                        }\n                    ]\n                },\n                {\n                    group: lang.aligntd,\n                    icon: 'aligntd',\n                    subMenu: [\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'left', vAlign: 'top' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'center', vAlign: 'top' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'right', vAlign: 'top' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'left', vAlign: 'middle' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'center', vAlign: 'middle' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'right', vAlign: 'middle' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'left', vAlign: 'bottom' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'center', vAlign: 'bottom' }\n                        },\n                        {\n                            cmdName: 'cellalignment',\n                            value: { align: 'right', vAlign: 'bottom' }\n                        }\n                    ]\n                },\n                {\n                    group: lang.aligntable,\n                    icon: 'aligntable',\n                    subMenu: [\n                        {\n                            cmdName: 'tablealignment',\n                            className: 'left',\n                            label: lang.tableleft,\n                            value: 'left'\n                        },\n                        {\n                            cmdName: 'tablealignment',\n                            className: 'center',\n                            label: lang.tablecenter,\n                            value: 'center'\n                        },\n                        {\n                            cmdName: 'tablealignment',\n                            className: 'right',\n                            label: lang.tableright,\n                            value: 'right'\n                        }\n                    ]\n                },\n                '-',\n                {\n                    label: lang.insertparagraphbefore,\n                    cmdName: 'insertparagraph',\n                    value: true\n                },\n                {\n                    label: lang.insertparagraphafter,\n                    cmdName: 'insertparagraph'\n                },\n                {\n                    label: lang['copy'],\n                    cmdName: 'copy'\n                },\n                {\n                    label: lang['paste'],\n                    cmdName: 'paste'\n                }\n            ];\n        if (!items.length) {\n            return;\n        }\n        var uiUtils = UE.ui.uiUtils;\n\n        me.addListener('contextmenu', function (type, evt) {\n            var offset = uiUtils.getViewportOffsetByEvent(evt);\n            me.fireEvent('beforeselectionchange');\n            if (menu) {\n                menu.destroy();\n            }\n            for (var i = 0, ti, contextItems = []; (ti = items[i]); i++) {\n                var last;\n                (function (item) {\n                    if (item == '-') {\n                        if ((last = contextItems[contextItems.length - 1]) && last !== '-') {\n                            contextItems.push('-');\n                        }\n                    } else if (item.hasOwnProperty('group')) {\n                        for (var j = 0, cj, subMenu = []; (cj = item.subMenu[j]); j++) {\n                            (function (subItem) {\n                                if (subItem == '-') {\n                                    if ((last = subMenu[subMenu.length - 1]) && last !== '-') {\n                                        subMenu.push('-');\n                                    } else {\n                                        subMenu.splice(subMenu.length - 1);\n                                    }\n                                } else {\n                                    if (\n                                        (me.commands[subItem.cmdName] ||\n                                            UE.commands[subItem.cmdName] ||\n                                            subItem.query) &&\n                                        (subItem.query ? subItem.query() : me.queryCommandState(subItem.cmdName)) > -1\n                                    ) {\n                                        subMenu.push({\n                                            label:\n                                                subItem.label ||\n                                                me.getLang('contextMenu.' + subItem.cmdName + (subItem.value || '')) ||\n                                                '',\n                                            className:\n                                                'edui-for-' +\n                                                subItem.cmdName +\n                                                (subItem.className\n                                                    ? ' edui-for-' + subItem.cmdName + '-' + subItem.className\n                                                    : ''),\n                                            onclick: subItem.exec\n                                                ? function () {\n                                                      subItem.exec.call(me);\n                                                  }\n                                                : function () {\n                                                      me.execCommand(subItem.cmdName, subItem.value);\n                                                  }\n                                        });\n                                    }\n                                }\n                            })(cj);\n                        }\n                        if (subMenu.length) {\n                            function getLabel() {\n                                switch (item.icon) {\n                                    case 'table':\n                                        return me.getLang('contextMenu.table');\n                                    case 'justifyjustify':\n                                        return me.getLang('contextMenu.paragraph');\n                                    case 'aligntd':\n                                        return me.getLang('contextMenu.aligntd');\n                                    case 'aligntable':\n                                        return me.getLang('contextMenu.aligntable');\n                                    case 'tablesort':\n                                        return lang.tablesort;\n                                    case 'borderBack':\n                                        return lang.borderbk;\n                                    default:\n                                        return '';\n                                }\n                            }\n                            contextItems.push({\n                                //todo 修正成自动获取方式\n                                label: getLabel(),\n                                className: 'edui-for-' + item.icon,\n                                subMenu: {\n                                    items: subMenu,\n                                    editor: me\n                                }\n                            });\n                        }\n                    } else {\n                        //有可能commmand没有加载右键不能出来，或者没有command也想能展示出来添加query方法\n                        if (\n                            (me.commands[item.cmdName] || UE.commands[item.cmdName] || item.query) &&\n                            (item.query ? item.query.call(me) : me.queryCommandState(item.cmdName)) > -1\n                        ) {\n                            contextItems.push({\n                                label: item.label || me.getLang('contextMenu.' + item.cmdName),\n                                className: 'edui-for-' + (item.icon ? item.icon : item.cmdName + (item.value || '')),\n                                onclick: item.exec\n                                    ? function () {\n                                          item.exec.call(me);\n                                      }\n                                    : function () {\n                                          me.execCommand(item.cmdName, item.value);\n                                      }\n                            });\n                        }\n                    }\n                })(ti);\n            }\n            if (contextItems[contextItems.length - 1] == '-') {\n                contextItems.pop();\n            }\n\n            menu = new UE.ui.Menu({\n                items: contextItems,\n                className: 'edui-contextmenu',\n                editor: me\n            });\n            menu.render();\n            menu.showAt(offset);\n\n            me.fireEvent('aftershowcontextmenu', menu);\n\n            domUtils.preventDefault(evt);\n            if (browser.ie) {\n                var ieRange;\n                try {\n                    ieRange = me.selection.getNative().createRange();\n                } catch (e) {\n                    return;\n                }\n                if (ieRange.item) {\n                    var range = new dom.Range(me.document);\n                    range.selectNode(ieRange.item(0)).select(true, true);\n                }\n            }\n        });\n\n        // 添加复制的flash按钮\n        me.addListener('aftershowcontextmenu', function (type, menu) {\n            if (me.zeroclipboard) {\n                var items = menu.items;\n                for (var key in items) {\n                    if (items[key].className == 'edui-for-copy') {\n                        me.zeroclipboard.clip(items[key].getDom());\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/shortcutmenu.js\n    ///import core\n    ///commands       弹出菜单\n    // commandsName  popupmenu\n    ///commandsTitle  弹出菜单\n    /**\n     * 弹出菜单\n     * @function\n     * @name baidu.editor.plugins.popupmenu\n     * @author xuheng\n     */\n\n    UE.plugins['shortcutmenu'] = function () {\n        var me = this,\n            menu,\n            items = me.options.shortcutMenu || [];\n\n        if (!items.length) {\n            return;\n        }\n\n        me.addListener('contextmenu mouseup', function (type, e) {\n            var me = this,\n                customEvt = {\n                    type: type,\n                    target: e.target || e.srcElement,\n                    screenX: e.screenX,\n                    screenY: e.screenY,\n                    clientX: e.clientX,\n                    clientY: e.clientY\n                };\n\n            setTimeout(function () {\n                var rng = me.selection.getRange();\n                if (rng.collapsed === false || type == 'contextmenu') {\n                    if (!menu) {\n                        menu = new baidu.editor.ui.ShortCutMenu({\n                            editor: me,\n                            items: items,\n                            theme: me.options.theme,\n                            className: 'edui-shortcutmenu'\n                        });\n\n                        menu.render();\n                        me.fireEvent('afterrendershortcutmenu', menu);\n                    }\n\n                    menu.show(customEvt, !!UE.plugins['contextmenu']);\n                }\n            });\n\n            if (type == 'contextmenu') {\n                domUtils.preventDefault(e);\n                if (browser.ie9below) {\n                    var ieRange;\n                    try {\n                        ieRange = me.selection.getNative().createRange();\n                    } catch (e) {\n                        return;\n                    }\n                    if (ieRange.item) {\n                        var range = new dom.Range(me.document);\n                        range.selectNode(ieRange.item(0)).select(true, true);\n                    }\n                }\n            }\n        });\n\n        me.addListener('keydown', function (type) {\n            if (type == 'keydown') {\n                menu && !menu.isHidden && menu.hide();\n            }\n        });\n    };\n\n    // plugins/basestyle.js\n    /**\n     * B、I、sub、super命令支持\n     * @file\n     * @since 1.2.6.1\n     */\n\n    UE.plugins['basestyle'] = function () {\n        /**\n         * 字体加粗\n         * @command bold\n         * @param { String } cmd 命令字符串\n         * @remind 对已加粗的文本内容执行该命令， 将取消加粗\n         * @method execCommand\n         * @example\n         * ```javascript\n         * //editor是编辑器实例\n         * //对当前选中的文本内容执行加粗操作\n         * //第一次执行， 文本内容加粗\n         * editor.execCommand( 'bold' );\n         *\n         * //第二次执行， 文本内容取消加粗\n         * editor.execCommand( 'bold' );\n         * ```\n         */\n\n        /**\n         * 字体倾斜\n         * @command italic\n         * @method execCommand\n         * @param { String } cmd 命令字符串\n         * @remind 对已倾斜的文本内容执行该命令， 将取消倾斜\n         * @example\n         * ```javascript\n         * //editor是编辑器实例\n         * //对当前选中的文本内容执行斜体操作\n         * //第一次操作， 文本内容将变成斜体\n         * editor.execCommand( 'italic' );\n         *\n         * //再次对同一文本内容执行， 则文本内容将恢复正常\n         * editor.execCommand( 'italic' );\n         * ```\n         */\n\n        /**\n         * 下标文本，与“superscript”命令互斥\n         * @command subscript\n         * @method execCommand\n         * @remind  把选中的文本内容切换成下标文本， 如果当前选中的文本已经是下标， 则该操作会把文本内容还原成正常文本\n         * @param { String } cmd 命令字符串\n         * @example\n         * ```javascript\n         * //editor是编辑器实例\n         * //对当前选中的文本内容执行下标操作\n         * //第一次操作， 文本内容将变成下标文本\n         * editor.execCommand( 'subscript' );\n         *\n         * //再次对同一文本内容执行， 则文本内容将恢复正常\n         * editor.execCommand( 'subscript' );\n         * ```\n         */\n\n        /**\n         * 上标文本，与“subscript”命令互斥\n         * @command superscript\n         * @method execCommand\n         * @remind 把选中的文本内容切换成上标文本， 如果当前选中的文本已经是上标， 则该操作会把文本内容还原成正常文本\n         * @param { String } cmd 命令字符串\n         * @example\n         * ```javascript\n         * //editor是编辑器实例\n         * //对当前选中的文本内容执行上标操作\n         * //第一次操作， 文本内容将变成上标文本\n         * editor.execCommand( 'superscript' );\n         *\n         * //再次对同一文本内容执行， 则文本内容将恢复正常\n         * editor.execCommand( 'superscript' );\n         * ```\n         */\n        var basestyles = {\n                bold: ['strong', 'b'],\n                italic: ['em', 'i'],\n                subscript: ['sub'],\n                superscript: ['sup']\n            },\n            getObj = function (editor, tagNames) {\n                return domUtils.filterNodeList(editor.selection.getStartElementPath(), tagNames);\n            },\n            me = this;\n        //添加快捷键\n        me.addshortcutkey({\n            Bold: 'ctrl+66', //^B\n            Italic: 'ctrl+73', //^I\n            Underline: 'ctrl+85' //^U\n        });\n        me.addInputRule(function (root) {\n            utils.each(root.getNodesByTagName('b i'), function (node) {\n                switch (node.tagName) {\n                    case 'b':\n                        node.tagName = 'strong';\n                        break;\n                    case 'i':\n                        node.tagName = 'em';\n                }\n            });\n        });\n        for (var style in basestyles) {\n            (function (cmd, tagNames) {\n                me.commands[cmd] = {\n                    execCommand: function (cmdName) {\n                        var range = me.selection.getRange(),\n                            obj = getObj(this, tagNames);\n                        if (range.collapsed) {\n                            if (obj) {\n                                var tmpText = me.document.createTextNode('');\n                                range.insertNode(tmpText).removeInlineStyle(tagNames);\n                                range.setStartBefore(tmpText);\n                                domUtils.remove(tmpText);\n                            } else {\n                                var tmpNode = range.document.createElement(tagNames[0]);\n                                if (cmdName == 'superscript' || cmdName == 'subscript') {\n                                    tmpText = me.document.createTextNode('');\n                                    range\n                                        .insertNode(tmpText)\n                                        .removeInlineStyle(['sub', 'sup'])\n                                        .setStartBefore(tmpText)\n                                        .collapse(true);\n                                }\n                                range.insertNode(tmpNode).setStart(tmpNode, 0);\n                            }\n                            range.collapse(true);\n                        } else {\n                            if (cmdName == 'superscript' || cmdName == 'subscript') {\n                                if (!obj || obj.tagName.toLowerCase() != cmdName) {\n                                    range.removeInlineStyle(['sub', 'sup']);\n                                }\n                            }\n                            obj ? range.removeInlineStyle(tagNames) : range.applyInlineStyle(tagNames[0]);\n                        }\n                        range.select();\n                    },\n                    queryCommandState: function () {\n                        return getObj(this, tagNames) ? 1 : 0;\n                    }\n                };\n            })(style, basestyles[style]);\n        }\n    };\n\n    // plugins/elementpath.js\n    /**\n     * 选取路径命令\n     * @file\n     */\n    UE.plugins['elementpath'] = function () {\n        var currentLevel,\n            tagNames,\n            me = this;\n        me.setOpt('elementPathEnabled', true);\n        if (!me.options.elementPathEnabled) {\n            return;\n        }\n        me.commands['elementpath'] = {\n            execCommand: function (cmdName, level) {\n                var start = tagNames[level],\n                    range = me.selection.getRange();\n                currentLevel = level * 1;\n                range.selectNode(start).select();\n            },\n            queryCommandValue: function () {\n                //产生一个副本，不能修改原来的startElementPath;\n                var parents = [].concat(this.selection.getStartElementPath()).reverse(),\n                    names = [];\n                tagNames = parents;\n                for (var i = 0, ci; (ci = parents[i]); i++) {\n                    if (ci.nodeType == 3) {\n                        continue;\n                    }\n                    var name = ci.tagName.toLowerCase();\n                    if (name == 'img' && ci.getAttribute('anchorname')) {\n                        name = 'anchor';\n                    }\n                    names[i] = name;\n                    if (currentLevel == i) {\n                        currentLevel = -1;\n                        break;\n                    }\n                }\n                return names;\n            }\n        };\n    };\n\n    // plugins/formatmatch.js\n    /**\n     * 格式刷，只格式inline的\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 格式刷\n     * @command formatmatch\n     * @method execCommand\n     * @remind 该操作不能复制段落格式\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //获取格式刷\n     * editor.execCommand( 'formatmatch' );\n     * ```\n     */\n    UE.plugins['formatmatch'] = function () {\n        var me = this,\n            list = [],\n            img,\n            flag = 0;\n\n        me.addListener('reset', function () {\n            list = [];\n            flag = 0;\n        });\n\n        function addList(type, evt) {\n            if (browser.webkit) {\n                var target = evt.target.tagName == 'IMG' ? evt.target : null;\n            }\n\n            function addFormat(range) {\n                if (text) {\n                    range.selectNode(text);\n                }\n                return range.applyInlineStyle(list[list.length - 1].tagName, null, list);\n            }\n\n            me.undoManger && me.undoManger.save();\n\n            var range = me.selection.getRange(),\n                imgT = target || range.getClosedNode();\n            if (img && imgT && imgT.tagName == 'IMG') {\n                //trace:964\n\n                imgT.style.cssText +=\n                    ';float:' +\n                    (img.style.cssFloat || img.style.styleFloat || 'none') +\n                    ';display:' +\n                    (img.style.display || 'inline');\n\n                img = null;\n            } else {\n                if (!img) {\n                    var collapsed = range.collapsed;\n                    if (collapsed) {\n                        var text = me.document.createTextNode('match');\n                        range.insertNode(text).select();\n                    }\n                    me.__hasEnterExecCommand = true;\n                    //不能把block上的属性干掉\n                    //trace:1553\n                    var removeFormatAttributes = me.options.removeFormatAttributes;\n                    me.options.removeFormatAttributes = '';\n                    me.execCommand('removeformat');\n                    me.options.removeFormatAttributes = removeFormatAttributes;\n                    me.__hasEnterExecCommand = false;\n                    //trace:969\n                    range = me.selection.getRange();\n                    if (list.length) {\n                        addFormat(range);\n                    }\n                    if (text) {\n                        range.setStartBefore(text).collapse(true);\n                    }\n                    range.select();\n                    text && domUtils.remove(text);\n                }\n            }\n\n            me.undoManger && me.undoManger.save();\n            me.removeListener('mouseup', addList);\n            flag = 0;\n        }\n\n        me.commands['formatmatch'] = {\n            execCommand: function (cmdName) {\n                if (flag) {\n                    flag = 0;\n                    list = [];\n                    me.removeListener('mouseup', addList);\n                    return;\n                }\n\n                var range = me.selection.getRange();\n                img = range.getClosedNode();\n                if (!img || img.tagName != 'IMG') {\n                    range.collapse(true).shrinkBoundary();\n                    var start = range.startContainer;\n                    list = domUtils.findParents(start, true, function (node) {\n                        return !domUtils.isBlockElm(node) && node.nodeType == 1;\n                    });\n                    //a不能加入格式刷, 并且克隆节点\n                    for (var i = 0, ci; (ci = list[i]); i++) {\n                        if (ci.tagName == 'A') {\n                            list.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n\n                me.addListener('mouseup', addList);\n                flag = 1;\n            },\n            queryCommandState: function () {\n                return flag;\n            },\n            notNeedUndo: 1\n        };\n    };\n\n    // plugins/searchreplace.js\n    ///import core\n    ///commands 查找替换\n    ///commandsName  SearchReplace\n    ///commandsTitle  查询替换\n    ///commandsDialog  dialogs\\searchreplace\n    /**\n     * @description 查找替换\n     * @author zhanyi\n     */\n\n    UE.plugin.register('searchreplace', function () {\n        var me = this;\n\n        var _blockElm = { table: 1, tbody: 1, tr: 1, ol: 1, ul: 1 };\n\n        function findTextInString(textContent, opt, currentIndex) {\n            var str = opt.searchStr;\n            if (opt.dir == -1) {\n                textContent = textContent.split('').reverse().join('');\n                str = str.split('').reverse().join('');\n                currentIndex = textContent.length - currentIndex;\n            }\n            var reg = new RegExp(str, 'g' + (opt.casesensitive ? '' : 'i')),\n                match;\n\n            while ((match = reg.exec(textContent))) {\n                if (match.index >= currentIndex) {\n                    return opt.dir == -1 ? textContent.length - match.index - opt.searchStr.length : match.index;\n                }\n            }\n            return -1;\n        }\n        function findTextBlockElm(node, currentIndex, opt) {\n            var textContent,\n                index,\n                methodName = opt.all || opt.dir == 1 ? 'getNextDomNode' : 'getPreDomNode';\n            if (domUtils.isBody(node)) {\n                node = node.firstChild;\n            }\n            var first = 1;\n            while (node) {\n                textContent = node.nodeType == 3 ? node.nodeValue : node[browser.ie ? 'innerText' : 'textContent'];\n                index = findTextInString(textContent, opt, currentIndex);\n                first = 0;\n                if (index != -1) {\n                    return {\n                        node: node,\n                        index: index\n                    };\n                }\n                node = domUtils[methodName](node);\n                while (node && _blockElm[node.nodeName.toLowerCase()]) {\n                    node = domUtils[methodName](node, true);\n                }\n                if (node) {\n                    currentIndex =\n                        opt.dir == -1\n                            ? (node.nodeType == 3 ? node.nodeValue : node[browser.ie ? 'innerText' : 'textContent'])\n                                  .length\n                            : 0;\n                }\n            }\n        }\n        function findNTextInBlockElm(node, index, str) {\n            var currentIndex = 0,\n                currentNode = node.firstChild,\n                currentNodeLength = 0,\n                result;\n            while (currentNode) {\n                if (currentNode.nodeType == 3) {\n                    currentNodeLength = currentNode.nodeValue.replace(/(^[\\t\\r\\n]+)|([\\t\\r\\n]+$)/, '').length;\n                    currentIndex += currentNodeLength;\n                    if (currentIndex >= index) {\n                        return {\n                            node: currentNode,\n                            index: currentNodeLength - (currentIndex - index)\n                        };\n                    }\n                } else if (!dtd.$empty[currentNode.tagName]) {\n                    currentNodeLength = currentNode[browser.ie ? 'innerText' : 'textContent'].replace(\n                        /(^[\\t\\r\\n]+)|([\\t\\r\\n]+$)/,\n                        ''\n                    ).length;\n                    currentIndex += currentNodeLength;\n                    if (currentIndex >= index) {\n                        result = findNTextInBlockElm(currentNode, currentNodeLength - (currentIndex - index), str);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n                currentNode = domUtils.getNextDomNode(currentNode);\n            }\n        }\n\n        function searchReplace(me, opt) {\n            var rng = me.selection.getRange(),\n                startBlockNode,\n                searchStr = opt.searchStr,\n                span = me.document.createElement('span');\n            span.innerHTML = '$$ueditor_searchreplace_key$$';\n\n            rng.shrinkBoundary(true);\n\n            //判断是不是第一次选中\n            if (!rng.collapsed) {\n                rng.select();\n                var rngText = me.selection.getText();\n                if (new RegExp('^' + opt.searchStr + '$', opt.casesensitive ? '' : 'i').test(rngText)) {\n                    if (opt.replaceStr != undefined) {\n                        replaceText(rng, opt.replaceStr);\n                        rng.select();\n                        return true;\n                    } else {\n                        rng.collapse(opt.dir == -1);\n                    }\n                }\n            }\n\n            rng.insertNode(span);\n            rng.enlargeToBlockElm(true);\n            startBlockNode = rng.startContainer;\n            var currentIndex = startBlockNode[browser.ie ? 'innerText' : 'textContent'].indexOf(\n                '$$ueditor_searchreplace_key$$'\n            );\n            rng.setStartBefore(span);\n            domUtils.remove(span);\n            var result = findTextBlockElm(startBlockNode, currentIndex, opt);\n            if (result) {\n                var rngStart = findNTextInBlockElm(result.node, result.index, searchStr);\n                var rngEnd = findNTextInBlockElm(result.node, result.index + searchStr.length, searchStr);\n                rng.setStart(rngStart.node, rngStart.index).setEnd(rngEnd.node, rngEnd.index);\n\n                if (opt.replaceStr !== undefined) {\n                    replaceText(rng, opt.replaceStr);\n                }\n                rng.select();\n                return true;\n            } else {\n                rng.setCursor();\n            }\n        }\n        function replaceText(rng, str) {\n            str = me.document.createTextNode(str);\n            rng.deleteContents().insertNode(str);\n        }\n        return {\n            commands: {\n                searchreplace: {\n                    execCommand: function (cmdName, opt) {\n                        utils.extend(\n                            opt,\n                            {\n                                all: false,\n                                casesensitive: false,\n                                dir: 1\n                            },\n                            true\n                        );\n                        var num = 0;\n                        if (opt.all) {\n                            var rng = me.selection.getRange(),\n                                first = me.body.firstChild;\n                            if (first && first.nodeType == 1) {\n                                rng.setStart(first, 0);\n                                rng.shrinkBoundary(true);\n                            } else if (first.nodeType == 3) {\n                                rng.setStartBefore(first);\n                            }\n                            rng.collapse(true).select(true);\n                            if (opt.replaceStr !== undefined) {\n                                me.fireEvent('saveScene');\n                            }\n                            while (searchReplace(this, opt)) {\n                                num++;\n                            }\n                            if (num) {\n                                me.fireEvent('saveScene');\n                            }\n                        } else {\n                            if (opt.replaceStr !== undefined) {\n                                me.fireEvent('saveScene');\n                            }\n                            if (searchReplace(this, opt)) {\n                                num++;\n                            }\n                            if (num) {\n                                me.fireEvent('saveScene');\n                            }\n                        }\n\n                        return num;\n                    },\n                    notNeedUndo: 1\n                }\n            }\n        };\n    });\n\n    // plugins/customstyle.js\n    /**\n     * 自定义样式\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 根据config配置文件里“customstyle”选项的值对匹配的标签执行样式替换。\n     * @command customstyle\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * editor.execCommand( 'customstyle' );\n     * ```\n     */\n    UE.plugins['customstyle'] = function () {\n        var me = this;\n        me.setOpt({\n            customstyle: [\n                {\n                    tag: 'h1',\n                    name: 'tc',\n                    style: 'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'\n                },\n                {\n                    tag: 'h1',\n                    name: 'tl',\n                    style: 'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:left;margin:0 0 10px 0;'\n                },\n                {\n                    tag: 'span',\n                    name: 'im',\n                    style: 'font-size:16px;font-style:italic;font-weight:bold;line-height:18px;'\n                },\n                {\n                    tag: 'span',\n                    name: 'hi',\n                    style: 'font-size:16px;font-style:italic;font-weight:bold;color:rgb(51, 153, 204);line-height:18px;'\n                }\n            ]\n        });\n        me.commands['customstyle'] = {\n            execCommand: function (cmdName, obj) {\n                var me = this,\n                    tagName = obj.tag,\n                    node = domUtils.findParent(\n                        me.selection.getStart(),\n                        function (node) {\n                            return node.getAttribute('label');\n                        },\n                        true\n                    ),\n                    range,\n                    bk,\n                    tmpObj = {};\n                for (var p in obj) {\n                    if (obj[p] !== undefined) tmpObj[p] = obj[p];\n                }\n                delete tmpObj.tag;\n                if (node && node.getAttribute('label') == obj.label) {\n                    range = this.selection.getRange();\n                    bk = range.createBookmark();\n                    if (range.collapsed) {\n                        //trace:1732 删掉自定义标签，要有p来回填站位\n                        if (dtd.$block[node.tagName]) {\n                            var fillNode = me.document.createElement('p');\n                            domUtils.moveChild(node, fillNode);\n                            node.parentNode.insertBefore(fillNode, node);\n                            domUtils.remove(node);\n                        } else {\n                            domUtils.remove(node, true);\n                        }\n                    } else {\n                        var common = domUtils.getCommonAncestor(bk.start, bk.end),\n                            nodes = domUtils.getElementsByTagName(common, tagName);\n                        if (new RegExp(tagName, 'i').test(common.tagName)) {\n                            nodes.push(common);\n                        }\n                        for (var i = 0, ni; (ni = nodes[i++]); ) {\n                            if (ni.getAttribute('label') == obj.label) {\n                                var ps = domUtils.getPosition(ni, bk.start),\n                                    pe = domUtils.getPosition(ni, bk.end);\n                                if (\n                                    (ps & domUtils.POSITION_FOLLOWING || ps & domUtils.POSITION_CONTAINS) &&\n                                    (pe & domUtils.POSITION_PRECEDING || pe & domUtils.POSITION_CONTAINS)\n                                )\n                                    if (dtd.$block[tagName]) {\n                                        var fillNode = me.document.createElement('p');\n                                        domUtils.moveChild(ni, fillNode);\n                                        ni.parentNode.insertBefore(fillNode, ni);\n                                    }\n                                domUtils.remove(ni, true);\n                            }\n                        }\n                        node = domUtils.findParent(\n                            common,\n                            function (node) {\n                                return node.getAttribute('label') == obj.label;\n                            },\n                            true\n                        );\n                        if (node) {\n                            domUtils.remove(node, true);\n                        }\n                    }\n                    range.moveToBookmark(bk).select();\n                } else {\n                    if (dtd.$block[tagName]) {\n                        this.execCommand('paragraph', tagName, tmpObj, 'customstyle');\n                        range = me.selection.getRange();\n                        if (!range.collapsed) {\n                            range.collapse();\n                            node = domUtils.findParent(\n                                me.selection.getStart(),\n                                function (node) {\n                                    return node.getAttribute('label') == obj.label;\n                                },\n                                true\n                            );\n                            var pNode = me.document.createElement('p');\n                            domUtils.insertAfter(node, pNode);\n                            domUtils.fillNode(me.document, pNode);\n                            range.setStart(pNode, 0).setCursor();\n                        }\n                    } else {\n                        range = me.selection.getRange();\n                        if (range.collapsed) {\n                            node = me.document.createElement(tagName);\n                            domUtils.setAttributes(node, tmpObj);\n                            range.insertNode(node).setStart(node, 0).setCursor();\n\n                            return;\n                        }\n\n                        bk = range.createBookmark();\n                        range.applyInlineStyle(tagName, tmpObj).moveToBookmark(bk).select();\n                    }\n                }\n            },\n            queryCommandValue: function () {\n                var parent = domUtils.filterNodeList(this.selection.getStartElementPath(), function (node) {\n                    return node.getAttribute('label');\n                });\n                return parent ? parent.getAttribute('label') : '';\n            }\n        };\n        //当去掉customstyle是，如果是块元素，用p代替\n        me.addListener('keyup', function (type, evt) {\n            var keyCode = evt.keyCode || evt.which;\n\n            if (keyCode == 32 || keyCode == 13) {\n                var range = me.selection.getRange();\n                if (range.collapsed) {\n                    var node = domUtils.findParent(\n                        me.selection.getStart(),\n                        function (node) {\n                            return node.getAttribute('label');\n                        },\n                        true\n                    );\n                    if (node && dtd.$block[node.tagName] && domUtils.isEmptyNode(node)) {\n                        var p = me.document.createElement('p');\n                        domUtils.insertAfter(node, p);\n                        domUtils.fillNode(me.document, p);\n                        domUtils.remove(node);\n                        range.setStart(p, 0).setCursor();\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/catchremoteimage.js\n    ///import core\n    ///commands 远程图片抓取\n    ///commandsName  catchRemoteImage,catchremoteimageenable\n    ///commandsTitle  远程图片抓取\n    /**\n     * 远程图片抓取,当开启本插件时所有不符合本地域名的图片都将被抓取成为本地服务器上的图片\n     */\n    UE.plugins['catchremoteimage'] = function () {\n        var me = this,\n            ajax = UE.ajax;\n\n        /* 设置默认值 */\n        if (me.options.catchRemoteImageEnable === false) return;\n        me.setOpt({\n            catchRemoteImageEnable: false\n        });\n\n        me.addListener('afterpaste', function () {\n            //暂时不开启 duanjun\n            //me.fireEvent(\"catchRemoteImage\");\n        });\n\n        me.addListener('catchRemoteImage', function () {\n            var catcherLocalDomain = me.getOpt('catcherLocalDomain'),\n                catcherActionUrl = me.getActionUrl(me.getOpt('catcherActionName')),\n                catcherUrlPrefix = me.getOpt('catcherUrlPrefix'),\n                catcherFieldName = me.getOpt('catcherFieldName');\n\n            var remoteImages = [],\n                imgs = domUtils.getElementsByTagName(me.document, 'img'),\n                test = function (src, urls) {\n                    if (src.indexOf(location.host) != -1 || /(^\\.)|(^\\/)/.test(src)) {\n                        return true;\n                    }\n                    if (urls) {\n                        for (var j = 0, url; (url = urls[j++]); ) {\n                            if (src.indexOf(url) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                };\n\n            for (var i = 0, ci; (ci = imgs[i++]); ) {\n                if (ci.getAttribute('word_img')) {\n                    continue;\n                }\n                var src = ci.getAttribute('_src') || ci.src || '';\n                if (/^(https?|ftp):/i.test(src) && !test(src, catcherLocalDomain)) {\n                    remoteImages.push(src);\n                }\n            }\n\n            if (remoteImages.length) {\n                catchremoteimage(remoteImages, {\n                    //成功抓取\n                    success: function (r) {\n                        try {\n                            var info = r.state !== undefined ? r : eval('(' + r.responseText + ')');\n                        } catch (e) {\n                            return;\n                        }\n\n                        /* 获取源路径和新路径 */\n                        var i,\n                            j,\n                            ci,\n                            cj,\n                            oldSrc,\n                            newSrc,\n                            list = info.list;\n\n                        for (i = 0; (ci = imgs[i++]); ) {\n                            oldSrc = ci.getAttribute('_src') || ci.src || '';\n                            for (j = 0; (cj = list[j++]); ) {\n                                if (oldSrc == cj.source && cj.state == 'SUCCESS') {\n                                    //抓取失败时不做替换处理\n                                    newSrc = catcherUrlPrefix + cj.url;\n                                    domUtils.setAttributes(ci, {\n                                        src: newSrc,\n                                        _src: newSrc\n                                    });\n                                    break;\n                                }\n                            }\n                        }\n                        me.fireEvent('catchremotesuccess');\n                    },\n                    //回调失败，本次请求超时\n                    error: function () {\n                        me.fireEvent('catchremoteerror');\n                    }\n                });\n            }\n\n            function catchremoteimage(imgs, callbacks) {\n                var params = utils.serializeParam(me.queryCommandValue('serverparam')) || '',\n                    url = utils.formatUrl(\n                        catcherActionUrl + (catcherActionUrl.indexOf('?') == -1 ? '?' : '&') + params\n                    ),\n                    isJsonp = utils.isCrossDomainUrl(url),\n                    opt = {\n                        method: 'POST',\n                        dataType: isJsonp ? 'jsonp' : '',\n                        timeout: 60000, //单位：毫秒，回调请求超时设置。目标用户如果网速不是很快的话此处建议设置一个较大的数值\n                        onsuccess: callbacks['success'],\n                        onerror: callbacks['error']\n                    };\n                opt[catcherFieldName] = imgs;\n                ajax.request(url, opt);\n            }\n        });\n    };\n\n    // plugins/insertparagraph.js\n    /**\n     * 插入段落\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入段落\n     * @command insertparagraph\n     * @method execCommand\n     * @param { String } cmd 命令字符串\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * editor.execCommand( 'insertparagraph' );\n     * ```\n     */\n\n    UE.commands['insertparagraph'] = {\n        execCommand: function (cmdName, front) {\n            var me = this,\n                range = me.selection.getRange(),\n                start = range.startContainer,\n                tmpNode;\n            while (start) {\n                if (domUtils.isBody(start)) {\n                    break;\n                }\n                tmpNode = start;\n                start = start.parentNode;\n            }\n            if (tmpNode) {\n                var p = me.document.createElement('p');\n                if (front) {\n                    tmpNode.parentNode.insertBefore(p, tmpNode);\n                } else {\n                    tmpNode.parentNode.insertBefore(p, tmpNode.nextSibling);\n                }\n                domUtils.fillNode(me.document, p);\n                range.setStart(p, 0).setCursor(false, true);\n            }\n        }\n    };\n\n    // plugins/webapp.js\n    /**\n     * 百度应用\n     * @file\n     * @since 1.2.6.1\n     */\n\n    /**\n     * 插入百度应用\n     * @command webapp\n     * @method execCommand\n     * @remind 需要百度APPKey\n     * @remind 百度应用主页： <a href=\"http://app.baidu.com/\" target=\"_blank\">http://app.baidu.com/</a>\n     * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，\n     * height=>应用容器高度，logo=>应用logo，url=>应用地址\n     * @example\n     * ```javascript\n     * //editor是编辑器实例\n     * //在编辑器里插入一个“植物大战僵尸”的APP\n     * editor.execCommand( 'webapp' , {\n     *     title: '植物大战僵尸',\n     *     width: 560,\n     *     height: 465,\n     *     logo: '应用展示的图片',\n     *     url: '百度应用的地址'\n     * } );\n     * ```\n     */\n\n    //UE.plugins['webapp'] = function () {\n    //    var me = this;\n    //    function createInsertStr( obj, toIframe, addParagraph ) {\n    //        return !toIframe ?\n    //                (addParagraph ? '<p>' : '') + '<img title=\"'+obj.title+'\" width=\"' + obj.width + '\" height=\"' + obj.height + '\"' +\n    //                        ' src=\"' + me.options.UEDITOR_HOME_URL + 'themes/default/images/spacer.gif\" style=\"background:url(' + obj.logo+') no-repeat center center; border:1px solid gray;\" class=\"edui-faked-webapp\" _url=\"' + obj.url + '\" />' +\n    //                        (addParagraph ? '</p>' : '')\n    //                :\n    //                '<iframe class=\"edui-faked-webapp\" title=\"'+obj.title+'\" width=\"' + obj.width + '\" height=\"' + obj.height + '\"  scrolling=\"no\" frameborder=\"0\" src=\"' + obj.url + '\" logo_url = '+obj.logo+'></iframe>';\n    //    }\n    //\n    //    function switchImgAndIframe( img2frame ) {\n    //        var tmpdiv,\n    //                nodes = domUtils.getElementsByTagName( me.document, !img2frame ? \"iframe\" : \"img\" );\n    //        for ( var i = 0, node; node = nodes[i++]; ) {\n    //            if ( node.className != \"edui-faked-webapp\" ){\n    //                continue;\n    //            }\n    //            tmpdiv = me.document.createElement( \"div\" );\n    //            tmpdiv.innerHTML = createInsertStr( img2frame ? {url:node.getAttribute( \"_url\" ), width:node.width, height:node.height,title:node.title,logo:node.style.backgroundImage.replace(\"url(\",\"\").replace(\")\",\"\")} : {url:node.getAttribute( \"src\", 2 ),title:node.title, width:node.width, height:node.height,logo:node.getAttribute(\"logo_url\")}, img2frame ? true : false,false );\n    //            node.parentNode.replaceChild( tmpdiv.firstChild, node );\n    //        }\n    //    }\n    //\n    //    me.addListener( \"beforegetcontent\", function () {\n    //        switchImgAndIframe( true );\n    //    } );\n    //    me.addListener( 'aftersetcontent', function () {\n    //        switchImgAndIframe( false );\n    //    } );\n    //    me.addListener( 'aftergetcontent', function ( cmdName ) {\n    //        if ( cmdName == 'aftergetcontent' && me.queryCommandState( 'source' ) ){\n    //            return;\n    //        }\n    //        switchImgAndIframe( false );\n    //    } );\n    //\n    //    me.commands['webapp'] = {\n    //        execCommand:function ( cmd, obj ) {\n    //            me.execCommand( \"inserthtml\", createInsertStr( obj, false,true ) );\n    //        }\n    //    };\n    //};\n\n    UE.plugin.register('webapp', function () {\n        var me = this;\n        function createInsertStr(obj, toEmbed) {\n            return !toEmbed\n                ? '<img title=\"' +\n                      obj.title +\n                      '\" width=\"' +\n                      obj.width +\n                      '\" height=\"' +\n                      obj.height +\n                      '\"' +\n                      ' src=\"' +\n                      me.options.UEDITOR_HOME_URL +\n                      'themes/default/images/spacer.gif\" _logo_url=\"' +\n                      obj.logo +\n                      '\" style=\"background:url(' +\n                      obj.logo +\n                      ') no-repeat center center; border:1px solid gray;\" class=\"edui-faked-webapp\" _url=\"' +\n                      obj.url +\n                      '\" ' +\n                      (obj.align && !obj.cssfloat ? 'align=\"' + obj.align + '\"' : '') +\n                      (obj.cssfloat ? 'style=\"float:' + obj.cssfloat + '\"' : '') +\n                      '/>'\n                : '<iframe class=\"edui-faked-webapp\" title=\"' +\n                      obj.title +\n                      '\" ' +\n                      (obj.align && !obj.cssfloat ? 'align=\"' + obj.align + '\"' : '') +\n                      (obj.cssfloat ? 'style=\"float:' + obj.cssfloat + '\"' : '') +\n                      'width=\"' +\n                      obj.width +\n                      '\" height=\"' +\n                      obj.height +\n                      '\"  scrolling=\"no\" frameborder=\"0\" src=\"' +\n                      obj.url +\n                      '\" logo_url = \"' +\n                      obj.logo +\n                      '\"></iframe>';\n        }\n        return {\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (node) {\n                    var html;\n                    if (node.getAttr('class') == 'edui-faked-webapp') {\n                        html = createInsertStr(\n                            {\n                                title: node.getAttr('title'),\n                                width: node.getAttr('width'),\n                                height: node.getAttr('height'),\n                                align: node.getAttr('align'),\n                                cssfloat: node.getStyle('float'),\n                                url: node.getAttr('_url'),\n                                logo: node.getAttr('_logo_url')\n                            },\n                            true\n                        );\n                        var embed = UE.uNode.createElement(html);\n                        node.parentNode.replaceChild(embed, node);\n                    }\n                });\n            },\n            inputRule: function (root) {\n                utils.each(root.getNodesByTagName('iframe'), function (node) {\n                    if (node.getAttr('class') == 'edui-faked-webapp') {\n                        var img = UE.uNode.createElement(\n                            createInsertStr({\n                                title: node.getAttr('title'),\n                                width: node.getAttr('width'),\n                                height: node.getAttr('height'),\n                                align: node.getAttr('align'),\n                                cssfloat: node.getStyle('float'),\n                                url: node.getAttr('src'),\n                                logo: node.getAttr('logo_url')\n                            })\n                        );\n                        node.parentNode.replaceChild(img, node);\n                    }\n                });\n            },\n            commands: {\n                /**\n                 * 插入百度应用\n                 * @command webapp\n                 * @method execCommand\n                 * @remind 需要百度APPKey\n                 * @remind 百度应用主页： <a href=\"http://app.baidu.com/\" target=\"_blank\">http://app.baidu.com/</a>\n                 * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，\n                 * height=>应用容器高度，logo=>应用logo，url=>应用地址\n                 * @example\n                 * ```javascript\n                 * //editor是编辑器实例\n                 * //在编辑器里插入一个“植物大战僵尸”的APP\n                 * editor.execCommand( 'webapp' , {\n                 *     title: '植物大战僵尸',\n                 *     width: 560,\n                 *     height: 465,\n                 *     logo: '应用展示的图片',\n                 *     url: '百度应用的地址'\n                 * } );\n                 * ```\n                 */\n                webapp: {\n                    execCommand: function (cmd, obj) {\n                        var me = this,\n                            str = createInsertStr(\n                                utils.extend(obj, {\n                                    align: 'none'\n                                }),\n                                false\n                            );\n                        me.execCommand('inserthtml', str);\n                    },\n                    queryCommandState: function () {\n                        var me = this,\n                            img = me.selection.getRange().getClosedNode(),\n                            flag = img && img.className == 'edui-faked-webapp';\n                        return flag ? 1 : 0;\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/template.js\n    ///import core\n    ///import plugins\\inserthtml.js\n    ///import plugins\\cleardoc.js\n    ///commands 模板\n    ///commandsName  template\n    ///commandsTitle  模板\n    ///commandsDialog  dialogs\\template\n    UE.plugins['template'] = function () {\n        UE.commands['template'] = {\n            execCommand: function (cmd, obj) {\n                obj.html && this.execCommand('inserthtml', obj.html);\n            }\n        };\n        this.addListener('click', function (type, evt) {\n            var el = evt.target || evt.srcElement,\n                range = this.selection.getRange();\n            var tnode = domUtils.findParent(\n                el,\n                function (node) {\n                    if (node.className && domUtils.hasClass(node, 'ue_t')) {\n                        return node;\n                    }\n                },\n                true\n            );\n            tnode && range.selectNode(tnode).shrinkBoundary().select();\n        });\n        this.addListener('keydown', function (type, evt) {\n            var range = this.selection.getRange();\n            if (!range.collapsed) {\n                if (!evt.ctrlKey && !evt.metaKey && !evt.shiftKey && !evt.altKey) {\n                    var tnode = domUtils.findParent(\n                        range.startContainer,\n                        function (node) {\n                            if (node.className && domUtils.hasClass(node, 'ue_t')) {\n                                return node;\n                            }\n                        },\n                        true\n                    );\n                    if (tnode) {\n                        domUtils.removeClasses(tnode, ['ue_t']);\n                    }\n                }\n            }\n        });\n    };\n\n    // plugins/music.js\n    /**\n     * 插入音乐命令\n     * @file\n     */\n    UE.plugin.register('music', function () {\n        var me = this;\n        function creatInsertStr(url, width, height, align, cssfloat, toEmbed) {\n            return !toEmbed\n                ? '<img ' +\n                      (align && !cssfloat ? 'align=\"' + align + '\"' : '') +\n                      (cssfloat ? 'style=\"float:' + cssfloat + '\"' : '') +\n                      ' width=\"' +\n                      width +\n                      '\" height=\"' +\n                      height +\n                      '\" _url=\"' +\n                      url +\n                      '\" class=\"edui-faked-music\"' +\n                      ' src=\"' +\n                      me.options.langPath +\n                      me.options.lang +\n                      '/images/music.png\" />'\n                : '<embed type=\"application/x-shockwave-flash\" class=\"edui-faked-music\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\"' +\n                      ' src=\"' +\n                      url +\n                      '\" width=\"' +\n                      width +\n                      '\" height=\"' +\n                      height +\n                      '\" ' +\n                      (align && !cssfloat ? 'align=\"' + align + '\"' : '') +\n                      (cssfloat ? 'style=\"float:' + cssfloat + '\"' : '') +\n                      ' wmode=\"transparent\" play=\"true\" loop=\"false\" menu=\"false\" allowscriptaccess=\"never\" allowfullscreen=\"true\" >';\n        }\n        return {\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (node) {\n                    var html;\n                    if (node.getAttr('class') == 'edui-faked-music') {\n                        var cssfloat = node.getStyle('float');\n                        var align = node.getAttr('align');\n                        html = creatInsertStr(\n                            node.getAttr('_url'),\n                            node.getAttr('width'),\n                            node.getAttr('height'),\n                            align,\n                            cssfloat,\n                            true\n                        );\n                        var embed = UE.uNode.createElement(html);\n                        node.parentNode.replaceChild(embed, node);\n                    }\n                });\n            },\n            inputRule: function (root) {\n                utils.each(root.getNodesByTagName('embed'), function (node) {\n                    if (node.getAttr('class') == 'edui-faked-music') {\n                        var cssfloat = node.getStyle('float');\n                        var align = node.getAttr('align');\n                        html = creatInsertStr(\n                            node.getAttr('src'),\n                            node.getAttr('width'),\n                            node.getAttr('height'),\n                            align,\n                            cssfloat,\n                            false\n                        );\n                        var img = UE.uNode.createElement(html);\n                        node.parentNode.replaceChild(img, node);\n                    }\n                });\n            },\n            commands: {\n                /**\n                 * 插入音乐\n                 * @command music\n                 * @method execCommand\n                 * @param { Object } musicOptions 插入音乐的参数项， 支持的key有： url=>音乐地址；\n                 * width=>音乐容器宽度；height=>音乐容器高度；align=>音乐文件的对齐方式， 可选值有: left, center, right, none\n                 * @example\n                 * ```javascript\n                 * //editor是编辑器实例\n                 * //在编辑器里插入一个“植物大战僵尸”的APP\n                 * editor.execCommand( 'music' , {\n                 *     width: 400,\n                 *     height: 95,\n                 *     align: \"center\",\n                 *     url: \"音乐地址\"\n                 * } );\n                 * ```\n                 */\n                music: {\n                    execCommand: function (cmd, musicObj) {\n                        var me = this,\n                            str = creatInsertStr(\n                                musicObj.url,\n                                musicObj.width || 400,\n                                musicObj.height || 95,\n                                'none',\n                                false\n                            );\n                        me.execCommand('inserthtml', str);\n                    },\n                    queryCommandState: function () {\n                        var me = this,\n                            img = me.selection.getRange().getClosedNode(),\n                            flag = img && img.className == 'edui-faked-music';\n                        return flag ? 1 : 0;\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/autoupload.js\n    /**\n     * @description\n     * 1.拖放文件到编辑区域，自动上传并插入到选区\n     * 2.插入粘贴板的图片，自动上传并插入到选区\n     * @author Jinqn\n     * @date 2013-10-14\n     */\n    UE.plugin.register('autoupload', function () {\n        function sendAndInsertFile(file, editor) {\n            var me = editor;\n            //模拟数据\n            var fieldName,\n                urlPrefix,\n                maxSize,\n                allowFiles,\n                actionUrl,\n                loadingHtml,\n                errorHandler,\n                successHandler,\n                filetype = /image\\/\\w+/i.test(file.type) ? 'image' : 'file',\n                loadingId = 'loading_' + (+new Date()).toString(36);\n\n            fieldName = me.getOpt(filetype + 'FieldName');\n            urlPrefix = me.getOpt(filetype + 'UrlPrefix');\n            maxSize = me.getOpt(filetype + 'MaxSize');\n            allowFiles = me.getOpt(filetype + 'AllowFiles');\n            actionUrl = me.getActionUrl(me.getOpt(filetype + 'ActionName'));\n            errorHandler = function (title) {\n                var loader = me.document.getElementById(loadingId);\n                loader && domUtils.remove(loader);\n                me.fireEvent('showmessage', {\n                    id: loadingId,\n                    content: title,\n                    type: 'error',\n                    timeout: 4000\n                });\n            };\n\n            if (filetype == 'image') {\n                loadingHtml =\n                    '<img class=\"loadingclass\" id=\"' +\n                    loadingId +\n                    '\" src=\"' +\n                    me.options.themePath +\n                    me.options.theme +\n                    '/images/spacer.gif\" title=\"' +\n                    (me.getLang('autoupload.loading') || '') +\n                    '\" >';\n                successHandler = function (data) {\n                    var link = urlPrefix + data.url,\n                        loader = me.document.getElementById(loadingId);\n                    if (loader) {\n                        loader.setAttribute('src', link);\n                        loader.setAttribute('_src', link);\n                        loader.setAttribute('title', data.title || '');\n                        loader.setAttribute('alt', data.original || '');\n                        loader.removeAttribute('id');\n                        domUtils.removeClasses(loader, 'loadingclass');\n                    }\n                };\n            } else {\n                loadingHtml =\n                    '<p>' +\n                    '<img class=\"loadingclass\" id=\"' +\n                    loadingId +\n                    '\" src=\"' +\n                    me.options.themePath +\n                    me.options.theme +\n                    '/images/spacer.gif\" title=\"' +\n                    (me.getLang('autoupload.loading') || '') +\n                    '\" >' +\n                    '</p>';\n                successHandler = function (data) {\n                    var link = urlPrefix + data.url,\n                        loader = me.document.getElementById(loadingId);\n\n                    var rng = me.selection.getRange(),\n                        bk = rng.createBookmark();\n                    rng.selectNode(loader).select();\n                    me.execCommand('insertfile', { url: link });\n                    rng.moveToBookmark(bk).select();\n                };\n            }\n\n            /* 插入loading的占位符 */\n            me.execCommand('inserthtml', loadingHtml);\n\n            /* 判断后端配置是否没有加载成功 */\n            if (!me.getOpt(filetype + 'ActionName')) {\n                errorHandler(me.getLang('autoupload.errorLoadConfig'));\n                return;\n            }\n            /* 判断文件大小是否超出限制 */\n            if (file.size > maxSize) {\n                errorHandler(me.getLang('autoupload.exceedSizeError'));\n                return;\n            }\n            /* 判断文件格式是否超出允许 */\n            var fileext = file.name ? file.name.substr(file.name.lastIndexOf('.')) : '';\n            if (\n                (fileext && filetype != 'image') ||\n                (allowFiles && (allowFiles.join('') + '.').indexOf(fileext.toLowerCase() + '.') == -1)\n            ) {\n                errorHandler(me.getLang('autoupload.exceedTypeError'));\n                return;\n            }\n\n            /* 创建Ajax并提交 */\n            var xhr = new XMLHttpRequest(),\n                fd = new FormData(),\n                params = utils.serializeParam(me.queryCommandValue('serverparam')) || '',\n                url = utils.formatUrl(actionUrl + (actionUrl.indexOf('?') == -1 ? '?' : '&') + params);\n\n            fd.append(fieldName, file, file.name || 'blob.' + file.type.substr('image/'.length));\n            fd.append('type', 'ajax');\n            xhr.open('post', url, true);\n            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n            xhr.addEventListener('load', function (e) {\n                try {\n                    var json = new Function('return ' + utils.trim(e.target.response))();\n                    if (json.state == 'SUCCESS' && json.url) {\n                        successHandler(json);\n                    } else {\n                        errorHandler(json.state);\n                    }\n                } catch (er) {\n                    errorHandler(me.getLang('autoupload.loadError'));\n                }\n            });\n            xhr.send(fd);\n        }\n\n        function getPasteImage(e) {\n            return e.clipboardData &&\n                e.clipboardData.items &&\n                e.clipboardData.items.length == 1 &&\n                /^image\\//.test(e.clipboardData.items[0].type)\n                ? e.clipboardData.items\n                : null;\n        }\n        function getDropImage(e) {\n            return e.dataTransfer && e.dataTransfer.files ? e.dataTransfer.files : null;\n        }\n\n        return {\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (n) {\n                    if (/\\b(loaderrorclass)|(bloaderrorclass)\\b/.test(n.getAttr('class'))) {\n                        n.parentNode.removeChild(n);\n                    }\n                });\n                utils.each(root.getNodesByTagName('p'), function (n) {\n                    if (/\\bloadpara\\b/.test(n.getAttr('class'))) {\n                        n.parentNode.removeChild(n);\n                    }\n                });\n            },\n            bindEvents: {\n                //插入粘贴板的图片，拖放插入图片\n                ready: function (e) {\n                    var me = this;\n                    if (window.FormData && window.FileReader) {\n                        domUtils.on(me.body, 'paste drop', function (e) {\n                            var hasImg = false,\n                                items;\n                            //获取粘贴板文件列表或者拖放文件列表\n                            items = e.type == 'paste' ? getPasteImage(e) : getDropImage(e);\n                            if (items) {\n                                var len = items.length,\n                                    file;\n                                while (len--) {\n                                    file = items[len];\n                                    if (file.getAsFile) file = file.getAsFile();\n                                    if (file && file.size > 0) {\n                                        sendAndInsertFile(file, me);\n                                        hasImg = true;\n                                    }\n                                }\n                                hasImg && e.preventDefault();\n                            }\n                        });\n                        //取消拖放图片时出现的文字光标位置提示\n                        domUtils.on(me.body, 'dragover', function (e) {\n                            if (e.dataTransfer.types[0] == 'Files') {\n                                e.preventDefault();\n                            }\n                        });\n\n                        //设置loading的样式\n                        utils.cssRule(\n                            'loading',\n                            \".loadingclass{display:inline-block;cursor:default;background: url('\" +\n                                this.options.themePath +\n                                this.options.theme +\n                                \"/images/loading.gif') no-repeat center center transparent;border:1px solid #cccccc;margin-left:1px;height: 22px;width: 22px;}\\n\" +\n                                \".loaderrorclass{display:inline-block;cursor:default;background: url('\" +\n                                this.options.themePath +\n                                this.options.theme +\n                                \"/images/loaderror.png') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;\" +\n                                '}',\n                            this.document\n                        );\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/autosave.js\n    UE.plugin.register('autosave', function () {\n        var me = this,\n            //无限循环保护\n            lastSaveTime = new Date(),\n            //最小保存间隔时间\n            MIN_TIME = 20,\n            //auto save key\n            saveKey = null;\n\n        function save(editor) {\n            var saveData;\n            //不自动保存，官网文档有但这个代码里边竟然没有 duanjun\n            if (!editor.options.enableAutoSave) {\n                return;\n            }\n\n            if (new Date() - lastSaveTime < MIN_TIME) {\n                return;\n            }\n\n            if (!editor.hasContents()) {\n                //这里不能调用命令来删除， 会造成事件死循环\n                saveKey && me.removePreferences(saveKey);\n                return;\n            }\n\n            lastSaveTime = new Date();\n\n            editor._saveFlag = null;\n\n            saveData = me.body.innerHTML;\n\n            if (\n                editor.fireEvent('beforeautosave', {\n                    content: saveData\n                }) === false\n            ) {\n                return;\n            }\n\n            me.setPreferences(saveKey, saveData);\n\n            editor.fireEvent('afterautosave', {\n                content: saveData\n            });\n        }\n\n        return {\n            defaultOptions: {\n                //默认间隔时间\n                saveInterval: 500\n            },\n            bindEvents: {\n                ready: function () {\n                    var _suffix = '-drafts-data',\n                        key = null;\n\n                    if (me.key) {\n                        key = me.key + _suffix;\n                    } else {\n                        key = (me.container.parentNode.id || 'ue-common') + _suffix;\n                    }\n\n                    //页面地址+编辑器ID 保持唯一\n                    saveKey = (location.protocol + location.host + location.pathname).replace(/[.:\\/]/g, '_') + key;\n                },\n\n                contentchange: function () {\n                    if (!saveKey) {\n                        return;\n                    }\n\n                    if (me._saveFlag) {\n                        window.clearTimeout(me._saveFlag);\n                    }\n\n                    if (me.options.saveInterval > 0) {\n                        me._saveFlag = window.setTimeout(function () {\n                            save(me);\n                        }, me.options.saveInterval);\n                    } else {\n                        save(me);\n                    }\n                }\n            },\n            commands: {\n                clearlocaldata: {\n                    execCommand: function (cmd, name) {\n                        if (saveKey && me.getPreferences(saveKey)) {\n                            me.removePreferences(saveKey);\n                        }\n                    },\n                    notNeedUndo: true,\n                    ignoreContentChange: true\n                },\n\n                getlocaldata: {\n                    execCommand: function (cmd, name) {\n                        return saveKey ? me.getPreferences(saveKey) || '' : '';\n                    },\n                    notNeedUndo: true,\n                    ignoreContentChange: true\n                },\n\n                drafts: {\n                    execCommand: function (cmd, name) {\n                        if (saveKey) {\n                            me.body.innerHTML = me.getPreferences(saveKey) || '<p>' + domUtils.fillHtml + '</p>';\n                            me.focus(true);\n                        }\n                    },\n                    queryCommandState: function () {\n                        return saveKey ? (me.getPreferences(saveKey) === null ? -1 : 0) : -1;\n                    },\n                    notNeedUndo: true,\n                    ignoreContentChange: true\n                }\n            }\n        };\n    });\n\n    // plugins/charts.js\n    UE.plugin.register('charts', function () {\n        var me = this;\n\n        return {\n            bindEvents: {\n                chartserror: function () {}\n            },\n            commands: {\n                charts: {\n                    execCommand: function (cmd, data) {\n                        var tableNode = domUtils.findParentByTagName(\n                                this.selection.getRange().startContainer,\n                                'table',\n                                true\n                            ),\n                            flagText = [],\n                            config = {};\n\n                        if (!tableNode) {\n                            return false;\n                        }\n\n                        if (!validData(tableNode)) {\n                            me.fireEvent('chartserror');\n                            return false;\n                        }\n\n                        config.title = data.title || '';\n                        config.subTitle = data.subTitle || '';\n                        config.xTitle = data.xTitle || '';\n                        config.yTitle = data.yTitle || '';\n                        config.suffix = data.suffix || '';\n                        config.tip = data.tip || '';\n                        //数据对齐方式\n                        config.dataFormat = data.tableDataFormat || '';\n                        //图表类型\n                        config.chartType = data.chartType || 0;\n\n                        for (var key in config) {\n                            if (!config.hasOwnProperty(key)) {\n                                continue;\n                            }\n\n                            flagText.push(key + ':' + config[key]);\n                        }\n\n                        tableNode.setAttribute('data-chart', flagText.join(';'));\n                        domUtils.addClass(tableNode, 'edui-charts-table');\n                    },\n                    queryCommandState: function (cmd, name) {\n                        var tableNode = domUtils.findParentByTagName(\n                            this.selection.getRange().startContainer,\n                            'table',\n                            true\n                        );\n                        return tableNode && validData(tableNode) ? 0 : -1;\n                    }\n                }\n            },\n            inputRule: function (root) {\n                utils.each(root.getNodesByTagName('table'), function (tableNode) {\n                    if (tableNode.getAttr('data-chart') !== undefined) {\n                        tableNode.setAttr('style');\n                    }\n                });\n            },\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('table'), function (tableNode) {\n                    if (tableNode.getAttr('data-chart') !== undefined) {\n                        tableNode.setAttr('style', 'display: none;');\n                    }\n                });\n            }\n        };\n\n        function validData(table) {\n            var firstRows = null,\n                cellCount = 0;\n\n            //行数不够\n            if (table.rows.length < 2) {\n                return false;\n            }\n\n            //列数不够\n            if (table.rows[0].cells.length < 2) {\n                return false;\n            }\n\n            //第一行所有cell必须是th\n            firstRows = table.rows[0].cells;\n            cellCount = firstRows.length;\n\n            for (var i = 0, cell; (cell = firstRows[i]); i++) {\n                if (cell.tagName.toLowerCase() !== 'th') {\n                    return false;\n                }\n            }\n\n            for (var i = 1, row; (row = table.rows[i]); i++) {\n                //每行单元格数不匹配， 返回false\n                if (row.cells.length != cellCount) {\n                    return false;\n                }\n\n                //第一列不是th也返回false\n                if (row.cells[0].tagName.toLowerCase() !== 'th') {\n                    return false;\n                }\n\n                for (var j = 1, cell; (cell = row.cells[j]); j++) {\n                    var value = utils.trim(cell.innerText || cell.textContent || '');\n\n                    value = value.replace(new RegExp(UE.dom.domUtils.fillChar, 'g'), '').replace(/^\\s+|\\s+$/g, '');\n\n                    //必须是数字\n                    if (!/^\\d*\\.?\\d+$/.test(value)) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        }\n    });\n\n    // plugins/section.js\n    /**\n     * 目录大纲支持插件\n     * @file\n     * @since 1.3.0\n     */\n    UE.plugin.register('section', function () {\n        /* 目录节点对象 */\n        function Section(option) {\n            this.tag = '';\n            (this.level = -1), (this.dom = null);\n            this.nextSection = null;\n            this.previousSection = null;\n            this.parentSection = null;\n            this.startAddress = [];\n            this.endAddress = [];\n            this.children = [];\n        }\n        function getSection(option) {\n            var section = new Section();\n            return utils.extend(section, option);\n        }\n        function getNodeFromAddress(startAddress, root) {\n            var current = root;\n            for (var i = 0; i < startAddress.length; i++) {\n                if (!current.childNodes) return null;\n                current = current.childNodes[startAddress[i]];\n            }\n            return current;\n        }\n\n        var me = this;\n\n        return {\n            bindMultiEvents: {\n                type: 'aftersetcontent afterscencerestore',\n                handler: function () {\n                    me.fireEvent('updateSections');\n                }\n            },\n            bindEvents: {\n                /* 初始化、拖拽、粘贴、执行setcontent之后 */\n                ready: function () {\n                    me.fireEvent('updateSections');\n                    domUtils.on(me.body, 'drop paste', function () {\n                        me.fireEvent('updateSections');\n                    });\n                },\n                /* 执行paragraph命令之后 */\n                afterexeccommand: function (type, cmd) {\n                    if (cmd == 'paragraph') {\n                        me.fireEvent('updateSections');\n                    }\n                },\n                /* 部分键盘操作，触发updateSections事件 */\n                keyup: function (type, e) {\n                    var me = this,\n                        range = me.selection.getRange();\n                    if (range.collapsed != true) {\n                        me.fireEvent('updateSections');\n                    } else {\n                        var keyCode = e.keyCode || e.which;\n                        if (keyCode == 13 || keyCode == 8 || keyCode == 46) {\n                            me.fireEvent('updateSections');\n                        }\n                    }\n                }\n            },\n            commands: {\n                getsections: {\n                    execCommand: function (cmd, levels) {\n                        var levelFn = levels || ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\n                        for (var i = 0; i < levelFn.length; i++) {\n                            if (typeof levelFn[i] == 'string') {\n                                levelFn[i] = (function (fn) {\n                                    return function (node) {\n                                        return node.tagName == fn.toUpperCase();\n                                    };\n                                })(levelFn[i]);\n                            } else if (typeof levelFn[i] != 'function') {\n                                levelFn[i] = function (node) {\n                                    return null;\n                                };\n                            }\n                        }\n                        function getSectionLevel(node) {\n                            for (var i = 0; i < levelFn.length; i++) {\n                                if (levelFn[i](node)) return i;\n                            }\n                            return -1;\n                        }\n\n                        var me = this,\n                            Directory = getSection({ level: -1, title: 'root' }),\n                            previous = Directory;\n\n                        function traversal(node, Directory) {\n                            var level,\n                                tmpSection = null,\n                                parent,\n                                child,\n                                children = node.childNodes;\n                            for (var i = 0, len = children.length; i < len; i++) {\n                                child = children[i];\n                                level = getSectionLevel(child);\n                                if (level >= 0) {\n                                    var address = me.selection\n                                            .getRange()\n                                            .selectNode(child)\n                                            .createAddress(true).startAddress,\n                                        current = getSection({\n                                            tag: child.tagName,\n                                            title: child.innerText || child.textContent || '',\n                                            level: level,\n                                            dom: child,\n                                            startAddress: utils.clone(address, []),\n                                            endAddress: utils.clone(address, []),\n                                            children: []\n                                        });\n                                    previous.nextSection = current;\n                                    current.previousSection = previous;\n                                    parent = previous;\n                                    while (level <= parent.level) {\n                                        parent = parent.parentSection;\n                                    }\n                                    current.parentSection = parent;\n                                    parent.children.push(current);\n                                    tmpSection = previous = current;\n                                } else {\n                                    child.nodeType === 1 && traversal(child, Directory);\n                                    tmpSection && tmpSection.endAddress[tmpSection.endAddress.length - 1]++;\n                                }\n                            }\n                        }\n                        traversal(me.body, Directory);\n                        return Directory;\n                    },\n                    notNeedUndo: true\n                },\n                movesection: {\n                    execCommand: function (cmd, sourceSection, targetSection, isAfter) {\n                        var me = this,\n                            targetAddress,\n                            target;\n\n                        if (!sourceSection || !targetSection || targetSection.level == -1) return;\n\n                        targetAddress = isAfter ? targetSection.endAddress : targetSection.startAddress;\n                        target = getNodeFromAddress(targetAddress, me.body);\n\n                        /* 判断目标地址是否被源章节包含 */\n                        if (\n                            !targetAddress ||\n                            !target ||\n                            isContainsAddress(sourceSection.startAddress, sourceSection.endAddress, targetAddress)\n                        )\n                            return;\n\n                        var startNode = getNodeFromAddress(sourceSection.startAddress, me.body),\n                            endNode = getNodeFromAddress(sourceSection.endAddress, me.body),\n                            current,\n                            nextNode;\n\n                        if (isAfter) {\n                            current = endNode;\n                            while (\n                                current &&\n                                !(domUtils.getPosition(startNode, current) & domUtils.POSITION_FOLLOWING)\n                            ) {\n                                nextNode = current.previousSibling;\n                                domUtils.insertAfter(target, current);\n                                if (current == startNode) break;\n                                current = nextNode;\n                            }\n                        } else {\n                            current = startNode;\n                            while (current && !(domUtils.getPosition(current, endNode) & domUtils.POSITION_FOLLOWING)) {\n                                nextNode = current.nextSibling;\n                                target.parentNode.insertBefore(current, target);\n                                if (current == endNode) break;\n                                current = nextNode;\n                            }\n                        }\n\n                        me.fireEvent('updateSections');\n\n                        /* 获取地址的包含关系 */\n                        function isContainsAddress(startAddress, endAddress, addressTarget) {\n                            var isAfterStartAddress = false,\n                                isBeforeEndAddress = false;\n                            for (var i = 0; i < startAddress.length; i++) {\n                                if (i >= addressTarget.length) break;\n                                if (addressTarget[i] > startAddress[i]) {\n                                    isAfterStartAddress = true;\n                                    break;\n                                } else if (addressTarget[i] < startAddress[i]) {\n                                    break;\n                                }\n                            }\n                            for (var i = 0; i < endAddress.length; i++) {\n                                if (i >= addressTarget.length) break;\n                                if (addressTarget[i] < startAddress[i]) {\n                                    isBeforeEndAddress = true;\n                                    break;\n                                } else if (addressTarget[i] > startAddress[i]) {\n                                    break;\n                                }\n                            }\n                            return isAfterStartAddress && isBeforeEndAddress;\n                        }\n                    }\n                },\n                deletesection: {\n                    execCommand: function (cmd, section, keepChildren) {\n                        var me = this;\n\n                        if (!section) return;\n\n                        function getNodeFromAddress(startAddress) {\n                            var current = me.body;\n                            for (var i = 0; i < startAddress.length; i++) {\n                                if (!current.childNodes) return null;\n                                current = current.childNodes[startAddress[i]];\n                            }\n                            return current;\n                        }\n\n                        var startNode = getNodeFromAddress(section.startAddress),\n                            endNode = getNodeFromAddress(section.endAddress),\n                            current = startNode,\n                            nextNode;\n\n                        if (!keepChildren) {\n                            while (\n                                current &&\n                                domUtils.inDoc(endNode, me.document) &&\n                                !(domUtils.getPosition(current, endNode) & domUtils.POSITION_FOLLOWING)\n                            ) {\n                                nextNode = current.nextSibling;\n                                domUtils.remove(current);\n                                current = nextNode;\n                            }\n                        } else {\n                            domUtils.remove(current);\n                        }\n\n                        me.fireEvent('updateSections');\n                    }\n                },\n                selectsection: {\n                    execCommand: function (cmd, section) {\n                        if (!section && !section.dom) return false;\n                        var me = this,\n                            range = me.selection.getRange(),\n                            address = {\n                                startAddress: utils.clone(section.startAddress, []),\n                                endAddress: utils.clone(section.endAddress, [])\n                            };\n                        address.endAddress[address.endAddress.length - 1]++;\n                        range.moveToAddress(address).select().scrollToView();\n                        return true;\n                    },\n                    notNeedUndo: true\n                },\n                scrolltosection: {\n                    execCommand: function (cmd, section) {\n                        if (!section && !section.dom) return false;\n                        var me = this,\n                            range = me.selection.getRange(),\n                            address = {\n                                startAddress: section.startAddress,\n                                endAddress: section.endAddress\n                            };\n                        address.endAddress[address.endAddress.length - 1]++;\n                        range.moveToAddress(address).scrollToView();\n                        return true;\n                    },\n                    notNeedUndo: true\n                }\n            }\n        };\n    });\n\n    // plugins/simpleupload.js\n    /**\n     * @description\n     * 简单上传:点击按钮,直接选择文件上传\n     * @author Jinqn\n     * @date 2014-03-31\n     */\n    UE.plugin.register('simpleupload', function () {\n        var me = this,\n            isLoaded = false,\n            containerBtn,\n            customUploader = me.options.customUploader,\n            uploaderOptions = me.options.uploaderOptions || {};\n\n        function addInput() {\n            var w = containerBtn.offsetWidth || 20;\n            var h = containerBtn.offsetHeight || 20;\n            var fileInput = document.createElement('input');\n            var inputStyle =\n                'display:block;width:' +\n                w +\n                'px;height:' +\n                h +\n                'px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;';\n            var timestrap = (+new Date()).toString(36);\n\n            fileInput.id = 'edui_input_' + timestrap;\n            fileInput.type = 'file';\n            fileInput.accept = 'image/png, image/jpeg, image/gif';\n            fileInput.style.cssText = inputStyle;\n            containerBtn.appendChild(fileInput);\n            return fileInput;\n        }\n\n        function showErrorLoader(title, loadingId) {\n            if (loadingId) {\n                var loader = me.document.getElementById(loadingId);\n                loader && domUtils.remove(loader);\n                me.fireEvent('showmessage', {\n                    id: loadingId,\n                    content: title,\n                    type: 'error',\n                    timeout: 4000\n                });\n            }\n        }\n\n        //EXIF js 可以读取图片的元信息  https://github.com/exif-js/exif-js\n        function getImgDegree(file) {\n            var degree = 0;\n            EXIF.getData(file, function () {\n                var orientation = EXIF.getTag(this, 'Orientation');\n                degree = {\n                    3: '180',\n                    6: '90',\n                    8: '270'\n                }[orientation];\n            });\n            return degree;\n        }\n\n        function upload(file, options) {\n            var loadingId = 'loading_' + (+new Date()).toString(36);\n            var maxFileSize = '10M';\n            customUploader(file, {\n                maxFileSize: maxFileSize,\n                signature: uploaderOptions.signature,\n                onOverMaxSize: (function (_this) {\n                    return function () {\n                        //_this.cancel(file);\n                        var overMaxSizeMsg = me.getLang('simpleupload.overMaxSize').replace(/{maxSize}/, maxFileSize);\n                        me.trigger('customeEvent.customUploader.overMaxSize', { msg: overMaxSizeMsg });\n                        // alert(overMaxSizeMsg);\n                    };\n                })(this),\n                beforeUpload: (function (_this) {\n                    return function () {\n                        me.focus();\n                        me.execCommand(\n                            'inserthtml',\n                            '<img class=\"loadingclass\" id=\"' +\n                                loadingId +\n                                '\" src=\"' +\n                                me.options.themePath +\n                                me.options.theme +\n                                '/images/spacer.gif\" title=\"' +\n                                (me.getLang('simpleupload.loading') || '') +\n                                '\" >'\n                        );\n                        return true;\n                    };\n                })(this),\n                progress: (function (_this) {\n                    /*return function (res) {*/\n                    //if (!res.lengthComputable) {\n                    //return;\n                    //}\n                    //return _this.trigger('uploadprogress', [file, res.loaded, res.total]);\n                    /*};*/\n                })(this),\n                success: (function (_this) {\n                    return function (res, payLoadData) {\n                        //百度云文件上传底层修改了，所以这个地方兼容下。\n                        //百度图片调整命令\n                        // 不处理图片的宽度 迁移到腾讯云@daoyu\n                        // var isFromAWS = /amazonaws\\.com/i.test(payLoadData.path);\n                        // var baseCommand = '@l_1,f_png';\n                        // var filePath = payLoadData.path + baseCommand + ',w_1200';\n                        // if (isFromAWS) {\n                        //     filePath = payLoadData.path;\n                        // }\n                        // var degree = getImgDegree(file);\n                        // var loader = me.document.getElementById(loadingId);\n                        // var ext = file.name ? file.name.split('.').pop().toLowerCase() : '';\n\n                        // if (!isFromAWS && degree) {\n                        //     filePath += ',a_' + degree;\n\n                        //     //这种是因为服务器没有做图片矫正,所以手动校正\n                        //     if (degree == 90 || degree == 270) {\n                        //         filePath = payLoadData.path + baseCommand + ',h_600,a_' + degree;\n                        //     }\n                        // }\n\n                        // var degree = getImgDegree(file);\n                        // //gif 不能加百度转码指令\n                        // if (ext === 'gif') {\n                        //     filePath = payLoadData.path;\n                        // }\n\n                        var loader = me.document.getElementById(loadingId);\n                        filePath = payLoadData.path;\n\n                        loader.setAttribute('src', filePath);\n                        loader.setAttribute('_src', filePath);\n                        loader.setAttribute('title', file.name || '');\n                        loader.setAttribute('alt', file.name || '');\n                        loader.removeAttribute('id');\n                        domUtils.removeClasses(loader, 'loadingclass');\n                        loader.onload = function () {\n                            loader.setAttribute('height', this.height);\n                            loader.setAttribute('width', this.width);\n                            me.enableAutoHeight();\n                            me.fireEvent('contentchange');\n                        };\n                    };\n                })(this),\n                error: (function (_this) {\n                    return function (res) {\n                        showErrorLoader && showErrorLoader(me.getLang('simpleupload.loadError'), loadingId);\n                        /*_this.cancel(file);*/\n                        //_this.files.pop(file);\n                        /*return _this.trigger('uploaderror', [file, res]);*/\n                    };\n                })(this)\n            });\n        }\n\n        function initUploadBtn() {\n            var fileInput = addInput();\n            domUtils.on(fileInput, 'change', function () {\n                upload(fileInput.files[0]);\n                this.value = '';\n            });\n            isLoaded = true;\n        }\n        /*function initUploadBtn(){*/\n        //var w = containerBtn.offsetWidth || 20,\n        //h = containerBtn.offsetHeight || 20,\n        //btnIframe = document.createElement('iframe'),\n        //btnStyle = 'display:block;width:' + w + 'px;height:' + h + 'px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;';\n\n        //domUtils.on(btnIframe, 'load', function(){\n\n        //var timestrap = (+new Date()).toString(36),\n        //wrapper,\n        //btnIframeDoc,\n        //btnIframeBody;\n\n        //btnIframeDoc = (btnIframe.contentDocument || btnIframe.contentWindow.document);\n        //btnIframeBody = btnIframeDoc.body;\n        //wrapper = btnIframeDoc.createElement('div');\n\n        //wrapper.innerHTML = '<form id=\"edui_form_' + timestrap + '\" target=\"edui_iframe_' + timestrap + '\" method=\"POST\" enctype=\"multipart/form-data\" action=\"' + me.getOpt('serverUrl') + '\" ' +\n        //'style=\"' + btnStyle + '\">' +\n        //'<input id=\"edui_input_' + timestrap + '\" type=\"file\" accept=\"image/png, image/jpeg, image/gif\" name=\"' + me.options.imageFieldName + '\" ' +\n        //'style=\"' + btnStyle + '\">' +\n        //'</form>' +\n        //'<iframe id=\"edui_iframe_' + timestrap + '\" name=\"edui_iframe_' + timestrap + '\" style=\"display:none;width:0;height:0;border:0;margin:0;padding:0;position:absolute;\"></iframe>';\n\n        //wrapper.className = 'edui-' + me.options.theme;\n        //wrapper.id = me.ui.id + '_iframeupload';\n        //btnIframeBody.style.cssText = btnStyle;\n        //btnIframeBody.style.width = w + 'px';\n        //btnIframeBody.style.height = h + 'px';\n        //btnIframeBody.appendChild(wrapper);\n\n        //if (btnIframeBody.parentNode) {\n        //btnIframeBody.parentNode.style.width = w + 'px';\n        //btnIframeBody.parentNode.style.height = w + 'px';\n        //}\n\n        //var form = btnIframeDoc.getElementById('edui_form_' + timestrap);\n        //var input = btnIframeDoc.getElementById('edui_input_' + timestrap);\n        //var iframe = btnIframeDoc.getElementById('edui_iframe_' + timestrap);\n\n        //domUtils.on(input, 'change', function(){\n        //if(!input.value) return;\n        //var loadingId = 'loading_' + (+new Date()).toString(36);\n        //var params = utils.serializeParam(me.queryCommandValue('serverparam')) || '';\n\n        //var imageActionUrl = me.getActionUrl(me.getOpt('imageActionName'));\n        //var allowFiles = me.getOpt('imageAllowFiles');\n\n        //me.focus();\n        //me.execCommand('inserthtml', '<img class=\"loadingclass\" id=\"' + loadingId + '\" src=\"' + me.options.themePath + me.options.theme +'/images/spacer.gif\" title=\"' + (me.getLang('simpleupload.loading') || '') + '\" >');\n\n        //function callback(){\n        //try{\n        //var link, json, loader,\n        //body = (iframe.contentDocument || iframe.contentWindow.document).body,\n        //result = body.innerText || body.textContent || '';\n        //json = (new Function(\"return \" + result))();\n        //link = me.options.imageUrlPrefix + json.url;\n        //if(json.state == 'SUCCESS' && json.url) {\n        //loader = me.document.getElementById(loadingId);\n        //loader.setAttribute('src', link);\n        //loader.setAttribute('_src', link);\n        //loader.setAttribute('title', json.title || '');\n        //loader.setAttribute('alt', json.original || '');\n        //loader.removeAttribute('id');\n        //domUtils.removeClasses(loader, 'loadingclass');\n        //} else {\n        //showErrorLoader && showErrorLoader(json.state);\n        //}\n        //}catch(er){\n        //showErrorLoader && showErrorLoader(me.getLang('simpleupload.loadError'));\n        //}\n        //form.reset();\n        //domUtils.on(iframe, 'load', callback);\n        //}\n        //function showErrorLoader(title){\n        //if(loadingId) {\n        //var loader = me.document.getElementById(loadingId);\n        //loader && domUtils.remove(loader);\n        //me.fireEvent('showmessage', {\n        //'id': loadingId,\n        //'content': title,\n        //'type': 'error',\n        //'timeout': 4000\n        //});\n        //}\n        //}\n\n        //[> 判断后端配置是否没有加载成功 <]\n        //if (!me.getOpt('imageActionName')) {\n        //errorHandler(me.getLang('autoupload.errorLoadConfig'));\n        //return;\n        //}\n        //// 判断文件格式是否错误\n        //var filename = input.value,\n        //fileext = filename ? filename.substr(filename.lastIndexOf('.')):'';\n        //if (!fileext || (allowFiles && (allowFiles.join('') + '.').indexOf(fileext.toLowerCase() + '.') == -1)) {\n        //showErrorLoader(me.getLang('simpleupload.exceedTypeError'));\n        //return;\n        //}\n\n        //domUtils.on(iframe, 'load', callback);\n        //form.action = utils.formatUrl(imageActionUrl + (imageActionUrl.indexOf('?') == -1 ? '?':'&') + params);\n        //form.submit();\n        //});\n\n        //var stateTimer;\n        //me.addListener('selectionchange', function () {\n        //clearTimeout(stateTimer);\n        //stateTimer = setTimeout(function() {\n        //var state = me.queryCommandState('simpleupload');\n        //if (state == -1) {\n        //input.disabled = 'disabled';\n        //} else {\n        //input.disabled = false;\n        //}\n        //}, 400);\n        //});\n        //isLoaded = true;\n        //});\n\n        //btnIframe.style.cssText = btnStyle;\n        //containerBtn.appendChild(btnIframe);\n        /*}*/\n\n        return {\n            bindEvents: {\n                ready: function () {\n                    //设置loading的样式\n                    utils.cssRule(\n                        'loading',\n                        \".loadingclass{display:inline-block;cursor:default;background: url('\" +\n                            this.options.themePath +\n                            this.options.theme +\n                            \"/images/loading.gif') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;}\\n\" +\n                            \".loaderrorclass{display:inline-block;cursor:default;background: url('\" +\n                            this.options.themePath +\n                            this.options.theme +\n                            \"/images/loaderror.png') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;\" +\n                            '}',\n                        this.document\n                    );\n                },\n                /* 初始化简单上传按钮 */\n                simpleuploadbtnready: function (type, container) {\n                    containerBtn = container;\n                    me.afterConfigReady(initUploadBtn);\n                }\n            },\n            outputRule: function (root) {\n                utils.each(root.getNodesByTagName('img'), function (n) {\n                    if (/\\b(loaderrorclass)|(bloaderrorclass)\\b/.test(n.getAttr('class'))) {\n                        n.parentNode.removeChild(n);\n                    }\n                });\n            },\n            commands: {\n                simpleupload: {\n                    queryCommandState: function () {\n                        return isLoaded ? 0 : -1;\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/serverparam.js\n    /**\n     * 服务器提交的额外参数列表设置插件\n     * @file\n     * @since 1.2.6.1\n     */\n    UE.plugin.register('serverparam', function () {\n        var me = this,\n            serverParam = {};\n\n        return {\n            commands: {\n                /**\n                 * 修改服务器提交的额外参数列表,清除所有项\n                 * @command serverparam\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @example\n                 * ```javascript\n                 * editor.execCommand('serverparam');\n                 * editor.queryCommandValue('serverparam'); //返回空\n                 * ```\n                 */\n                /**\n                 * 修改服务器提交的额外参数列表,删除指定项\n                 * @command serverparam\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @param { String } key 要清除的属性\n                 * @example\n                 * ```javascript\n                 * editor.execCommand('serverparam', 'name'); //删除属性name\n                 * ```\n                 */\n                /**\n                 * 修改服务器提交的额外参数列表,使用键值添加项\n                 * @command serverparam\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @param { String } key 要添加的属性\n                 * @param { String } value 要添加属性的值\n                 * @example\n                 * ```javascript\n                 * editor.execCommand('serverparam', 'name', 'hello');\n                 * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}\n                 * ```\n                 */\n                /**\n                 * 修改服务器提交的额外参数列表,传入键值对对象添加多项\n                 * @command serverparam\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @param { Object } key 传入的键值对对象\n                 * @example\n                 * ```javascript\n                 * editor.execCommand('serverparam', {'name': 'hello'});\n                 * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}\n                 * ```\n                 */\n                /**\n                 * 修改服务器提交的额外参数列表,使用自定义函数添加多项\n                 * @command serverparam\n                 * @method execCommand\n                 * @param { String } cmd 命令字符串\n                 * @param { Function } key 自定义获取参数的函数\n                 * @example\n                 * ```javascript\n                 * editor.execCommand('serverparam', function(editor){\n                 *     return {'key': 'value'};\n                 * });\n                 * editor.queryCommandValue('serverparam'); //返回对象 {'key': 'value'}\n                 * ```\n                 */\n\n                /**\n                 * 获取服务器提交的额外参数列表\n                 * @command serverparam\n                 * @method queryCommandValue\n                 * @param { String } cmd 命令字符串\n                 * @example\n                 * ```javascript\n                 * editor.queryCommandValue( 'serverparam' ); //返回对象 {'key': 'value'}\n                 * ```\n                 */\n                serverparam: {\n                    execCommand: function (cmd, key, value) {\n                        if (key === undefined || key === null) {\n                            //不传参数,清空列表\n                            serverParam = {};\n                        } else if (utils.isString(key)) {\n                            //传入键值\n                            if (value === undefined || value === null) {\n                                delete serverParam[key];\n                            } else {\n                                serverParam[key] = value;\n                            }\n                        } else if (utils.isObject(key)) {\n                            //传入对象,覆盖列表项\n                            utils.extend(serverParam, key, true);\n                        } else if (utils.isFunction(key)) {\n                            //传入函数,添加列表项\n                            utils.extend(serverParam, key(), true);\n                        }\n                    },\n                    queryCommandValue: function () {\n                        return serverParam || {};\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/insertfile.js\n    /**\n     * 插入附件\n     */\n    UE.plugin.register('insertfile', function () {\n        var me = this;\n\n        function getFileIcon(url) {\n            var ext = url.substr(url.lastIndexOf('.') + 1).toLowerCase(),\n                maps = {\n                    rar: 'icon_rar.gif',\n                    zip: 'icon_rar.gif',\n                    tar: 'icon_rar.gif',\n                    gz: 'icon_rar.gif',\n                    bz2: 'icon_rar.gif',\n                    doc: 'icon_doc.gif',\n                    docx: 'icon_doc.gif',\n                    pdf: 'icon_pdf.gif',\n                    mp3: 'icon_mp3.gif',\n                    xls: 'icon_xls.gif',\n                    chm: 'icon_chm.gif',\n                    ppt: 'icon_ppt.gif',\n                    pptx: 'icon_ppt.gif',\n                    avi: 'icon_mv.gif',\n                    rmvb: 'icon_mv.gif',\n                    wmv: 'icon_mv.gif',\n                    flv: 'icon_mv.gif',\n                    swf: 'icon_mv.gif',\n                    rm: 'icon_mv.gif',\n                    exe: 'icon_exe.gif',\n                    psd: 'icon_psd.gif',\n                    txt: 'icon_txt.gif',\n                    jpg: 'icon_jpg.gif',\n                    png: 'icon_jpg.gif',\n                    jpeg: 'icon_jpg.gif',\n                    gif: 'icon_jpg.gif',\n                    ico: 'icon_jpg.gif',\n                    bmp: 'icon_jpg.gif'\n                };\n            return maps[ext] ? maps[ext] : maps['txt'];\n        }\n\n        return {\n            commands: {\n                insertfile: {\n                    execCommand: function (command, filelist) {\n                        filelist = utils.isArray(filelist) ? filelist : [filelist];\n\n                        var i,\n                            item,\n                            icon,\n                            title,\n                            html = '',\n                            URL = me.getOpt('UEDITOR_HOME_URL'),\n                            iconDir =\n                                URL +\n                                (URL.substr(URL.length - 1) == '/' ? '' : '/') +\n                                'dialogs/attachment/fileTypeImages/';\n                        for (i = 0; i < filelist.length; i++) {\n                            item = filelist[i];\n                            icon = iconDir + getFileIcon(item.url);\n                            title = item.title || item.url.substr(item.url.lastIndexOf('/') + 1);\n                            html +=\n                                '<p style=\"line-height: 16px;\">' +\n                                '<img style=\"vertical-align: middle; margin-right: 2px;\" src=\"' +\n                                icon +\n                                '\" _src=\"' +\n                                icon +\n                                '\" />' +\n                                '<a style=\"font-size:12px; color:#0066cc;\" href=\"' +\n                                item.url +\n                                '\" title=\"' +\n                                title +\n                                '\">' +\n                                title +\n                                '</a>' +\n                                '</p>';\n                        }\n                        me.execCommand('insertHtml', html);\n                    }\n                }\n            }\n        };\n    });\n\n    // plugins/xssFilter.js\n    /**\n     * @file xssFilter.js\n     * @desc xss过滤器\n     * @author robbenmu\n     */\n\n    UE.plugins.xssFilter = function () {\n        var config = UEDITOR_CONFIG;\n        var whitList = config.whitList;\n\n        function filter(node) {\n            var tagName = node.tagName;\n            var attrs = node.attrs;\n\n            if (!whitList.hasOwnProperty(tagName)) {\n                node.parentNode.removeChild(node);\n                return false;\n            }\n\n            UE.utils.each(attrs, function (val, key) {\n                if (whitList[tagName].indexOf(key) === -1) {\n                    node.setAttr(key);\n                }\n            });\n        }\n\n        // 添加inserthtml\\paste等操作用的过滤规则\n        if (whitList && config.xssFilterRules) {\n            this.options.filterRules = (function () {\n                var result = {};\n\n                UE.utils.each(whitList, function (val, key) {\n                    result[key] = function (node) {\n                        return filter(node);\n                    };\n                });\n\n                return result;\n            })();\n        }\n\n        var tagList = [];\n\n        UE.utils.each(whitList, function (val, key) {\n            tagList.push(key);\n        });\n\n        // 添加input过滤规则\n        //\n        if (whitList && config.inputXssFilter) {\n            this.addInputRule(function (root) {\n                root.traversal(function (node) {\n                    if (node.type !== 'element') {\n                        return false;\n                    }\n                    filter(node);\n                });\n            });\n        }\n        // 添加output过滤规则\n        //\n        if (whitList && config.outputXssFilter) {\n            this.addOutputRule(function (root) {\n                root.traversal(function (node) {\n                    if (node.type !== 'element') {\n                        return false;\n                    }\n                    filter(node);\n                });\n            });\n        }\n    };\n\n    // ui/ui.js\n    var baidu = baidu || {};\n    baidu.editor = baidu.editor || {};\n    UE.ui = baidu.editor.ui = {};\n\n    // ui/uiutils.js\n    (function () {\n        var browser = baidu.editor.browser,\n            domUtils = baidu.editor.dom.domUtils;\n\n        var magic = '$EDITORUI';\n        var root = (window[magic] = {});\n        var uidMagic = 'ID' + magic;\n        var uidCount = 0;\n\n        var uiUtils = (baidu.editor.ui.uiUtils = {\n            uid: function (obj) {\n                return obj ? obj[uidMagic] || (obj[uidMagic] = ++uidCount) : ++uidCount;\n            },\n            hook: function (fn, callback) {\n                var dg;\n                if (fn && fn._callbacks) {\n                    dg = fn;\n                } else {\n                    dg = function () {\n                        var q;\n                        if (fn) {\n                            q = fn.apply(this, arguments);\n                        }\n                        var callbacks = dg._callbacks;\n                        var k = callbacks.length;\n                        while (k--) {\n                            var r = callbacks[k].apply(this, arguments);\n                            if (q === undefined) {\n                                q = r;\n                            }\n                        }\n                        return q;\n                    };\n                    dg._callbacks = [];\n                }\n                dg._callbacks.push(callback);\n                return dg;\n            },\n            createElementByHtml: function (html) {\n                var el = document.createElement('div');\n                el.innerHTML = html;\n                el = el.firstChild;\n                el.parentNode.removeChild(el);\n                return el;\n            },\n            getViewportElement: function () {\n                return browser.ie && browser.quirks ? document.body : document.documentElement;\n            },\n            getClientRect: function (element) {\n                var bcr;\n                //trace  IE6下在控制编辑器显隐时可能会报错，catch一下\n                try {\n                    bcr = element.getBoundingClientRect();\n                } catch (e) {\n                    bcr = { left: 0, top: 0, height: 0, width: 0 };\n                }\n                var rect = {\n                    left: Math.round(bcr.left),\n                    top: Math.round(bcr.top),\n                    height: Math.round(bcr.bottom - bcr.top),\n                    width: Math.round(bcr.right - bcr.left)\n                };\n                var doc;\n                while ((doc = element.ownerDocument) !== document && (element = domUtils.getWindow(doc).frameElement)) {\n                    bcr = element.getBoundingClientRect();\n                    rect.left += bcr.left;\n                    rect.top += bcr.top;\n                }\n                rect.bottom = rect.top + rect.height;\n                rect.right = rect.left + rect.width;\n                return rect;\n            },\n            getViewportRect: function () {\n                var viewportEl = uiUtils.getViewportElement();\n                var width = (window.innerWidth || viewportEl.clientWidth) | 0;\n                var height = (window.innerHeight || viewportEl.clientHeight) | 0;\n                return {\n                    left: 0,\n                    top: 0,\n                    height: height,\n                    width: width,\n                    bottom: height,\n                    right: width\n                };\n            },\n            setViewportOffset: function (element, offset) {\n                var rect;\n                var fixedLayer = uiUtils.getFixedLayer();\n                if (element.parentNode === fixedLayer) {\n                    element.style.left = offset.left + 'px';\n                    element.style.top = offset.top + 'px';\n                } else {\n                    domUtils.setViewportOffset(element, offset);\n                }\n            },\n            getEventOffset: function (evt) {\n                var el = evt.target || evt.srcElement;\n                var rect = uiUtils.getClientRect(el);\n                var offset = uiUtils.getViewportOffsetByEvent(evt);\n                return {\n                    left: offset.left - rect.left,\n                    top: offset.top - rect.top\n                };\n            },\n            getViewportOffsetByEvent: function (evt) {\n                var el = evt.target || evt.srcElement;\n                var frameEl = domUtils.getWindow(el).frameElement;\n                var offset = {\n                    left: evt.clientX,\n                    top: evt.clientY\n                };\n                if (frameEl && el.ownerDocument !== document) {\n                    var rect = uiUtils.getClientRect(frameEl);\n                    offset.left += rect.left;\n                    offset.top += rect.top;\n                }\n                return offset;\n            },\n            setGlobal: function (id, obj) {\n                root[id] = obj;\n                return magic + '[\"' + id + '\"]';\n            },\n            unsetGlobal: function (id) {\n                delete root[id];\n            },\n            copyAttributes: function (tgt, src) {\n                var attributes = src.attributes;\n                var k = attributes.length;\n                while (k--) {\n                    var attrNode = attributes[k];\n                    if (\n                        attrNode.nodeName != 'style' &&\n                        attrNode.nodeName != 'class' &&\n                        (!browser.ie || attrNode.specified)\n                    ) {\n                        tgt.setAttribute(attrNode.nodeName, attrNode.nodeValue);\n                    }\n                }\n                if (src.className) {\n                    domUtils.addClass(tgt, src.className);\n                }\n                if (src.style.cssText) {\n                    tgt.style.cssText += ';' + src.style.cssText;\n                }\n            },\n            removeStyle: function (el, styleName) {\n                if (el.style.removeProperty) {\n                    el.style.removeProperty(styleName);\n                } else if (el.style.removeAttribute) {\n                    el.style.removeAttribute(styleName);\n                } else throw '';\n            },\n            contains: function (elA, elB) {\n                return (\n                    elA &&\n                    elB &&\n                    (elA === elB ? false : elA.contains ? elA.contains(elB) : elA.compareDocumentPosition(elB) & 16)\n                );\n            },\n            startDrag: function (evt, callbacks, doc) {\n                var doc = doc || document;\n                var startX = evt.clientX;\n                var startY = evt.clientY;\n                function handleMouseMove(evt) {\n                    var x = evt.clientX - startX;\n                    var y = evt.clientY - startY;\n                    callbacks.ondragmove(x, y, evt);\n                    if (evt.stopPropagation) {\n                        evt.stopPropagation();\n                    } else {\n                        evt.cancelBubble = true;\n                    }\n                }\n                if (doc.addEventListener) {\n                    function handleMouseUp(evt) {\n                        doc.removeEventListener('mousemove', handleMouseMove, true);\n                        doc.removeEventListener('mouseup', handleMouseUp, true);\n                        window.removeEventListener('mouseup', handleMouseUp, true);\n                        callbacks.ondragstop();\n                    }\n                    doc.addEventListener('mousemove', handleMouseMove, true);\n                    doc.addEventListener('mouseup', handleMouseUp, true);\n                    window.addEventListener('mouseup', handleMouseUp, true);\n\n                    evt.preventDefault();\n                } else {\n                    var elm = evt.srcElement;\n                    elm.setCapture();\n                    function releaseCaptrue() {\n                        elm.releaseCapture();\n                        elm.detachEvent('onmousemove', handleMouseMove);\n                        elm.detachEvent('onmouseup', releaseCaptrue);\n                        elm.detachEvent('onlosecaptrue', releaseCaptrue);\n                        callbacks.ondragstop();\n                    }\n                    elm.attachEvent('onmousemove', handleMouseMove);\n                    elm.attachEvent('onmouseup', releaseCaptrue);\n                    elm.attachEvent('onlosecaptrue', releaseCaptrue);\n                    evt.returnValue = false;\n                }\n                callbacks.ondragstart();\n            },\n            getFixedLayer: function () {\n                var layer = document.getElementById('edui_fixedlayer');\n                if (layer == null) {\n                    layer = document.createElement('div');\n                    layer.id = 'edui_fixedlayer';\n                    document.body.appendChild(layer);\n                    if (browser.ie && browser.version <= 8) {\n                        layer.style.position = 'absolute';\n                        bindFixedLayer();\n                        setTimeout(updateFixedOffset);\n                    } else {\n                        layer.style.position = 'fixed';\n                    }\n                    layer.style.left = '0';\n                    layer.style.top = '0';\n                    layer.style.width = '0';\n                    layer.style.height = '0';\n                }\n                return layer;\n            },\n            makeUnselectable: function (element) {\n                if (browser.opera || (browser.ie && browser.version < 9)) {\n                    element.unselectable = 'on';\n                    if (element.hasChildNodes()) {\n                        for (var i = 0; i < element.childNodes.length; i++) {\n                            if (element.childNodes[i].nodeType == 1) {\n                                uiUtils.makeUnselectable(element.childNodes[i]);\n                            }\n                        }\n                    }\n                } else {\n                    if (element.style.MozUserSelect !== undefined) {\n                        element.style.MozUserSelect = 'none';\n                    } else if (element.style.WebkitUserSelect !== undefined) {\n                        element.style.WebkitUserSelect = 'none';\n                    } else if (element.style.KhtmlUserSelect !== undefined) {\n                        element.style.KhtmlUserSelect = 'none';\n                    }\n                }\n            }\n        });\n        function updateFixedOffset() {\n            var layer = document.getElementById('edui_fixedlayer');\n            uiUtils.setViewportOffset(layer, {\n                left: 0,\n                top: 0\n            });\n            //        layer.style.display = 'none';\n            //        layer.style.display = 'block';\n\n            //#trace: 1354\n            //        setTimeout(updateFixedOffset);\n        }\n        function bindFixedLayer(adjOffset) {\n            domUtils.on(window, 'scroll', updateFixedOffset);\n            domUtils.on(window, 'resize', baidu.editor.utils.defer(updateFixedOffset, 0, true));\n        }\n    })();\n\n    // ui/uibase.js\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            EventBase = baidu.editor.EventBase,\n            UIBase = (baidu.editor.ui.UIBase = function () {});\n\n        UIBase.prototype = {\n            className: '',\n            uiName: '',\n            initOptions: function (options) {\n                var me = this;\n                for (var k in options) {\n                    me[k] = options[k];\n                }\n                this.id = this.id || 'edui' + uiUtils.uid();\n            },\n            initUIBase: function () {\n                this._globalKey = utils.unhtml(uiUtils.setGlobal(this.id, this));\n            },\n            render: function (holder) {\n                var html = this.renderHtml();\n                var el = uiUtils.createElementByHtml(html);\n\n                //by xuheng 给每个node添加class\n                var list = domUtils.getElementsByTagName(el, '*');\n                var theme = 'edui-' + (this.theme || this.editor.options.theme);\n                var layer = document.getElementById('edui_fixedlayer');\n                for (var i = 0, node; (node = list[i++]); ) {\n                    domUtils.addClass(node, theme);\n                }\n                domUtils.addClass(el, theme);\n                if (layer) {\n                    layer.className = '';\n                    domUtils.addClass(layer, theme);\n                }\n\n                var seatEl = this.getDom();\n                if (seatEl != null) {\n                    seatEl.parentNode.replaceChild(el, seatEl);\n                    uiUtils.copyAttributes(el, seatEl);\n                } else {\n                    if (typeof holder == 'string') {\n                        holder = document.getElementById(holder);\n                    }\n                    holder = holder || uiUtils.getFixedLayer();\n                    domUtils.addClass(holder, theme);\n                    holder.appendChild(el);\n                }\n                this.postRender();\n            },\n            getDom: function (name) {\n                if (!name) {\n                    return document.getElementById(this.id);\n                } else {\n                    return document.getElementById(this.id + '_' + name);\n                }\n            },\n            postRender: function () {\n                this.fireEvent('postrender');\n            },\n            getHtmlTpl: function () {\n                return '';\n            },\n            formatHtml: function (tpl) {\n                var prefix = 'edui-' + this.uiName;\n                return tpl\n                    .replace(/##/g, this.id)\n                    .replace(/%%-/g, this.uiName ? prefix + '-' : '')\n                    .replace(/%%/g, (this.uiName ? prefix : '') + ' ' + this.className)\n                    .replace(/\\$\\$/g, this._globalKey);\n            },\n            renderHtml: function () {\n                return this.formatHtml(this.getHtmlTpl());\n            },\n            dispose: function () {\n                var box = this.getDom();\n                if (box) baidu.editor.dom.domUtils.remove(box);\n                uiUtils.unsetGlobal(this.id);\n            }\n        };\n        utils.inherits(UIBase, EventBase);\n    })();\n\n    // ui/separator.js\n    (function () {\n        var utils = baidu.editor.utils,\n            UIBase = baidu.editor.ui.UIBase,\n            Separator = (baidu.editor.ui.Separator = function (options) {\n                this.initOptions(options);\n                this.initSeparator();\n            });\n        Separator.prototype = {\n            uiName: 'separator',\n            initSeparator: function () {\n                this.initUIBase();\n            },\n            getHtmlTpl: function () {\n                return '<div id=\"##\" class=\"edui-box %%\"></div>';\n            }\n        };\n        utils.inherits(Separator, UIBase);\n    })();\n\n    // ui/mask.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            domUtils = baidu.editor.dom.domUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            uiUtils = baidu.editor.ui.uiUtils;\n\n        var Mask = (baidu.editor.ui.Mask = function (options) {\n            this.initOptions(options);\n            this.initUIBase();\n        });\n        Mask.prototype = {\n            getHtmlTpl: function () {\n                return '<div id=\"##\" class=\"edui-mask %%\" onclick=\"return $$._onClick(event, this);\" onmousedown=\"return $$._onMouseDown(event, this);\"></div>';\n            },\n            postRender: function () {\n                var me = this;\n                domUtils.on(window, 'resize', function () {\n                    setTimeout(function () {\n                        if (!me.isHidden()) {\n                            me._fill();\n                        }\n                    });\n                });\n            },\n            show: function (zIndex) {\n                this._fill();\n                this.getDom().style.display = '';\n                this.getDom().style.zIndex = zIndex;\n            },\n            hide: function () {\n                this.getDom().style.display = 'none';\n                this.getDom().style.zIndex = '';\n            },\n            isHidden: function () {\n                return this.getDom().style.display == 'none';\n            },\n            _onMouseDown: function () {\n                return false;\n            },\n            _onClick: function (e, target) {\n                this.fireEvent('click', e, target);\n            },\n            _fill: function () {\n                var el = this.getDom();\n                var vpRect = uiUtils.getViewportRect();\n                el.style.width = vpRect.width + 'px';\n                el.style.height = vpRect.height + 'px';\n            }\n        };\n        utils.inherits(Mask, UIBase);\n    })();\n\n    // ui/popup.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            domUtils = baidu.editor.dom.domUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            Popup = (baidu.editor.ui.Popup = function (options) {\n                this.initOptions(options);\n                this.initPopup();\n            });\n\n        var allPopups = [];\n        function closeAllPopup(evt, el) {\n            for (var i = 0; i < allPopups.length; i++) {\n                var pop = allPopups[i];\n                if (!pop.isHidden()) {\n                    if (pop.queryAutoHide(el) !== false) {\n                        if (evt && /scroll/gi.test(evt.type) && pop.className == 'edui-wordpastepop') return;\n                        pop.hide();\n                    }\n                }\n            }\n\n            if (allPopups.length) pop.editor.fireEvent('afterhidepop');\n        }\n\n        Popup.postHide = closeAllPopup;\n\n        var ANCHOR_CLASSES = [\n            'edui-anchor-topleft',\n            'edui-anchor-topright',\n            'edui-anchor-bottomleft',\n            'edui-anchor-bottomright'\n        ];\n        Popup.prototype = {\n            SHADOW_RADIUS: 5,\n            content: null,\n            _hidden: false,\n            autoRender: true,\n            canSideLeft: true,\n            canSideUp: true,\n            initPopup: function () {\n                this.initUIBase();\n                allPopups.push(this);\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"edui-popup %%\" onmousedown=\"return false;\">' +\n                    ' <div id=\"##_body\" class=\"edui-popup-body\">' +\n                    ' <iframe style=\"position:absolute;z-index:-1;left:0;top:0;background-color: transparent;\" frameborder=\"0\" width=\"100%\" height=\"100%\" src=\"about:blank\"></iframe>' +\n                    ' <div class=\"edui-shadow\"></div>' +\n                    ' <div id=\"##_content\" class=\"edui-popup-content\">' +\n                    this.getContentHtmlTpl() +\n                    '  </div>' +\n                    ' </div>' +\n                    '</div>'\n                );\n            },\n            getContentHtmlTpl: function () {\n                if (this.content) {\n                    if (typeof this.content == 'string') {\n                        return this.content;\n                    }\n                    return this.content.renderHtml();\n                } else {\n                    return '';\n                }\n            },\n            _UIBase_postRender: UIBase.prototype.postRender,\n            postRender: function () {\n                if (this.content instanceof UIBase) {\n                    this.content.postRender();\n                }\n\n                //捕获鼠标滚轮\n                if (this.captureWheel && !this.captured) {\n                    this.captured = true;\n\n                    var winHeight = (document.documentElement.clientHeight || document.body.clientHeight) - 80,\n                        _height = this.getDom().offsetHeight,\n                        _top = uiUtils.getClientRect(this.combox.getDom()).top,\n                        content = this.getDom('content'),\n                        ifr = this.getDom('body').getElementsByTagName('iframe'),\n                        me = this;\n\n                    ifr.length && (ifr = ifr[0]);\n\n                    while (_top + _height > winHeight) {\n                        _height -= 30;\n                    }\n                    content.style.height = _height + 'px';\n                    //同步更改iframe高度\n                    ifr && (ifr.style.height = _height + 'px');\n\n                    //阻止在combox上的鼠标滚轮事件, 防止用户的正常操作被误解\n                    if (window.XMLHttpRequest) {\n                        domUtils.on(\n                            content,\n                            'onmousewheel' in document.body ? 'mousewheel' : 'DOMMouseScroll',\n                            function (e) {\n                                if (e.preventDefault) {\n                                    e.preventDefault();\n                                } else {\n                                    e.returnValue = false;\n                                }\n\n                                if (e.wheelDelta) {\n                                    content.scrollTop -= (e.wheelDelta / 120) * 60;\n                                } else {\n                                    content.scrollTop -= (e.detail / -3) * 60;\n                                }\n                            }\n                        );\n                    } else {\n                        //ie6\n                        domUtils.on(this.getDom(), 'mousewheel', function (e) {\n                            e.returnValue = false;\n\n                            me.getDom('content').scrollTop -= (e.wheelDelta / 120) * 60;\n                        });\n                    }\n                }\n                this.fireEvent('postRenderAfter');\n                this.hide(true);\n                this._UIBase_postRender();\n            },\n            _doAutoRender: function () {\n                if (!this.getDom() && this.autoRender) {\n                    this.render();\n                }\n            },\n            mesureSize: function () {\n                var box = this.getDom('content');\n                return uiUtils.getClientRect(box);\n            },\n            fitSize: function () {\n                if (this.captureWheel && this.sized) {\n                    return this.__size;\n                }\n                this.sized = true;\n                var popBodyEl = this.getDom('body');\n                popBodyEl.style.width = '';\n                popBodyEl.style.height = '';\n                var size = this.mesureSize();\n                if (this.captureWheel) {\n                    popBodyEl.style.width = -(-20 - size.width) + 'px';\n                    var height = parseInt(this.getDom('content').style.height, 10);\n                    !window.isNaN(height) && (size.height = height);\n                } else {\n                    popBodyEl.style.width = size.width + 'px';\n                }\n                popBodyEl.style.height = size.height + 'px';\n                this.__size = size;\n                this.captureWheel && (this.getDom('content').style.overflow = 'auto');\n                return size;\n            },\n            showAnchor: function (element, hoz) {\n                this.showAnchorRect(uiUtils.getClientRect(element), hoz);\n            },\n            showAnchorRect: function (rect, hoz, adj) {\n                this._doAutoRender();\n                var vpRect = uiUtils.getViewportRect();\n                this.getDom().style.visibility = 'hidden';\n                this._show();\n                var popSize = this.fitSize();\n\n                var sideLeft, sideUp, left, top;\n                if (hoz) {\n                    sideLeft =\n                        this.canSideLeft && rect.right + popSize.width > vpRect.right && rect.left > popSize.width;\n                    sideUp =\n                        this.canSideUp && rect.top + popSize.height > vpRect.bottom && rect.bottom > popSize.height;\n                    left = sideLeft ? rect.left - popSize.width : rect.right;\n                    top = sideUp ? rect.bottom - popSize.height : rect.top;\n                } else {\n                    sideLeft =\n                        this.canSideLeft && rect.right + popSize.width > vpRect.right && rect.left > popSize.width;\n                    sideUp =\n                        this.canSideUp && rect.top + popSize.height > vpRect.bottom && rect.bottom > popSize.height;\n                    left = sideLeft ? rect.right - popSize.width : rect.left;\n                    top = sideUp ? rect.top - popSize.height : rect.bottom;\n                }\n\n                var popEl = this.getDom();\n                uiUtils.setViewportOffset(popEl, {\n                    left: left,\n                    top: top\n                });\n                domUtils.removeClasses(popEl, ANCHOR_CLASSES);\n                popEl.className += ' ' + ANCHOR_CLASSES[(sideUp ? 1 : 0) * 2 + (sideLeft ? 1 : 0)];\n                if (this.editor) {\n                    popEl.style.zIndex = this.editor.container.style.zIndex * 1 + 10;\n                    baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex = popEl.style.zIndex - 1;\n                }\n                this.getDom().style.visibility = 'visible';\n            },\n            showAt: function (offset) {\n                var left = offset.left;\n                var top = offset.top;\n                var rect = {\n                    left: left,\n                    top: top,\n                    right: left,\n                    bottom: top,\n                    height: 0,\n                    width: 0\n                };\n                this.showAnchorRect(rect, false, true);\n            },\n            _show: function () {\n                if (this._hidden) {\n                    var box = this.getDom();\n                    box.style.display = '';\n                    this._hidden = false;\n                    //                if (box.setActive) {\n                    //                    box.setActive();\n                    //                }\n                    this.fireEvent('show');\n                }\n            },\n            isHidden: function () {\n                return this._hidden;\n            },\n            show: function () {\n                this._doAutoRender();\n                this._show();\n            },\n            hide: function (notNofity) {\n                if (!this._hidden && this.getDom()) {\n                    this.getDom().style.display = 'none';\n                    this._hidden = true;\n                    if (!notNofity) {\n                        this.fireEvent('hide');\n                    }\n                }\n            },\n            queryAutoHide: function (el) {\n                return !el || !uiUtils.contains(this.getDom(), el);\n            }\n        };\n        utils.inherits(Popup, UIBase);\n\n        domUtils.on(document, 'mousedown', function (evt) {\n            var el = evt.target || evt.srcElement;\n            closeAllPopup(evt, el);\n        });\n        domUtils.on(window, 'scroll', function (evt, el) {\n            closeAllPopup(evt, el);\n        });\n    })();\n\n    // ui/colorpicker.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            UIBase = baidu.editor.ui.UIBase,\n            ColorPicker = (baidu.editor.ui.ColorPicker = function (options) {\n                this.initOptions(options);\n                this.noColorText = this.noColorText || this.editor.getLang('clearColor');\n                this.initUIBase();\n            });\n\n        ColorPicker.prototype = {\n            getHtmlTpl: function () {\n                return genColorPicker(this.noColorText, this.editor);\n            },\n            _onTableClick: function (evt) {\n                var tgt = evt.target || evt.srcElement;\n                var color = tgt.getAttribute('data-color');\n                if (color) {\n                    this.fireEvent('pickcolor', color);\n                }\n            },\n            _onTableOver: function (evt) {\n                var tgt = evt.target || evt.srcElement;\n                var color = tgt.getAttribute('data-color');\n                if (color) {\n                    this.getDom('preview').style.backgroundColor = color;\n                }\n            },\n            _onTableOut: function () {\n                this.getDom('preview').style.backgroundColor = '';\n            },\n            _onPickNoColor: function () {\n                this.fireEvent('picknocolor');\n            }\n        };\n        utils.inherits(ColorPicker, UIBase);\n\n        var COLORS = (\n            'ffffff,000000,eeece1,1f497d,4f81bd,c0504d,9bbb59,8064a2,4bacc6,f79646,' +\n            'f2f2f2,7f7f7f,ddd9c3,c6d9f0,dbe5f1,f2dcdb,ebf1dd,e5e0ec,dbeef3,fdeada,' +\n            'd8d8d8,595959,c4bd97,8db3e2,b8cce4,e5b9b7,d7e3bc,ccc1d9,b7dde8,fbd5b5,' +\n            'bfbfbf,3f3f3f,938953,548dd4,95b3d7,d99694,c3d69b,b2a2c7,92cddc,fac08f,' +\n            'a5a5a5,262626,494429,17365d,366092,953734,76923c,5f497a,31859b,e36c09,' +\n            '7f7f7f,0c0c0c,1d1b10,0f243e,244061,632423,4f6128,3f3151,205867,974806,' +\n            '23a565,ffa726,e75a2d,03a9f4,ff7d7a,008cd4,673ab7,2196f3,f596aa,3f51b5'\n        ).split(',');\n\n        function genColorPicker(noColorText, editor) {\n            var html =\n                '<div id=\"##\" class=\"edui-colorpicker %%\">' +\n                '<div class=\"edui-colorpicker-topbar edui-clearfix\">' +\n                '<div unselectable=\"on\" id=\"##_preview\" class=\"edui-colorpicker-preview\"></div>' +\n                '<div unselectable=\"on\" class=\"edui-colorpicker-nocolor\" onclick=\"$$._onPickNoColor(event, this);\">' +\n                noColorText +\n                '</div>' +\n                '</div>' +\n                '<table  class=\"edui-box\" style=\"border-collapse: collapse;\" onmouseover=\"$$._onTableOver(event, this);\" onmouseout=\"$$._onTableOut(event, this);\" onclick=\"return $$._onTableClick(event, this);\" cellspacing=\"0\" cellpadding=\"0\">' +\n                '<tr style=\"border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;padding-top: 2px\"><td colspan=\"10\">' +\n                editor.getLang('themeColor') +\n                '</td> </tr>' +\n                '<tr class=\"edui-colorpicker-tablefirstrow\" >';\n            for (var i = 0; i < COLORS.length; i++) {\n                if (i && i % 10 === 0) {\n                    html +=\n                        '</tr>' +\n                        (i == 60\n                            ? '<tr style=\"border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;\"><td colspan=\"10\">' +\n                              editor.getLang('standardColor') +\n                              '</td></tr>'\n                            : '') +\n                        '<tr' +\n                        (i == 60 ? ' class=\"edui-colorpicker-tablefirstrow\"' : '') +\n                        '>';\n                }\n                html +=\n                    i < 70\n                        ? '<td style=\"padding: 0 2px;\"><a hidefocus title=\"' +\n                          COLORS[i] +\n                          '\" onclick=\"return false;\" href=\"javascript:\" unselectable=\"on\" class=\"edui-box edui-colorpicker-colorcell\"' +\n                          ' data-color=\"#' +\n                          COLORS[i] +\n                          '\"' +\n                          ' style=\"background-color:#' +\n                          COLORS[i] +\n                          ';border:solid #ccc;' +\n                          (i < 10 || i >= 60\n                              ? 'border-width:1px;'\n                              : i >= 10 && i < 20\n                              ? 'border-width:1px 1px 0 1px;'\n                              : 'border-width:0 1px 0 1px;') +\n                          '\"' +\n                          '></a></td>'\n                        : '';\n            }\n            html += '</tr></table></div>';\n            return html;\n        }\n    })();\n\n    // ui/tablepicker.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            UIBase = baidu.editor.ui.UIBase;\n\n        var TablePicker = (baidu.editor.ui.TablePicker = function (options) {\n            this.initOptions(options);\n            this.initTablePicker();\n        });\n        TablePicker.prototype = {\n            defaultNumRows: 10,\n            defaultNumCols: 10,\n            maxNumRows: 20,\n            maxNumCols: 20,\n            numRows: 10,\n            numCols: 10,\n            lengthOfCellSide: 22,\n            initTablePicker: function () {\n                this.initUIBase();\n            },\n            getHtmlTpl: function () {\n                var me = this;\n                return (\n                    '<div id=\"##\" class=\"edui-tablepicker %%\">' +\n                    '<div class=\"edui-tablepicker-body\">' +\n                    '<div class=\"edui-infoarea\">' +\n                    '<span id=\"##_label\" class=\"edui-label\"></span>' +\n                    '</div>' +\n                    '<div class=\"edui-pickarea\"' +\n                    ' onmousemove=\"$$._onMouseMove(event, this);\"' +\n                    ' onmouseover=\"$$._onMouseOver(event, this);\"' +\n                    ' onmouseout=\"$$._onMouseOut(event, this);\"' +\n                    ' onclick=\"$$._onClick(event, this);\"' +\n                    '>' +\n                    '<div id=\"##_overlay\" class=\"edui-overlay\"></div>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>'\n                );\n            },\n            _UIBase_render: UIBase.prototype.render,\n            render: function (holder) {\n                this._UIBase_render(holder);\n                this.getDom('label').innerHTML =\n                    '0' + this.editor.getLang('t_row') + ' x 0' + this.editor.getLang('t_col');\n            },\n            _track: function (numCols, numRows) {\n                var style = this.getDom('overlay').style;\n                var sideLen = this.lengthOfCellSide;\n                style.width = numCols * sideLen + 'px';\n                style.height = numRows * sideLen + 'px';\n                var label = this.getDom('label');\n                label.innerHTML =\n                    numCols + this.editor.getLang('t_col') + ' x ' + numRows + this.editor.getLang('t_row');\n                this.numCols = numCols;\n                this.numRows = numRows;\n            },\n            _onMouseOver: function (evt, el) {\n                var rel = evt.relatedTarget || evt.fromElement;\n                if (!uiUtils.contains(el, rel) && el !== rel) {\n                    this.getDom('label').innerHTML =\n                        '0' + this.editor.getLang('t_col') + ' x 0' + this.editor.getLang('t_row');\n                    this.getDom('overlay').style.visibility = '';\n                }\n            },\n            _onMouseOut: function (evt, el) {\n                var rel = evt.relatedTarget || evt.toElement;\n                if (!uiUtils.contains(el, rel) && el !== rel) {\n                    this.getDom('label').innerHTML =\n                        '0' + this.editor.getLang('t_col') + ' x 0' + this.editor.getLang('t_row');\n                    this.getDom('overlay').style.visibility = 'hidden';\n                }\n            },\n            _onMouseMove: function (evt, el) {\n                var style = this.getDom('overlay').style;\n                var offset = uiUtils.getEventOffset(evt);\n                var sideLen = this.lengthOfCellSide;\n                var numCols = Math.ceil(offset.left / sideLen);\n                var numRows = Math.ceil(offset.top / sideLen);\n                this._track(numCols, numRows);\n            },\n            _onClick: function () {\n                this.fireEvent('picktable', this.numCols, this.numRows);\n            }\n        };\n        utils.inherits(TablePicker, UIBase);\n    })();\n\n    // ui/stateful.js\n    (function () {\n        var browser = baidu.editor.browser,\n            domUtils = baidu.editor.dom.domUtils,\n            uiUtils = baidu.editor.ui.uiUtils;\n\n        var TPL_STATEFUL =\n            'onmousedown=\"$$.Stateful_onMouseDown(event, this);\"' +\n            ' onmouseup=\"$$.Stateful_onMouseUp(event, this);\"' +\n            (browser.ie\n                ? ' onmouseenter=\"$$.Stateful_onMouseEnter(event, this);\"' +\n                  ' onmouseleave=\"$$.Stateful_onMouseLeave(event, this);\"'\n                : ' onmouseover=\"$$.Stateful_onMouseOver(event, this);\"' +\n                  ' onmouseout=\"$$.Stateful_onMouseOut(event, this);\"');\n\n        baidu.editor.ui.Stateful = {\n            alwalysHoverable: false,\n            target: null, //目标元素和this指向dom不一样\n            Stateful_init: function () {\n                this._Stateful_dGetHtmlTpl = this.getHtmlTpl;\n                this.getHtmlTpl = this.Stateful_getHtmlTpl;\n            },\n            Stateful_getHtmlTpl: function () {\n                var tpl = this._Stateful_dGetHtmlTpl();\n                // 使用function避免$转义\n                return tpl.replace(/stateful/g, function () {\n                    return TPL_STATEFUL;\n                });\n            },\n            Stateful_onMouseEnter: function (evt, el) {\n                this.target = el;\n                if (!this.isDisabled() || this.alwalysHoverable) {\n                    this.addState('hover');\n                    this.fireEvent('over');\n                }\n            },\n            Stateful_onMouseLeave: function (evt, el) {\n                if (!this.isDisabled() || this.alwalysHoverable) {\n                    this.removeState('hover');\n                    this.removeState('active');\n                    this.fireEvent('out');\n                }\n            },\n            Stateful_onMouseOver: function (evt, el) {\n                var rel = evt.relatedTarget;\n                if (!uiUtils.contains(el, rel) && el !== rel) {\n                    this.Stateful_onMouseEnter(evt, el);\n                }\n            },\n            Stateful_onMouseOut: function (evt, el) {\n                var rel = evt.relatedTarget;\n                if (!uiUtils.contains(el, rel) && el !== rel) {\n                    this.Stateful_onMouseLeave(evt, el);\n                }\n            },\n            Stateful_onMouseDown: function (evt, el) {\n                if (!this.isDisabled()) {\n                    this.addState('active');\n                }\n            },\n            Stateful_onMouseUp: function (evt, el) {\n                if (!this.isDisabled()) {\n                    this.removeState('active');\n                }\n            },\n            Stateful_postRender: function () {\n                if (this.disabled && !this.hasState('disabled')) {\n                    this.addState('disabled');\n                }\n            },\n            hasState: function (state) {\n                return domUtils.hasClass(this.getStateDom(), 'edui-state-' + state);\n            },\n            addState: function (state) {\n                if (!this.hasState(state)) {\n                    this.getStateDom().className += ' edui-state-' + state;\n                }\n            },\n            removeState: function (state) {\n                if (this.hasState(state)) {\n                    domUtils.removeClasses(this.getStateDom(), ['edui-state-' + state]);\n                }\n            },\n            getStateDom: function () {\n                return this.getDom('state');\n            },\n            isChecked: function () {\n                return this.hasState('checked');\n            },\n            setChecked: function (checked) {\n                if (!this.isDisabled() && checked) {\n                    this.addState('checked');\n                } else {\n                    this.removeState('checked');\n                }\n            },\n            isDisabled: function () {\n                return this.hasState('disabled');\n            },\n            setDisabled: function (disabled) {\n                if (disabled) {\n                    this.removeState('hover');\n                    this.removeState('checked');\n                    this.removeState('active');\n                    this.addState('disabled');\n                } else {\n                    this.removeState('disabled');\n                }\n            }\n        };\n    })();\n\n    // ui/button.js\n    ///import core\n    ///import uicore\n    ///import ui/stateful.js\n    (function () {\n        var utils = baidu.editor.utils,\n            UIBase = baidu.editor.ui.UIBase,\n            Stateful = baidu.editor.ui.Stateful,\n            Button = (baidu.editor.ui.Button = function (options) {\n                if (options.name) {\n                    var btnName = options.name;\n                    var cssRules = options.cssRules;\n                    if (!options.className) {\n                        options.className = 'edui-for-' + btnName;\n                    }\n                    options.cssRules = '.edui-default  .edui-for-' + btnName + ' .edui-icon {' + cssRules + '}';\n                }\n                this.initOptions(options);\n                this.initButton();\n            });\n        Button.prototype = {\n            uiName: 'button',\n            label: '',\n            title: '',\n            showIcon: true,\n            showText: true,\n            cssRules: '',\n            initButton: function () {\n                this.initUIBase();\n                this.Stateful_init();\n                if (this.cssRules) {\n                    utils.cssRule('edui-customize-' + this.name + '-style', this.cssRules);\n                }\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"edui-box %%\">' +\n                    '<div id=\"##_state\" stateful>' +\n                    '<div class=\"%%-wrap\"><div id=\"##_body\" unselectable=\"on\" ' +\n                    (this.title ? 'title=\"' + this.title + '\"' : '') +\n                    ' class=\"%%-body\" onmousedown=\"return $$._onMouseDown(event, this);\" onclick=\"return $$._onClick(event, this);\">' +\n                    (this.showIcon ? '<div class=\"edui-box edui-icon\"></div>' : '') +\n                    (this.showText ? '<div class=\"edui-box edui-label\">' + this.label + '</div>' : '') +\n                    '</div>' +\n                    '</div>' +\n                    '</div></div>'\n                );\n            },\n            postRender: function () {\n                this.Stateful_postRender();\n                this.setDisabled(this.disabled);\n            },\n            _onMouseDown: function (e) {\n                var target = e.target || e.srcElement,\n                    tagName = target && target.tagName && target.tagName.toLowerCase();\n                if (tagName == 'input' || tagName == 'object' || tagName == 'object') {\n                    return false;\n                }\n            },\n            _onClick: function () {\n                if (!this.isDisabled()) {\n                    this.fireEvent('click');\n                }\n            },\n            setTitle: function (text) {\n                var label = this.getDom('label');\n                label.innerHTML = text;\n            }\n        };\n        utils.inherits(Button, UIBase);\n        utils.extend(Button.prototype, Stateful);\n    })();\n\n    // ui/splitbutton.js\n    ///import core\n    ///import uicore\n    ///import ui/stateful.js\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            domUtils = baidu.editor.dom.domUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            Stateful = baidu.editor.ui.Stateful,\n            SplitButton = (baidu.editor.ui.SplitButton = function (options) {\n                this.initOptions(options);\n                this.initSplitButton();\n            });\n        SplitButton.prototype = {\n            popup: null,\n            uiName: 'splitbutton',\n            title: '',\n            initSplitButton: function () {\n                this.initUIBase();\n                this.Stateful_init();\n                var me = this;\n                if (this.popup != null) {\n                    var popup = this.popup;\n                    this.popup = null;\n                    this.setPopup(popup);\n                }\n            },\n            _UIBase_postRender: UIBase.prototype.postRender,\n            postRender: function () {\n                this.Stateful_postRender();\n                this._UIBase_postRender();\n            },\n            setPopup: function (popup) {\n                if (this.popup === popup) return;\n                if (this.popup != null) {\n                    this.popup.dispose();\n                }\n                popup.addListener('show', utils.bind(this._onPopupShow, this));\n                popup.addListener('hide', utils.bind(this._onPopupHide, this));\n                popup.addListener(\n                    'postrender',\n                    utils.bind(function () {\n                        popup\n                            .getDom('body')\n                            .appendChild(\n                                uiUtils.createElementByHtml(\n                                    '<div id=\"' +\n                                        this.popup.id +\n                                        '_bordereraser\" class=\"edui-bordereraser edui-background\" style=\"width:' +\n                                        (uiUtils.getClientRect(this.getDom()).width + 20) +\n                                        'px\"></div>'\n                                )\n                            );\n                        popup.getDom().className += ' ' + this.className;\n                    }, this)\n                );\n                this.popup = popup;\n            },\n            _onPopupShow: function () {\n                this.addState('opened');\n            },\n            _onPopupHide: function () {\n                this.removeState('opened');\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"edui-box %%\">' +\n                    '<div ' +\n                    (this.title ? 'title=\"' + this.title + '\"' : '') +\n                    ' id=\"##_state\" stateful><div class=\"%%-body\">' +\n                    '<div id=\"##_button_body\" class=\"edui-box edui-button-body\" onclick=\"$$._onButtonClick(event, this);\">' +\n                    '<div class=\"edui-box edui-icon\"></div>' +\n                    '</div>' +\n                    '<div class=\"edui-box edui-splitborder\"></div>' +\n                    '<div class=\"edui-box edui-arrow\" onclick=\"$$._onArrowClick();\"></div>' +\n                    '</div></div></div>'\n                );\n            },\n            showPopup: function () {\n                // 当popup往上弹出的时候，做特殊处理\n                var rect = uiUtils.getClientRect(this.getDom());\n                rect.top -= this.popup.SHADOW_RADIUS;\n                rect.height += this.popup.SHADOW_RADIUS;\n                this.popup.showAnchorRect(rect);\n            },\n            _onArrowClick: function (event, el) {\n                if (!this.isDisabled()) {\n                    this.showPopup();\n                }\n            },\n            _onButtonClick: function () {\n                if (!this.isDisabled()) {\n                    this.fireEvent('buttonclick');\n                }\n            }\n        };\n        utils.inherits(SplitButton, UIBase);\n        utils.extend(SplitButton.prototype, Stateful, true);\n    })();\n\n    // ui/colorbutton.js\n    ///import core\n    ///import uicore\n    ///import ui/colorpicker.js\n    ///import ui/popup.js\n    ///import ui/splitbutton.js\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            ColorPicker = baidu.editor.ui.ColorPicker,\n            Popup = baidu.editor.ui.Popup,\n            SplitButton = baidu.editor.ui.SplitButton,\n            ColorButton = (baidu.editor.ui.ColorButton = function (options) {\n                this.initOptions(options);\n                this.initColorButton();\n            });\n        ColorButton.prototype = {\n            initColorButton: function () {\n                var me = this;\n                this.popup = new Popup({\n                    content: new ColorPicker({\n                        noColorText: me.editor.getLang('clearColor'),\n                        editor: me.editor,\n                        onpickcolor: function (t, color) {\n                            me._onPickColor(color);\n                        },\n                        onpicknocolor: function (t, color) {\n                            me._onPickNoColor(color);\n                        }\n                    }),\n                    editor: me.editor\n                });\n                this.initSplitButton();\n            },\n            _SplitButton_postRender: SplitButton.prototype.postRender,\n            postRender: function () {\n                this._SplitButton_postRender();\n                this.getDom('button_body').appendChild(\n                    uiUtils.createElementByHtml('<div id=\"' + this.id + '_colorlump\" class=\"edui-colorlump\"></div>')\n                );\n                this.getDom().className += ' edui-colorbutton';\n            },\n            setColor: function (color) {\n                this.getDom('colorlump').style.backgroundColor = color;\n                this.color = color;\n            },\n            _onPickColor: function (color) {\n                if (this.fireEvent('pickcolor', color) !== false) {\n                    this.setColor(color);\n                    this.popup.hide();\n                }\n            },\n            _onPickNoColor: function (color) {\n                if (this.fireEvent('picknocolor') !== false) {\n                    this.popup.hide();\n                }\n            }\n        };\n        utils.inherits(ColorButton, SplitButton);\n    })();\n\n    // ui/tablebutton.js\n    ///import core\n    ///import uicore\n    ///import ui/popup.js\n    ///import ui/tablepicker.js\n    ///import ui/splitbutton.js\n    (function () {\n        var utils = baidu.editor.utils,\n            Popup = baidu.editor.ui.Popup,\n            TablePicker = baidu.editor.ui.TablePicker,\n            SplitButton = baidu.editor.ui.SplitButton,\n            TableButton = (baidu.editor.ui.TableButton = function (options) {\n                this.initOptions(options);\n                this.initTableButton();\n            });\n        TableButton.prototype = {\n            initTableButton: function () {\n                var me = this;\n                this.popup = new Popup({\n                    content: new TablePicker({\n                        editor: me.editor,\n                        onpicktable: function (t, numCols, numRows) {\n                            me._onPickTable(numCols, numRows);\n                        }\n                    }),\n                    editor: me.editor\n                });\n                this.initSplitButton();\n            },\n            _onPickTable: function (numCols, numRows) {\n                if (this.fireEvent('picktable', numCols, numRows) !== false) {\n                    this.popup.hide();\n                }\n            }\n        };\n        utils.inherits(TableButton, SplitButton);\n    })();\n\n    // ui/autotypesetpicker.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            UIBase = baidu.editor.ui.UIBase;\n\n        var AutoTypeSetPicker = (baidu.editor.ui.AutoTypeSetPicker = function (options) {\n            this.initOptions(options);\n            this.initAutoTypeSetPicker();\n        });\n        AutoTypeSetPicker.prototype = {\n            initAutoTypeSetPicker: function () {\n                this.initUIBase();\n            },\n            getHtmlTpl: function () {\n                var me = this.editor,\n                    opt = me.options.autotypeset,\n                    lang = me.getLang('autoTypeSet');\n\n                var textAlignInputName = 'textAlignValue' + me.uid,\n                    imageBlockInputName = 'imageBlockLineValue' + me.uid,\n                    symbolConverInputName = 'symbolConverValue' + me.uid;\n\n                return (\n                    '<div id=\"##\" class=\"edui-autotypesetpicker %%\">' +\n                    '<div class=\"edui-autotypesetpicker-body\">' +\n                    '<table >' +\n                    '<tr><td nowrap><input type=\"checkbox\" name=\"mergeEmptyline\" ' +\n                    (opt['mergeEmptyline'] ? 'checked' : '') +\n                    '>' +\n                    lang.mergeLine +\n                    '</td><td colspan=\"2\"><input type=\"checkbox\" name=\"removeEmptyline\" ' +\n                    (opt['removeEmptyline'] ? 'checked' : '') +\n                    '>' +\n                    lang.delLine +\n                    '</td></tr>' +\n                    '<tr><td nowrap><input type=\"checkbox\" name=\"removeClass\" ' +\n                    (opt['removeClass'] ? 'checked' : '') +\n                    '>' +\n                    lang.removeFormat +\n                    '</td><td colspan=\"2\"><input type=\"checkbox\" name=\"indent\" ' +\n                    (opt['indent'] ? 'checked' : '') +\n                    '>' +\n                    lang.indent +\n                    '</td></tr>' +\n                    '<tr>' +\n                    '<td nowrap><input type=\"checkbox\" name=\"textAlign\" ' +\n                    (opt['textAlign'] ? 'checked' : '') +\n                    '>' +\n                    lang.alignment +\n                    '</td>' +\n                    '<td colspan=\"2\" id=\"' +\n                    textAlignInputName +\n                    '\">' +\n                    '<input type=\"radio\" name=\"' +\n                    textAlignInputName +\n                    '\" value=\"left\" ' +\n                    (opt['textAlign'] && opt['textAlign'] == 'left' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifyleft') +\n                    '<input type=\"radio\" name=\"' +\n                    textAlignInputName +\n                    '\" value=\"center\" ' +\n                    (opt['textAlign'] && opt['textAlign'] == 'center' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifycenter') +\n                    '<input type=\"radio\" name=\"' +\n                    textAlignInputName +\n                    '\" value=\"right\" ' +\n                    (opt['textAlign'] && opt['textAlign'] == 'right' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifyright') +\n                    '</td>' +\n                    '</tr>' +\n                    '<tr>' +\n                    '<td nowrap><input type=\"checkbox\" name=\"imageBlockLine\" ' +\n                    (opt['imageBlockLine'] ? 'checked' : '') +\n                    '>' +\n                    lang.imageFloat +\n                    '</td>' +\n                    '<td nowrap id=\"' +\n                    imageBlockInputName +\n                    '\">' +\n                    '<input type=\"radio\" name=\"' +\n                    imageBlockInputName +\n                    '\" value=\"none\" ' +\n                    (opt['imageBlockLine'] && opt['imageBlockLine'] == 'none' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('default') +\n                    '<input type=\"radio\" name=\"' +\n                    imageBlockInputName +\n                    '\" value=\"left\" ' +\n                    (opt['imageBlockLine'] && opt['imageBlockLine'] == 'left' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifyleft') +\n                    '<input type=\"radio\" name=\"' +\n                    imageBlockInputName +\n                    '\" value=\"center\" ' +\n                    (opt['imageBlockLine'] && opt['imageBlockLine'] == 'center' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifycenter') +\n                    '<input type=\"radio\" name=\"' +\n                    imageBlockInputName +\n                    '\" value=\"right\" ' +\n                    (opt['imageBlockLine'] && opt['imageBlockLine'] == 'right' ? 'checked' : '') +\n                    '>' +\n                    me.getLang('justifyright') +\n                    '</td>' +\n                    '</tr>' +\n                    '<tr><td nowrap><input type=\"checkbox\" name=\"clearFontSize\" ' +\n                    (opt['clearFontSize'] ? 'checked' : '') +\n                    '>' +\n                    lang.removeFontsize +\n                    '</td><td colspan=\"2\"><input type=\"checkbox\" name=\"clearFontFamily\" ' +\n                    (opt['clearFontFamily'] ? 'checked' : '') +\n                    '>' +\n                    lang.removeFontFamily +\n                    '</td></tr>' +\n                    '<tr><td nowrap colspan=\"3\"><input type=\"checkbox\" name=\"removeEmptyNode\" ' +\n                    (opt['removeEmptyNode'] ? 'checked' : '') +\n                    '>' +\n                    lang.removeHtml +\n                    '</td></tr>' +\n                    '<tr><td nowrap colspan=\"3\"><input type=\"checkbox\" name=\"pasteFilter\" ' +\n                    (opt['pasteFilter'] ? 'checked' : '') +\n                    '>' +\n                    lang.pasteFilter +\n                    '</td></tr>' +\n                    '<tr>' +\n                    '<td nowrap><input type=\"checkbox\" name=\"symbolConver\" ' +\n                    (opt['bdc2sb'] || opt['tobdc'] ? 'checked' : '') +\n                    '>' +\n                    lang.symbol +\n                    '</td>' +\n                    '<td id=\"' +\n                    symbolConverInputName +\n                    '\">' +\n                    '<input type=\"radio\" name=\"bdc\" value=\"bdc2sb\" ' +\n                    (opt['bdc2sb'] ? 'checked' : '') +\n                    '>' +\n                    lang.bdc2sb +\n                    '<input type=\"radio\" name=\"bdc\" value=\"tobdc\" ' +\n                    (opt['tobdc'] ? 'checked' : '') +\n                    '>' +\n                    lang.tobdc +\n                    '' +\n                    '</td>' +\n                    '<td nowrap align=\"right\"><button >' +\n                    lang.run +\n                    '</button></td>' +\n                    '</tr>' +\n                    '</table>' +\n                    '</div>' +\n                    '</div>'\n                );\n            },\n            _UIBase_render: UIBase.prototype.render\n        };\n        utils.inherits(AutoTypeSetPicker, UIBase);\n    })();\n\n    // ui/autotypesetbutton.js\n    ///import core\n    ///import uicore\n    ///import ui/popup.js\n    ///import ui/autotypesetpicker.js\n    ///import ui/splitbutton.js\n    (function () {\n        var utils = baidu.editor.utils,\n            Popup = baidu.editor.ui.Popup,\n            AutoTypeSetPicker = baidu.editor.ui.AutoTypeSetPicker,\n            SplitButton = baidu.editor.ui.SplitButton,\n            AutoTypeSetButton = (baidu.editor.ui.AutoTypeSetButton = function (options) {\n                this.initOptions(options);\n                this.initAutoTypeSetButton();\n            });\n        function getPara(me) {\n            var opt = {},\n                cont = me.getDom(),\n                editorId = me.editor.uid,\n                inputType = null,\n                attrName = null,\n                ipts = domUtils.getElementsByTagName(cont, 'input');\n            for (var i = ipts.length - 1, ipt; (ipt = ipts[i--]); ) {\n                inputType = ipt.getAttribute('type');\n                if (inputType == 'checkbox') {\n                    attrName = ipt.getAttribute('name');\n                    opt[attrName] && delete opt[attrName];\n                    if (ipt.checked) {\n                        var attrValue = document.getElementById(attrName + 'Value' + editorId);\n                        if (attrValue) {\n                            if (/input/gi.test(attrValue.tagName)) {\n                                opt[attrName] = attrValue.value;\n                            } else {\n                                var iptChilds = attrValue.getElementsByTagName('input');\n                                for (var j = iptChilds.length - 1, iptchild; (iptchild = iptChilds[j--]); ) {\n                                    if (iptchild.checked) {\n                                        opt[attrName] = iptchild.value;\n                                        break;\n                                    }\n                                }\n                            }\n                        } else {\n                            opt[attrName] = true;\n                        }\n                    } else {\n                        opt[attrName] = false;\n                    }\n                } else {\n                    opt[ipt.getAttribute('value')] = ipt.checked;\n                }\n            }\n\n            var selects = domUtils.getElementsByTagName(cont, 'select');\n            for (var i = 0, si; (si = selects[i++]); ) {\n                var attr = si.getAttribute('name');\n                opt[attr] = opt[attr] ? si.value : '';\n            }\n\n            utils.extend(me.editor.options.autotypeset, opt);\n\n            me.editor.setPreferences('autotypeset', opt);\n        }\n\n        AutoTypeSetButton.prototype = {\n            initAutoTypeSetButton: function () {\n                var me = this;\n                this.popup = new Popup({\n                    //传入配置参数\n                    content: new AutoTypeSetPicker({ editor: me.editor }),\n                    editor: me.editor,\n                    hide: function () {\n                        if (!this._hidden && this.getDom()) {\n                            getPara(this);\n                            this.getDom().style.display = 'none';\n                            this._hidden = true;\n                            this.fireEvent('hide');\n                        }\n                    }\n                });\n                var flag = 0;\n                this.popup.addListener('postRenderAfter', function () {\n                    var popupUI = this;\n                    if (flag) return;\n                    var cont = this.getDom(),\n                        btn = cont.getElementsByTagName('button')[0];\n\n                    btn.onclick = function () {\n                        getPara(popupUI);\n                        me.editor.execCommand('autotypeset');\n                        popupUI.hide();\n                    };\n\n                    domUtils.on(cont, 'click', function (e) {\n                        var target = e.target || e.srcElement,\n                            editorId = me.editor.uid;\n                        if (target && target.tagName == 'INPUT') {\n                            // 点击图片浮动的checkbox,去除对应的radio\n                            if (\n                                target.name == 'imageBlockLine' ||\n                                target.name == 'textAlign' ||\n                                target.name == 'symbolConver'\n                            ) {\n                                var checked = target.checked,\n                                    radioTd = document.getElementById(target.name + 'Value' + editorId),\n                                    radios = radioTd.getElementsByTagName('input'),\n                                    defalutSelect = {\n                                        imageBlockLine: 'none',\n                                        textAlign: 'left',\n                                        symbolConver: 'tobdc'\n                                    };\n\n                                for (var i = 0; i < radios.length; i++) {\n                                    if (checked) {\n                                        if (radios[i].value == defalutSelect[target.name]) {\n                                            radios[i].checked = 'checked';\n                                        }\n                                    } else {\n                                        radios[i].checked = false;\n                                    }\n                                }\n                            }\n                            // 点击radio,选中对应的checkbox\n                            if (\n                                target.name == 'imageBlockLineValue' + editorId ||\n                                target.name == 'textAlignValue' + editorId ||\n                                target.name == 'bdc'\n                            ) {\n                                var checkboxs = target.parentNode.previousSibling.getElementsByTagName('input');\n                                checkboxs && (checkboxs[0].checked = true);\n                            }\n\n                            getPara(popupUI);\n                        }\n                    });\n\n                    flag = 1;\n                });\n                this.initSplitButton();\n            }\n        };\n        utils.inherits(AutoTypeSetButton, SplitButton);\n    })();\n\n    // ui/cellalignpicker.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            Popup = baidu.editor.ui.Popup,\n            Stateful = baidu.editor.ui.Stateful,\n            UIBase = baidu.editor.ui.UIBase;\n\n        /**\n         * 该参数将新增一个参数： selected， 参数类型为一个Object， 形如{ 'align': 'center', 'valign': 'top' }， 表示单元格的初始\n         * 对齐状态为： 竖直居上，水平居中; 其中 align的取值为：'center', 'left', 'right'; valign的取值为: 'top', 'middle', 'bottom'\n         * @update 2013/4/2 hancong03@baidu.com\n         */\n        var CellAlignPicker = (baidu.editor.ui.CellAlignPicker = function (options) {\n            this.initOptions(options);\n            this.initSelected();\n            this.initCellAlignPicker();\n        });\n        CellAlignPicker.prototype = {\n            //初始化选中状态， 该方法将根据传递进来的参数获取到应该选中的对齐方式图标的索引\n            initSelected: function () {\n                var status = {\n                        valign: {\n                            top: 0,\n                            middle: 1,\n                            bottom: 2\n                        },\n                        align: {\n                            left: 0,\n                            center: 1,\n                            right: 2\n                        },\n                        count: 3\n                    },\n                    result = -1;\n\n                if (this.selected) {\n                    this.selectedIndex =\n                        status.valign[this.selected.valign] * status.count + status.align[this.selected.align];\n                }\n            },\n            initCellAlignPicker: function () {\n                this.initUIBase();\n                this.Stateful_init();\n            },\n            getHtmlTpl: function () {\n                var alignType = ['left', 'center', 'right'],\n                    COUNT = 9,\n                    tempClassName = null,\n                    tempIndex = -1,\n                    tmpl = [];\n\n                for (var i = 0; i < COUNT; i++) {\n                    tempClassName = this.selectedIndex === i ? ' class=\"edui-cellalign-selected\" ' : '';\n                    tempIndex = i % 3;\n\n                    tempIndex === 0 && tmpl.push('<tr>');\n\n                    tmpl.push(\n                        '<td index=\"' +\n                            i +\n                            '\" ' +\n                            tempClassName +\n                            ' stateful><div class=\"edui-icon edui-' +\n                            alignType[tempIndex] +\n                            '\"></div></td>'\n                    );\n\n                    tempIndex === 2 && tmpl.push('</tr>');\n                }\n\n                return (\n                    '<div id=\"##\" class=\"edui-cellalignpicker %%\">' +\n                    '<div class=\"edui-cellalignpicker-body\">' +\n                    '<table onclick=\"$$._onClick(event);\">' +\n                    tmpl.join('') +\n                    '</table>' +\n                    '</div>' +\n                    '</div>'\n                );\n            },\n            getStateDom: function () {\n                return this.target;\n            },\n            _onClick: function (evt) {\n                var target = evt.target || evt.srcElement;\n                if (/icon/.test(target.className)) {\n                    this.items[target.parentNode.getAttribute('index')].onclick();\n                    Popup.postHide(evt);\n                }\n            },\n            _UIBase_render: UIBase.prototype.render\n        };\n        utils.inherits(CellAlignPicker, UIBase);\n        utils.extend(CellAlignPicker.prototype, Stateful, true);\n    })();\n\n    // ui/pastepicker.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            Stateful = baidu.editor.ui.Stateful,\n            uiUtils = baidu.editor.ui.uiUtils,\n            UIBase = baidu.editor.ui.UIBase;\n\n        var PastePicker = (baidu.editor.ui.PastePicker = function (options) {\n            this.initOptions(options);\n            this.initPastePicker();\n        });\n        PastePicker.prototype = {\n            initPastePicker: function () {\n                this.initUIBase();\n                this.Stateful_init();\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div class=\"edui-pasteicon\" onclick=\"$$._onClick(this)\"></div>' +\n                    '<div class=\"edui-pastecontainer\">' +\n                    '<div class=\"edui-title\">' +\n                    this.editor.getLang('pasteOpt') +\n                    '</div>' +\n                    '<div class=\"edui-button\">' +\n                    '<div title=\"' +\n                    this.editor.getLang('pasteSourceFormat') +\n                    '\" onclick=\"$$.format(false)\" stateful>' +\n                    '<div class=\"edui-richtxticon\"></div></div>' +\n                    '<div title=\"' +\n                    this.editor.getLang('tagFormat') +\n                    '\" onclick=\"$$.format(2)\" stateful>' +\n                    '<div class=\"edui-tagicon\"></div></div>' +\n                    '<div title=\"' +\n                    this.editor.getLang('pasteTextFormat') +\n                    '\" onclick=\"$$.format(true)\" stateful>' +\n                    '<div class=\"edui-plaintxticon\"></div></div>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>'\n                );\n            },\n            getStateDom: function () {\n                return this.target;\n            },\n            format: function (param) {\n                this.editor.ui._isTransfer = true;\n                this.editor.fireEvent('pasteTransfer', param);\n            },\n            _onClick: function (cur) {\n                var node = domUtils.getNextDomNode(cur),\n                    screenHt = uiUtils.getViewportRect().height,\n                    subPop = uiUtils.getClientRect(node);\n\n                if (subPop.top + subPop.height > screenHt) node.style.top = -subPop.height - cur.offsetHeight + 'px';\n                else node.style.top = '';\n\n                if (/hidden/gi.test(domUtils.getComputedStyle(node, 'visibility'))) {\n                    node.style.visibility = 'visible';\n                    domUtils.addClass(cur, 'edui-state-opened');\n                } else {\n                    node.style.visibility = 'hidden';\n                    domUtils.removeClasses(cur, 'edui-state-opened');\n                }\n            },\n            _UIBase_render: UIBase.prototype.render\n        };\n        utils.inherits(PastePicker, UIBase);\n        utils.extend(PastePicker.prototype, Stateful, true);\n    })();\n\n    // ui/toolbar.js\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            Toolbar = (baidu.editor.ui.Toolbar = function (options) {\n                this.initOptions(options);\n                this.initToolbar();\n            });\n        Toolbar.prototype = {\n            items: null,\n            initToolbar: function () {\n                this.items = this.items || [];\n                this.initUIBase();\n            },\n            add: function (item, index) {\n                if (index === undefined) {\n                    this.items.push(item);\n                } else {\n                    this.items.splice(index, 0, item);\n                }\n            },\n            getHtmlTpl: function () {\n                var buff = [];\n                for (var i = 0; i < this.items.length; i++) {\n                    buff[i] = this.items[i].renderHtml();\n                }\n                return (\n                    '<div id=\"##\" class=\"edui-toolbar %%\" onselectstart=\"return false;\" onmousedown=\"return $$._onMouseDown(event, this);\">' +\n                    buff.join('') +\n                    '</div>'\n                );\n            },\n            postRender: function () {\n                var box = this.getDom();\n                for (var i = 0; i < this.items.length; i++) {\n                    this.items[i].postRender();\n                }\n                uiUtils.makeUnselectable(box);\n            },\n            _onMouseDown: function (e) {\n                var target = e.target || e.srcElement,\n                    tagName = target && target.tagName && target.tagName.toLowerCase();\n                if (tagName == 'input' || tagName == 'object' || tagName == 'object') {\n                    return false;\n                }\n            }\n        };\n        utils.inherits(Toolbar, UIBase);\n    })();\n\n    // ui/menu.js\n    ///import core\n    ///import uicore\n    ///import ui\\popup.js\n    ///import ui\\stateful.js\n    (function () {\n        var utils = baidu.editor.utils,\n            domUtils = baidu.editor.dom.domUtils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            Popup = baidu.editor.ui.Popup,\n            Stateful = baidu.editor.ui.Stateful,\n            CellAlignPicker = baidu.editor.ui.CellAlignPicker,\n            Menu = (baidu.editor.ui.Menu = function (options) {\n                this.initOptions(options);\n                this.initMenu();\n            });\n\n        var menuSeparator = {\n            renderHtml: function () {\n                return '<div class=\"edui-menuitem edui-menuseparator\"><div class=\"edui-menuseparator-inner\"></div></div>';\n            },\n            postRender: function () {},\n            queryAutoHide: function () {\n                return true;\n            }\n        };\n        Menu.prototype = {\n            items: null,\n            uiName: 'menu',\n            initMenu: function () {\n                this.items = this.items || [];\n                this.initPopup();\n                this.initItems();\n            },\n            initItems: function () {\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    if (item == '-') {\n                        this.items[i] = this.getSeparator();\n                    } else if (!(item instanceof MenuItem)) {\n                        item.editor = this.editor;\n                        item.theme = this.editor.options.theme;\n                        this.items[i] = this.createItem(item);\n                    }\n                }\n            },\n            getSeparator: function () {\n                return menuSeparator;\n            },\n            createItem: function (item) {\n                //新增一个参数menu, 该参数存储了menuItem所对应的menu引用\n                item.menu = this;\n                return new MenuItem(item);\n            },\n            _Popup_getContentHtmlTpl: Popup.prototype.getContentHtmlTpl,\n            getContentHtmlTpl: function () {\n                if (this.items.length == 0) {\n                    return this._Popup_getContentHtmlTpl();\n                }\n                var buff = [];\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    buff[i] = item.renderHtml();\n                }\n                return '<div class=\"%%-body\">' + buff.join('') + '</div>';\n            },\n            _Popup_postRender: Popup.prototype.postRender,\n            postRender: function () {\n                var me = this;\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    item.ownerMenu = this;\n                    item.postRender();\n                }\n                domUtils.on(this.getDom(), 'mouseover', function (evt) {\n                    evt = evt || event;\n                    var rel = evt.relatedTarget || evt.fromElement;\n                    var el = me.getDom();\n                    if (!uiUtils.contains(el, rel) && el !== rel) {\n                        me.fireEvent('over');\n                    }\n                });\n                this._Popup_postRender();\n            },\n            queryAutoHide: function (el) {\n                if (el) {\n                    if (uiUtils.contains(this.getDom(), el)) {\n                        return false;\n                    }\n                    for (var i = 0; i < this.items.length; i++) {\n                        var item = this.items[i];\n                        if (item.queryAutoHide(el) === false) {\n                            return false;\n                        }\n                    }\n                }\n            },\n            clearItems: function () {\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    clearTimeout(item._showingTimer);\n                    clearTimeout(item._closingTimer);\n                    if (item.subMenu) {\n                        item.subMenu.destroy();\n                    }\n                }\n                this.items = [];\n            },\n            destroy: function () {\n                if (this.getDom()) {\n                    domUtils.remove(this.getDom());\n                }\n                this.clearItems();\n            },\n            dispose: function () {\n                this.destroy();\n            }\n        };\n        utils.inherits(Menu, Popup);\n\n        /**\n         * @update 2013/04/03 hancong03 新增一个参数menu, 该参数存储了menuItem所对应的menu引用\n         * @type {Function}\n         */\n        var MenuItem = (baidu.editor.ui.MenuItem = function (options) {\n            this.initOptions(options);\n            this.initUIBase();\n            this.Stateful_init();\n            if (this.subMenu && !(this.subMenu instanceof Menu)) {\n                if (options.className && options.className.indexOf('aligntd') != -1) {\n                    var me = this;\n\n                    //获取单元格对齐初始状态\n                    this.subMenu.selected = this.editor.queryCommandValue('cellalignment');\n\n                    this.subMenu = new Popup({\n                        content: new CellAlignPicker(this.subMenu),\n                        parentMenu: me,\n                        editor: me.editor,\n                        destroy: function () {\n                            if (this.getDom()) {\n                                domUtils.remove(this.getDom());\n                            }\n                        }\n                    });\n                    this.subMenu.addListener('postRenderAfter', function () {\n                        domUtils.on(this.getDom(), 'mouseover', function () {\n                            me.addState('opened');\n                        });\n                    });\n                } else {\n                    this.subMenu = new Menu(this.subMenu);\n                }\n            }\n        });\n        MenuItem.prototype = {\n            label: '',\n            subMenu: null,\n            ownerMenu: null,\n            uiName: 'menuitem',\n            alwalysHoverable: true,\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"%%\" stateful onclick=\"$$._onClick(event, this);\">' +\n                    '<div class=\"%%-body\">' +\n                    this.renderLabelHtml() +\n                    '</div>' +\n                    '</div>'\n                );\n            },\n            postRender: function () {\n                var me = this;\n                this.addListener('over', function () {\n                    me.ownerMenu.fireEvent('submenuover', me);\n                    if (me.subMenu) {\n                        me.delayShowSubMenu();\n                    }\n                });\n                if (this.subMenu) {\n                    this.getDom().className += ' edui-hassubmenu';\n                    this.subMenu.render();\n                    this.addListener('out', function () {\n                        me.delayHideSubMenu();\n                    });\n                    this.subMenu.addListener('over', function () {\n                        clearTimeout(me._closingTimer);\n                        me._closingTimer = null;\n                        me.addState('opened');\n                    });\n                    this.ownerMenu.addListener('hide', function () {\n                        me.hideSubMenu();\n                    });\n                    this.ownerMenu.addListener('submenuover', function (t, subMenu) {\n                        if (subMenu !== me) {\n                            me.delayHideSubMenu();\n                        }\n                    });\n                    this.subMenu._bakQueryAutoHide = this.subMenu.queryAutoHide;\n                    this.subMenu.queryAutoHide = function (el) {\n                        if (el && uiUtils.contains(me.getDom(), el)) {\n                            return false;\n                        }\n                        return this._bakQueryAutoHide(el);\n                    };\n                }\n                this.getDom().style.tabIndex = '-1';\n                uiUtils.makeUnselectable(this.getDom());\n                this.Stateful_postRender();\n            },\n            delayShowSubMenu: function () {\n                var me = this;\n                if (!me.isDisabled()) {\n                    me.addState('opened');\n                    clearTimeout(me._showingTimer);\n                    clearTimeout(me._closingTimer);\n                    me._closingTimer = null;\n                    me._showingTimer = setTimeout(function () {\n                        me.showSubMenu();\n                    }, 250);\n                }\n            },\n            delayHideSubMenu: function () {\n                var me = this;\n                if (!me.isDisabled()) {\n                    me.removeState('opened');\n                    clearTimeout(me._showingTimer);\n                    if (!me._closingTimer) {\n                        me._closingTimer = setTimeout(function () {\n                            if (!me.hasState('opened')) {\n                                me.hideSubMenu();\n                            }\n                            me._closingTimer = null;\n                        }, 400);\n                    }\n                }\n            },\n            renderLabelHtml: function () {\n                return (\n                    '<div class=\"edui-arrow\"></div>' +\n                    '<div class=\"edui-box edui-icon\"></div>' +\n                    '<div class=\"edui-box edui-label %%-label\">' +\n                    (this.label || '') +\n                    '</div>'\n                );\n            },\n            getStateDom: function () {\n                return this.getDom();\n            },\n            queryAutoHide: function (el) {\n                if (this.subMenu && this.hasState('opened')) {\n                    return this.subMenu.queryAutoHide(el);\n                }\n            },\n            _onClick: function (event, this_) {\n                if (this.hasState('disabled')) return;\n                if (this.fireEvent('click', event, this_) !== false) {\n                    if (this.subMenu) {\n                        this.showSubMenu();\n                    } else {\n                        Popup.postHide(event);\n                    }\n                }\n            },\n            showSubMenu: function () {\n                var rect = uiUtils.getClientRect(this.getDom());\n                rect.right -= 5;\n                rect.left += 2;\n                rect.width -= 7;\n                rect.top -= 4;\n                rect.bottom += 4;\n                rect.height += 8;\n                this.subMenu.showAnchorRect(rect, true, true);\n            },\n            hideSubMenu: function () {\n                this.subMenu.hide();\n            }\n        };\n        utils.inherits(MenuItem, UIBase);\n        utils.extend(MenuItem.prototype, Stateful, true);\n    })();\n\n    // ui/combox.js\n    ///import core\n    ///import uicore\n    ///import ui/menu.js\n    ///import ui/splitbutton.js\n    (function () {\n        // todo: menu和item提成通用list\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            Menu = baidu.editor.ui.Menu,\n            SplitButton = baidu.editor.ui.SplitButton,\n            Combox = (baidu.editor.ui.Combox = function (options) {\n                this.initOptions(options);\n                this.initCombox();\n            });\n        Combox.prototype = {\n            uiName: 'combox',\n            onbuttonclick: function () {\n                this.showPopup();\n            },\n            initCombox: function () {\n                var me = this;\n                this.items = this.items || [];\n                for (var i = 0; i < this.items.length; i++) {\n                    var item = this.items[i];\n                    item.uiName = 'listitem';\n                    item.index = i;\n                    item.onclick = function () {\n                        me.selectByIndex(this.index);\n                    };\n                }\n                this.popup = new Menu({\n                    items: this.items,\n                    uiName: 'list',\n                    editor: this.editor,\n                    captureWheel: true,\n                    combox: this\n                });\n\n                this.initSplitButton();\n            },\n            _SplitButton_postRender: SplitButton.prototype.postRender,\n            postRender: function () {\n                this._SplitButton_postRender();\n                this.setLabel(this.label || '');\n                this.setValue(this.initValue || '');\n            },\n            showPopup: function () {\n                var rect = uiUtils.getClientRect(this.getDom());\n                rect.top += 1;\n                rect.bottom -= 1;\n                rect.height -= 2;\n                this.popup.showAnchorRect(rect);\n            },\n            getValue: function () {\n                return this.value;\n            },\n            setValue: function (value) {\n                var index = this.indexByValue(value);\n                if (index != -1) {\n                    this.selectedIndex = index;\n                    this.setLabel(this.items[index].label);\n                    this.value = this.items[index].value;\n                } else {\n                    this.selectedIndex = -1;\n                    this.setLabel(this.getLabelForUnknowValue(value));\n                    this.value = value;\n                }\n            },\n            setLabel: function (label) {\n                this.getDom('button_body').innerHTML = label;\n                this.label = label;\n            },\n            getLabelForUnknowValue: function (value) {\n                return value;\n            },\n            indexByValue: function (value) {\n                for (var i = 0; i < this.items.length; i++) {\n                    if (value == this.items[i].value) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getItem: function (index) {\n                return this.items[index];\n            },\n            selectByIndex: function (index) {\n                if (index < this.items.length && this.fireEvent('select', index) !== false) {\n                    this.selectedIndex = index;\n                    this.value = this.items[index].value;\n                    this.setLabel(this.items[index].label);\n                }\n            }\n        };\n        utils.inherits(Combox, SplitButton);\n    })();\n\n    // ui/dialog.js\n    ///import core\n    ///import uicore\n    ///import ui/mask.js\n    ///import ui/button.js\n    (function () {\n        var utils = baidu.editor.utils,\n            domUtils = baidu.editor.dom.domUtils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            Mask = baidu.editor.ui.Mask,\n            UIBase = baidu.editor.ui.UIBase,\n            Button = baidu.editor.ui.Button,\n            Dialog = (baidu.editor.ui.Dialog = function (options) {\n                if (options.name) {\n                    var name = options.name;\n                    var cssRules = options.cssRules;\n                    if (!options.className) {\n                        options.className = 'edui-for-' + name;\n                    }\n                    if (cssRules) {\n                        options.cssRules =\n                            '.edui-default .edui-for-' + name + ' .edui-dialog-content  {' + cssRules + '}';\n                    }\n                }\n                this.initOptions(\n                    utils.extend(\n                        {\n                            autoReset: true,\n                            draggable: true,\n                            onok: function () {},\n                            oncancel: function () {},\n                            onclose: function (t, ok) {\n                                return ok ? this.onok() : this.oncancel();\n                            },\n                            //是否控制dialog中的scroll事件， 默认为不阻止\n                            holdScroll: false\n                        },\n                        options\n                    )\n                );\n                this.initDialog();\n            });\n        var modalMask;\n        var dragMask;\n        var activeDialog;\n        Dialog.prototype = {\n            draggable: false,\n            uiName: 'dialog',\n            initDialog: function () {\n                var me = this,\n                    theme = this.editor.options.theme;\n                if (this.cssRules) {\n                    utils.cssRule('edui-customize-' + this.name + '-style', this.cssRules);\n                }\n                this.initUIBase();\n                this.modalMask =\n                    modalMask ||\n                    (modalMask = new Mask({\n                        className: 'edui-dialog-modalmask',\n                        theme: theme,\n                        onclick: function () {\n                            activeDialog && activeDialog.close(false);\n                        }\n                    }));\n                this.dragMask =\n                    dragMask ||\n                    (dragMask = new Mask({\n                        className: 'edui-dialog-dragmask',\n                        theme: theme\n                    }));\n                this.closeButton = new Button({\n                    className: 'edui-dialog-closebutton',\n                    title: me.closeDialog,\n                    theme: theme,\n                    onclick: function () {\n                        me.close(false);\n                    }\n                });\n\n                this.fullscreen && this.initResizeEvent();\n\n                if (this.buttons) {\n                    for (var i = 0; i < this.buttons.length; i++) {\n                        if (!(this.buttons[i] instanceof Button)) {\n                            this.buttons[i] = new Button(\n                                utils.extend(\n                                    this.buttons[i],\n                                    {\n                                        editor: this.editor\n                                    },\n                                    true\n                                )\n                            );\n                        }\n                    }\n                }\n            },\n            initResizeEvent: function () {\n                var me = this;\n\n                domUtils.on(window, 'resize', function () {\n                    if (me._hidden || me._hidden === undefined) {\n                        return;\n                    }\n\n                    if (me.__resizeTimer) {\n                        window.clearTimeout(me.__resizeTimer);\n                    }\n\n                    me.__resizeTimer = window.setTimeout(function () {\n                        me.__resizeTimer = null;\n\n                        var dialogWrapNode = me.getDom(),\n                            contentNode = me.getDom('content'),\n                            wrapRect = UE.ui.uiUtils.getClientRect(dialogWrapNode),\n                            contentRect = UE.ui.uiUtils.getClientRect(contentNode),\n                            vpRect = uiUtils.getViewportRect();\n\n                        contentNode.style.width = vpRect.width - wrapRect.width + contentRect.width + 'px';\n                        contentNode.style.height = vpRect.height - wrapRect.height + contentRect.height + 'px';\n\n                        dialogWrapNode.style.width = vpRect.width + 'px';\n                        dialogWrapNode.style.height = vpRect.height + 'px';\n\n                        me.fireEvent('resize');\n                    }, 100);\n                });\n            },\n            fitSize: function () {\n                var popBodyEl = this.getDom('body');\n                //            if (!(baidu.editor.browser.ie && baidu.editor.browser.version == 7)) {\n                //                uiUtils.removeStyle(popBodyEl, 'width');\n                //                uiUtils.removeStyle(popBodyEl, 'height');\n                //            }\n                var size = this.mesureSize();\n                popBodyEl.style.width = size.width + 'px';\n                popBodyEl.style.height = size.height + 'px';\n                return size;\n            },\n            safeSetOffset: function (offset) {\n                var me = this;\n                var el = me.getDom();\n                var vpRect = uiUtils.getViewportRect();\n                var rect = uiUtils.getClientRect(el);\n                var left = offset.left;\n                if (left + rect.width > vpRect.right) {\n                    left = vpRect.right - rect.width;\n                }\n                var top = offset.top;\n                if (top + rect.height > vpRect.bottom) {\n                    top = vpRect.bottom - rect.height;\n                }\n                el.style.left = Math.max(left, 0) + 'px';\n                el.style.top = Math.max(top, 0) + 'px';\n            },\n            showAtCenter: function () {\n                var vpRect = uiUtils.getViewportRect();\n\n                if (!this.fullscreen) {\n                    this.getDom().style.display = '';\n                    var popSize = this.fitSize();\n                    var titleHeight = this.getDom('titlebar').offsetHeight | 0;\n                    var left = vpRect.width / 2 - popSize.width / 2;\n                    var top = vpRect.height / 2 - (popSize.height - titleHeight) / 2 - titleHeight;\n                    var popEl = this.getDom();\n                    this.safeSetOffset({\n                        left: Math.max(left | 0, 0),\n                        top: Math.max(top | 0, 0)\n                    });\n                    if (!domUtils.hasClass(popEl, 'edui-state-centered')) {\n                        popEl.className += ' edui-state-centered';\n                    }\n                } else {\n                    var dialogWrapNode = this.getDom(),\n                        contentNode = this.getDom('content');\n\n                    dialogWrapNode.style.display = 'block';\n\n                    var wrapRect = UE.ui.uiUtils.getClientRect(dialogWrapNode),\n                        contentRect = UE.ui.uiUtils.getClientRect(contentNode);\n                    dialogWrapNode.style.left = '-100000px';\n\n                    contentNode.style.width = vpRect.width - wrapRect.width + contentRect.width + 'px';\n                    contentNode.style.height = vpRect.height - wrapRect.height + contentRect.height + 'px';\n\n                    dialogWrapNode.style.width = vpRect.width + 'px';\n                    dialogWrapNode.style.height = vpRect.height + 'px';\n                    dialogWrapNode.style.left = 0;\n\n                    //保存环境的overflow值\n                    this._originalContext = {\n                        html: {\n                            overflowX: document.documentElement.style.overflowX,\n                            overflowY: document.documentElement.style.overflowY\n                        },\n                        body: {\n                            overflowX: document.body.style.overflowX,\n                            overflowY: document.body.style.overflowY\n                        }\n                    };\n\n                    document.documentElement.style.overflowX = 'hidden';\n                    document.documentElement.style.overflowY = 'hidden';\n                    document.body.style.overflowX = 'hidden';\n                    document.body.style.overflowY = 'hidden';\n                }\n\n                this._show();\n            },\n            getContentHtml: function () {\n                var contentHtml = '';\n                if (typeof this.content == 'string') {\n                    contentHtml = this.content;\n                } else if (this.iframeUrl) {\n                    contentHtml =\n                        '<span id=\"' +\n                        this.id +\n                        '_contmask\" class=\"dialogcontmask\"></span><iframe id=\"' +\n                        this.id +\n                        '_iframe\" class=\"%%-iframe\" height=\"100%\" width=\"100%\" frameborder=\"0\" src=\"' +\n                        this.iframeUrl +\n                        '\"></iframe>';\n                }\n                return contentHtml;\n            },\n            getHtmlTpl: function () {\n                var footHtml = '';\n\n                if (this.buttons) {\n                    var buff = [];\n                    for (var i = 0; i < this.buttons.length; i++) {\n                        buff[i] = this.buttons[i].renderHtml();\n                    }\n                    footHtml =\n                        '<div class=\"%%-foot\">' +\n                        '<div id=\"##_buttons\" class=\"%%-buttons\">' +\n                        buff.join('') +\n                        '</div>' +\n                        '</div>';\n                }\n\n                return (\n                    '<div id=\"##\" class=\"%%\"><div ' +\n                    (!this.fullscreen ? 'class=\"%%\"' : 'class=\"%%-wrap edui-dialog-fullscreen-flag\"') +\n                    '><div id=\"##_body\" class=\"%%-body\">' +\n                    '<div class=\"%%-shadow\"></div>' +\n                    '<div id=\"##_titlebar\" class=\"%%-titlebar\">' +\n                    '<div class=\"%%-draghandle\" onmousedown=\"$$._onTitlebarMouseDown(event, this);\">' +\n                    '<span class=\"%%-caption\">' +\n                    (this.title || '') +\n                    '</span>' +\n                    '</div>' +\n                    this.closeButton.renderHtml() +\n                    '</div>' +\n                    '<div id=\"##_content\" class=\"%%-content\">' +\n                    (this.autoReset ? '' : this.getContentHtml()) +\n                    '</div>' +\n                    footHtml +\n                    '</div></div></div>'\n                );\n            },\n            postRender: function () {\n                // todo: 保持居中/记住上次关闭位置选项\n                if (!this.modalMask.getDom()) {\n                    this.modalMask.render();\n                    this.modalMask.hide();\n                }\n                if (!this.dragMask.getDom()) {\n                    this.dragMask.render();\n                    this.dragMask.hide();\n                }\n                var me = this;\n                this.addListener('show', function () {\n                    me.modalMask.show(this.getDom().style.zIndex - 2);\n                });\n                this.addListener('hide', function () {\n                    me.modalMask.hide();\n                });\n                if (this.buttons) {\n                    for (var i = 0; i < this.buttons.length; i++) {\n                        this.buttons[i].postRender();\n                    }\n                }\n                domUtils.on(window, 'resize', function () {\n                    setTimeout(function () {\n                        if (!me.isHidden()) {\n                            me.safeSetOffset(uiUtils.getClientRect(me.getDom()));\n                        }\n                    });\n                });\n\n                //hold住scroll事件，防止dialog的滚动影响页面\n                //            if( this.holdScroll ) {\n                //\n                //                if( !me.iframeUrl ) {\n                //                    domUtils.on( document.getElementById( me.id + \"_iframe\"), !browser.gecko ? \"mousewheel\" : \"DOMMouseScroll\", function(e){\n                //                        domUtils.preventDefault(e);\n                //                    } );\n                //                } else {\n                //                    me.addListener('dialogafterreset', function(){\n                //                        window.setTimeout(function(){\n                //                            var iframeWindow = document.getElementById( me.id + \"_iframe\").contentWindow;\n                //\n                //                            if( browser.ie ) {\n                //\n                //                                var timer = window.setInterval(function(){\n                //\n                //                                    if( iframeWindow.document && iframeWindow.document.body ) {\n                //                                        window.clearInterval( timer );\n                //                                        timer = null;\n                //                                        domUtils.on( iframeWindow.document.body, !browser.gecko ? \"mousewheel\" : \"DOMMouseScroll\", function(e){\n                //                                            domUtils.preventDefault(e);\n                //                                        } );\n                //                                    }\n                //\n                //                                }, 100);\n                //\n                //                            } else {\n                //                                domUtils.on( iframeWindow, !browser.gecko ? \"mousewheel\" : \"DOMMouseScroll\", function(e){\n                //                                    domUtils.preventDefault(e);\n                //                                } );\n                //                            }\n                //\n                //                        }, 1);\n                //                    });\n                //                }\n                //\n                //            }\n                this._hide();\n            },\n            mesureSize: function () {\n                var body = this.getDom('body');\n                var width = uiUtils.getClientRect(this.getDom('content')).width;\n                var dialogBodyStyle = body.style;\n                dialogBodyStyle.width = width;\n                return uiUtils.getClientRect(body);\n            },\n            _onTitlebarMouseDown: function (evt, el) {\n                if (this.draggable) {\n                    var rect;\n                    var vpRect = uiUtils.getViewportRect();\n                    var me = this;\n                    uiUtils.startDrag(evt, {\n                        ondragstart: function () {\n                            rect = uiUtils.getClientRect(me.getDom());\n                            me.getDom('contmask').style.visibility = 'visible';\n                            me.dragMask.show(me.getDom().style.zIndex - 1);\n                        },\n                        ondragmove: function (x, y) {\n                            var left = rect.left + x;\n                            var top = rect.top + y;\n                            me.safeSetOffset({\n                                left: left,\n                                top: top\n                            });\n                        },\n                        ondragstop: function () {\n                            me.getDom('contmask').style.visibility = 'hidden';\n                            domUtils.removeClasses(me.getDom(), ['edui-state-centered']);\n                            me.dragMask.hide();\n                        }\n                    });\n                }\n            },\n            reset: function () {\n                this.getDom('content').innerHTML = this.getContentHtml();\n                this.fireEvent('dialogafterreset');\n            },\n            _show: function () {\n                if (this._hidden) {\n                    this.getDom().style.display = '';\n\n                    //要高过编辑器的zindxe 主要是弹窗层级要高duanjun 修改增加3000\n                    this.editor.container.style.zIndex &&\n                        (this.getDom().style.zIndex = this.editor.container.style.zIndex * 1 + 3000);\n                    this._hidden = false;\n                    this.fireEvent('show');\n                    baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex = this.getDom().style.zIndex - 4;\n                }\n            },\n            isHidden: function () {\n                return this._hidden;\n            },\n            _hide: function () {\n                if (!this._hidden) {\n                    var wrapNode = this.getDom();\n                    wrapNode.style.display = 'none';\n                    wrapNode.style.zIndex = '';\n                    wrapNode.style.width = '';\n                    wrapNode.style.height = '';\n                    this._hidden = true;\n                    this.fireEvent('hide');\n                }\n            },\n            open: function () {\n                if (this.autoReset) {\n                    //有可能还没有渲染\n                    try {\n                        this.reset();\n                    } catch (e) {\n                        this.render();\n                        this.open();\n                    }\n                }\n                this.showAtCenter();\n                if (this.iframeUrl) {\n                    try {\n                        this.getDom('iframe').focus();\n                    } catch (ex) {}\n                }\n                activeDialog = this;\n            },\n            _onCloseButtonClick: function (evt, el) {\n                this.close(false);\n            },\n            close: function (ok) {\n                if (this.fireEvent('close', ok) !== false) {\n                    //还原环境\n                    if (this.fullscreen) {\n                        document.documentElement.style.overflowX = this._originalContext.html.overflowX;\n                        document.documentElement.style.overflowY = this._originalContext.html.overflowY;\n                        document.body.style.overflowX = this._originalContext.body.overflowX;\n                        document.body.style.overflowY = this._originalContext.body.overflowY;\n                        delete this._originalContext;\n                    }\n                    this._hide();\n\n                    //销毁content\n                    var content = this.getDom('content');\n                    var iframe = this.getDom('iframe');\n                    if (content && iframe) {\n                        var doc = iframe.contentDocument || iframe.contentWindow.document;\n                        doc && (doc.body.innerHTML = '');\n                        domUtils.remove(content);\n                    }\n                }\n            }\n        };\n        utils.inherits(Dialog, UIBase);\n    })();\n\n    // ui/menubutton.js\n    ///import core\n    ///import uicore\n    ///import ui/menu.js\n    ///import ui/splitbutton.js\n    (function () {\n        var utils = baidu.editor.utils,\n            Menu = baidu.editor.ui.Menu,\n            SplitButton = baidu.editor.ui.SplitButton,\n            MenuButton = (baidu.editor.ui.MenuButton = function (options) {\n                this.initOptions(options);\n                this.initMenuButton();\n            });\n        MenuButton.prototype = {\n            initMenuButton: function () {\n                var me = this;\n                this.uiName = 'menubutton';\n                this.popup = new Menu({\n                    items: me.items,\n                    className: me.className,\n                    editor: me.editor\n                });\n                this.popup.addListener('show', function () {\n                    var list = this;\n                    for (var i = 0; i < list.items.length; i++) {\n                        list.items[i].removeState('checked');\n                        if (list.items[i].value == me._value) {\n                            list.items[i].addState('checked');\n                            this.value = me._value;\n                        }\n                    }\n                });\n                this.initSplitButton();\n            },\n            setValue: function (value) {\n                this._value = value;\n            }\n        };\n        utils.inherits(MenuButton, SplitButton);\n    })();\n\n    // ui/multiMenu.js\n    ///import core\n    ///import uicore\n    ///commands 表情\n    (function () {\n        var utils = baidu.editor.utils,\n            Popup = baidu.editor.ui.Popup,\n            SplitButton = baidu.editor.ui.SplitButton,\n            MultiMenuPop = (baidu.editor.ui.MultiMenuPop = function (options) {\n                this.initOptions(options);\n                this.initMultiMenu();\n            });\n\n        MultiMenuPop.prototype = {\n            initMultiMenu: function () {\n                var me = this;\n                this.popup = new Popup({\n                    content: '',\n                    editor: me.editor,\n                    iframe_rendered: false,\n                    onshow: function () {\n                        if (!this.iframe_rendered) {\n                            this.iframe_rendered = true;\n                            this.getDom('content').innerHTML =\n                                '<iframe id=\"' +\n                                me.id +\n                                '_iframe\" src=\"' +\n                                me.iframeUrl +\n                                '\" frameborder=\"0\"></iframe>';\n                            me.editor.container.style.zIndex &&\n                                (this.getDom().style.zIndex = me.editor.container.style.zIndex * 1 + 1);\n                        }\n                    }\n                    // canSideUp:false,\n                    // canSideLeft:false\n                });\n                this.onbuttonclick = function () {\n                    this.showPopup();\n                };\n                this.initSplitButton();\n            }\n        };\n\n        utils.inherits(MultiMenuPop, SplitButton);\n    })();\n\n    // ui/shortcutmenu.js\n    (function () {\n        var UI = baidu.editor.ui,\n            UIBase = UI.UIBase,\n            uiUtils = UI.uiUtils,\n            utils = baidu.editor.utils,\n            domUtils = baidu.editor.dom.domUtils;\n\n        var allMenus = [], //存储所有快捷菜单\n            timeID,\n            isSubMenuShow = false; //是否有子pop显示\n\n        var ShortCutMenu = (UI.ShortCutMenu = function (options) {\n            this.initOptions(options);\n            this.initShortCutMenu();\n        });\n\n        ShortCutMenu.postHide = hideAllMenu;\n\n        ShortCutMenu.prototype = {\n            isHidden: true,\n            SPACE: 5,\n            initShortCutMenu: function () {\n                this.items = this.items || [];\n                this.initUIBase();\n                this.initItems();\n                this.initEvent();\n                allMenus.push(this);\n            },\n            initEvent: function () {\n                var me = this,\n                    doc = me.editor.document;\n\n                domUtils.on(doc, 'mousemove', function (e) {\n                    if (me.isHidden === false) {\n                        //有pop显示就不隐藏快捷菜单\n                        if (me.getSubMenuMark() || me.eventType == 'contextmenu') return;\n\n                        var flag = true,\n                            el = me.getDom(),\n                            wt = el.offsetWidth,\n                            ht = el.offsetHeight,\n                            distanceX = wt / 2 + me.SPACE, //距离中心X标准\n                            distanceY = ht / 2, //距离中心Y标准\n                            x = Math.abs(e.screenX - me.left), //离中心距离横坐标\n                            y = Math.abs(e.screenY - me.top); //离中心距离纵坐标\n\n                        clearTimeout(timeID);\n                        timeID = setTimeout(function () {\n                            if (y > 0 && y < distanceY) {\n                                me.setOpacity(el, '1');\n                            } else if (y > distanceY && y < distanceY + 70) {\n                                me.setOpacity(el, '0.5');\n                                flag = false;\n                            } else if (y > distanceY + 70 && y < distanceY + 140) {\n                                me.hide();\n                            }\n\n                            if (flag && x > 0 && x < distanceX) {\n                                me.setOpacity(el, '1');\n                            } else if (x > distanceX && x < distanceX + 70) {\n                                me.setOpacity(el, '0.5');\n                            } else if (x > distanceX + 70 && x < distanceX + 140) {\n                                me.hide();\n                            }\n                        });\n                    }\n                });\n\n                //ie\\ff下 mouseout不准\n                if (browser.chrome) {\n                    domUtils.on(doc, 'mouseout', function (e) {\n                        var relatedTgt = e.relatedTarget || e.toElement;\n\n                        if (relatedTgt == null || relatedTgt.tagName == 'HTML') {\n                            me.hide();\n                        }\n                    });\n                }\n\n                me.editor.addListener('afterhidepop', function () {\n                    if (!me.isHidden) {\n                        isSubMenuShow = true;\n                    }\n                });\n            },\n            initItems: function () {\n                if (utils.isArray(this.items)) {\n                    for (var i = 0, len = this.items.length; i < len; i++) {\n                        var item = this.items[i].toLowerCase();\n\n                        if (UI[item]) {\n                            this.items[i] = new UI[item](this.editor);\n                            this.items[i].className += ' edui-shortcutsubmenu ';\n                        }\n                    }\n                }\n            },\n            setOpacity: function (el, value) {\n                if (browser.ie && browser.version < 9) {\n                    el.style.filter = 'alpha(opacity = ' + parseFloat(value) * 100 + ');';\n                } else {\n                    el.style.opacity = value;\n                }\n            },\n            getSubMenuMark: function () {\n                isSubMenuShow = false;\n                var layerEle = uiUtils.getFixedLayer();\n                var list = domUtils.getElementsByTagName(layerEle, 'div', function (node) {\n                    return domUtils.hasClass(node, 'edui-shortcutsubmenu edui-popup');\n                });\n\n                for (var i = 0, node; (node = list[i++]); ) {\n                    if (node.style.display != 'none') {\n                        isSubMenuShow = true;\n                    }\n                }\n                return isSubMenuShow;\n            },\n            show: function (e, hasContextmenu) {\n                var me = this,\n                    offset = {},\n                    el = this.getDom(),\n                    fixedlayer = uiUtils.getFixedLayer();\n\n                function setPos(offset) {\n                    if (offset.left < 0) {\n                        offset.left = 0;\n                    }\n                    if (offset.top < 0) {\n                        offset.top = 0;\n                    }\n                    el.style.cssText = 'position:absolute;left:' + offset.left + 'px;top:' + offset.top + 'px;';\n                }\n\n                function setPosByCxtMenu(menu) {\n                    if (!menu.tagName) {\n                        menu = menu.getDom();\n                    }\n                    offset.left = parseInt(menu.style.left);\n                    offset.top = parseInt(menu.style.top);\n                    offset.top -= el.offsetHeight + 15;\n                    setPos(offset);\n                }\n\n                me.eventType = e.type;\n                el.style.cssText = 'display:block;left:-9999px';\n\n                if (e.type == 'contextmenu' && hasContextmenu) {\n                    var menu = domUtils.getElementsByTagName(fixedlayer, 'div', 'edui-contextmenu')[0];\n                    if (menu) {\n                        setPosByCxtMenu(menu);\n                    } else {\n                        me.editor.addListener('aftershowcontextmenu', function (type, menu) {\n                            setPosByCxtMenu(menu);\n                        });\n                    }\n                } else {\n                    offset = uiUtils.getViewportOffsetByEvent(e);\n                    offset.top -= el.offsetHeight + me.SPACE;\n                    offset.left += me.SPACE + 20;\n                    setPos(offset);\n                    me.setOpacity(el, 0.2);\n                }\n\n                me.isHidden = false;\n                me.left = e.screenX + el.offsetWidth / 2 - me.SPACE;\n                me.top = e.screenY - el.offsetHeight / 2 - me.SPACE;\n\n                if (me.editor) {\n                    el.style.zIndex = me.editor.container.style.zIndex * 1 + 10;\n                    fixedlayer.style.zIndex = el.style.zIndex - 1;\n                }\n            },\n            hide: function () {\n                if (this.getDom()) {\n                    this.getDom().style.display = 'none';\n                }\n                this.isHidden = true;\n            },\n            postRender: function () {\n                if (utils.isArray(this.items)) {\n                    for (var i = 0, item; (item = this.items[i++]); ) {\n                        item.postRender();\n                    }\n                }\n            },\n            getHtmlTpl: function () {\n                var buff;\n                if (utils.isArray(this.items)) {\n                    buff = [];\n                    for (var i = 0; i < this.items.length; i++) {\n                        buff[i] = this.items[i].renderHtml();\n                    }\n                    buff = buff.join('');\n                } else {\n                    buff = this.items;\n                }\n\n                return (\n                    '<div id=\"##\" class=\"%% edui-toolbar\" data-src=\"shortcutmenu\" onmousedown=\"return false;\" onselectstart=\"return false;\" >' +\n                    buff +\n                    '</div>'\n                );\n            }\n        };\n\n        utils.inherits(ShortCutMenu, UIBase);\n\n        function hideAllMenu(e) {\n            var tgt = e.target || e.srcElement,\n                cur = domUtils.findParent(\n                    tgt,\n                    function (node) {\n                        return domUtils.hasClass(node, 'edui-shortcutmenu') || domUtils.hasClass(node, 'edui-popup');\n                    },\n                    true\n                );\n\n            if (!cur) {\n                for (var i = 0, menu; (menu = allMenus[i++]); ) {\n                    menu.hide();\n                }\n            }\n        }\n\n        domUtils.on(document, 'mousedown', function (e) {\n            hideAllMenu(e);\n        });\n\n        domUtils.on(window, 'scroll', function (e) {\n            hideAllMenu(e);\n        });\n    })();\n\n    // ui/breakline.js\n    (function () {\n        var utils = baidu.editor.utils,\n            UIBase = baidu.editor.ui.UIBase,\n            Breakline = (baidu.editor.ui.Breakline = function (options) {\n                this.initOptions(options);\n                this.initSeparator();\n            });\n        Breakline.prototype = {\n            uiName: 'Breakline',\n            initSeparator: function () {\n                this.initUIBase();\n            },\n            getHtmlTpl: function () {\n                return '<br/>';\n            }\n        };\n        utils.inherits(Breakline, UIBase);\n    })();\n\n    // ui/message.js\n    ///import core\n    ///import uicore\n    (function () {\n        var utils = baidu.editor.utils,\n            domUtils = baidu.editor.dom.domUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            Message = (baidu.editor.ui.Message = function (options) {\n                this.initOptions(options);\n                this.initMessage();\n            });\n\n        Message.prototype = {\n            initMessage: function () {\n                this.initUIBase();\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"edui-message %%\">' +\n                    ' <div id=\"##_closer\" class=\"edui-message-closer\">×</div>' +\n                    ' <div id=\"##_body\" class=\"edui-message-body edui-message-type-info\">' +\n                    ' <iframe style=\"position:absolute;z-index:-1;left:0;top:0;background-color: transparent;\" frameborder=\"0\" width=\"100%\" height=\"100%\" src=\"about:blank\"></iframe>' +\n                    ' <div class=\"edui-shadow\"></div>' +\n                    ' <div id=\"##_content\" class=\"edui-message-content\">' +\n                    '  </div>' +\n                    ' </div>' +\n                    '</div>'\n                );\n            },\n            reset: function (opt) {\n                var me = this;\n                if (!opt.keepshow) {\n                    clearTimeout(this.timer);\n                    me.timer = setTimeout(function () {\n                        me.hide();\n                    }, opt.timeout || 4000);\n                }\n\n                opt.content !== undefined && me.setContent(opt.content);\n                opt.type !== undefined && me.setType(opt.type);\n\n                me.show();\n            },\n            postRender: function () {\n                var me = this,\n                    closer = this.getDom('closer');\n                closer &&\n                    domUtils.on(closer, 'click', function () {\n                        me.hide();\n                    });\n            },\n            setContent: function (content) {\n                this.getDom('content').innerHTML = content;\n            },\n            setType: function (type) {\n                type = type || 'info';\n                var body = this.getDom('body');\n                body.className = body.className.replace(/edui-message-type-[\\w-]+/, 'edui-message-type-' + type);\n            },\n            getContent: function () {\n                return this.getDom('content').innerHTML;\n            },\n            getType: function () {\n                var arr = this.getDom('body').match(/edui-message-type-([\\w-]+)/);\n                return arr ? arr[1] : '';\n            },\n            show: function () {\n                this.getDom().style.display = 'block';\n            },\n            hide: function () {\n                var dom = this.getDom();\n                if (dom) {\n                    dom.style.display = 'none';\n                    dom.parentNode && dom.parentNode.removeChild(dom);\n                }\n            }\n        };\n\n        utils.inherits(Message, UIBase);\n    })();\n\n    // adapter/editorui.js\n    //ui跟编辑器的适配層\n    //那个按钮弹出是dialog，是下拉筐等都是在这个js中配置\n    //自己写的ui也要在这里配置，放到baidu.editor.ui下边，当编辑器实例化的时候会根据ueditor.config中的toolbars找到相应的进行实例化\n    (function () {\n        var utils = baidu.editor.utils;\n        var editorui = baidu.editor.ui;\n        var _Dialog = editorui.Dialog;\n        editorui.buttons = {};\n\n        editorui.Dialog = function (options) {\n            var dialog = new _Dialog(options);\n            dialog.addListener('hide', function () {\n                if (dialog.editor) {\n                    var editor = dialog.editor;\n                    try {\n                        if (browser.gecko) {\n                            var y = editor.window.scrollY,\n                                x = editor.window.scrollX;\n                            editor.body.focus();\n                            editor.window.scrollTo(x, y);\n                        } else {\n                            editor.focus();\n                        }\n                    } catch (ex) {}\n                }\n            });\n            return dialog;\n        };\n\n        //拆到私有配置里边了 by duanjun\n        var iframeUrlMap = {};\n        //为工具栏添加按钮，以下都是统一的按钮触发命令，所以写在一起\n        var btnCmds = [\n            'undo',\n            'redo',\n            'formatmatch',\n            'bold',\n            'italic',\n            'underline',\n            'fontborder',\n            'touppercase',\n            'tolowercase',\n            'strikethrough',\n            'subscript',\n            'superscript',\n            'source',\n            'indent',\n            'outdent',\n            'blockquote',\n            'pasteplain',\n            'pagebreak',\n            'selectall',\n            'print',\n            'horizontal',\n            'removeformat',\n            'time',\n            'date',\n            'unlink',\n            'insertparagraphbeforetable',\n            'insertrow',\n            'insertcol',\n            'mergeright',\n            'mergedown',\n            'deleterow',\n            'deletecol',\n            'splittorows',\n            'splittocols',\n            'splittocells',\n            'mergecells',\n            'deletetable',\n            'drafts'\n        ];\n\n        for (var i = 0, ci; (ci = btnCmds[i++]); ) {\n            ci = ci.toLowerCase();\n            editorui[ci] = (function (cmd) {\n                return function (editor) {\n                    var ui = new editorui.Button({\n                        className: 'edui-for-' + cmd,\n                        title: editor.options.labelMap[cmd] || editor.getLang('labelMap.' + cmd) || '',\n                        onclick: function () {\n                            editor.execCommand(cmd);\n                        },\n                        theme: editor.options.theme,\n                        showText: false\n                    });\n                    editorui.buttons[cmd] = ui;\n                    editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                        var state = editor.queryCommandState(cmd);\n                        if (state == -1) {\n                            ui.setDisabled(true);\n                            ui.setChecked(false);\n                        } else {\n                            if (!uiReady) {\n                                ui.setDisabled(false);\n                                ui.setChecked(state);\n                            }\n                        }\n                    });\n                    return ui;\n                };\n            })(ci);\n        }\n\n        //清除文档\n        editorui.cleardoc = function (editor) {\n            var ui = new editorui.Button({\n                className: 'edui-for-cleardoc',\n                title: editor.options.labelMap.cleardoc || editor.getLang('labelMap.cleardoc') || '',\n                theme: editor.options.theme,\n                onclick: function () {\n                    if (confirm(editor.getLang('confirmClear'))) {\n                        editor.execCommand('cleardoc');\n                    }\n                }\n            });\n            editorui.buttons['cleardoc'] = ui;\n            editor.addListener('selectionchange', function () {\n                ui.setDisabled(editor.queryCommandState('cleardoc') == -1);\n            });\n            return ui;\n        };\n\n        //排版，图片排版，文字方向\n        var typeset = {\n            justify: ['left', 'right', 'center', 'justify'],\n            imagefloat: ['none', 'left', 'center', 'right'],\n            directionality: ['ltr', 'rtl']\n        };\n\n        for (var p in typeset) {\n            (function (cmd, val) {\n                for (var i = 0, ci; (ci = val[i++]); ) {\n                    (function (cmd2) {\n                        editorui[cmd.replace('float', '') + cmd2] = function (editor) {\n                            var ui = new editorui.Button({\n                                className: 'edui-for-' + cmd.replace('float', '') + cmd2,\n                                title:\n                                    editor.options.labelMap[cmd.replace('float', '') + cmd2] ||\n                                    editor.getLang('labelMap.' + cmd.replace('float', '') + cmd2) ||\n                                    '',\n                                theme: editor.options.theme,\n                                onclick: function () {\n                                    editor.execCommand(cmd, cmd2);\n                                }\n                            });\n                            editorui.buttons[cmd] = ui;\n                            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                                ui.setDisabled(editor.queryCommandState(cmd) == -1);\n                                ui.setChecked(editor.queryCommandValue(cmd) == cmd2 && !uiReady);\n                            });\n                            return ui;\n                        };\n                    })(ci);\n                }\n            })(p, typeset[p]);\n        }\n\n        //字体颜色和背景颜色\n        for (var i = 0, ci; (ci = ['backcolor', 'forecolor'][i++]); ) {\n            editorui[ci] = (function (cmd) {\n                return function (editor) {\n                    var ui = new editorui.ColorButton({\n                        className: 'edui-for-' + cmd,\n                        color: 'default',\n                        title: editor.options.labelMap[cmd] || editor.getLang('labelMap.' + cmd) || '',\n                        editor: editor,\n                        onpickcolor: function (t, color) {\n                            editor.execCommand(cmd, color);\n                        },\n                        onpicknocolor: function () {\n                            editor.execCommand(cmd, 'default');\n                            this.setColor('transparent');\n                            this.color = 'default';\n                        },\n                        onbuttonclick: function () {\n                            editor.execCommand(cmd, this.color);\n                        }\n                    });\n                    editorui.buttons[cmd] = ui;\n                    editor.addListener('selectionchange', function () {\n                        ui.setDisabled(editor.queryCommandState(cmd) == -1);\n                    });\n                    return ui;\n                };\n            })(ci);\n        }\n\n        var dialogBtns = {\n            noOk: ['searchreplace', 'help', 'spechars', 'webapp', 'preview'],\n            ok: [\n                'attachment',\n                'anchor',\n                'link',\n                'insertimage',\n                'map',\n                'gmap',\n                'insertframe',\n                'wordimage',\n                'insertvideo',\n                'insertframe',\n                'edittip',\n                'edittable',\n                'edittd',\n                'scrawl',\n                'template',\n                'music',\n                'background',\n                'charts'\n            ]\n        };\n\n        for (var p in dialogBtns) {\n            (function (type, vals) {\n                for (var i = 0, ci; (ci = vals[i++]); ) {\n                    //todo opera下存在问题\n                    if (browser.opera && ci === 'searchreplace') {\n                        continue;\n                    }\n                    (function (cmd) {\n                        editorui[cmd] = function (editor, iframeUrl, title) {\n                            iframeUrl = iframeUrl || (editor.options.iframeUrlMap || {})[cmd] || iframeUrlMap[cmd];\n                            title = editor.options.labelMap[cmd] || editor.getLang('labelMap.' + cmd) || '';\n\n                            var dialog;\n                            //没有iframeUrl不创建dialog\n                            if (iframeUrl) {\n                                dialog = new editorui.Dialog(\n                                    utils.extend(\n                                        {\n                                            iframeUrl: editor.ui.mapUrl(iframeUrl),\n                                            editor: editor,\n                                            className: 'edui-for-' + cmd,\n                                            title: title,\n                                            holdScroll: cmd === 'insertimage',\n                                            fullscreen: /charts|preview/.test(cmd),\n                                            closeDialog: editor.getLang('closeDialog')\n                                        },\n                                        type == 'ok'\n                                            ? {\n                                                  buttons: [\n                                                      {\n                                                          className: 'edui-okbutton',\n                                                          label: editor.getLang('ok'),\n                                                          editor: editor,\n                                                          onclick: function () {\n                                                              dialog.close(true);\n                                                          }\n                                                      },\n                                                      {\n                                                          className: 'edui-cancelbutton',\n                                                          label: editor.getLang('cancel'),\n                                                          editor: editor,\n                                                          onclick: function () {\n                                                              dialog.close(false);\n                                                          }\n                                                      }\n                                                  ]\n                                              }\n                                            : {}\n                                    )\n                                );\n\n                                editor.ui._dialogs[cmd + 'Dialog'] = dialog;\n                            }\n\n                            var ui = new editorui.Button({\n                                className: 'edui-for-' + cmd,\n                                title: title,\n                                onclick: function () {\n                                    if (dialog) {\n                                        switch (cmd) {\n                                            case 'wordimage':\n                                                var images = editor.execCommand('wordimage');\n                                                if (images && images.length) {\n                                                    dialog.render();\n                                                    dialog.open();\n                                                }\n                                                break;\n                                            case 'scrawl':\n                                                if (editor.queryCommandState('scrawl') != -1) {\n                                                    dialog.render();\n                                                    dialog.open();\n                                                }\n\n                                                break;\n                                            default:\n                                                dialog.render();\n                                                dialog.open();\n                                        }\n                                    }\n                                },\n                                theme: editor.options.theme,\n                                disabled:\n                                    (cmd == 'scrawl' && editor.queryCommandState('scrawl') == -1) || cmd == 'charts'\n                            });\n                            editorui.buttons[cmd] = ui;\n                            editor.addListener('selectionchange', function () {\n                                //只存在于右键菜单而无工具栏按钮的ui不需要检测状态\n                                var unNeedCheckState = { edittable: 1 };\n                                if (cmd in unNeedCheckState) return;\n\n                                var state = editor.queryCommandState(cmd);\n                                if (ui.getDom()) {\n                                    ui.setDisabled(state == -1);\n                                    ui.setChecked(state);\n                                }\n                            });\n\n                            return ui;\n                        };\n                    })(ci.toLowerCase());\n                }\n            })(p, dialogBtns[p]);\n        }\n\n        editorui.insertcode = function (editor, list, title) {\n            list = editor.options['insertcode'] || [];\n            title = editor.options.labelMap['insertcode'] || editor.getLang('labelMap.insertcode') || '';\n            // if (!list.length) return;\n            var items = [];\n            utils.each(list, function (key, val) {\n                items.push({\n                    label: key,\n                    value: val,\n                    theme: editor.options.theme,\n                    renderLabelHtml: function () {\n                        return '<div class=\"edui-label %%-label\" >' + (this.label || '') + '</div>';\n                    }\n                });\n            });\n\n            var ui = new editorui.Combox({\n                editor: editor,\n                items: items,\n                onselect: function (t, index) {\n                    editor.execCommand('insertcode', this.items[index].value);\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                },\n                title: title,\n                initValue: title,\n                className: 'edui-for-insertcode',\n                indexByValue: function (value) {\n                    if (value) {\n                        for (var i = 0, ci; (ci = this.items[i]); i++) {\n                            if (ci.value.indexOf(value) != -1) return i;\n                        }\n                    }\n\n                    return -1;\n                }\n            });\n            editorui.buttons['insertcode'] = ui;\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                if (!uiReady) {\n                    var state = editor.queryCommandState('insertcode');\n                    if (state == -1) {\n                        ui.setDisabled(true);\n                    } else {\n                        ui.setDisabled(false);\n                        var value = editor.queryCommandValue('insertcode');\n                        if (!value) {\n                            ui.setValue(title);\n                            return;\n                        }\n                        //trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号\n                        value && (value = value.replace(/['\"]/g, '').split(',')[0]);\n                        ui.setValue(value);\n                    }\n                }\n            });\n            return ui;\n        };\n        editorui.fontfamily = function (editor, list, title) {\n            list = editor.options['fontfamily'] || [];\n            title = editor.options.labelMap['fontfamily'] || editor.getLang('labelMap.fontfamily') || '';\n            if (!list.length) return;\n            for (var i = 0, ci, items = []; (ci = list[i]); i++) {\n                var langLabel = editor.getLang('fontfamily')[ci.name] || '';\n                (function (key, val) {\n                    items.push({\n                        label: key,\n                        value: val,\n                        theme: editor.options.theme,\n                        renderLabelHtml: function () {\n                            return (\n                                '<div class=\"edui-label %%-label\" style=\"font-family:' +\n                                utils.unhtml(this.value) +\n                                '\">' +\n                                (this.label || '') +\n                                '</div>'\n                            );\n                        }\n                    });\n                })(ci.label || langLabel, ci.val);\n            }\n            var ui = new editorui.Combox({\n                editor: editor,\n                items: items,\n                onselect: function (t, index) {\n                    editor.execCommand('FontFamily', this.items[index].value);\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                },\n                title: title,\n                initValue: title,\n                className: 'edui-for-fontfamily',\n                indexByValue: function (value) {\n                    if (value) {\n                        for (var i = 0, ci; (ci = this.items[i]); i++) {\n                            if (ci.value.indexOf(value) != -1) return i;\n                        }\n                    }\n\n                    return -1;\n                }\n            });\n            editorui.buttons['fontfamily'] = ui;\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                if (!uiReady) {\n                    var state = editor.queryCommandState('FontFamily');\n                    if (state == -1) {\n                        ui.setDisabled(true);\n                    } else {\n                        ui.setDisabled(false);\n                        var value = editor.queryCommandValue('FontFamily');\n                        //trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号\n                        value && (value = value.replace(/['\"]/g, '').split(',')[0]);\n                        ui.setValue(value);\n                    }\n                }\n            });\n            return ui;\n        };\n\n        editorui.fontsize = function (editor, list, title) {\n            title = editor.options.labelMap['fontsize'] || editor.getLang('labelMap.fontsize') || '';\n            list = list || editor.options['fontsize'] || [];\n            if (!list.length) return;\n            var items = [];\n            for (var i = 0; i < list.length; i++) {\n                var size = list[i] + 'px';\n                items.push({\n                    label: size,\n                    value: size,\n                    theme: editor.options.theme,\n                    renderLabelHtml: function () {\n                        return (\n                            '<div class=\"edui-label %%-label\" style=\"line-height:1;font-size:' +\n                            this.value +\n                            '\">' +\n                            (this.label || '') +\n                            '</div>'\n                        );\n                    }\n                });\n            }\n            var ui = new editorui.Combox({\n                editor: editor,\n                items: items,\n                title: title,\n                initValue: (list[3] || 14) + 'px', //duanjun初始值固定一个数值\n                onselect: function (t, index) {\n                    editor.execCommand('FontSize', this.items[index].value);\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                },\n                className: 'edui-for-fontsize'\n            });\n            editorui.buttons['fontsize'] = ui;\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                if (!uiReady) {\n                    var state = editor.queryCommandState('FontSize');\n                    if (state == -1) {\n                        ui.setDisabled(true);\n                    } else {\n                        ui.setDisabled(false);\n                        ui.setValue(editor.queryCommandValue('FontSize'));\n                    }\n                }\n            });\n            return ui;\n        };\n\n        editorui.paragraph = function (editor, list, title) {\n            title = editor.options.labelMap['paragraph'] || editor.getLang('labelMap.paragraph') || '';\n            list = editor.options['paragraph'] || [];\n            if (utils.isEmptyObject(list)) return;\n            var items = [];\n            for (var i in list) {\n                items.push({\n                    value: i,\n                    label: list[i] || editor.getLang('paragraph')[i],\n                    theme: editor.options.theme,\n                    renderLabelHtml: function () {\n                        return (\n                            '<div class=\"edui-label %%-label\"><span class=\"edui-for-' +\n                            this.value +\n                            '\">' +\n                            (this.label || '') +\n                            '</span></div>'\n                        );\n                    }\n                });\n            }\n            var ui = new editorui.Combox({\n                editor: editor,\n                items: items,\n                title: title,\n                initValue: title,\n                className: 'edui-for-paragraph',\n                onselect: function (t, index) {\n                    editor.execCommand('Paragraph', this.items[index].value);\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                }\n            });\n            editorui.buttons['paragraph'] = ui;\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                if (!uiReady) {\n                    var state = editor.queryCommandState('Paragraph');\n                    if (state == -1) {\n                        ui.setDisabled(true);\n                    } else {\n                        ui.setDisabled(false);\n                        var value = editor.queryCommandValue('Paragraph');\n                        var index = ui.indexByValue(value);\n                        if (index != -1) {\n                            ui.setValue(value);\n                        } else {\n                            ui.setValue(ui.initValue);\n                        }\n                    }\n                }\n            });\n            return ui;\n        };\n\n        //自定义标题\n        editorui.customstyle = function (editor) {\n            var list = editor.options['customstyle'] || [],\n                title = editor.options.labelMap['customstyle'] || editor.getLang('labelMap.customstyle') || '';\n            if (!list.length) return;\n            var langCs = editor.getLang('customstyle');\n            for (var i = 0, items = [], t; (t = list[i++]); ) {\n                (function (t) {\n                    var ck = {};\n                    ck.label = t.label ? t.label : langCs[t.name];\n                    ck.style = t.style;\n                    ck.className = t.className;\n                    ck.tag = t.tag;\n                    items.push({\n                        label: ck.label,\n                        value: ck,\n                        theme: editor.options.theme,\n                        renderLabelHtml: function () {\n                            return (\n                                '<div class=\"edui-label %%-label\">' +\n                                '<' +\n                                ck.tag +\n                                ' ' +\n                                (ck.className ? ' class=\"' + ck.className + '\"' : '') +\n                                (ck.style ? ' style=\"' + ck.style + '\"' : '') +\n                                '>' +\n                                ck.label +\n                                '</' +\n                                ck.tag +\n                                '>' +\n                                '</div>'\n                            );\n                        }\n                    });\n                })(t);\n            }\n\n            var ui = new editorui.Combox({\n                editor: editor,\n                items: items,\n                title: title,\n                initValue: title,\n                className: 'edui-for-customstyle',\n                onselect: function (t, index) {\n                    editor.execCommand('customstyle', this.items[index].value);\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                },\n                indexByValue: function (value) {\n                    for (var i = 0, ti; (ti = this.items[i++]); ) {\n                        if (ti.label == value) {\n                            return i - 1;\n                        }\n                    }\n                    return -1;\n                }\n            });\n            editorui.buttons['customstyle'] = ui;\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                if (!uiReady) {\n                    var state = editor.queryCommandState('customstyle');\n                    if (state == -1) {\n                        ui.setDisabled(true);\n                    } else {\n                        ui.setDisabled(false);\n                        var value = editor.queryCommandValue('customstyle');\n                        var index = ui.indexByValue(value);\n                        if (index != -1) {\n                            ui.setValue(value);\n                        } else {\n                            ui.setValue(ui.initValue);\n                        }\n                    }\n                }\n            });\n            return ui;\n        };\n        editorui.inserttable = function (editor, iframeUrl, title) {\n            title = editor.options.labelMap['inserttable'] || editor.getLang('labelMap.inserttable') || '';\n            var ui = new editorui.TableButton({\n                editor: editor,\n                title: title,\n                className: 'edui-for-inserttable',\n                onpicktable: function (t, numCols, numRows) {\n                    editor.execCommand('InsertTable', { numRows: numRows, numCols: numCols, border: 1 });\n                },\n                onbuttonclick: function () {\n                    this.showPopup();\n                }\n            });\n            editorui.buttons['inserttable'] = ui;\n            editor.addListener('selectionchange', function () {\n                ui.setDisabled(editor.queryCommandState('inserttable') == -1);\n            });\n            return ui;\n        };\n\n        editorui.lineheight = function (editor) {\n            var val = editor.options.lineheight || [];\n            if (!val.length) return;\n            for (var i = 0, ci, items = []; (ci = val[i++]); ) {\n                items.push({\n                    //todo:写死了\n                    label: ci,\n                    value: ci,\n                    theme: editor.options.theme,\n                    onclick: function () {\n                        editor.execCommand('lineheight', this.value);\n                    }\n                });\n            }\n            var ui = new editorui.MenuButton({\n                editor: editor,\n                className: 'edui-for-lineheight',\n                title: editor.options.labelMap['lineheight'] || editor.getLang('labelMap.lineheight') || '',\n                items: items,\n                onbuttonclick: function () {\n                    var value = editor.queryCommandValue('LineHeight') || this.value;\n                    editor.execCommand('LineHeight', value);\n                }\n            });\n            editorui.buttons['lineheight'] = ui;\n            editor.addListener('selectionchange', function () {\n                var state = editor.queryCommandState('LineHeight');\n                if (state == -1) {\n                    ui.setDisabled(true);\n                } else {\n                    ui.setDisabled(false);\n                    var value = editor.queryCommandValue('LineHeight');\n                    value && ui.setValue((value + '').replace(/cm/, ''));\n                    ui.setChecked(state);\n                }\n            });\n            return ui;\n        };\n\n        var rowspacings = ['top', 'bottom'];\n        for (var r = 0, ri; (ri = rowspacings[r++]); ) {\n            (function (cmd) {\n                editorui['rowspacing' + cmd] = function (editor) {\n                    var val = editor.options['rowspacing' + cmd] || [];\n                    if (!val.length) return null;\n                    for (var i = 0, ci, items = []; (ci = val[i++]); ) {\n                        items.push({\n                            label: ci,\n                            value: ci,\n                            theme: editor.options.theme,\n                            onclick: function () {\n                                editor.execCommand('rowspacing', this.value, cmd);\n                            }\n                        });\n                    }\n                    var ui = new editorui.MenuButton({\n                        editor: editor,\n                        className: 'edui-for-rowspacing' + cmd,\n                        title:\n                            editor.options.labelMap['rowspacing' + cmd] ||\n                            editor.getLang('labelMap.rowspacing' + cmd) ||\n                            '',\n                        items: items,\n                        onbuttonclick: function () {\n                            var value = editor.queryCommandValue('rowspacing', cmd) || this.value;\n                            editor.execCommand('rowspacing', value, cmd);\n                        }\n                    });\n                    editorui.buttons[cmd] = ui;\n                    editor.addListener('selectionchange', function () {\n                        var state = editor.queryCommandState('rowspacing', cmd);\n                        if (state == -1) {\n                            ui.setDisabled(true);\n                        } else {\n                            ui.setDisabled(false);\n                            var value = editor.queryCommandValue('rowspacing', cmd);\n                            value && ui.setValue((value + '').replace(/%/, ''));\n                            ui.setChecked(state);\n                        }\n                    });\n                    return ui;\n                };\n            })(ri);\n        }\n        //有序，无序列表\n        var lists = ['insertorderedlist', 'insertunorderedlist'];\n        for (var l = 0, cl; (cl = lists[l++]); ) {\n            (function (cmd) {\n                editorui[cmd] = function (editor) {\n                    var vals = editor.options[cmd],\n                        _onMenuClick = function () {\n                            editor.execCommand(cmd, this.value);\n                        },\n                        items = [];\n                    for (var i in vals) {\n                        items.push({\n                            label: vals[i] || editor.getLang()[cmd][i] || '',\n                            value: i,\n                            theme: editor.options.theme,\n                            onclick: _onMenuClick\n                        });\n                    }\n                    var ui = new editorui.MenuButton({\n                        editor: editor,\n                        className: 'edui-for-' + cmd,\n                        title: editor.getLang('labelMap.' + cmd) || '',\n                        items: items,\n                        onbuttonclick: function () {\n                            var value = editor.queryCommandValue(cmd) || this.value;\n                            editor.execCommand(cmd, value);\n                        }\n                    });\n                    editorui.buttons[cmd] = ui;\n                    editor.addListener('selectionchange', function () {\n                        var state = editor.queryCommandState(cmd);\n                        if (state == -1) {\n                            ui.setDisabled(true);\n                        } else {\n                            ui.setDisabled(false);\n                            var value = editor.queryCommandValue(cmd);\n                            ui.setValue(value);\n                            ui.setChecked(state);\n                        }\n                    });\n                    return ui;\n                };\n            })(cl);\n        }\n\n        editorui.fullscreen = function (editor, title) {\n            title = editor.options.labelMap['fullscreen'] || editor.getLang('labelMap.fullscreen') || '';\n            var ui = new editorui.Button({\n                className: 'edui-for-fullscreen',\n                title: title,\n                theme: editor.options.theme,\n                onclick: function () {\n                    if (editor.ui) {\n                        editor.ui.setFullScreen(!editor.ui.isFullScreen());\n                    }\n                    this.setChecked(editor.ui.isFullScreen());\n                }\n            });\n            editorui.buttons['fullscreen'] = ui;\n            editor.addListener('selectionchange', function () {\n                var state = editor.queryCommandState('fullscreen');\n                ui.setDisabled(state == -1);\n                ui.setChecked(editor.ui.isFullScreen());\n            });\n            return ui;\n        };\n\n        // 表情\n        editorui['emotion'] = function (editor, iframeUrl) {\n            var cmd = 'emotion';\n            var ui = new editorui.MultiMenuPop({\n                title: editor.options.labelMap[cmd] || editor.getLang('labelMap.' + cmd + '') || '',\n                editor: editor,\n                className: 'edui-for-' + cmd,\n                iframeUrl: editor.ui.mapUrl(iframeUrl || (editor.options.iframeUrlMap || {})[cmd] || iframeUrlMap[cmd])\n            });\n            editorui.buttons[cmd] = ui;\n\n            editor.addListener('selectionchange', function () {\n                ui.setDisabled(editor.queryCommandState(cmd) == -1);\n            });\n            return ui;\n        };\n\n        editorui.autotypeset = function (editor) {\n            var ui = new editorui.AutoTypeSetButton({\n                editor: editor,\n                title: editor.options.labelMap['autotypeset'] || editor.getLang('labelMap.autotypeset') || '',\n                className: 'edui-for-autotypeset',\n                onbuttonclick: function () {\n                    editor.execCommand('autotypeset');\n                }\n            });\n            editorui.buttons['autotypeset'] = ui;\n            editor.addListener('selectionchange', function () {\n                ui.setDisabled(editor.queryCommandState('autotypeset') == -1);\n            });\n            return ui;\n        };\n\n        /* 简单上传插件 */\n        editorui['simpleupload'] = function (editor) {\n            var name = 'simpleupload',\n                ui = new editorui.Button({\n                    className: 'edui-for-' + name,\n                    title: editor.options.labelMap[name] || editor.getLang('labelMap.' + name) || '',\n                    onclick: function () {},\n                    theme: editor.options.theme,\n                    showText: false\n                });\n            editorui.buttons[name] = ui;\n            editor.addListener('ready', function () {\n                var b = ui.getDom('body'),\n                    iconSpan = b.children[0];\n                editor.fireEvent('simpleuploadbtnready', iconSpan);\n            });\n            editor.addListener('selectionchange', function (type, causeByUi, uiReady) {\n                var state = editor.queryCommandState(name);\n                if (state == -1) {\n                    ui.setDisabled(true);\n                    ui.setChecked(false);\n                } else {\n                    if (!uiReady) {\n                        ui.setDisabled(false);\n                        ui.setChecked(state);\n                    }\n                }\n            });\n            return ui;\n        };\n    })();\n\n    // adapter/editor.js\n    ///import core\n    ///commands 全屏\n    ///commandsName FullScreen\n    ///commandsTitle  全屏\n    (function () {\n        var utils = baidu.editor.utils,\n            uiUtils = baidu.editor.ui.uiUtils,\n            UIBase = baidu.editor.ui.UIBase,\n            domUtils = baidu.editor.dom.domUtils;\n        var nodeStack = [];\n\n        function EditorUI(options) {\n            this.initOptions(options);\n            this.initEditorUI();\n        }\n\n        EditorUI.prototype = {\n            uiName: 'editor',\n            initEditorUI: function () {\n                this.editor.ui = this;\n                this._dialogs = {};\n                this.initUIBase();\n                this._initToolbars();\n                var editor = this.editor,\n                    me = this;\n\n                editor.addListener('ready', function () {\n                    //提供getDialog方法\n                    editor.getDialog = function (name) {\n                        return editor.ui._dialogs[name + 'Dialog'];\n                    };\n                    domUtils.on(editor.window, 'scroll', function (evt) {\n                        baidu.editor.ui.Popup.postHide(evt);\n                    });\n                    //提供编辑器实时宽高(全屏时宽高不变化)\n                    editor.ui._actualFrameWidth = editor.options.initialFrameWidth;\n\n                    UE.browser.ie &&\n                        UE.browser.version === 6 &&\n                        editor.container.ownerDocument.execCommand('BackgroundImageCache', false, true);\n\n                    //display bottom-bar label based on config\n                    if (editor.options.elementPathEnabled) {\n                        editor.ui.getDom('elementpath').innerHTML =\n                            '<div class=\"edui-editor-breadcrumb\">' + editor.getLang('elementPathTip') + ':</div>';\n                        editor.ui.getDom('elementpath').style.display = '';\n                    }\n                    if (editor.options.wordCount) {\n                        function countFn() {\n                            setCount(editor, me);\n                            domUtils.un(editor.document, 'click', arguments.callee);\n                        }\n                        domUtils.on(editor.document, 'click', countFn);\n                        editor.ui.getDom('wordcount').innerHTML = editor.getLang('wordCountTip');\n                        editor.ui.getDom('wordcount').style.display = '';\n                    }\n                    editor.ui._scale();\n                    if (editor.options.scaleEnabled) {\n                        if (editor.autoHeightEnabled) {\n                            editor.disableAutoHeight();\n                        }\n                        me.enableScale();\n                        editor.ui.getDom('scale').style.display = '';\n                    } else {\n                        me.disableScale();\n                    }\n                    if (\n                        !editor.options.elementPathEnabled &&\n                        !editor.options.wordCount &&\n                        !editor.options.scaleEnabled\n                    ) {\n                        editor.ui.getDom('elementpath').style.display = 'none';\n                        editor.ui.getDom('wordcount').style.display = 'none';\n                        editor.ui.getDom('scale').style.display = 'none';\n                    }\n\n                    if (!editor.selection.isFocus()) return;\n                    editor.fireEvent('selectionchange', false, true);\n                });\n\n                editor.addListener('mousedown', function (t, evt) {\n                    var el = evt.target || evt.srcElement;\n                    baidu.editor.ui.Popup.postHide(evt, el);\n                    baidu.editor.ui.ShortCutMenu.postHide(evt);\n                });\n                editor.addListener('delcells', function () {\n                    if (UE.ui['edittip']) {\n                        new UE.ui['edittip'](editor);\n                    }\n                    editor.getDialog('edittip').open();\n                });\n\n                var pastePop,\n                    isPaste = false,\n                    timer;\n                editor.addListener('afterpaste', function () {\n                    if (editor.queryCommandState('pasteplain')) return;\n                    if (baidu.editor.ui.PastePicker) {\n                        //duanjun 粘贴之后样式问题先干掉\n                        /*pastePop = new baidu.editor.ui.Popup({*/\n                        //content:new baidu.editor.ui.PastePicker({editor:editor}),\n                        //editor:editor,\n                        //className:'edui-wordpastepop'\n                        //});\n                        /*pastePop.render();*/\n                    }\n                    isPaste = true;\n                });\n\n                editor.addListener('afterinserthtml', function () {\n                    clearTimeout(timer);\n                    timer = setTimeout(function () {\n                        if (pastePop && (isPaste || editor.ui._isTransfer)) {\n                            if (pastePop.isHidden()) {\n                                var span = domUtils.createElement(editor.document, 'span', {\n                                        style: 'line-height:0px;',\n                                        innerHTML: '\\ufeff'\n                                    }),\n                                    range = editor.selection.getRange();\n                                range.insertNode(span);\n                                var tmp = getDomNode(span, 'firstChild', 'previousSibling');\n                                tmp && pastePop.showAnchor(tmp.nodeType == 3 ? tmp.parentNode : tmp);\n                                domUtils.remove(span);\n                            } else {\n                                pastePop.show();\n                            }\n                            delete editor.ui._isTransfer;\n                            isPaste = false;\n                        }\n                    }, 200);\n                });\n                editor.addListener('contextmenu', function (t, evt) {\n                    baidu.editor.ui.Popup.postHide(evt);\n                });\n                editor.addListener('keydown', function (t, evt) {\n                    if (pastePop) pastePop.dispose(evt);\n                    var keyCode = evt.keyCode || evt.which;\n                    if (evt.altKey && keyCode == 90) {\n                        UE.ui.buttons['fullscreen'].onclick();\n                    }\n                });\n                editor.addListener('wordcount', function (type) {\n                    setCount(this, me);\n                });\n                function setCount(editor, ui) {\n                    editor.setOpt({\n                        wordCount: true,\n                        maximumWords: 10000,\n                        wordCountMsg: editor.options.wordCountMsg || editor.getLang('wordCountMsg'),\n                        wordOverFlowMsg: editor.options.wordOverFlowMsg || editor.getLang('wordOverFlowMsg')\n                    });\n                    var opt = editor.options,\n                        max = opt.maximumWords,\n                        msg = opt.wordCountMsg,\n                        errMsg = opt.wordOverFlowMsg,\n                        countDom = ui.getDom('wordcount');\n                    if (!opt.wordCount) {\n                        return;\n                    }\n                    var count = editor.getContentLength(true);\n                    if (count > max) {\n                        countDom.innerHTML = errMsg;\n                        editor.fireEvent('wordcountoverflow');\n                    } else {\n                        countDom.innerHTML = msg.replace('{#leave}', max - count).replace('{#count}', count);\n                    }\n                }\n\n                editor.addListener('selectionchange', function () {\n                    if (editor.options.elementPathEnabled) {\n                        me[(editor.queryCommandState('elementpath') == -1 ? 'dis' : 'en') + 'ableElementPath']();\n                    }\n                    if (editor.options.scaleEnabled) {\n                        me[(editor.queryCommandState('scale') == -1 ? 'dis' : 'en') + 'ableScale']();\n                    }\n                });\n                var popup = new baidu.editor.ui.Popup({\n                    editor: editor,\n                    content: '',\n                    className: 'edui-bubble',\n                    _onEditButtonClick: function () {\n                        this.hide();\n                        editor.ui._dialogs.linkDialog.open();\n                    },\n                    _onImgEditButtonClick: function (name) {\n                        this.hide();\n                        editor.ui._dialogs[name] && editor.ui._dialogs[name].open();\n                    },\n                    _onImgSetFloat: function (value) {\n                        this.hide();\n                        editor.execCommand('imagefloat', value);\n                    },\n                    _setIframeAlign: function (value) {\n                        var frame = popup.anchorEl;\n                        var newFrame = frame.cloneNode(true);\n                        switch (value) {\n                            case -2:\n                                newFrame.setAttribute('align', '');\n                                break;\n                            case -1:\n                                newFrame.setAttribute('align', 'left');\n                                break;\n                            case 1:\n                                newFrame.setAttribute('align', 'right');\n                                break;\n                        }\n                        frame.parentNode.insertBefore(newFrame, frame);\n                        domUtils.remove(frame);\n                        popup.anchorEl = newFrame;\n                        popup.showAnchor(popup.anchorEl);\n                    },\n                    _updateIframe: function () {\n                        var frame = (editor._iframe = popup.anchorEl);\n                        if (domUtils.hasClass(frame, 'ueditor_baidumap')) {\n                            editor.selection.getRange().selectNode(frame).select();\n                            editor.ui._dialogs.mapDialog.open();\n                            popup.hide();\n                        } else {\n                            editor.ui._dialogs.insertframeDialog.open();\n                            popup.hide();\n                        }\n                    },\n                    _onRemoveButtonClick: function (cmdName) {\n                        editor.execCommand(cmdName);\n                        this.hide();\n                    },\n                    queryAutoHide: function (el) {\n                        if (el && el.ownerDocument == editor.document) {\n                            if (el.tagName.toLowerCase() == 'img' || domUtils.findParentByTagName(el, 'a', true)) {\n                                return el !== popup.anchorEl;\n                            }\n                        }\n                        return baidu.editor.ui.Popup.prototype.queryAutoHide.call(this, el);\n                    }\n                });\n                popup.render();\n                if (editor.options.imagePopup) {\n                    editor.addListener('mouseover', function (t, evt) {\n                        evt = evt || window.event;\n                        var el = evt.target || evt.srcElement;\n                        if (editor.ui._dialogs.insertframeDialog && /iframe/gi.test(el.tagName)) {\n                            var html = popup.formatHtml(\n                                '<nobr>' +\n                                    editor.getLang('property') +\n                                    ': <span onclick=$$._setIframeAlign(-2) class=\"edui-clickable\">' +\n                                    editor.getLang('default') +\n                                    '</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(-1) class=\"edui-clickable\">' +\n                                    editor.getLang('justifyleft') +\n                                    '</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(1) class=\"edui-clickable\">' +\n                                    editor.getLang('justifyright') +\n                                    '</span>&nbsp;&nbsp;' +\n                                    ' <span onclick=\"$$._updateIframe( this);\" class=\"edui-clickable\">' +\n                                    editor.getLang('modify') +\n                                    '</span></nobr>'\n                            );\n                            if (html) {\n                                popup.getDom('content').innerHTML = html;\n                                popup.anchorEl = el;\n                                popup.showAnchor(popup.anchorEl);\n                            } else {\n                                popup.hide();\n                            }\n                        }\n                    });\n                    editor.addListener('selectionchange', function (t, causeByUi) {\n                        if (!causeByUi) return;\n                        var html = '',\n                            str = '',\n                            img = editor.selection.getRange().getClosedNode(),\n                            dialogs = editor.ui._dialogs;\n                        if (img && img.tagName == 'IMG') {\n                            var dialogName = 'insertimageDialog';\n                            if (\n                                img.className.indexOf('edui-faked-video') != -1 ||\n                                img.className.indexOf('edui-upload-video') != -1\n                            ) {\n                                dialogName = 'insertvideoDialog';\n                            }\n                            if (img.className.indexOf('edui-faked-webapp') != -1) {\n                                dialogName = 'webappDialog';\n                            }\n                            if (img.src.indexOf('http://api.map.baidu.com') != -1) {\n                                dialogName = 'mapDialog';\n                            }\n                            if (img.className.indexOf('edui-faked-music') != -1) {\n                                dialogName = 'musicDialog';\n                            }\n                            if (img.src.indexOf('http://maps.google.com/maps/api/staticmap') != -1) {\n                                dialogName = 'gmapDialog';\n                            }\n                            if (img.getAttribute('anchorname')) {\n                                dialogName = 'anchorDialog';\n                                html = popup.formatHtml(\n                                    '<nobr>' +\n                                        editor.getLang('property') +\n                                        ': <span onclick=$$._onImgEditButtonClick(\"anchorDialog\") class=\"edui-clickable\">' +\n                                        editor.getLang('modify') +\n                                        '</span>&nbsp;&nbsp;' +\n                                        '<span onclick=$$._onRemoveButtonClick(\\'anchor\\') class=\"edui-clickable\">' +\n                                        editor.getLang('delete') +\n                                        '</span></nobr>'\n                                );\n                            }\n                            if (img.getAttribute('word_img')) {\n                                //todo 放到dialog去做查询\n                                editor.word_img = [img.getAttribute('word_img')];\n                                dialogName = 'wordimageDialog';\n                            }\n                            if (domUtils.hasClass(img, 'loadingclass') || domUtils.hasClass(img, 'loaderrorclass')) {\n                                dialogName = '';\n                            }\n                            if (!dialogs[dialogName]) {\n                                return;\n                            }\n                            str =\n                                '<nobr>' +\n                                editor.getLang('property') +\n                                ': ' +\n                                '<span onclick=$$._onImgSetFloat(\"none\") class=\"edui-clickable\">' +\n                                editor.getLang('default') +\n                                '</span>&nbsp;&nbsp;' +\n                                '<span onclick=$$._onImgSetFloat(\"left\") class=\"edui-clickable\">' +\n                                editor.getLang('justifyleft') +\n                                '</span>&nbsp;&nbsp;' +\n                                '<span onclick=$$._onImgSetFloat(\"right\") class=\"edui-clickable\">' +\n                                editor.getLang('justifyright') +\n                                '</span>&nbsp;&nbsp;' +\n                                '<span onclick=$$._onImgSetFloat(\"center\") class=\"edui-clickable\">' +\n                                editor.getLang('justifycenter') +\n                                '</span>&nbsp;&nbsp;' +\n                                '<span onclick=\"$$._onImgEditButtonClick(\\'' +\n                                dialogName +\n                                '\\');\" class=\"edui-clickable\">' +\n                                editor.getLang('modify') +\n                                '</span></nobr>';\n\n                            !html && (html = popup.formatHtml(str));\n                        }\n                        if (editor.ui._dialogs.linkDialog) {\n                            var link = editor.queryCommandValue('link');\n                            var url;\n                            if (link && (url = link.getAttribute('_href') || link.getAttribute('href', 2))) {\n                                var txt = url;\n                                if (url.length > 30) {\n                                    txt = url.substring(0, 20) + '...';\n                                }\n                                if (html) {\n                                    html += '<div style=\"height:5px;\"></div>';\n                                }\n                                html += popup.formatHtml(\n                                    '<nobr>' +\n                                        editor.getLang('anthorMsg') +\n                                        ': <a target=\"_blank\" href=\"' +\n                                        url +\n                                        '\" title=\"' +\n                                        url +\n                                        '\" >' +\n                                        txt +\n                                        '</a>' +\n                                        ' <span class=\"edui-clickable\" onclick=\"$$._onEditButtonClick();\">' +\n                                        editor.getLang('modify') +\n                                        '</span>' +\n                                        ' <span class=\"edui-clickable\" onclick=\"$$._onRemoveButtonClick(\\'unlink\\');\"> ' +\n                                        editor.getLang('clear') +\n                                        '</span></nobr>'\n                                );\n                                popup.showAnchor(link);\n                            }\n                        }\n\n                        if (html) {\n                            popup.getDom('content').innerHTML = html;\n                            popup.anchorEl = img || link;\n                            popup.showAnchor(popup.anchorEl);\n                        } else {\n                            popup.hide();\n                        }\n                    });\n                }\n            },\n            _initToolbars: function () {\n                var editor = this.editor;\n                var toolbars = this.toolbars || [];\n                var toolbarUis = [];\n                for (var i = 0; i < toolbars.length; i++) {\n                    var toolbar = toolbars[i];\n                    var toolbarUi = new baidu.editor.ui.Toolbar({ theme: editor.options.theme });\n                    for (var j = 0; j < toolbar.length; j++) {\n                        var toolbarItem = toolbar[j];\n                        var toolbarItemUi = null;\n                        if (typeof toolbarItem == 'string') {\n                            toolbarItem = toolbarItem.toLowerCase();\n                            if (toolbarItem == '|') {\n                                toolbarItem = 'Separator';\n                            }\n                            if (toolbarItem == '||') {\n                                toolbarItem = 'Breakline';\n                            }\n                            if (baidu.editor.ui[toolbarItem]) {\n                                toolbarItemUi = new baidu.editor.ui[toolbarItem](editor);\n                            }\n\n                            //fullscreen这里单独处理一下，放到首行去\n                            if (toolbarItem == 'fullscreen') {\n                                if (toolbarUis && toolbarUis[0]) {\n                                    toolbarUis[0].items.splice(0, 0, toolbarItemUi);\n                                } else {\n                                    toolbarItemUi && toolbarUi.items.splice(0, 0, toolbarItemUi);\n                                }\n\n                                continue;\n                            }\n                        } else {\n                            toolbarItemUi = toolbarItem;\n                        }\n                        if (toolbarItemUi && toolbarItemUi.id) {\n                            toolbarUi.add(toolbarItemUi);\n                        }\n                    }\n                    toolbarUis[i] = toolbarUi;\n                }\n\n                //接受外部定制的UI\n\n                utils.each(UE._customizeUI, function (obj, key) {\n                    var itemUI, index;\n                    if (obj.id && obj.id != editor.key) {\n                        return false;\n                    }\n                    itemUI = obj.execFn.call(editor, editor, key);\n                    if (itemUI) {\n                        index = obj.index;\n                        if (index === undefined) {\n                            index = toolbarUi.items.length;\n                        }\n                        toolbarUi.add(itemUI, index);\n                    }\n                });\n\n                this.toolbars = toolbarUis;\n            },\n            getHtmlTpl: function () {\n                return (\n                    '<div id=\"##\" class=\"%%\">' +\n                    '<div id=\"##_toolbarbox\" class=\"%%-toolbarbox\">' +\n                    (this.toolbars.length\n                        ? '<div id=\"##_toolbarboxouter\" class=\"%%-toolbarboxouter\"><div class=\"%%-toolbarboxinner\">' +\n                          this.renderToolbarBoxHtml() +\n                          '</div></div>'\n                        : '') +\n                    '<div id=\"##_toolbarmsg\" class=\"%%-toolbarmsg\" style=\"display:none;\">' +\n                    '<div id = \"##_upload_dialog\" class=\"%%-toolbarmsg-upload\" onclick=\"$$.showWordImageDialog();\">' +\n                    this.editor.getLang('clickToUpload') +\n                    '</div>' +\n                    '<div class=\"%%-toolbarmsg-close\" onclick=\"$$.hideToolbarMsg();\">x</div>' +\n                    '<div id=\"##_toolbarmsg_label\" class=\"%%-toolbarmsg-label\"></div>' +\n                    '<div style=\"height:0;overflow:hidden;clear:both;\"></div>' +\n                    '</div>' +\n                    '<div id=\"##_message_holder\" class=\"%%-messageholder\"></div>' +\n                    '</div>' +\n                    '<div id=\"##_iframeholder\" class=\"%%-iframeholder\">' +\n                    '</div>' +\n                    //modify wdcount by matao\n                    '<div id=\"##_bottombar\" class=\"%%-bottomContainer\"><table><tr>' +\n                    '<td id=\"##_elementpath\" style=\"display:none;\" class=\"%%-bottombar\"></td>' +\n                    '<td id=\"##_wordcount\"  style=\"display:none;\" class=\"%%-wordcount\"></td>' +\n                    '<td id=\"##_scale\"  style=\"display:none;\" class=\"%%-scale\"><div class=\"%%-icon\"></div></td>' +\n                    '</tr></table></div>' +\n                    '<div id=\"##_scalelayer\"></div>' +\n                    '</div>'\n                );\n            },\n            showWordImageDialog: function () {\n                this._dialogs['wordimageDialog'].open();\n            },\n            renderToolbarBoxHtml: function () {\n                var buff = [];\n                for (var i = 0; i < this.toolbars.length; i++) {\n                    buff.push(this.toolbars[i].renderHtml());\n                }\n                return buff.join('');\n            },\n            setFullScreen: function (fullscreen) {\n                var editor = this.editor,\n                    container = editor.container.parentNode.parentNode;\n                if (this._fullscreen != fullscreen) {\n                    this._fullscreen = fullscreen;\n                    this.editor.fireEvent('beforefullscreenchange', fullscreen);\n                    if (baidu.editor.browser.gecko) {\n                        var bk = editor.selection.getRange().createBookmark();\n                    }\n                    if (fullscreen) {\n                        while (container.tagName != 'BODY') {\n                            var position = baidu.editor.dom.domUtils.getComputedStyle(container, 'position');\n                            nodeStack.push(position);\n                            container.style.position = 'static';\n                            container = container.parentNode;\n                        }\n                        this._bakHtmlOverflow = document.documentElement.style.overflow;\n                        this._bakBodyOverflow = document.body.style.overflow;\n                        this._bakAutoHeight = this.editor.autoHeightEnabled;\n                        this._bakScrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n\n                        this._bakEditorContaninerWidth = editor.iframe.parentNode.offsetWidth;\n                        if (this._bakAutoHeight) {\n                            //当全屏时不能执行自动长高\n                            editor.autoHeightEnabled = false;\n                            this.editor.disableAutoHeight();\n                        }\n\n                        document.documentElement.style.overflow = 'hidden';\n                        //修复，滚动条不收起的问题\n\n                        window.scrollTo(0, window.scrollY);\n                        this._bakCssText = this.getDom().style.cssText;\n                        this._bakCssText1 = this.getDom('iframeholder').style.cssText;\n                        editor.iframe.parentNode.style.width = '';\n                        this._updateFullScreen();\n                    } else {\n                        while (container.tagName != 'BODY') {\n                            container.style.position = nodeStack.shift();\n                            container = container.parentNode;\n                        }\n                        this.getDom().style.cssText = this._bakCssText;\n                        this.getDom('iframeholder').style.cssText = this._bakCssText1;\n                        if (this._bakAutoHeight) {\n                            editor.autoHeightEnabled = true;\n                            this.editor.enableAutoHeight();\n                        }\n\n                        document.documentElement.style.overflow = this._bakHtmlOverflow;\n                        document.body.style.overflow = this._bakBodyOverflow;\n                        editor.iframe.parentNode.style.width = this._bakEditorContaninerWidth + 'px';\n                        window.scrollTo(0, this._bakScrollTop);\n                    }\n                    if (browser.gecko && editor.body.contentEditable === 'true') {\n                        var input = document.createElement('input');\n                        document.body.appendChild(input);\n                        editor.body.contentEditable = false;\n                        setTimeout(function () {\n                            input.focus();\n                            setTimeout(function () {\n                                editor.body.contentEditable = true;\n                                editor.fireEvent('fullscreenchanged', fullscreen);\n                                editor.selection.getRange().moveToBookmark(bk).select(true);\n                                baidu.editor.dom.domUtils.remove(input);\n                                fullscreen && window.scroll(0, 0);\n                            }, 0);\n                        }, 0);\n                    }\n\n                    if (editor.body.contentEditable === 'true') {\n                        this.editor.fireEvent('fullscreenchanged', fullscreen);\n                        this.triggerLayout();\n                    }\n                }\n            },\n            _updateFullScreen: function () {\n                if (this._fullscreen) {\n                    var vpRect = uiUtils.getViewportRect();\n                    this.getDom().style.cssText =\n                        'border:0;position:absolute;left:0;top:' +\n                        (this.editor.options.topOffset || 0) +\n                        'px;width:' +\n                        vpRect.width +\n                        'px;height:' +\n                        vpRect.height +\n                        'px;z-index:' +\n                        (this.getDom().style.zIndex * 1 + 100);\n                    uiUtils.setViewportOffset(this.getDom(), { left: 0, top: this.editor.options.topOffset || 0 });\n                    this.editor.setHeight(\n                        vpRect.height -\n                            this.getDom('toolbarbox').offsetHeight -\n                            this.getDom('bottombar').offsetHeight -\n                            (this.editor.options.topOffset || 0),\n                        true\n                    );\n                    //不手动调一下，会导致全屏失效\n                    if (browser.gecko) {\n                        try {\n                            window.onresize();\n                        } catch (e) {}\n                    }\n                }\n            },\n            _updateElementPath: function () {\n                var bottom = this.getDom('elementpath'),\n                    list;\n                if (this.elementPathEnabled && (list = this.editor.queryCommandValue('elementpath'))) {\n                    var buff = [];\n                    for (var i = 0, ci; (ci = list[i]); i++) {\n                        buff[i] = this.formatHtml(\n                            '<span unselectable=\"on\" onclick=\"$$.editor.execCommand(&quot;elementpath&quot;, &quot;' +\n                                i +\n                                '&quot;);\">' +\n                                ci +\n                                '</span>'\n                        );\n                    }\n                    bottom.innerHTML =\n                        '<div class=\"edui-editor-breadcrumb\" onmousedown=\"return false;\">' +\n                        this.editor.getLang('elementPathTip') +\n                        ': ' +\n                        buff.join(' &gt; ') +\n                        '</div>';\n                } else {\n                    bottom.style.display = 'none';\n                }\n            },\n            disableElementPath: function () {\n                var bottom = this.getDom('elementpath');\n                bottom.innerHTML = '';\n                bottom.style.display = 'none';\n                this.elementPathEnabled = false;\n            },\n            enableElementPath: function () {\n                var bottom = this.getDom('elementpath');\n                bottom.style.display = '';\n                this.elementPathEnabled = true;\n                this._updateElementPath();\n            },\n            _scale: function () {\n                var doc = document,\n                    editor = this.editor,\n                    editorHolder = editor.container,\n                    editorDocument = editor.document,\n                    toolbarBox = this.getDom('toolbarbox'),\n                    bottombar = this.getDom('bottombar'),\n                    scale = this.getDom('scale'),\n                    scalelayer = this.getDom('scalelayer');\n\n                var isMouseMove = false,\n                    position = null,\n                    minEditorHeight = 0,\n                    minEditorWidth = editor.options.minFrameWidth,\n                    pageX = 0,\n                    pageY = 0,\n                    scaleWidth = 0,\n                    scaleHeight = 0;\n\n                function down() {\n                    position = domUtils.getXY(editorHolder);\n\n                    if (!minEditorHeight) {\n                        minEditorHeight =\n                            editor.options.minFrameHeight + toolbarBox.offsetHeight + bottombar.offsetHeight;\n                    }\n\n                    scalelayer.style.cssText =\n                        'position:absolute;left:0;display:;top:0;background-color:#41ABFF;opacity:0.4;filter: Alpha(opacity=40);width:' +\n                        editorHolder.offsetWidth +\n                        'px;height:' +\n                        editorHolder.offsetHeight +\n                        'px;z-index:' +\n                        (editor.options.zIndex + 1);\n\n                    domUtils.on(doc, 'mousemove', move);\n                    domUtils.on(editorDocument, 'mouseup', up);\n                    domUtils.on(doc, 'mouseup', up);\n                }\n\n                var me = this;\n                //by xuheng 全屏时关掉缩放\n                this.editor.addListener('fullscreenchanged', function (e, fullScreen) {\n                    if (fullScreen) {\n                        me.disableScale();\n                    } else {\n                        if (me.editor.options.scaleEnabled) {\n                            me.enableScale();\n                            var tmpNode = me.editor.document.createElement('span');\n                            me.editor.body.appendChild(tmpNode);\n                            me.editor.body.style.height =\n                                Math.max(domUtils.getXY(tmpNode).y, me.editor.iframe.offsetHeight - 20) + 'px';\n                            domUtils.remove(tmpNode);\n                        }\n                    }\n                });\n                function move(event) {\n                    clearSelection();\n                    var e = event || window.event;\n                    pageX = e.pageX || doc.documentElement.scrollLeft + e.clientX;\n                    pageY = e.pageY || doc.documentElement.scrollTop + e.clientY;\n                    scaleWidth = pageX - position.x;\n                    scaleHeight = pageY - position.y;\n\n                    if (scaleWidth >= minEditorWidth) {\n                        isMouseMove = true;\n                        scalelayer.style.width = scaleWidth + 'px';\n                    }\n                    if (scaleHeight >= minEditorHeight) {\n                        isMouseMove = true;\n                        scalelayer.style.height = scaleHeight + 'px';\n                    }\n                }\n\n                function up() {\n                    if (isMouseMove) {\n                        isMouseMove = false;\n                        editor.ui._actualFrameWidth = scalelayer.offsetWidth - 2;\n                        editorHolder.style.width = editor.ui._actualFrameWidth + 'px';\n\n                        editor.setHeight(\n                            scalelayer.offsetHeight - bottombar.offsetHeight - toolbarBox.offsetHeight - 2,\n                            true\n                        );\n                    }\n                    if (scalelayer) {\n                        scalelayer.style.display = 'none';\n                    }\n                    clearSelection();\n                    domUtils.un(doc, 'mousemove', move);\n                    domUtils.un(editorDocument, 'mouseup', up);\n                    domUtils.un(doc, 'mouseup', up);\n                }\n\n                function clearSelection() {\n                    if (browser.ie) doc.selection.clear();\n                    else window.getSelection().removeAllRanges();\n                }\n\n                this.enableScale = function () {\n                    //trace:2868\n                    if (editor.queryCommandState('source') == 1) return;\n                    scale.style.display = '';\n                    this.scaleEnabled = true;\n                    domUtils.on(scale, 'mousedown', down);\n                };\n                this.disableScale = function () {\n                    scale.style.display = 'none';\n                    this.scaleEnabled = false;\n                    domUtils.un(scale, 'mousedown', down);\n                };\n            },\n            isFullScreen: function () {\n                return this._fullscreen;\n            },\n            postRender: function () {\n                UIBase.prototype.postRender.call(this);\n                for (var i = 0; i < this.toolbars.length; i++) {\n                    this.toolbars[i].postRender();\n                }\n                var me = this;\n                var timerId,\n                    domUtils = baidu.editor.dom.domUtils,\n                    updateFullScreenTime = function () {\n                        clearTimeout(timerId);\n                        timerId = setTimeout(function () {\n                            me._updateFullScreen();\n                        });\n                    };\n                domUtils.on(window, 'resize', updateFullScreenTime);\n\n                me.addListener('destroy', function () {\n                    domUtils.un(window, 'resize', updateFullScreenTime);\n                    clearTimeout(timerId);\n                });\n            },\n            showToolbarMsg: function (msg, flag) {\n                this.getDom('toolbarmsg_label').innerHTML = msg;\n                this.getDom('toolbarmsg').style.display = '';\n                //\n                if (!flag) {\n                    var w = this.getDom('upload_dialog');\n                    w.style.display = 'none';\n                }\n            },\n            hideToolbarMsg: function () {\n                this.getDom('toolbarmsg').style.display = 'none';\n            },\n            mapUrl: function (url) {\n                return url ? url.replace('~/', this.editor.options.UEDITOR_HOME_URL || '') : '';\n            },\n            triggerLayout: function () {\n                var dom = this.getDom();\n                if (dom.style.zoom == '1') {\n                    dom.style.zoom = '100%';\n                } else {\n                    dom.style.zoom = '1';\n                }\n            }\n        };\n        utils.inherits(EditorUI, baidu.editor.ui.UIBase);\n\n        var instances = {};\n\n        UE.ui.Editor = function (options) {\n            var editor = new UE.Editor(options);\n            editor.options.editor = editor;\n            utils.loadFile(document, {\n                href: editor.options.themeCss,\n                tag: 'link',\n                type: 'text/css',\n                rel: 'stylesheet'\n            });\n\n            var oldRender = editor.render;\n            editor.render = function (holder) {\n                if (holder.constructor === String) {\n                    editor.key = holder;\n                    instances[holder] = editor;\n                }\n                utils.domReady(function () {\n                    editor.langIsReady ? renderUI() : editor.addListener('langReady', renderUI);\n                    function renderUI() {\n                        editor.setOpt({\n                            labelMap: editor.options.labelMap || editor.getLang('labelMap')\n                        });\n                        new EditorUI(editor.options);\n                        if (holder) {\n                            if (holder.constructor === String) {\n                                holder = document.getElementById(holder);\n                            }\n                            holder &&\n                                holder.getAttribute('name') &&\n                                (editor.options.textarea = holder.getAttribute('name'));\n                            if (holder && /script|textarea/gi.test(holder.tagName)) {\n                                var newDiv = document.createElement('div');\n                                holder.parentNode.insertBefore(newDiv, holder);\n                                var cont = holder.value || holder.innerHTML;\n                                editor.options.initialContent = /^[\\t\\r\\n ]*$/.test(cont)\n                                    ? editor.options.initialContent\n                                    : cont\n                                          .replace(/>[\\n\\r\\t]+([ ]{4})+/g, '>')\n                                          .replace(/[\\n\\r\\t]+([ ]{4})+</g, '<')\n                                          .replace(/>[\\n\\r\\t]+</g, '><');\n                                holder.className && (newDiv.className = holder.className);\n                                holder.style.cssText && (newDiv.style.cssText = holder.style.cssText);\n                                if (/textarea/i.test(holder.tagName)) {\n                                    editor.textarea = holder;\n                                    editor.textarea.style.display = 'none';\n                                } else {\n                                    holder.parentNode.removeChild(holder);\n                                }\n                                if (holder.id) {\n                                    newDiv.id = holder.id;\n                                    domUtils.removeAttributes(holder, 'id');\n                                }\n                                holder = newDiv;\n                                holder.innerHTML = '';\n                            }\n                        }\n                        domUtils.addClass(holder, 'edui-' + editor.options.theme);\n                        editor.ui.render(holder);\n                        var opt = editor.options;\n                        //给实例添加一个编辑器的容器引用\n                        editor.container = editor.ui.getDom();\n                        var parents = domUtils.findParents(holder, true);\n                        var displays = [];\n                        for (var i = 0, ci; (ci = parents[i]); i++) {\n                            displays[i] = ci.style.display;\n                            ci.style.display = 'block';\n                        }\n                        if (opt.initialFrameWidth) {\n                            opt.minFrameWidth = opt.initialFrameWidth;\n                        } else {\n                            opt.minFrameWidth = opt.initialFrameWidth = holder.offsetWidth;\n                            var styleWidth = holder.style.width;\n                            if (/%$/.test(styleWidth)) {\n                                opt.initialFrameWidth = styleWidth;\n                            }\n                        }\n                        if (opt.initialFrameHeight) {\n                            opt.minFrameHeight = opt.initialFrameHeight;\n                        } else {\n                            opt.initialFrameHeight = opt.minFrameHeight = holder.offsetHeight;\n                        }\n                        for (var i = 0, ci; (ci = parents[i]); i++) {\n                            ci.style.display = displays[i];\n                        }\n                        //编辑器最外容器设置了高度，会导致，编辑器不占位\n                        //todo 先去掉，没有找到原因\n                        if (holder.style.height) {\n                            holder.style.height = '';\n                        }\n                        editor.container.style.width =\n                            opt.initialFrameWidth + (/%$/.test(opt.initialFrameWidth) ? '' : 'px');\n                        editor.container.style.zIndex = opt.zIndex;\n                        oldRender.call(editor, editor.ui.getDom('iframeholder'));\n                        editor.fireEvent('afteruiready');\n                    }\n                });\n            };\n            return editor;\n        };\n\n        /**\n         * @file\n         * @name UE\n         * @short UE\n         * @desc UEditor的顶部命名空间\n         */\n        /**\n         * @name getEditor\n         * @since 1.2.4+\n         * @grammar UE.getEditor(id,[opt])  =>  Editor实例\n         * @desc 提供一个全局的方法得到编辑器实例\n         *\n         * * ''id''  放置编辑器的容器id, 如果容器下的编辑器已经存在，就直接返回\n         * * ''opt'' 编辑器的可选参数\n         * @example\n         *  UE.getEditor('containerId',{onready:function(){//创建一个编辑器实例\n         *      this.setContent('hello')\n         *  }});\n         *  UE.getEditor('containerId'); //返回刚创建的实例\n         *\n         */\n        UE.getEditor = function (id, opt) {\n            var editor = instances[id];\n            if (!editor) {\n                editor = instances[id] = new UE.ui.Editor(opt);\n                editor.render(id);\n            }\n            return editor;\n        };\n\n        UE.delEditor = function (id) {\n            var editor;\n            if ((editor = instances[id])) {\n                editor.key && editor.destroy();\n                delete instances[id];\n            }\n        };\n\n        UE.registerUI = function (uiName, fn, index, editorId) {\n            utils.each(uiName.split(/\\s+/), function (name) {\n                UE._customizeUI[name] = {\n                    id: editorId,\n                    execFn: fn,\n                    index: index\n                };\n            });\n        };\n    })();\n\n    // adapter/message.js\n    UE.registerUI('message', function (editor) {\n        var editorui = baidu.editor.ui;\n        var Message = editorui.Message;\n        var holder;\n        var _messageItems = [];\n        var me = editor;\n\n        me.addListener('ready', function () {\n            holder = document.getElementById(me.ui.id + '_message_holder');\n            updateHolderPos();\n            setTimeout(function () {\n                updateHolderPos();\n            }, 500);\n        });\n\n        me.addListener('showmessage', function (type, opt) {\n            opt = utils.isString(opt)\n                ? {\n                      content: opt\n                  }\n                : opt;\n            var message = new Message({\n                    timeout: opt.timeout,\n                    type: opt.type,\n                    content: opt.content,\n                    keepshow: opt.keepshow,\n                    editor: me\n                }),\n                mid = opt.id || 'msg_' + (+new Date()).toString(36);\n            message.render(holder);\n            _messageItems[mid] = message;\n            message.reset(opt);\n            updateHolderPos();\n            return mid;\n        });\n\n        me.addListener('updatemessage', function (type, id, opt) {\n            opt = utils.isString(opt)\n                ? {\n                      content: opt\n                  }\n                : opt;\n            var message = _messageItems[id];\n            message.render(holder);\n            message && message.reset(opt);\n        });\n\n        me.addListener('hidemessage', function (type, id) {\n            var message = _messageItems[id];\n            message && message.hide();\n        });\n\n        function updateHolderPos() {\n            if (!me.ui) {\n                return;\n            }\n            var toolbarbox = me.ui.getDom('toolbarbox');\n            if (toolbarbox) {\n                holder.style.top = toolbarbox.offsetHeight + 3 + 'px';\n            }\n            holder.style.zIndex = Math.max(me.options.zIndex, me.iframe.style.zIndex) + 1;\n        }\n    });\n\n    // adapter/autosave.js\n    UE.registerUI('autosave', function (editor) {\n        var timer = null,\n            uid = null;\n        editor.on('afterautosave', function () {\n            clearTimeout(timer);\n\n            timer = setTimeout(function () {\n                if (uid) {\n                    editor.trigger('hidemessage', uid);\n                }\n                uid = editor.trigger('showmessage', {\n                    content: editor.getLang('autosave.success'),\n                    timeout: 2000\n                });\n            }, 2000);\n        });\n    });\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmVuZG9yL2VkaXRvci91ZWRpdG9yLmFsbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL1tuYW1lXS8uL3NyYy92ZW5kb3IvZWRpdG9yL3VlZGl0b3IuYWxsLmpzPzhhODIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBVRWRpdG9yXG4gKiB2ZXJzaW9uOiB1ZWRpdG9yXG4gKiBidWlsZDogV2VkIEphbiAwNCAyMDE3IDE2OjExOjI2IEdNVCswODAwIChDU1QpXG4gKi9cbihmdW5jdGlvbiAoKSB7XG4gICAgLy8gZWRpdG9yLmpzXG4gICAgVUVESVRPUl9DT05GSUcgPSB3aW5kb3cuVUVESVRPUl9DT05GSUcgfHwge307XG5cbiAgICB2YXIgYmFpZHUgPSB3aW5kb3cuYmFpZHUgfHwge307XG5cbiAgICB3aW5kb3cuYmFpZHUgPSBiYWlkdTtcblxuICAgIHdpbmRvdy5VRSA9IGJhaWR1LmVkaXRvciA9IHdpbmRvdy5VRSB8fCB7fTtcblxuICAgIFVFLnBsdWdpbnMgPSB7fTtcblxuICAgIFVFLmNvbW1hbmRzID0ge307XG5cbiAgICBVRS5pbnN0YW50cyA9IHt9O1xuXG4gICAgVUUuSTE4TiA9IHt9O1xuXG4gICAgVUUuX2N1c3RvbWl6ZVVJID0ge307XG5cbiAgICBVRS52ZXJzaW9uID0gJzEuNC4zJztcblxuICAgIHZhciBkb20gPSAoVUUuZG9tID0ge30pO1xuXG4gICAgLy8gY29yZS9icm93c2VyLmpzXG4gICAgLyoqXG4gICAgICog5rWP6KeI5Zmo5Yik5pat5qih5Z2XXG4gICAgICogQGZpbGVcbiAgICAgKiBAbW9kdWxlIFVFLmJyb3dzZXJcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5o+Q5L6b5rWP6KeI5Zmo5qOA5rWL55qE5qih5Z2XXG4gICAgICogQHVuZmlsZVxuICAgICAqIEBtb2R1bGUgVUUuYnJvd3NlclxuICAgICAqL1xuICAgIHZhciBicm93c2VyID0gKFVFLmJyb3dzZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICBvcGVyYSA9IHdpbmRvdy5vcGVyYSxcbiAgICAgICAgICAgIGJyb3dzZXIgPSB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogQHByb3BlcnR5IHtib29sZWFufSBpZSDmo4DmtYvlvZPliY3mtY/op4jlmajmmK/lkKbkuLpJRVxuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5pZSApIHtcbiAgICAgICAgICAgICAgICAgKiAgICAgY29uc29sZS5sb2coICflvZPliY3mtY/op4jlmajmmK9JRScgKTtcbiAgICAgICAgICAgICAgICAgKiB9XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgaWU6IC8obXNpZVxcc3x0cmlkZW50LipydjopKFtcXHcuXSspLy50ZXN0KGFnZW50KSxcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gb3BlcmEg5qOA5rWL5b2T5YmN5rWP6KeI5Zmo5piv5ZCm5Li6T3BlcmFcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIub3BlcmEgKSB7XG4gICAgICAgICAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCAn5b2T5YmN5rWP6KeI5Zmo5pivT3BlcmEnICk7XG4gICAgICAgICAgICAgICAgICogfVxuICAgICAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIG9wZXJhOiAhIW9wZXJhICYmIG9wZXJhLnZlcnNpb24sXG5cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAcHJvcGVydHkge2Jvb2xlYW59IHdlYmtpdCDmo4DmtYvlvZPliY3mtY/op4jlmajmmK/lkKbmmK93ZWJraXTlhoXmoLjnmoTmtY/op4jlmahcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIud2Via2l0ICkge1xuICAgICAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggJ+W9k+WJjea1j+iniOWZqOaYr3dlYmtpdOWGheaguOa1j+iniOWZqCcgKTtcbiAgICAgICAgICAgICAgICAgKiB9XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgd2Via2l0OiBhZ2VudC5pbmRleE9mKCcgYXBwbGV3ZWJraXQvJykgPiAtMSxcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gbWFjIOajgOa1i+W9k+WJjea1j+iniOWZqOaYr+WQpuaYr+i/kOihjOWcqG1hY+W5s+WPsOS4i1xuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5tYWMgKSB7XG4gICAgICAgICAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCAn5b2T5YmN5rWP6KeI5Zmo6L+Q6KGM5ZyobWFj5bmz5Y+w5LiLJyApO1xuICAgICAgICAgICAgICAgICAqIH1cbiAgICAgICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBtYWM6IGFnZW50LmluZGV4T2YoJ21hY2ludG9zaCcpID4gLTEsXG5cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBAcHJvcGVydHkge2Jvb2xlYW59IHF1aXJrcyDmo4DmtYvlvZPliY3mtY/op4jlmajmmK/lkKblpITkuo7igJzmgKrlvILmqKHlvI/igJ3kuItcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIucXVpcmtzICkge1xuICAgICAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggJ+W9k+WJjea1j+iniOWZqOi/kOihjOWkhOS6juKAnOaAquW8guaooeW8j+KAnScgKTtcbiAgICAgICAgICAgICAgICAgKiB9XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgcXVpcmtzOiBkb2N1bWVudC5jb21wYXRNb2RlID09ICdCYWNrQ29tcGF0J1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHtib29sZWFufSBnZWNrbyDmo4DmtYvlvZPliY3mtY/op4jlmajlhoXmoLjmmK/lkKbmmK9nZWNrb+WGheaguFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5nZWNrbyApIHtcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCAn5b2T5YmN5rWP6KeI5Zmo5YaF5qC45pivZ2Vja2/lhoXmoLgnICk7XG4gICAgICAgICAqIH1cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBicm93c2VyLmdlY2tvID0gbmF2aWdhdG9yLnByb2R1Y3QgPT0gJ0dlY2tvJyAmJiAhYnJvd3Nlci53ZWJraXQgJiYgIWJyb3dzZXIub3BlcmEgJiYgIWJyb3dzZXIuaWU7XG5cbiAgICAgICAgdmFyIHZlcnNpb24gPSAwO1xuXG4gICAgICAgIC8vIEludGVybmV0IEV4cGxvcmVyIDYuMCtcbiAgICAgICAgaWYgKGJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgIHZhciB2MSA9IGFnZW50Lm1hdGNoKC8oPzptc2llXFxzKFtcXHcuXSspKS8pO1xuICAgICAgICAgICAgdmFyIHYyID0gYWdlbnQubWF0Y2goLyg/OnRyaWRlbnQuKnJ2OihbXFx3Ll0rKSkvKTtcbiAgICAgICAgICAgIGlmICh2MSAmJiB2MiAmJiB2MVsxXSAmJiB2MlsxXSkge1xuICAgICAgICAgICAgICAgIHZlcnNpb24gPSBNYXRoLm1heCh2MVsxXSAqIDEsIHYyWzFdICogMSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHYxICYmIHYxWzFdKSB7XG4gICAgICAgICAgICAgICAgdmVyc2lvbiA9IHYxWzFdICogMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodjIgJiYgdjJbMV0pIHtcbiAgICAgICAgICAgICAgICB2ZXJzaW9uID0gdjJbMV0gKiAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2ZXJzaW9uID0gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJvd3Nlci5pZTExQ29tcGF0ID0gZG9jdW1lbnQuZG9jdW1lbnRNb2RlID09IDExO1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcHJvcGVydHkgeyBib29sZWFuIH0gaWU5Q29tcGF0IOajgOa1i+a1j+iniOWZqOaooeW8j+aYr+WQpuS4uiBJRTkg5YW85a655qih5byPXG4gICAgICAgICAgICAgKiBAd2FybmluZyDlpoLmnpzmtY/op4jlmajkuI3mmK9JRe+8jCDliJnor6XlgLzkuLp1bmRlZmluZWRcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIuaWU5Q29tcGF0ICkge1xuICAgICAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCAn5b2T5YmN5rWP6KeI5Zmo6L+Q6KGM5ZyoSUU55YW85a655qih5byP5LiLJyApO1xuICAgICAgICAgICAgICogfVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGJyb3dzZXIuaWU5Q29tcGF0ID0gZG9jdW1lbnQuZG9jdW1lbnRNb2RlID09IDk7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHByb3BlcnR5IHsgYm9vbGVhbiB9IGllOCDmo4DmtYvmtY/op4jlmajmmK/lkKbmmK9JRTjmtY/op4jlmahcbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOWmguaenOa1j+iniOWZqOS4jeaYr0lF77yMIOWImeivpeWAvOS4unVuZGVmaW5lZFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5pZTggKSB7XG4gICAgICAgICAgICAgKiAgICAgY29uc29sZS5sb2coICflvZPliY3mtY/op4jlmajmmK9JRTjmtY/op4jlmagnICk7XG4gICAgICAgICAgICAgKiB9XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYnJvd3Nlci5pZTggPSAhIWRvY3VtZW50LmRvY3VtZW50TW9kZTtcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAcHJvcGVydHkgeyBib29sZWFuIH0gaWU4Q29tcGF0IOajgOa1i+a1j+iniOWZqOaooeW8j+aYr+WQpuS4uiBJRTgg5YW85a655qih5byPXG4gICAgICAgICAgICAgKiBAd2FybmluZyDlpoLmnpzmtY/op4jlmajkuI3mmK9JRe+8jCDliJnor6XlgLzkuLp1bmRlZmluZWRcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIuaWU4Q29tcGF0ICkge1xuICAgICAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCAn5b2T5YmN5rWP6KeI5Zmo6L+Q6KGM5ZyoSUU45YW85a655qih5byP5LiLJyApO1xuICAgICAgICAgICAgICogfVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGJyb3dzZXIuaWU4Q29tcGF0ID0gZG9jdW1lbnQuZG9jdW1lbnRNb2RlID09IDg7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHByb3BlcnR5IHsgYm9vbGVhbiB9IGllN0NvbXBhdCDmo4DmtYvmtY/op4jlmajmqKHlvI/mmK/lkKbkuLogSUU3IOWFvOWuueaooeW8j1xuICAgICAgICAgICAgICogQHdhcm5pbmcg5aaC5p6c5rWP6KeI5Zmo5LiN5pivSUXvvIwg5YiZ6K+l5YC85Li6dW5kZWZpbmVkXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogaWYgKCBVRS5icm93c2VyLmllN0NvbXBhdCApIHtcbiAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggJ+W9k+WJjea1j+iniOWZqOi/kOihjOWcqElFN+WFvOWuueaooeW8j+S4iycgKTtcbiAgICAgICAgICAgICAqIH1cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBicm93c2VyLmllN0NvbXBhdCA9ICh2ZXJzaW9uID09IDcgJiYgIWRvY3VtZW50LmRvY3VtZW50TW9kZSkgfHwgZG9jdW1lbnQuZG9jdW1lbnRNb2RlID09IDc7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQHByb3BlcnR5IHsgYm9vbGVhbiB9IGllNkNvbXBhdCDmo4DmtYvmtY/op4jlmajmqKHlvI/mmK/lkKbkuLogSUU2IOaooeW8jyDmiJbogIXmgKrlvILmqKHlvI9cbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOWmguaenOa1j+iniOWZqOS4jeaYr0lF77yMIOWImeivpeWAvOS4unVuZGVmaW5lZFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5pZTZDb21wYXQgKSB7XG4gICAgICAgICAgICAgKiAgICAgY29uc29sZS5sb2coICflvZPliY3mtY/op4jlmajov5DooYzlnKhJRTbmqKHlvI/miJbogIXmgKrlvILmqKHlvI/kuIsnICk7XG4gICAgICAgICAgICAgKiB9XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYnJvd3Nlci5pZTZDb21wYXQgPSB2ZXJzaW9uIDwgNyB8fCBicm93c2VyLnF1aXJrcztcblxuICAgICAgICAgICAgYnJvd3Nlci5pZTlhYm92ZSA9IHZlcnNpb24gPiA4O1xuXG4gICAgICAgICAgICBicm93c2VyLmllOWJlbG93ID0gdmVyc2lvbiA8IDk7XG5cbiAgICAgICAgICAgIGJyb3dzZXIuaWUxMWFib3ZlID0gdmVyc2lvbiA+IDEwO1xuXG4gICAgICAgICAgICBicm93c2VyLmllMTFiZWxvdyA9IHZlcnNpb24gPCAxMTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEdlY2tvLlxuICAgICAgICBpZiAoYnJvd3Nlci5nZWNrbykge1xuICAgICAgICAgICAgdmFyIGdlY2tvUmVsZWFzZSA9IGFnZW50Lm1hdGNoKC9ydjooW1xcZFxcLl0rKS8pO1xuICAgICAgICAgICAgaWYgKGdlY2tvUmVsZWFzZSkge1xuICAgICAgICAgICAgICAgIGdlY2tvUmVsZWFzZSA9IGdlY2tvUmVsZWFzZVsxXS5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgIHZlcnNpb24gPSBnZWNrb1JlbGVhc2VbMF0gKiAxMDAwMCArIChnZWNrb1JlbGVhc2VbMV0gfHwgMCkgKiAxMDAgKyAoZ2Vja29SZWxlYXNlWzJdIHx8IDApICogMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcHJvcGVydHkgeyBOdW1iZXIgfSBjaHJvbWUg5qOA5rWL5b2T5YmN5rWP6KeI5Zmo5piv5ZCm5Li6Q2hyb21lLCDlpoLmnpzmmK/vvIzliJnov5Tlm55DaHJvbWXnmoTlpKfniYjmnKzlj7dcbiAgICAgICAgICogQHdhcm5pbmcg5aaC5p6c5rWP6KeI5Zmo5LiN5pivY2hyb21l77yMIOWImeivpeWAvOS4unVuZGVmaW5lZFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5jaHJvbWUgKSB7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggJ+W9k+WJjea1j+iniOWZqOaYr0Nocm9tZScgKTtcbiAgICAgICAgICogfVxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGlmICgvY2hyb21lXFwvKFxcZCtcXC5cXGQpL2kudGVzdChhZ2VudCkpIHtcbiAgICAgICAgICAgIGJyb3dzZXIuY2hyb21lID0gK1JlZ0V4cFsnXFx4MjQxJ107XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHsgTnVtYmVyIH0gc2FmYXJpIOajgOa1i+W9k+WJjea1j+iniOWZqOaYr+WQpuS4ulNhZmFyaSwg5aaC5p6c5piv77yM5YiZ6L+U5ZueU2FmYXJp55qE5aSn54mI5pys5Y+3XG4gICAgICAgICAqIEB3YXJuaW5nIOWmguaenOa1j+iniOWZqOS4jeaYr3NhZmFyae+8jCDliJnor6XlgLzkuLp1bmRlZmluZWRcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBpZiAoIFVFLmJyb3dzZXIuc2FmYXJpICkge1xuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coICflvZPliY3mtY/op4jlmajmmK9TYWZhcmknICk7XG4gICAgICAgICAqIH1cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBpZiAoLyhcXGQrXFwuXFxkKT8oPzpcXC5cXGQpP1xccytzYWZhcmlcXC8/KFxcZCtcXC5cXGQrKT8vaS50ZXN0KGFnZW50KSAmJiAhL2Nocm9tZS9pLnRlc3QoYWdlbnQpKSB7XG4gICAgICAgICAgICBicm93c2VyLnNhZmFyaSA9ICsoUmVnRXhwWydcXHgyNDEnXSB8fCBSZWdFeHBbJ1xceDI0MiddKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9wZXJhIDkuNTArXG4gICAgICAgIGlmIChicm93c2VyLm9wZXJhKSB2ZXJzaW9uID0gcGFyc2VGbG9hdChvcGVyYS52ZXJzaW9uKCkpO1xuXG4gICAgICAgIC8vIFdlYktpdCA1MjIrIChTYWZhcmkgMyspXG4gICAgICAgIGlmIChicm93c2VyLndlYmtpdCkgdmVyc2lvbiA9IHBhcnNlRmxvYXQoYWdlbnQubWF0Y2goLyBhcHBsZXdlYmtpdFxcLyhcXGQrKS8pWzFdKTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHsgTnVtYmVyIH0gdmVyc2lvbiDmo4DmtYvlvZPliY3mtY/op4jlmajniYjmnKzlj7dcbiAgICAgICAgICogQHJlbWluZFxuICAgICAgICAgKiA8dWw+XG4gICAgICAgICAqICAgICA8bGk+SUXns7vliJfov5Tlm57lgLzkuLo1LDYsNyw4LDksMTDnrYk8L2xpPlxuICAgICAgICAgKiAgICAgPGxpPmdlY2tv57O75YiX5Lya6L+U5ZueMTA5MDDvvIwxNTg5MDDnrYk8L2xpPlxuICAgICAgICAgKiAgICAgPGxpPndlYmtpdOezu+WIl+S8mui/lOWbnuWFtmJ1aWxk5Y+3ICjlpoIgNTIy562JKTwvbGk+XG4gICAgICAgICAqIDwvdWw+XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogY29uc29sZS5sb2coICflvZPliY3mtY/op4jlmajniYjmnKzlj7fmmK/vvJogJyArIFVFLmJyb3dzZXIudmVyc2lvbiApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGJyb3dzZXIudmVyc2lvbiA9IHZlcnNpb247XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm9wZXJ0eSB7IGJvb2xlYW4gfSBpc0NvbXBhdGlibGUg5qOA5rWL5b2T5YmN5rWP6KeI5Zmo5piv5ZCm6IO95aSf5LiOVUVkaXRvcuiJr+WlveWFvOWuuVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGlmICggVUUuYnJvd3Nlci5pc0NvbXBhdGlibGUgKSB7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggJ+a1j+iniOWZqOS4jlVFZGl0b3Log73lpJ/oia/lpb3lhbzlrrknICk7XG4gICAgICAgICAqIH1cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBicm93c2VyLmlzQ29tcGF0aWJsZSA9XG4gICAgICAgICAgICAhYnJvd3Nlci5tb2JpbGUgJiZcbiAgICAgICAgICAgICgoYnJvd3Nlci5pZSAmJiB2ZXJzaW9uID49IDYpIHx8XG4gICAgICAgICAgICAgICAgKGJyb3dzZXIuZ2Vja28gJiYgdmVyc2lvbiA+PSAxMDgwMSkgfHxcbiAgICAgICAgICAgICAgICAoYnJvd3Nlci5vcGVyYSAmJiB2ZXJzaW9uID49IDkuNSkgfHxcbiAgICAgICAgICAgICAgICAoYnJvd3Nlci5haXIgJiYgdmVyc2lvbiA+PSAxKSB8fFxuICAgICAgICAgICAgICAgIChicm93c2VyLndlYmtpdCAmJiB2ZXJzaW9uID49IDUyMikgfHxcbiAgICAgICAgICAgICAgICBmYWxzZSk7XG4gICAgICAgIHJldHVybiBicm93c2VyO1xuICAgIH0pKCkpO1xuICAgIC8v5b+r5o235pa55byPXG4gICAgdmFyIGllID0gYnJvd3Nlci5pZSxcbiAgICAgICAgd2Via2l0ID0gYnJvd3Nlci53ZWJraXQsXG4gICAgICAgIGdlY2tvID0gYnJvd3Nlci5nZWNrbyxcbiAgICAgICAgb3BlcmEgPSBicm93c2VyLm9wZXJhO1xuXG4gICAgLy8gY29yZS91dGlscy5qc1xuICAgIC8qKlxuICAgICAqIOW3peWFt+WHveaVsOWMhVxuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRS51dGlsc1xuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVRWRpdG9y5bCB6KOF5L2/55So55qE6Z2Z5oCB5bel5YW35Ye95pWwXG4gICAgICogQG1vZHVsZSBVRS51dGlsc1xuICAgICAqIEB1bmZpbGVcbiAgICAgKi9cblxuICAgIHZhciB1dGlscyA9IChVRS51dGlscyA9IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOeUqOe7meWumueahOi/reS7o+WZqOmBjeWOhuWvueixoVxuICAgICAgICAgKiBAbWV0aG9kIGVhY2hcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gb2JqIOmcgOimgemBjeWOhueahOWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGl0ZXJhdG9yIOi/reS7o+WZqO+8jCDor6Xmlrnms5XmjqXlj5fkuKTkuKrlj4LmlbDvvIwg56ys5LiA5Liq5Y+C5pWw5piv5b2T5YmN5omA5aSE55CG55qEdmFsdWXvvIwg56ys5LqM5Liq5Y+C5pWw5piv5b2T5YmN6YGN5Y6G5a+56LGh55qEa2V5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGRlbW9PYmogPSB7XG4gICAgICAgICAqICAgICBrZXkxOiAxLFxuICAgICAgICAgKiAgICAga2V5MjogMlxuICAgICAgICAgKiB9O1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDoga2V5MTogMSwga2V5MjogMlxuICAgICAgICAgKiBVRS51dGlscy5lYWNoKCBkZW1vT2JqLCBmdW5jaXRvbiAoIHZhbHVlLCBrZXkgKSB7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZygga2V5ICsgXCI6XCIgKyB2YWx1ZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiB9ICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog55So57uZ5a6a55qE6L+t5Luj5Zmo6YGN5Y6G5pWw57uE5oiW57G75pWw57uE5a+56LGhXG4gICAgICAgICAqIEBtZXRob2QgZWFjaFxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IGFycmF5IOmcgOimgemBjeWOhueahOaVsOe7hOaIluiAheexu+aVsOe7hFxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGl0ZXJhdG9yIOi/reS7o+WZqO+8jCDor6Xmlrnms5XmjqXlj5fkuKTkuKrlj4LmlbDvvIwg56ys5LiA5Liq5Y+C5pWw5piv5b2T5YmN5omA5aSE55CG55qEdmFsdWXvvIwg56ys5LqM5Liq5Y+C5pWw5piv5b2T5YmN6YGN5Y6G5a+56LGh55qEa2V5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGRpdnMgPSBkb2N1bWVudC5nZXRFbG1lbnRCeVRhZ05hbWVzKCBcImRpdlwiICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiAwOiBESVYsIDE6IERJViAuLi5cbiAgICAgICAgICogVUUudXRpbHMuZWFjaCggZGl2cywgZnVuY2l0b24gKCB2YWx1ZSwga2V5ICkge1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIGtleSArIFwiOlwiICsgdmFsdWUudGFnTmFtZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiB9ICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZWFjaDogZnVuY3Rpb24gKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHtcbiAgICAgICAgICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKG9iai5sZW5ndGggPT09ICtvYmoubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvYmoubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpba2V5XSwga2V5LCBvYmopID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDku6Xnu5nlrprlr7nosaHkvZzkuLrljp/lnovliJvlu7rkuIDkuKrmlrDlr7nosaFcbiAgICAgICAgICogQG1ldGhvZCBtYWtlSW5zdGFuY2VcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gcHJvdG9PYmplY3Qg6K+l5a+56LGh5bCG5L2c5Li65paw5Yib5bu65a+56LGh55qE5Y6f5Z6LXG4gICAgICAgICAqIEByZXR1cm4geyBPYmplY3QgfSDmlrDnmoTlr7nosaHvvIwg6K+l5a+56LGh55qE5Y6f5Z6L5piv57uZ5a6a55qEcHJvdG9PYmplY3Tlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiB2YXIgcHJvdG9PYmplY3QgPSB7IHNheUhlbGxvOiBmdW5jdGlvbiAoKSB7IGNvbnNvbGUubG9nKCdIZWxsbyBVRWRpdG9yIScpOyB9IH07XG4gICAgICAgICAqXG4gICAgICAgICAqIHZhciBuZXdPYmplY3QgPSBVRS51dGlscy5tYWtlSW5zdGFuY2UoIHByb3RvT2JqZWN0ICk7XG4gICAgICAgICAqIC8vb3V0cHV0OiBIZWxsbyBVRWRpdG9yIVxuICAgICAgICAgKiBuZXdPYmplY3Quc2F5SGVsbG8oKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBtYWtlSW5zdGFuY2U6IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIHZhciBub29wID0gbmV3IEZ1bmN0aW9uKCk7XG4gICAgICAgICAgICBub29wLnByb3RvdHlwZSA9IG9iajtcbiAgICAgICAgICAgIG9iaiA9IG5ldyBub29wKCk7XG4gICAgICAgICAgICBub29wLnByb3RvdHlwZSA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlsIZzb3VyY2Xlr7nosaHkuK3nmoTlsZ7mgKfmianlsZXliLB0YXJnZXTlr7nosaHkuIpcbiAgICAgICAgICogQG1ldGhvZCBleHRlbmRcbiAgICAgICAgICogQHJlbWluZCDor6Xmlrnms5XlsIblvLrliLbmiopzb3VyY2Xlr7nosaHkuIrnmoTlsZ7mgKflpI3liLbliLB0YXJnZXTlr7nosaHkuIpcbiAgICAgICAgICogQHNlZSBVRS51dGlscy5leHRlbmQoT2JqZWN0LE9iamVjdCxCb29sZWFuKVxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSB0YXJnZXQg55uu5qCH5a+56LGh77yMIOaWsOeahOWxnuaAp+WwhumZhOWKoOWIsOivpeWvueixoeS4ilxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBzb3VyY2Ug5rqQ5a+56LGh77yMIOivpeWvueixoeeahOWxnuaAp+S8muiiq+mZhOWKoOWIsHRhcmdldOWvueixoeS4ilxuICAgICAgICAgKiBAcmV0dXJuIHsgT2JqZWN0IH0g6L+U5ZuedGFyZ2V05a+56LGhXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogdmFyIHRhcmdldCA9IHsgbmFtZTogJ3RhcmdldCcsIHNleDogMSB9LFxuICAgICAgICAgKiAgICAgIHNvdXJjZSA9IHsgbmFtZTogJ3NvdXJjZScsIGFnZTogMTcgfTtcbiAgICAgICAgICpcbiAgICAgICAgICogVUUudXRpbHMuZXh0ZW5kKCB0YXJnZXQsIHNvdXJjZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogeyBuYW1lOiAnc291cmNlJywgc2V4OiAxLCBhZ2U6IDE3IH1cbiAgICAgICAgICogY29uc29sZS5sb2coIHRhcmdldCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWwhnNvdXJjZeWvueixoeS4reeahOWxnuaAp+aJqeWxleWIsHRhcmdldOWvueixoeS4iu+8jCDmoLnmja7mjIflrprnmoRpc0tlZXBUYXJnZXTlgLzlhrPlrprmmK/lkKbkv53nlZnnm67moIflr7nosaHkuK3kuI5cbiAgICAgICAgICog5rqQ5a+56LGh5bGe5oCn5ZCN55u45ZCM55qE5bGe5oCn5YC844CCXG4gICAgICAgICAqIEBtZXRob2QgZXh0ZW5kXG4gICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IHRhcmdldCDnm67moIflr7nosaHvvIwg5paw55qE5bGe5oCn5bCG6ZmE5Yqg5Yiw6K+l5a+56LGh5LiKXG4gICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IHNvdXJjZSDmupDlr7nosaHvvIwg6K+l5a+56LGh55qE5bGe5oCn5Lya6KKr6ZmE5Yqg5YiwdGFyZ2V05a+56LGh5LiKXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpc0tlZXBUYXJnZXQg5piv5ZCm5L+d55WZ55uu5qCH5a+56LGh5Lit5LiO5rqQ5a+56LGh5Lit5bGe5oCn5ZCN55u45ZCM55qE5bGe5oCnXG4gICAgICAgICAqIEByZXR1cm4geyBPYmplY3QgfSDov5Tlm550YXJnZXTlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiB2YXIgdGFyZ2V0ID0geyBuYW1lOiAndGFyZ2V0Jywgc2V4OiAxIH0sXG4gICAgICAgICAqICAgICAgc291cmNlID0geyBuYW1lOiAnc291cmNlJywgYWdlOiAxNyB9O1xuICAgICAgICAgKlxuICAgICAgICAgKiBVRS51dGlscy5leHRlbmQoIHRhcmdldCwgc291cmNlLCB0cnVlICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiB7IG5hbWU6ICd0YXJnZXQnLCBzZXg6IDEsIGFnZTogMTcgfVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggdGFyZ2V0ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZXh0ZW5kOiBmdW5jdGlvbiAodCwgcywgYikge1xuICAgICAgICAgICAgaWYgKHMpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrIGluIHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFiIHx8ICF0Lmhhc093blByb3BlcnR5KGspKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0W2tdID0gc1trXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0O1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlsIbnu5nlrprnmoTlpJrkuKrlr7nosaHnmoTlsZ7mgKflpI3liLbliLDnm67moIflr7nosaF0YXJnZXTkuIpcbiAgICAgICAgICogQG1ldGhvZCBleHRlbmQyXG4gICAgICAgICAqIEByZW1pbmQg6K+l5pa55rOV5bCG5by65Yi25oqK5rqQ5a+56LGh5LiK55qE5bGe5oCn5aSN5Yi25YiwdGFyZ2V05a+56LGh5LiKXG4gICAgICAgICAqIEByZW1pbmQg6K+l5pa55rOV5pSv5oyB5Lik5Liq5Y+K5Lul5LiK55qE5Y+C5pWw77yMIOS7juesrOS6jOS4quWPguaVsOW8gOWni++8jCDlhbblsZ7mgKfpg73kvJrooqvlpI3liLbliLDnrKzkuIDkuKrlj4LmlbDkuIrjgIIg5aaC5p6c6YGH5Yiw5ZCM5ZCN55qE5bGe5oCn77yMXG4gICAgICAgICAqICAgICAgICAgIOWwhuS8muimhuebluaOieS5i+WJjeeahOWAvOOAglxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSB0YXJnZXQg55uu5qCH5a+56LGh77yMIOaWsOeahOWxnuaAp+WwhumZhOWKoOWIsOivpeWvueixoeS4ilxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QuLi4gfSBzb3VyY2Ug5rqQ5a+56LGh77yMIOaUr+aMgeWkmuS4quWvueixoe+8jCDor6Xlr7nosaHnmoTlsZ7mgKfkvJrooqvpmYTliqDliLB0YXJnZXTlr7nosaHkuIpcbiAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOi/lOWbnnRhcmdldOWvueixoVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqXG4gICAgICAgICAqIHZhciB0YXJnZXQgPSB7fSxcbiAgICAgICAgICogICAgIHNvdXJjZTEgPSB7IG5hbWU6ICdzb3VyY2UnLCBhZ2U6IDE3IH0sXG4gICAgICAgICAqICAgICBzb3VyY2UyID0geyB0aXRsZTogJ2RldicgfTtcbiAgICAgICAgICpcbiAgICAgICAgICogVUUudXRpbHMuZXh0ZW5kMiggdGFyZ2V0LCBzb3VyY2UxLCBzb3VyY2UyICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiB7IG5hbWU6ICdzb3VyY2UnLCBhZ2U6IDE3LCB0aXRsZTogJ2RldicgfVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggdGFyZ2V0ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZXh0ZW5kMjogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHZhciBhID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHggPSBhW2ldO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGsgaW4geCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXQuaGFzT3duUHJvcGVydHkoaykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRba10gPSB4W2tdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaooeaLn+e7p+aJv+acuuWItu+8jCDkvb/lvpdzdWJDbGFzc+e7p+aJv+iHqnN1cGVyQ2xhc3NcbiAgICAgICAgICogQG1ldGhvZCBpbmhlcml0c1xuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBzdWJDbGFzcyDlrZDnsbvlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gc3VwZXJDbGFzcyDotoXnsbvlr7nosaFcbiAgICAgICAgICogQHdhcm5pbmcg6K+l5pa55rOV5Y+q6IO96K6pc3ViQ2xhc3Pnu6fmib/otoXnsbvnmoTljp/lnovvvIwgc3ViQ2xhc3Plr7nosaHoh6rouqvnmoTlsZ7mgKflkozmlrnms5XkuI3kvJrooqvnu6fmib9cbiAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOe7p+aJv3N1cGVyQ2xhc3PlkI7nmoTlrZDnsbvlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBmdW5jdGlvbiBTdXBlckNsYXNzKCl7XG4gICAgICAgICAqICAgICB0aGlzLm5hbWUgPSBcIuWwj+adjlwiO1xuICAgICAgICAgKiB9XG4gICAgICAgICAqXG4gICAgICAgICAqIFN1cGVyQ2xhc3MucHJvdG90eXBlID0ge1xuICAgICAgICAgKiAgICAgaGVsbG86ZnVuY3Rpb24oc3RyKXtcbiAgICAgICAgICogICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm5hbWUgKyBzdHIpO1xuICAgICAgICAgKiAgICAgfVxuICAgICAgICAgKiB9XG4gICAgICAgICAqXG4gICAgICAgICAqIGZ1bmN0aW9uIFN1YkNsYXNzKCl7XG4gICAgICAgICAqICAgICB0aGlzLm5hbWUgPSBcIuWwj+W8oFwiO1xuICAgICAgICAgKiB9XG4gICAgICAgICAqXG4gICAgICAgICAqIFVFLnV0aWxzLmluaGVyaXRzKFN1YkNsYXNzLFN1cGVyQ2xhc3MpO1xuICAgICAgICAgKlxuICAgICAgICAgKiB2YXIgc3ViID0gbmV3IFN1YkNsYXNzKCk7XG4gICAgICAgICAqIC8vb3V0cHV0OiAn5bCP5byg5pep5LiK5aW9IVxuICAgICAgICAgKiBzdWIuaGVsbG8oXCLml6nkuIrlpb0hXCIpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGluaGVyaXRzOiBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICAgICAgICAgIHZhciBvbGRQID0gc3ViQ2xhc3MucHJvdG90eXBlLFxuICAgICAgICAgICAgICAgIG5ld1AgPSB1dGlscy5tYWtlSW5zdGFuY2Uoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgICAgICAgdXRpbHMuZXh0ZW5kKG5ld1AsIG9sZFAsIHRydWUpO1xuICAgICAgICAgICAgc3ViQ2xhc3MucHJvdG90eXBlID0gbmV3UDtcbiAgICAgICAgICAgIHJldHVybiAobmV3UC5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog55So5oyH5a6a55qEY29udGV4dOWvueixoeS9nOS4uuWHveaVsGZu55qE5LiK5LiL5paHXG4gICAgICAgICAqIEBtZXRob2QgYmluZFxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOmcgOimgee7keWumuS4iuS4i+aWh+eahOWHveaVsOWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBjb250ZW50IOWHveaVsGZu5paw55qE5LiK5LiL5paH5a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBGdW5jdGlvbiB9IOS4gOS4quaWsOeahOWHveaVsO+8jCDor6Xlh73mlbDkvZzkuLrljp/lp4vlh73mlbBmbueahOS7o+eQhu+8jCDlsIblrozmiJBmbueahOS4iuS4i+aWh+iwg+aNouW3peS9nOOAglxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqXG4gICAgICAgICAqIHZhciBuYW1lID0gJ3dpbmRvdycsXG4gICAgICAgICAqICAgICBuZXdUZXN0ID0gbnVsbDtcbiAgICAgICAgICpcbiAgICAgICAgICogZnVuY3Rpb24gdGVzdCAoKSB7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGhpcy5uYW1lICk7XG4gICAgICAgICAqIH1cbiAgICAgICAgICpcbiAgICAgICAgICogbmV3VGVzdCA9IFVFLnV0aWxzLmJpbmQoIHRlc3QsIHsgbmFtZTogJ29iamVjdCcgfSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogb2JqZWN0XG4gICAgICAgICAqIG5ld1Rlc3QoKTtcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IHdpbmRvd1xuICAgICAgICAgKiB0ZXN0KCk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgYmluZDogZnVuY3Rpb24gKGZuLCBjb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmbi5hcHBseShjb250ZXh0LCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yib5bu65bu26L+f5oyH5a6a5pe26Ze05ZCO5omn6KGM55qE5Ye95pWwZm5cbiAgICAgICAgICogQG1ldGhvZCBkZWZlclxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOmcgOimgeW7tui/n+aJp+ihjOeahOWHveaVsOWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBpbnQgfSBkZWxheSDlu7bov5/nmoTml7bpl7TvvIwg5Y2V5L2N5piv5q+r56eSXG4gICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleeahOaXtumXtOaOp+WItuaYr+S4jeeyvuehrueahO+8jOS7heS7heWPquiDveS/neivgeWHveaVsOeahOaJp+ihjOaYr+WcqOe7meWumueahOaXtumXtOS5i+WQju+8jFxuICAgICAgICAgKiAgICAgICAgICAg6ICM5LiN6IO95L+d6K+B5Yia5aW95Yiw6L6+5bu26L+f5pe26Ze05pe25omn6KGM44CCXG4gICAgICAgICAqIEByZXR1cm4geyBGdW5jdGlvbiB9IOebruagh+WHveaVsGZu55qE5Luj55CG5Ye95pWw77yMIOWPquacieaJp+ihjOivpeWHveaVsOaJjeiDvei1t+WIsOW7tuaXtuaViOaenFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIHZhciBzdGFydCA9IDA7XG4gICAgICAgICAqXG4gICAgICAgICAqIGZ1bmN0aW9uIHRlc3QoKXtcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBuZXcgRGF0ZSgpIC0gc3RhcnQgKTtcbiAgICAgICAgICogfVxuICAgICAgICAgKlxuICAgICAgICAgKiB2YXIgdGVzdERlZmVyID0gVUUudXRpbHMuZGVmZXIoIHRlc3QsIDEwMDAgKTtcbiAgICAgICAgICogLy9cbiAgICAgICAgICogc3RhcnQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgKiAvL291dHB1dDogKOWkp+e6puWcqDEwMDDmr6vnp5LkuYvlkI7ovpPlh7opIDEwMDBcbiAgICAgICAgICogdGVzdERlZmVyKCk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yib5bu65bu26L+f5oyH5a6a5pe26Ze05ZCO5omn6KGM55qE5Ye95pWwZm4sIOWmguaenOWcqOW7tui/n+aXtumXtOWGheWGjeasoeaJp+ihjOivpeaWueazle+8jCDlsIbkvJrmoLnmja7mjIflrprnmoRleGNsdXNpb27nmoTlgLzvvIxcbiAgICAgICAgICog5Yaz5a6a5piv5ZCm5Y+W5raI5YmN5LiA5qyh5Ye95pWw55qE5omn6KGM77yMIOWmguaenGV4Y2x1c2lvbueahOWAvOS4unRydWXvvIwg5YiZ5Y+W5raI5omn6KGM77yM5Y+N5LmL77yM5bCG57un57ut5omn6KGM5YmN5LiA5Liq5pa55rOV44CCXG4gICAgICAgICAqIEBtZXRob2QgZGVmZXJcbiAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBmbiDpnIDopoHlu7bov5/miafooYznmoTlh73mlbDlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgaW50IH0gZGVsYXkg5bu26L+f55qE5pe26Ze077yMIOWNleS9jeaYr+avq+enklxuICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gZXhjbHVzaW9uIOWmguaenOWcqOW7tui/n+aXtumXtOWGheWGjeasoeaJp+ihjOivpeWHveaVsO+8jOivpeWAvOWwhuWGs+WumuaYr+WQpuWPlua2iOaJp+ihjOWJjeS4gOasoeWHveaVsOeahOaJp+ihjO+8jFxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgIOWAvOS4unRydWXooajnpLrlj5bmtojmiafooYzvvIwg5Y+N5LmL5YiZ5bCG5Zyo5omn6KGM5YmN5LiA5qyh5Ye95pWw5LmL5ZCO5omN5omn6KGM5pys5qyh5Ye95pWw6LCD55So44CCXG4gICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleeahOaXtumXtOaOp+WItuaYr+S4jeeyvuehrueahO+8jOS7heS7heWPquiDveS/neivgeWHveaVsOeahOaJp+ihjOaYr+WcqOe7meWumueahOaXtumXtOS5i+WQju+8jFxuICAgICAgICAgKiAgICAgICAgICAg6ICM5LiN6IO95L+d6K+B5Yia5aW95Yiw6L6+5bu26L+f5pe26Ze05pe25omn6KGM44CCXG4gICAgICAgICAqIEByZXR1cm4geyBGdW5jdGlvbiB9IOebruagh+WHveaVsGZu55qE5Luj55CG5Ye95pWw77yMIOWPquacieaJp+ihjOivpeWHveaVsOaJjeiDvei1t+WIsOW7tuaXtuaViOaenFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqXG4gICAgICAgICAqIGZ1bmN0aW9uIHRlc3QoKXtcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKDEpO1xuICAgICAgICAgKiB9XG4gICAgICAgICAqXG4gICAgICAgICAqIHZhciB0ZXN0RGVmZXIgPSBVRS51dGlscy5kZWZlciggdGVzdCwgMTAwMCwgdHJ1ZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogKOS4pOasoeiwg+eUqOS7heacieS4gOasoei+k+WHuikgMVxuICAgICAgICAgKiB0ZXN0RGVmZXIoKTtcbiAgICAgICAgICogdGVzdERlZmVyKCk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZGVmZXI6IGZ1bmN0aW9uIChmbiwgZGVsYXksIGV4Y2x1c2lvbikge1xuICAgICAgICAgICAgdmFyIHRpbWVySUQ7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChleGNsdXNpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVySUQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aW1lcklEID0gc2V0VGltZW91dChmbiwgZGVsYXkpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog6I635Y+W5YWD57SgaXRlbeWcqOaVsOe7hGFycmF55Lit6aaW5qyh5Ye6546w55qE5L2N572uLCDlpoLmnpzmnKrmib7liLBpdGVt77yMIOWImei/lOWbni0xXG4gICAgICAgICAqIEBtZXRob2QgaW5kZXhPZlxuICAgICAgICAgKiBAcmVtaW5kIOivpeaWueazleeahOWMuemFjei/h+eoi+S9v+eUqOeahOaYr+aBkuetieKAnD09PeKAnVxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IGFycmF5IOmcgOimgeafpeaJvueahOaVsOe7hOWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyAqIH0gaXRlbSDpnIDopoHlnKjnm67moIfmlbDnu4TkuK3mn6Xmib7nmoTlgLxcbiAgICAgICAgICogQHJldHVybiB7IGludCB9IOi/lOWbnml0ZW3lnKjnm67moIfmlbDnu4RhcnJheeS4remmluasoeWHuueOsOeahOS9jee9ru+8jCDlpoLmnpzlnKjmlbDnu4TkuK3mnKrmib7liLBpdGVt77yMIOWImei/lOWbni0xXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGl0ZW0gPSAxLFxuICAgICAgICAgKiAgICAgYXJyID0gWyAzLCA0LCA2LCA4LCAxLCAxLCAyIF07XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiA0XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy5pbmRleE9mKCBhcnIsIGl0ZW0gKSApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluWFg+e0oGl0ZW3mlbDnu4RhcnJheeS4remmluasoeWHuueOsOeahOS9jee9riwg5aaC5p6c5pyq5om+5YiwaXRlbe+8jCDliJnov5Tlm54tMeOAgumAmui/h3N0YXJ055qE5YC85Y+v5Lul5oyH5a6a5pCc57Si55qE6LW35aeL5L2N572u44CCXG4gICAgICAgICAqIEBtZXRob2QgaW5kZXhPZlxuICAgICAgICAgKiBAcmVtaW5kIOivpeaWueazleeahOWMuemFjei/h+eoi+S9v+eUqOeahOaYr+aBkuetieKAnD09PeKAnVxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IGFycmF5IOmcgOimgeafpeaJvueahOaVsOe7hOWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyAqIH0gaXRlbSDpnIDopoHlnKjnm67moIfmlbDnu4TkuK3mn6Xmib7nmoTlgLxcbiAgICAgICAgICogQHBhcmFtIHsgaW50IH0gc3RhcnQg5pCc57Si55qE6LW35aeL5L2N572uXG4gICAgICAgICAqIEByZXR1cm4geyBpbnQgfSDov5Tlm55pdGVt5Zyo55uu5qCH5pWw57uEYXJyYXnkuK3nmoRzdGFydOS9jee9ruS5i+WQjummluasoeWHuueOsOeahOS9jee9ru+8jCDlpoLmnpzlnKjmlbDnu4TkuK3mnKrmib7liLBpdGVt77yMIOWImei/lOWbni0xXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGl0ZW0gPSAxLFxuICAgICAgICAgKiAgICAgYXJyID0gWyAzLCA0LCA2LCA4LCAxLCAyLCA4LCAzLCAyLCAxLCAxLCA0IF07XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiA5XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy5pbmRleE9mKCBhcnIsIGl0ZW0sIDUgKSApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGluZGV4T2Y6IGZ1bmN0aW9uIChhcnJheSwgaXRlbSwgc3RhcnQpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IC0xO1xuICAgICAgICAgICAgc3RhcnQgPSB0aGlzLmlzTnVtYmVyKHN0YXJ0KSA/IHN0YXJ0IDogMDtcbiAgICAgICAgICAgIHRoaXMuZWFjaChhcnJheSwgZnVuY3Rpb24gKHYsIGkpIHtcbiAgICAgICAgICAgICAgICBpZiAoaSA+PSBzdGFydCAmJiB2ID09PSBpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnp7vpmaTmlbDnu4RhcnJheeS4reaJgOacieeahOWFg+e0oGl0ZW1cbiAgICAgICAgICogQG1ldGhvZCByZW1vdmVJdGVtXG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gYXJyYXkg6KaB56e76Zmk5YWD57Sg55qE55uu5qCH5pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7ICogfSBpdGVtIOWwhuimgeiiq+enu+mZpOeahOWFg+e0oFxuICAgICAgICAgKiBAcmVtaW5kIOivpeaWueazleeahOWMuemFjei/h+eoi+S9v+eUqOeahOaYr+aBkuetieKAnD09PeKAnVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIHZhciBhcnIgPSBbIDQsIDUsIDcsIDEsIDMsIDQsIDYgXTtcbiAgICAgICAgICpcbiAgICAgICAgICogVUUudXRpbHMucmVtb3ZlSXRlbSggYXJyLCA0ICk7XG4gICAgICAgICAqIC8vb3V0cHV0OiBbIDUsIDcsIDEsIDMsIDYgXVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggYXJyICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgcmVtb3ZlSXRlbTogZnVuY3Rpb24gKGFycmF5LCBpdGVtKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGFycmF5Lmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChhcnJheVtpXSA9PT0gaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICBhcnJheS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGktLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIoOmZpOWtl+espuS4snN0cueahOmmluWwvuepuuagvFxuICAgICAgICAgKiBAbWV0aG9kIHRyaW1cbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3RyIOmcgOimgeWIoOmZpOmmluWwvuepuuagvOeahOWtl+espuS4slxuICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g5Yig6Zmk5LqG6aaW5bC+55qE56m65qC85ZCO55qE5a2X56ym5LiyXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogdmFyIHN0ciA9IFwiIFVFZHRpb3IgXCI7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiA5XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBzdHIubGVuZ3RoICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiA3XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy50cmltKCBcIiBVRWR0aW9yIFwiICkubGVuZ3RoICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiA5XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBzdHIubGVuZ3RoICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHRyaW06IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvKF5bIFxcdFxcblxccl0rKXwoWyBcXHRcXG5cXHJdKyQpL2csICcnKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5bCG5a2X56ym5Liyc3Ry5LulJywn5YiG6ZqU5oiQ5pWw57uE5ZCO77yM5bCG6K+l5pWw57uE6L2s5o2i5oiQ5ZOI5biM5a+56LGh77yMIOWFtueUn+aIkOeahGhhc2jlr7nosaHnmoRrZXnkuLrmlbDnu4TkuK3nmoTlhYPntKDvvIwgdmFsdWXkuLoxXG4gICAgICAgICAqIEBtZXRob2QgbGlzdFRvTWFwXG4gICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleWcqOeUn+aIkOeahGhhc2jlr7nosaHkuK3vvIzkvJrkuLrmr4/kuIDkuKprZXnlkIzml7bnlJ/miJDkuIDkuKrlj6bkuIDkuKrlhajlpKflhpnnmoRrZXnjgIJcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3RyIOivpeWtl+espuS4suWwhuiiq+S7pScsJ+WIhuWJsuS4uuaVsOe7hO+8jCDnhLblkI7ov5vooYzovazljJZcbiAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOi9rOWMluS5i+WQjueahGhhc2jlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogT2JqZWN0IHtVRWR0aW9yOiAxLCBVRURUSU9SOiAxLCBIZWxsbzogMSwgSEVMTE86IDF9XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy5saXN0VG9NYXAoICdVRWR0aW9yLEhlbGxvJyApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5bCG5a2X56ym5Liy5pWw57uE6L2s5o2i5oiQ5ZOI5biM5a+56LGh77yMIOWFtueUn+aIkOeahGhhc2jlr7nosaHnmoRrZXnkuLrmlbDnu4TkuK3nmoTlhYPntKDvvIwgdmFsdWXkuLoxXG4gICAgICAgICAqIEBtZXRob2QgbGlzdFRvTWFwXG4gICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleWcqOeUn+aIkOeahGhhc2jlr7nosaHkuK3vvIzkvJrkuLrmr4/kuIDkuKprZXnlkIzml7bnlJ/miJDkuIDkuKrlj6bkuIDkuKrlhajlpKflhpnnmoRrZXnjgIJcbiAgICAgICAgICogQHBhcmFtIHsgQXJyYXkgfSBhcnIg5a2X56ym5Liy5pWw57uEXG4gICAgICAgICAqIEByZXR1cm4geyBPYmplY3QgfSDovazljJbkuYvlkI7nmoRoYXNo5a+56LGhXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IE9iamVjdCB7VUVkdGlvcjogMSwgVUVEVElPUjogMSwgSGVsbG86IDEsIEhFTExPOiAxfVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggVUUudXRpbHMubGlzdFRvTWFwKCBbICdVRWR0aW9yJywgJ0hlbGxvJyBdICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBsaXN0VG9NYXA6IGZ1bmN0aW9uIChsaXN0KSB7XG4gICAgICAgICAgICBpZiAoIWxpc3QpIHJldHVybiB7fTtcbiAgICAgICAgICAgIGxpc3QgPSB1dGlscy5pc0FycmF5KGxpc3QpID8gbGlzdCA6IGxpc3Quc3BsaXQoJywnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgb2JqID0ge307IChjaSA9IGxpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIG9ialtjaS50b1VwcGVyQ2FzZSgpXSA9IG9ialtjaV0gPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5bCGc3Ry5Lit55qEaHRtbOespuWPt+i9rOS5iSzlsIbovazkuYnigJwn77yMJu+8jDzvvIxcIu+8jD7igJ3kupTkuKrlrZfnrKZcbiAgICAgICAgICogQG1ldGhvZCB1bmh0bWxcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3RyIOmcgOimgei9rOS5ieeahOWtl+espuS4slxuICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L2s5LmJ5ZCO55qE5a2X56ym5LiyXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGh0bWwgPSAnPGJvZHk+JjwvYm9keT4nO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogJmx0O2JvZHkmZ3Q7JmFtcDsmbHQ7L2JvZHkmZ3Q7XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy51bmh0bWwoIGh0bWwgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHVuaHRtbDogZnVuY3Rpb24gKHN0ciwgcmVnKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyXG4gICAgICAgICAgICAgICAgPyBzdHIucmVwbGFjZShyZWcgfHwgL1smPFwiPiddKD86KGFtcHxsdHxxdW90fGd0fCMzOXxuYnNwfCNcXGQrKTspPy9nLCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPCc6ICcmbHQ7JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcmJzogJyZhbXA7JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIic6ICcmcXVvdDsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJz4nOiAnJmd0OycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIidcIjogJyYjMzk7J1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9W2FdO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgOiAnJztcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWwhnVybOS4reeahGh0bWzlrZfnrKbovazkuYnvvIwg5LuF6L2s5LmJICAnLCBcIiwgPCwgPiDlm5vkuKrlrZfnrKZcbiAgICAgICAgICogQHBhcmFtICB7IFN0cmluZyB9IHN0ciDpnIDopoHovazkuYnnmoTlrZfnrKbkuLJcbiAgICAgICAgICogQHBhcmFtICB7IFJlZ0V4cCB9IHJlZyDoh6rlrprkuYnnmoTmraPliJlcbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9ICAgICDovazkuYnlkI7nmoTlrZfnrKbkuLJcbiAgICAgICAgICovXG4gICAgICAgIHVuaHRtbEZvclVybDogZnVuY3Rpb24gKHN0ciwgcmVnKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyXG4gICAgICAgICAgICAgICAgPyBzdHIucmVwbGFjZShyZWcgfHwgL1s8XCI+J10vZywgZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPCc6ICcmbHQ7JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJyYnOiAnJmFtcDsnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnXCInOiAnJnF1b3Q7JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJz4nOiAnJmd0OycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiJ1wiOiAnJiMzOTsnXG4gICAgICAgICAgICAgICAgICAgICAgfVthXTtcbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgOiAnJztcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5bCGc3Ry5Lit55qE6L2s5LmJ5a2X56ym6L+Y5Y6f5oiQaHRtbOWtl+esplxuICAgICAgICAgKiBAc2VlIFVFLnV0aWxzLnVuaHRtbChTdHJpbmcpO1xuICAgICAgICAgKiBAbWV0aG9kIGh0bWxcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3RyIOmcgOimgemAhui9rOS5ieeahOWtl+espuS4slxuICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6YCG6L2s5LmJ5ZCO55qE5a2X56ym5LiyXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogdmFyIHN0ciA9ICcmbHQ7Ym9keSZndDsmYW1wOyZsdDsvYm9keSZndDsnO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogPGJvZHk+JjwvYm9keT5cbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmh0bWwoIHN0ciApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaHRtbDogZnVuY3Rpb24gKHN0cikge1xuICAgICAgICAgICAgcmV0dXJuIHN0clxuICAgICAgICAgICAgICAgID8gc3RyLnJlcGxhY2UoLyYoKGd8bHxxdW8pdHxhbXB8IzM5fG5ic3ApOy9nLCBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICcmbHQ7JzogJzwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnJmFtcDsnOiAnJicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcmcXVvdDsnOiAnXCInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnJmd0Oyc6ICc+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJyYjMzk7JzogXCInXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcmbmJzcDsnOiAnICdcbiAgICAgICAgICAgICAgICAgICAgICB9W21dO1xuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICA6ICcnO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlsIZjc3PmoLflvI/ovazmjaLkuLrpqbzls7DnmoTlvaLlvI9cbiAgICAgICAgICogQG1ldGhvZCBjc3NTdHlsZVRvRG9tU3R5bGVcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY3NzTmFtZSDpnIDopoHovazmjaLnmoRjc3PmoLflvI/lkI1cbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOi9rOaNouaIkOmpvOWzsOW9ouW8j+WQjueahGNzc+agt+W8j+WQjVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqXG4gICAgICAgICAqIHZhciBzdHIgPSAnYm9yZGVyLXRvcCc7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiBib3JkZXJUb3BcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmNzc1N0eWxlVG9Eb21TdHlsZSggc3RyICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBjc3NTdHlsZVRvRG9tU3R5bGU6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdGVzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLnN0eWxlLFxuICAgICAgICAgICAgICAgIGNhY2hlID0ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3QuY3NzRmxvYXQgIT0gdW5kZWZpbmVkID8gJ2Nzc0Zsb2F0JyA6IHRlc3Quc3R5bGVGbG9hdCAhPSB1bmRlZmluZWQgPyAnc3R5bGVGbG9hdCcgOiAnZmxvYXQnXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChjc3NOYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVbY3NzTmFtZV0gfHxcbiAgICAgICAgICAgICAgICAgICAgKGNhY2hlW2Nzc05hbWVdID0gY3NzTmFtZS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLy0uL2csIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoLmNoYXJBdCgxKS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoKSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yqo5oCB5Yqg6L295paH5Lu25YiwZG9j5LitXG4gICAgICAgICAqIEBtZXRob2QgbG9hZEZpbGVcbiAgICAgICAgICogQHBhcmFtIHsgRG9tRG9jdW1lbnQgfSBkb2N1bWVudCDpnIDopoHliqDovb3otYTmupDmlofku7bnmoTmlofmoaPlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gb3B0aW9ucyDliqDovb3otYTmupDmlofku7bnmoTlsZ7mgKfpm4blkIjvvIwg5Y+W5YC86K+35Y+C6ICD5Luj56CB56S65L6LXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogVUUudXRpbHMubG9hZEZpbGUoIGRvY3VtZW50LCB7XG4gICAgICAgICAqICAgICBzcmM6XCJ0ZXN0LmpzXCIsXG4gICAgICAgICAqICAgICB0YWc6XCJzY3JpcHRcIixcbiAgICAgICAgICogICAgIHR5cGU6XCJ0ZXh0L2phdmFzY3JpcHRcIixcbiAgICAgICAgICogICAgIGRlZmVyOlwiZGVmZXJcIlxuICAgICAgICAgKiB9ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yqo5oCB5Yqg6L295paH5Lu25YiwZG9j5Lit77yM5Yqg6L295oiQ5Yqf5ZCO5omn6KGM55qE5Zue6LCD5Ye95pWwZm5cbiAgICAgICAgICogQG1ldGhvZCBsb2FkRmlsZVxuICAgICAgICAgKiBAcGFyYW0geyBEb21Eb2N1bWVudCB9IGRvY3VtZW50IOmcgOimgeWKoOi9vei1hOa6kOaWh+S7tueahOaWh+aho+WvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBvcHRpb25zIOWKoOi9vei1hOa6kOaWh+S7tueahOWxnuaAp+mbhuWQiO+8jCDor6Xpm4blkIjmlK/mjIHnmoTlgLzmmK9zY3JpcHTmoIfnrb7lkoxzdHlsZeagh+etvuaUr+aMgeeahOaJgOacieWxnuaAp+OAglxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOi1hOa6kOaWh+S7tuWKoOi9veaIkOWKn+S5i+WQjuaJp+ihjOeahOWbnuiwg1xuICAgICAgICAgKiBAd2FybmluZyDlr7nkuo7lnKjlkIzkuIDkuKrmlofmoaPkuK3lpJrmrKHliqDovb3lkIzkuIBVUkznmoTmlofku7bvvIwg6K+l5pa55rOV5Lya5Zyo56ys5LiA5qyh5Yqg6L295LmL5ZCO57yT5a2Y6K+l6K+35rGC77yMXG4gICAgICAgICAqICAgICAgICAgICDlnKjmraTkuYvlkI7nmoTmiYDmnInlkIzkuIBVUkznmoTor7fmsYLvvIwg5bCG5Lya55u05o6l6Kem5Y+R5Zue6LCD44CCXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogVUUudXRpbHMubG9hZEZpbGUoIGRvY3VtZW50LCB7XG4gICAgICAgICAqICAgICBzcmM6XCJ0ZXN0LmpzXCIsXG4gICAgICAgICAqICAgICB0YWc6XCJzY3JpcHRcIixcbiAgICAgICAgICogICAgIHR5cGU6XCJ0ZXh0L2phdmFzY3JpcHRcIixcbiAgICAgICAgICogICAgIGRlZmVyOlwiZGVmZXJcIlxuICAgICAgICAgKiB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZygn5Yqg6L295oiQ5YqfJyk7XG4gICAgICAgICAqIH0gKTtcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBsb2FkRmlsZTogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0bXBMaXN0ID0gW107XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEl0ZW0oZG9jLCBvYmopIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHRtcExpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLmRvYyA9PT0gZG9jICYmIGNpLnVybCA9PSAob2JqLnNyYyB8fCBvYmouaHJlZikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2k7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChkb2MsIG9iaiwgZm4pIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IGdldEl0ZW0oZG9jLCBvYmopO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnJlYWR5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbiAmJiBmbigpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5mdW5zLnB1c2goZm4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdG1wTGlzdC5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgZG9jOiBkb2MsXG4gICAgICAgICAgICAgICAgICAgIHVybDogb2JqLnNyYyB8fCBvYmouaHJlZixcbiAgICAgICAgICAgICAgICAgICAgZnVuczogW2ZuXVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmICghZG9jLmJvZHkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwID09ICd0YWcnKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwucHVzaChwICsgJz1cIicgKyBvYmpbcF0gKyAnXCInKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkb2Mud3JpdGUoJzwnICsgb2JqLnRhZyArICcgJyArIGh0bWwuam9pbignICcpICsgJyA+PC8nICsgb2JqLnRhZyArICc+Jyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9iai5pZCAmJiBkb2MuZ2V0RWxlbWVudEJ5SWQob2JqLmlkKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gZG9jLmNyZWF0ZUVsZW1lbnQob2JqLnRhZyk7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG9iai50YWc7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUocCwgb2JqW3BdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxlbWVudC5vbmxvYWQgPSBlbGVtZW50Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnJlYWR5U3RhdGUgfHwgL2xvYWRlZHxjb21wbGV0ZS8udGVzdCh0aGlzLnJlYWR5U3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gZ2V0SXRlbShkb2MsIG9iaik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5mdW5zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnJlYWR5ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBmaTsgKGZpID0gaXRlbS5mdW5zLnBvcCgpKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5vbmxvYWQgPSBlbGVtZW50Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGVsZW1lbnQub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAnVGhlIGxvYWQgJyArIChvYmouaHJlZiB8fCBvYmouc3JjKSArICcgZmFpbHMsY2hlY2sgdGhlIHVybCBzZXR0aW5ncyBvZiBmaWxlIHVlZGl0b3IuY29uZmlnLmpzICdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGRvYy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoKSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yik5patb2Jq5a+56LGh5piv5ZCm5Li656m6XG4gICAgICAgICAqIEBtZXRob2QgaXNFbXB0eU9iamVjdFxuICAgICAgICAgKiBAcGFyYW0geyAqIH0gb2JqIOmcgOimgeWIpOaWreeahOWvueixoVxuICAgICAgICAgKiBAcmVtaW5kIOWmguaenOWIpOaWreeahOWvueixoeaYr05VTEzvvIwg5bCG55u05o6l6L+U5ZuedHJ1Ze+8jCDlpoLmnpzmmK/mlbDnu4TkuJTkuLrnqbrvvIwg6L+U5ZuedHJ1Ze+8jCDlpoLmnpzmmK/lrZfnrKbkuLLvvIwg5LiU5a2X56ym5Liy5Li656m677yMXG4gICAgICAgICAqICAgICAgICAgIOi/lOWbnnRydWXvvIwg5aaC5p6c5piv5pmu6YCa5a+56LGh77yMIOS4lOivpeWvueixoeayoeacieS7u+S9leWunuS+i+WxnuaAp++8jCDov5Tlm550cnVlXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g5a+56LGh5piv5ZCm5Li656m6XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmlzRW1wdHlPYmplY3QoIHt9ICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmlzRW1wdHlPYmplY3QoIFtdICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmlzRW1wdHlPYmplY3QoIFwiXCIgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmlzRW1wdHlPYmplY3QoIHsga2V5OiAxIH0gKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLmlzRW1wdHlPYmplY3QoIFsxXSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiBmYWxzZVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggVUUudXRpbHMuaXNFbXB0eU9iamVjdCggXCIxXCIgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBpZiAodGhpcy5pc0FycmF5KG9iaikgfHwgdGhpcy5pc1N0cmluZyhvYmopKSByZXR1cm4gb2JqLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaKinJnYuagvOW8j+eahOminOiJsuWAvOi9rOaNouaIkDE26L+b5Yi25qC85byPXG4gICAgICAgICAqIEBtZXRob2QgZml4Q29sb3JcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gcmdi5qC85byP55qE6aKc6Imy5YC8XG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIHJnYigyNTUsMjU1LDI1NSkgID0+IFwiI2ZmZmZmZlwiXG4gICAgICAgICAqL1xuICAgICAgICBmaXhDb2xvcjogZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAoL2NvbG9yL2kudGVzdChuYW1lKSAmJiAvcmdiYT8vLnRlc3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFycmF5ID0gdmFsdWUuc3BsaXQoJywnKTtcbiAgICAgICAgICAgICAgICBpZiAoYXJyYXkubGVuZ3RoID4gMykgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgIHZhbHVlID0gJyMnO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjb2xvcjsgKGNvbG9yID0gYXJyYXlbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBjb2xvciA9IHBhcnNlSW50KGNvbG9yLnJlcGxhY2UoL1teXFxkXS9naSwgJycpLCAxMCkudG9TdHJpbmcoMTYpO1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSArPSBjb2xvci5sZW5ndGggPT0gMSA/ICcwJyArIGNvbG9yIDogY29sb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWPqumSiOWvuWJvcmRlcixwYWRkaW5nLG1hcmdpbuWBmuS6huWkhOeQhu+8jOWboOS4uuaAp+iDvemXrumimFxuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqIEBmdW5jdGlvblxuICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gICAgdmFsIHN0eWxl5a2X56ym5LiyXG4gICAgICAgICAqL1xuICAgICAgICBvcHRDc3M6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgIHZhciBwYWRkaW5nLCBtYXJnaW4sIGJvcmRlcjtcbiAgICAgICAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKC8ocGFkZGluZ3xtYXJnaW58Ym9yZGVyKVxcLShbXjpdKyk6KFteO10rKTs/L2dpLCBmdW5jdGlvbiAoc3RyLCBrZXksIG5hbWUsIHZhbCkge1xuICAgICAgICAgICAgICAgIGlmICh2YWwuc3BsaXQoJyAnKS5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAncGFkZGluZyc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXBhZGRpbmcgJiYgKHBhZGRpbmcgPSB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZ1tuYW1lXSA9IHZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtYXJnaW4nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICFtYXJnaW4gJiYgKG1hcmdpbiA9IHt9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW5bbmFtZV0gPSB2YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYm9yZGVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsID09ICdpbml0aWFsJyA/ICcnIDogc3RyO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBzdHI7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gb3B0KG9iaiwgbmFtZSkge1xuICAgICAgICAgICAgICAgIGlmICghb2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHQgPSBvYmoudG9wLFxuICAgICAgICAgICAgICAgICAgICBiID0gb2JqLmJvdHRvbSxcbiAgICAgICAgICAgICAgICAgICAgbCA9IG9iai5sZWZ0LFxuICAgICAgICAgICAgICAgICAgICByID0gb2JqLnJpZ2h0LFxuICAgICAgICAgICAgICAgICAgICB2YWwgPSAnJztcbiAgICAgICAgICAgICAgICBpZiAoIXQgfHwgIWwgfHwgIWIgfHwgIXIpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbCArPSAnOycgKyBuYW1lICsgJy0nICsgcCArICc6JyArIG9ialtwXSArICc7JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbCArPVxuICAgICAgICAgICAgICAgICAgICAgICAgJzsnICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzonICtcbiAgICAgICAgICAgICAgICAgICAgICAgICh0ID09IGIgJiYgYiA9PSBsICYmIGwgPT0gclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdCA9PSBiICYmIGwgPT0gclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdCArICcgJyArIGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGwgPT0gclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdCArICcgJyArIGwgKyAnICcgKyBiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0ICsgJyAnICsgciArICcgJyArIGIgKyAnICcgKyBsKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnOyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhbCArPSBvcHQocGFkZGluZywgJ3BhZGRpbmcnKSArIG9wdChtYXJnaW4sICdtYXJnaW4nKTtcbiAgICAgICAgICAgIHJldHVybiB2YWxcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXlsgXFxuXFxyXFx0O10qfFsgXFxuXFxyXFx0XSokLywgJycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLzsoWyBcXG5cXHJcXHRdKyl8XFwxOy9nLCAnOycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLygmKChsfGcpdHxxdW90fCMzOSkpPzt7Mix9L2csIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBiID8gYiArICc7OycgOiAnOyc7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWFi+mahuWvueixoVxuICAgICAgICAgKiBAbWV0aG9kIGNsb25lXG4gICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IHNvdXJjZSDmupDlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IHNvdXJjZeeahOS4gOS4quWJr+acrFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5rex5bqm5YWL6ZqG5a+56LGh77yM5bCGc291cmNl55qE5bGe5oCn5YWL6ZqG5YiwdGFyZ2V05a+56LGh77yMIOS8muimhueblnRhcmdldOmHjeWQjeeahOWxnuaAp+OAglxuICAgICAgICAgKiBAbWV0aG9kIGNsb25lXG4gICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IHNvdXJjZSDmupDlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gdGFyZ2V0IOebruagh+WvueixoVxuICAgICAgICAgKiBAcmV0dXJuIHsgT2JqZWN0IH0g6ZmE5Yqg5LqGc291cmNl5a+56LGh5omA5pyJ5bGe5oCn55qEdGFyZ2V05a+56LGhXG4gICAgICAgICAqL1xuICAgICAgICBjbG9uZTogZnVuY3Rpb24gKHNvdXJjZSwgdGFyZ2V0KSB7XG4gICAgICAgICAgICB2YXIgdG1wO1xuICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0IHx8IHt9O1xuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcCA9IHNvdXJjZVtpXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0bXAgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFtpXSA9IHV0aWxzLmlzQXJyYXkodG1wKSA/IFtdIDoge307XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5jbG9uZShzb3VyY2VbaV0sIHRhcmdldFtpXSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSB0bXA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmiopjbe+8j3B05Li65Y2V5L2N55qE5YC86L2s5o2i5Li6cHjkuLrljZXkvY3nmoTlgLxcbiAgICAgICAgICogQG1ldGhvZCB0cmFuc1VuaXRUb1B4XG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IOW+hei9rOaNoueahOW4puWNleS9jeeahOWtl+espuS4slxuICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L2s5o2i5Li6cHjkuLrorqHph4/ljZXkvY3nmoTlgLznmoTlrZfnrKbkuLJcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogNTAwcHhcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLnV0aWxzLnRyYW5zVW5pdFRvUHgoICcyMGNtJyApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiAyN3B4XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS51dGlscy50cmFuc1VuaXRUb1B4KCAnMjBwdCcgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHRyYW5zVW5pdFRvUHg6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgIGlmICghLyhwdHxjbSkvLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdW5pdDtcbiAgICAgICAgICAgIHZhbC5yZXBsYWNlKC8oW1xcZC5dKykoXFx3KykvLCBmdW5jdGlvbiAoc3RyLCB2LCB1KSB7XG4gICAgICAgICAgICAgICAgdmFsID0gdjtcbiAgICAgICAgICAgICAgICB1bml0ID0gdTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3dpdGNoICh1bml0KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnY20nOlxuICAgICAgICAgICAgICAgICAgICB2YWwgPSBwYXJzZUZsb2F0KHZhbCkgKiAyNTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAncHQnOlxuICAgICAgICAgICAgICAgICAgICB2YWwgPSBNYXRoLnJvdW5kKChwYXJzZUZsb2F0KHZhbCkgKiA5NikgLyA3Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsICsgKHZhbCA/ICdweCcgOiAnJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqGRvbeagkXJlYWR55LmL5ZCO5omn6KGM57uZ5a6a55qE5Zue6LCD5Ye95pWwXG4gICAgICAgICAqIEBtZXRob2QgZG9tUmVhZHlcbiAgICAgICAgICogQHJlbWluZCDlpoLmnpzlnKjmiafooYzor6Xmlrnms5XnmoTml7blgJnvvIwgZG9t5qCR5bey57uPcmVhZHnvvIwg6YKj5LmI5Zue6LCD5Ye95pWw5bCG56uL5Yi75omn6KGMXG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gZm4gZG9t5qCRcmVhZHnkuYvlkI7nmoTlm57osIPlh73mlbBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiBVRS51dGlscy5kb21SZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coJzEyMycpO1xuICAgICAgICAgKlxuICAgICAgICAgKiB9ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZG9tUmVhZHk6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZm5BcnIgPSBbXTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gZG9SZWFkeShkb2MpIHtcbiAgICAgICAgICAgICAgICAvL+ehruS/nW9ucmVhZHnlj6rmiafooYzkuIDmrKFcbiAgICAgICAgICAgICAgICBkb2MuaXNSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgY2k7IChjaSA9IGZuQXJyLnBvcCgpKTsgY2koKSkge31cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChvbnJlYWR5LCB3aW4pIHtcbiAgICAgICAgICAgICAgICB3aW4gPSB3aW4gfHwgd2luZG93O1xuICAgICAgICAgICAgICAgIHZhciBkb2MgPSB3aW4uZG9jdW1lbnQ7XG4gICAgICAgICAgICAgICAgb25yZWFkeSAmJiBmbkFyci5wdXNoKG9ucmVhZHkpO1xuICAgICAgICAgICAgICAgIGlmIChkb2MucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJykge1xuICAgICAgICAgICAgICAgICAgICBkb1JlYWR5KGRvYyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jLmlzUmVhZHkgJiYgZG9SZWFkeShkb2MpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gIT0gMTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvYy5pc1JlYWR5KSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jLmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCgnbGVmdCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoYXJndW1lbnRzLmNhbGxlZSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9SZWFkeShkb2MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbi5hdHRhY2hFdmVudCgnb25sb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvUmVhZHkoZG9jKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0RPTUNvbnRlbnRMb2FkZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBhcmd1bWVudHMuY2FsbGVlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvUmVhZHkoZG9jKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvYWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9SZWFkeShkb2MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSgpLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliqjmgIHmt7vliqBjc3PmoLflvI9cbiAgICAgICAgICogQG1ldGhvZCBjc3NSdWxlXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IOiKgueCueWQjeensFxuICAgICAgICAgKiBAZ3JhbW1hciBVRS51dGlscy5jc3NSdWxlKCfmt7vliqDnmoTmoLflvI/nmoToioLngrnlkI3np7AnLFsn5qC35byPJ++8jCfmlL7liLDlk6rkuKpkb2N1bWVudOS4iiddKVxuICAgICAgICAgKiBAZ3JhbW1hciBVRS51dGlscy5jc3NSdWxlKCdib2R5JywnYm9keXtiYWNrZ3JvdW5kOiNjY2N9JykgPT4gbnVsbCAgLy/nu5lib2R55re75Yqg6IOM5pmv6aKc6ImyXG4gICAgICAgICAqIEBncmFtbWFyIFVFLnV0aWxzLmNzc1J1bGUoJ2JvZHknKSA9Puagt+W8j+eahOWtl+espuS4siAgLy/lj5blvpdrZXnlgLzkuLpib2R555qE5qC35byP55qE5YaF5a65LOWmguaenOayoeacieaJvuWIsGtleeWAvOWFiOWFs+eahOagt+W8j+Wwhui/lOWbnuepuu+8jOS+i+WmguWImuaJjemCo+S4quiDjOaZr+minOiJsu+8jOWwhui/lOWbniBib2R5e2JhY2tncm91bmQ6I2NjY31cbiAgICAgICAgICogQGdyYW1tYXIgVUUudXRpbHMuY3NzUnVsZSgnYm9keScsZG9jdW1lbnQpID0+IOi/lOWbnuaMh+WummtleeeahOagt+W8j++8jOW5tuS4lOaMh+WumuaYr+WTquS4qmRvY3VtZW50XG4gICAgICAgICAqIEBncmFtbWFyIFVFLnV0aWxzLmNzc1J1bGUoJ2JvZHknLCcnKSA9Pm51bGwgLy/muIXnqbrnu5nlrprnmoRrZXnlgLznmoTog4zmma/popzoibJcbiAgICAgICAgICovXG4gICAgICAgIGNzc1J1bGU6XG4gICAgICAgICAgICBicm93c2VyLmllICYmIGJyb3dzZXIudmVyc2lvbiAhPSAxMVxuICAgICAgICAgICAgICAgID8gZnVuY3Rpb24gKGtleSwgc3R5bGUsIGRvYykge1xuICAgICAgICAgICAgICAgICAgICAgIHZhciBpbmRleExpc3QsIGluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHlsZSA9PT0gdW5kZWZpbmVkIHx8IChzdHlsZSAmJiBzdHlsZS5ub2RlVHlwZSAmJiBzdHlsZS5ub2RlVHlwZSA9PSA5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvL+iOt+WPluagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkb2MgPSBzdHlsZSAmJiBzdHlsZS5ub2RlVHlwZSAmJiBzdHlsZS5ub2RlVHlwZSA9PSA5ID8gc3R5bGUgOiBkb2MgfHwgZG9jdW1lbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4TGlzdCA9IGRvYy5pbmRleExpc3QgfHwgKGRvYy5pbmRleExpc3QgPSB7fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaW5kZXhMaXN0W2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9jLnN0eWxlU2hlZXRzW2luZGV4XS5jc3NUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcbiAgICAgICAgICAgICAgICAgICAgICBpbmRleExpc3QgPSBkb2MuaW5kZXhMaXN0IHx8IChkb2MuaW5kZXhMaXN0ID0ge30pO1xuICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaW5kZXhMaXN0W2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgLy/muIXpmaTmoLflvI9cbiAgICAgICAgICAgICAgICAgICAgICBpZiAoc3R5bGUgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2Muc3R5bGVTaGVldHNbaW5kZXhdLmNzc1RleHQgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBpbmRleExpc3Rba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAvL+a3u+WKoOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNoZWV0U3R5bGUgPSBkb2Muc3R5bGVTaGVldHNbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNoZWV0U3R5bGUgPSBkb2MuY3JlYXRlU3R5bGVTaGVldCgnJywgKGluZGV4ID0gZG9jLnN0eWxlU2hlZXRzLmxlbmd0aCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleExpc3Rba2V5XSA9IGluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICBzaGVldFN0eWxlLmNzc1RleHQgPSBzdHlsZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IGZ1bmN0aW9uIChrZXksIHN0eWxlLCBkb2MpIHtcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgaGVhZCwgbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoc3R5bGUgPT09IHVuZGVmaW5lZCB8fCAoc3R5bGUgJiYgc3R5bGUubm9kZVR5cGUgJiYgc3R5bGUubm9kZVR5cGUgPT0gOSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy/ojrflj5bmoLflvI9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jID0gc3R5bGUgJiYgc3R5bGUubm9kZVR5cGUgJiYgc3R5bGUubm9kZVR5cGUgPT0gOSA/IHN0eWxlIDogZG9jIHx8IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gZG9jLmdldEVsZW1lbnRCeUlkKGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlID8gbm9kZS5pbm5lckhUTUwgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcbiAgICAgICAgICAgICAgICAgICAgICBub2RlID0gZG9jLmdldEVsZW1lbnRCeUlkKGtleSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAvL+a4hemZpOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHlsZSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAvL+a3u+WKoOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGRvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmlkID0ga2V5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmlubmVySFRNTCA9IHN0eWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICBzb3J0OiBmdW5jdGlvbiAoYXJyYXksIGNvbXBhcmVGbikge1xuICAgICAgICAgICAgY29tcGFyZUZuID1cbiAgICAgICAgICAgICAgICBjb21wYXJlRm4gfHxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoaXRlbTEsIGl0ZW0yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtMS5sb2NhbGVDb21wYXJlKGl0ZW0yKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IGksIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDsgaiA8IGxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wYXJlRm4oYXJyYXlbaV0sIGFycmF5W2pdKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ID0gYXJyYXlbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJheVtpXSA9IGFycmF5W2pdO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXlbal0gPSB0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgICB9LFxuICAgICAgICBzZXJpYWxpemVQYXJhbTogZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgICAgICAgIHZhciBzdHJBcnIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4ganNvbikge1xuICAgICAgICAgICAgICAgIC8v5b+955Wl6buY6K6k55qE5Yeg5Liq5Y+C5pWwXG4gICAgICAgICAgICAgICAgaWYgKGkgPT0gJ21ldGhvZCcgfHwgaSA9PSAndGltZW91dCcgfHwgaSA9PSAnYXN5bmMnKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAvL+S8oOmAkui/h+adpeeahOWvueixoeWSjOWHveaVsOS4jeWcqOaPkOS6pOS5i+WIl1xuICAgICAgICAgICAgICAgIGlmICghKCh0eXBlb2YganNvbltpXSkudG9Mb3dlckNhc2UoKSA9PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YganNvbltpXSkudG9Mb3dlckNhc2UoKSA9PSAnb2JqZWN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyQXJyLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGpzb25baV0pKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoanNvbltpXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/mlK/mjIHkvKDmlbDnu4TlhoXlrrlcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBqc29uW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJBcnIucHVzaChlbmNvZGVVUklDb21wb25lbnQoaSkgKyAnW109JyArIGVuY29kZVVSSUNvbXBvbmVudChqc29uW2ldW2pdKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RyQXJyLmpvaW4oJyYnKTtcbiAgICAgICAgfSxcbiAgICAgICAgZm9ybWF0VXJsOiBmdW5jdGlvbiAodXJsKSB7XG4gICAgICAgICAgICB2YXIgdSA9IHVybC5yZXBsYWNlKC8mJi9nLCAnJicpO1xuICAgICAgICAgICAgdSA9IHUucmVwbGFjZSgvXFw/Ji9nLCAnPycpO1xuICAgICAgICAgICAgdSA9IHUucmVwbGFjZSgvJiQvZywgJycpO1xuICAgICAgICAgICAgdSA9IHUucmVwbGFjZSgvJiMvZywgJyMnKTtcbiAgICAgICAgICAgIHUgPSB1LnJlcGxhY2UoLyYrL2csICcmJyk7XG4gICAgICAgICAgICByZXR1cm4gdTtcbiAgICAgICAgfSxcbiAgICAgICAgaXNDcm9zc0RvbWFpblVybDogZnVuY3Rpb24gKHVybCkge1xuICAgICAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICAgICAgICBhLmhyZWYgPSB1cmw7XG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgIGEuaHJlZiA9IGEuaHJlZjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhKFxuICAgICAgICAgICAgICAgIGEucHJvdG9jb2wgPT0gbG9jYXRpb24ucHJvdG9jb2wgJiZcbiAgICAgICAgICAgICAgICBhLmhvc3RuYW1lID09IGxvY2F0aW9uLmhvc3RuYW1lICYmXG4gICAgICAgICAgICAgICAgKGEucG9ydCA9PSBsb2NhdGlvbi5wb3J0IHx8XG4gICAgICAgICAgICAgICAgICAgIChhLnBvcnQgPT0gJzgwJyAmJiBsb2NhdGlvbi5wb3J0ID09ICcnKSB8fFxuICAgICAgICAgICAgICAgICAgICAoYS5wb3J0ID09ICcnICYmIGxvY2F0aW9uLnBvcnQgPT0gJzgwJykpXG4gICAgICAgICAgICApO1xuICAgICAgICB9LFxuICAgICAgICBjbGVhckVtcHR5QXR0cnM6IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gb2JqKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9ialtwXSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIG9ialtwXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICB9LFxuICAgICAgICBzdHIyanNvbjogZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIGlmICghdXRpbHMuaXNTdHJpbmcocykpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgaWYgKHdpbmRvdy5KU09OKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uocyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRnVuY3Rpb24oJ3JldHVybiAnICsgdXRpbHMudHJpbShzIHx8ICcnKSkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAganNvbjJzdHI6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAod2luZG93LkpTT04pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBlc2NhcGVNYXAgPSB7XG4gICAgICAgICAgICAgICAgICAgICdcXGInOiAnXFxcXGInLFxuICAgICAgICAgICAgICAgICAgICAnXFx0JzogJ1xcXFx0JyxcbiAgICAgICAgICAgICAgICAgICAgJ1xcbic6ICdcXFxcbicsXG4gICAgICAgICAgICAgICAgICAgICdcXGYnOiAnXFxcXGYnLFxuICAgICAgICAgICAgICAgICAgICAnXFxyJzogJ1xcXFxyJyxcbiAgICAgICAgICAgICAgICAgICAgJ1wiJzogJ1xcXFxcIicsXG4gICAgICAgICAgICAgICAgICAgICdcXFxcJzogJ1xcXFxcXFxcJ1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBlbmNvZGVTdHJpbmcoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgvW1wiXFxcXFxceDAwLVxceDFmXS8udGVzdChzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBzb3VyY2UucmVwbGFjZSgvW1wiXFxcXFxceDAwLVxceDFmXS9nLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IGVzY2FwZU1hcFttYXRjaF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMgPSBtYXRjaC5jaGFyQ29kZUF0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdcXFxcdTAwJyArIE1hdGguZmxvb3IoYyAvIDE2KS50b1N0cmluZygxNikgKyAoYyAlIDE2KS50b1N0cmluZygxNik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1wiJyArIHNvdXJjZSArICdcIic7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZW5jb2RlQXJyYXkoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBbJ1snXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPSBzb3VyY2UubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlQ29tbWEsXG4gICAgICAgICAgICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbTtcblxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gc291cmNlW2ldO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHR5cGVvZiBpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndW5kZWZpbmVkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndW5rbm93bic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmVDb21tYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goJywnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh1dGlscy5qc29uMnN0cihpdGVtKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZUNvbW1hID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCgnXScpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJycpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHBhZChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNvdXJjZSA8IDEwID8gJzAnICsgc291cmNlIDogc291cmNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGVuY29kZURhdGUoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZS5nZXRGdWxsWWVhcigpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICctJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWQoc291cmNlLmdldE1vbnRoKCkgKyAxKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnLScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkKHNvdXJjZS5nZXREYXRlKCkpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdUJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWQoc291cmNlLmdldEhvdXJzKCkpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWQoc291cmNlLmdldE1pbnV0ZXMoKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzonICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZChzb3VyY2UuZ2V0U2Vjb25kcygpKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCInXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndW5kZWZpbmVkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3VuZGVmaW5lZCc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzRmluaXRlKHZhbHVlKSA/IFN0cmluZyh2YWx1ZSkgOiAnbnVsbCc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVuY29kZVN0cmluZyh2YWx1ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBTdHJpbmcodmFsdWUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ251bGwnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVuY29kZUFycmF5KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVuY29kZURhdGUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBbJ3snXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kZSA9IHV0aWxzLmpzb24yc3RyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlQ29tbWEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwga2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB2YWx1ZVtrZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAodHlwZW9mIGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndW5kZWZpbmVkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndW5rbm93bic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZUNvbW1hKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goJywnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZUNvbW1hID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGVuY29kZShrZXkpICsgJzonICsgZW5jb2RlKGl0ZW0pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goJ30nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpXG4gICAgfSk7XG4gICAgLyoqXG4gICAgICog5Yik5pat57uZ5a6a55qE5a+56LGh5piv5ZCm5piv5a2X56ym5LiyXG4gICAgICogQG1ldGhvZCBpc1N0cmluZ1xuICAgICAqIEBwYXJhbSB7ICogfSBvYmplY3Qg6ZyA6KaB5Yik5pat55qE5a+56LGhXG4gICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDnu5nlrprnmoTlr7nosaHmmK/lkKbmmK/lrZfnrKbkuLJcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWIpOaWree7meWumueahOWvueixoeaYr+WQpuaYr+aVsOe7hFxuICAgICAqIEBtZXRob2QgaXNBcnJheVxuICAgICAqIEBwYXJhbSB7ICogfSBvYmplY3Qg6ZyA6KaB5Yik5pat55qE5a+56LGhXG4gICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDnu5nlrprnmoTlr7nosaHmmK/lkKbmmK/mlbDnu4RcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWIpOaWree7meWumueahOWvueixoeaYr+WQpuaYr+S4gOS4qkZ1bmN0aW9uXG4gICAgICogQG1ldGhvZCBpc0Z1bmN0aW9uXG4gICAgICogQHBhcmFtIHsgKiB9IG9iamVjdCDpnIDopoHliKTmlq3nmoTlr7nosaFcbiAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOe7meWumueahOWvueixoeaYr+WQpuaYr0Z1bmN0aW9uXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDliKTmlq3nu5nlrprnmoTlr7nosaHmmK/lkKbmmK9OdW1iZXJcbiAgICAgKiBAbWV0aG9kIGlzTnVtYmVyXG4gICAgICogQHBhcmFtIHsgKiB9IG9iamVjdCDpnIDopoHliKTmlq3nmoTlr7nosaFcbiAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOe7meWumueahOWvueixoeaYr+WQpuaYr051bWJlclxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5Yik5pat57uZ5a6a55qE5a+56LGh5piv5ZCm5piv5LiA5Liq5q2j5YiZ6KGo6L6+5byPXG4gICAgICogQG1ldGhvZCBpc1JlZ0V4cFxuICAgICAqIEBwYXJhbSB7ICogfSBvYmplY3Qg6ZyA6KaB5Yik5pat55qE5a+56LGhXG4gICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDnu5nlrprnmoTlr7nosaHmmK/lkKbmmK/mraPliJnooajovr7lvI9cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWIpOaWree7meWumueahOWvueixoeaYr+WQpuaYr+S4gOS4quaZrumAmuWvueixoVxuICAgICAqIEBtZXRob2QgaXNPYmplY3RcbiAgICAgKiBAcGFyYW0geyAqIH0gb2JqZWN0IOmcgOimgeWIpOaWreeahOWvueixoVxuICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g57uZ5a6a55qE5a+56LGh5piv5ZCm5piv5pmu6YCa5a+56LGhXG4gICAgICovXG4gICAgdXRpbHMuZWFjaChbJ1N0cmluZycsICdGdW5jdGlvbicsICdBcnJheScsICdOdW1iZXInLCAnUmVnRXhwJywgJ09iamVjdCcsICdEYXRlJ10sIGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIFVFLnV0aWxzWydpcycgKyB2XSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KG9iaikgPT0gJ1tvYmplY3QgJyArIHYgKyAnXSc7XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBjb3JlL0V2ZW50QmFzZS5qc1xuICAgIC8qKlxuICAgICAqIFVF6YeH55So55qE5LqL5Lu25Z+657G7XG4gICAgICogQGZpbGVcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICogQGNsYXNzIEV2ZW50QmFzZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVRWRpdG9y5YWs55So56m66Ze077yMVUVkaXRvcuaJgOacieeahOWKn+iDvemDveaMgui9veWcqOivpeepuumXtOS4i1xuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVRemHh+eUqOeahOS6i+S7tuWfuuexu++8jOe7p+aJv+atpOexu+eahOWvueW6lOexu+WwhuiOt+WPlmFkZExpc3RlbmVyLHJlbW92ZUxpc3RlbmVyLGZpcmVFdmVudOaWueazleOAglxuICAgICAqIOWcqFVF5Lit77yMRWRpdG9y5Lul5Y+K5omA5pyJdWnlrp7kvovpg73nu6fmib/kuobor6XnsbvvvIzmlYXlj6/ku6XlnKjlr7nlupTnmoR1aeWvueixoeS7peWPimVkaXRvcuWvueixoeS4iuS9v+eUqOS4iui/sOaWueazleOAglxuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICogQGNsYXNzIEV2ZW50QmFzZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog6YCa6L+H5q2k5p6E6YCg5Zmo77yM5a2Q57G75Y+v5Lul57un5om/RXZlbnRCYXNl6I635Y+W5LqL5Lu255uR5ZCs55qE5pa55rOVXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogVUUuRXZlbnRCYXNlLmNhbGwoZWRpdG9yKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB2YXIgRXZlbnRCYXNlID0gKFVFLkV2ZW50QmFzZSA9IGZ1bmN0aW9uICgpIHt9KTtcblxuICAgIEV2ZW50QmFzZS5wcm90b3R5cGUgPSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDms6jlhozkuovku7bnm5HlkKzlmahcbiAgICAgICAgICogQG1ldGhvZCBhZGRMaXN0ZW5lclxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0eXBlcyDnm5HlkKznmoTkuovku7blkI3np7DvvIzlkIzml7bnm5HlkKzlpJrkuKrkuovku7bkvb/nlKjnqbrmoLzliIbpmpRcbiAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBmbiDnm5HlkKznmoTkuovku7booqvop6blj5Hml7bvvIzkvJrmiafooYzor6Xlm57osIPlh73mlbBcbiAgICAgICAgICogQHdhaW5pbmcg5LqL5Lu26KKr6Kem5Y+R5pe277yM55uR5ZCs55qE5Ye95pWw5YGH5aaC6L+U5Zue55qE5YC85oGS562J5LqOdHJ1Ze+8jOWbnuiwg+WHveaVsOeahOmYn+WIl+S4reWQjumdoueahOWHveaVsOWwhuS4jeaJp+ihjFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJyxmdW5jdGlvbigpe1xuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKFwi6YCJ5Yy65bey57uP5Y+Y5YyW77yBXCIpO1xuICAgICAgICAgKiB9KVxuICAgICAgICAgKiBlZGl0b3IuYWRkTGlzdGVuZXIoJ2JlZm9yZWdldGNvbnRlbnQgYWZ0ZXJnZXRjb250ZW50JyxmdW5jdGlvbih0eXBlKXtcbiAgICAgICAgICogICAgICAgICBpZih0eXBlID09ICdiZWZvcmVnZXRjb250ZW50Jyl7XG4gICAgICAgICAqICAgICAgICAgICAgIC8vZG8gc29tZXRoaW5nXG4gICAgICAgICAqICAgICAgICAgfWVsc2V7XG4gICAgICAgICAqICAgICAgICAgICAgIC8vZG8gc29tZXRoaW5nXG4gICAgICAgICAqICAgICAgICAgfVxuICAgICAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZ2V0Q29udGVudCkgLy8gdGhpc+aYr+azqOWGjOeahOS6i+S7tueahOe8lui+keWZqOWunuS+i1xuICAgICAgICAgKiB9KVxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICogQHNlZSBVRS5FdmVudEJhc2U6ZmlyZUV2ZW50KFN0cmluZylcbiAgICAgICAgICovXG4gICAgICAgIGFkZExpc3RlbmVyOiBmdW5jdGlvbiAodHlwZXMsIGxpc3RlbmVyKSB7XG4gICAgICAgICAgICB0eXBlcyA9IHV0aWxzLnRyaW0odHlwZXMpLnNwbGl0KC9cXHMrLyk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgdGk7ICh0aSA9IHR5cGVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBnZXRMaXN0ZW5lcih0aGlzLCB0aSwgdHJ1ZSkucHVzaChsaXN0ZW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgb246IGZ1bmN0aW9uICh0eXBlcywgbGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFkZExpc3RlbmVyKHR5cGVzLCBsaXN0ZW5lcik7XG4gICAgICAgIH0sXG4gICAgICAgIG9mZjogZnVuY3Rpb24gKHR5cGVzLCBsaXN0ZW5lcikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZXMsIGxpc3RlbmVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgdHJpZ2dlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlyZUV2ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnp7vpmaTkuovku7bnm5HlkKzlmahcbiAgICAgICAgICogQG1ldGhvZCByZW1vdmVMaXN0ZW5lclxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0eXBlcyDnp7vpmaTnmoTkuovku7blkI3np7DvvIzlkIzml7bnp7vpmaTlpJrkuKrkuovku7bkvb/nlKjnqbrmoLzliIbpmpRcbiAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBmbiDnp7vpmaTnm5HlkKzkuovku7bnmoTlh73mlbDlvJXnlKhcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiAvL2NoYW5nZUNhbGxiYWNr5Li65pa55rOV5L2TXG4gICAgICAgICAqIGVkaXRvci5yZW1vdmVMaXN0ZW5lcihcInNlbGVjdGlvbmNoYW5nZVwiLGNoYW5nZUNhbGxiYWNrKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdmVMaXN0ZW5lcjogZnVuY3Rpb24gKHR5cGVzLCBsaXN0ZW5lcikge1xuICAgICAgICAgICAgdHlwZXMgPSB1dGlscy50cmltKHR5cGVzKS5zcGxpdCgvXFxzKy8pO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIHRpOyAodGkgPSB0eXBlc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgdXRpbHMucmVtb3ZlSXRlbShnZXRMaXN0ZW5lcih0aGlzLCB0aSkgfHwgW10sIGxpc3RlbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog6Kem5Y+R5LqL5Lu2XG4gICAgICAgICAqIEBtZXRob2QgZmlyZUV2ZW50XG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHR5cGVzIOinpuWPkeeahOS6i+S7tuWQjeensO+8jOWQjOaXtuinpuWPkeWkmuS4quS6i+S7tuS9v+eUqOepuuagvOWIhumalFxuICAgICAgICAgKiBAcmVtaW5kIOivpeaWueazleS8muinpuWPkWFkZExpc3RlbmVyXG4gICAgICAgICAqIEByZXR1cm4geyAqIH0g6L+U5Zue6Kem5Y+R5LqL5Lu255qE6Zif5YiX5Lit77yM5pyA5ZCO5omn6KGM55qE5Zue6LCD5Ye95pWw55qE6L+U5Zue5YC8XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogZWRpdG9yLmZpcmVFdmVudChcInNlbGVjdGlvbmNoYW5nZVwiKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDop6blj5Hkuovku7ZcbiAgICAgICAgICogQG1ldGhvZCBmaXJlRXZlbnRcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdHlwZXMg6Kem5Y+R55qE5LqL5Lu25ZCN56ew77yM5ZCM5pe26Kem5Y+R5aSa5Liq5LqL5Lu25L2/55So56m65qC85YiG6ZqUXG4gICAgICAgICAqIEBwYXJhbSB7ICouLi4gfSBvcHRpb25zIOWPr+mAieWPguaVsO+8jOWPr+S7peS8oOWFpeS4gOS4quaIluWkmuS4quWPguaVsO+8jOS8muS8oOe7meS6i+S7tuinpuWPkeeahOWbnuiwg+WHveaVsFxuICAgICAgICAgKiBAcmV0dXJuIHsgKiB9IOi/lOWbnuinpuWPkeS6i+S7tueahOmYn+WIl+S4re+8jOacgOWQjuaJp+ihjOeahOWbnuiwg+WHveaVsOeahOi/lOWbnuWAvFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqXG4gICAgICAgICAqIGVkaXRvci5hZGRMaXN0ZW5lciggXCJzZWxlY3Rpb25jaGFuZ2VcIiwgZnVuY3Rpb24gKCB0eXBlLCBhcmcxLCBhcmcyICkge1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIGFyZzEgKyBcIiBcIiArIGFyZzIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogfSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL+inpuWPkXNlbGVjdGlvbmNoYW5nZeS6i+S7tu+8jCDkvJrmiafooYzkuIrpnaLnmoTkuovku7bnm5HlkKzlmahcbiAgICAgICAgICogLy9vdXRwdXQ6IEhlbGxvIFdvcmxkXG4gICAgICAgICAqIGVkaXRvci5maXJlRXZlbnQoXCJzZWxlY3Rpb25jaGFuZ2VcIiwgXCJIZWxsb1wiLCBcIldvcmxkXCIpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGZpcmVFdmVudDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHR5cGVzID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgdHlwZXMgPSB1dGlscy50cmltKHR5cGVzKS5zcGxpdCgnICcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIHRpOyAodGkgPSB0eXBlc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxpc3RlbmVycyA9IGdldExpc3RlbmVyKHRoaXMsIHRpKSxcbiAgICAgICAgICAgICAgICAgICAgcixcbiAgICAgICAgICAgICAgICAgICAgdCxcbiAgICAgICAgICAgICAgICAgICAgaztcbiAgICAgICAgICAgICAgICBpZiAobGlzdGVuZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBsaXN0ZW5lcnMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoay0tKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWxpc3RlbmVyc1trXSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ID0gbGlzdGVuZXJzW2tdLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIgPSB0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgodCA9IHRoaXNbJ29uJyArIHRpLnRvTG93ZXJDYXNlKCldKSkge1xuICAgICAgICAgICAgICAgICAgICByID0gdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiDojrflvpflr7nosaHmiYDmi6XmnInnm5HlkKznsbvlnovnmoTmiYDmnInnm5HlkKzlmahcbiAgICAgKiBAdW5maWxlXG4gICAgICogQG1vZHVsZSBVRVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICogQG1ldGhvZCBnZXRMaXN0ZW5lclxuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBvYmogIOafpeivouebkeWQrOWZqOeahOWvueixoVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHR5cGUg5LqL5Lu257G75Z6LXG4gICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGZvcmNlICDkuLp0cnVl5LiU5b2T5YmN5omA5pyJdHlwZeexu+Wei+eahOS+puWQrOWZqOS4jeWtmOWcqOaXtu+8jOWIm+W7uuS4gOS4quepuuebkeWQrOWZqOaVsOe7hFxuICAgICAqIEByZXR1cm4geyBBcnJheSB9IOebkeWQrOWZqOaVsOe7hFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldExpc3RlbmVyKG9iaiwgdHlwZSwgZm9yY2UpIHtcbiAgICAgICAgdmFyIGFsbExpc3RlbmVycztcbiAgICAgICAgdHlwZSA9IHR5cGUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIChhbGxMaXN0ZW5lcnMgPSBvYmouX19hbGxMaXN0ZW5lcnMgfHwgKGZvcmNlICYmIChvYmouX19hbGxMaXN0ZW5lcnMgPSB7fSkpKSAmJlxuICAgICAgICAgICAgKGFsbExpc3RlbmVyc1t0eXBlXSB8fCAoZm9yY2UgJiYgKGFsbExpc3RlbmVyc1t0eXBlXSA9IFtdKSkpXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gY29yZS9kdGQuanNcbiAgICAvLy9pbXBvcnQgZWRpdG9yLmpzXG4gICAgLy8vaW1wb3J0IGNvcmUvZG9tL2RvbS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlL3V0aWxzLmpzXG4gICAgLyoqXG4gICAgICogZHRkIGh0bWzor63kuYnljJbnmoTkvZPnjrDnsbtcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAbmFtZXNwYWNlIGR0ZFxuICAgICAqL1xuICAgIHZhciBkdGQgPSAoZG9tLmR0ZCA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIF8ocykge1xuICAgICAgICAgICAgZm9yICh2YXIgayBpbiBzKSB7XG4gICAgICAgICAgICAgICAgc1trLnRvVXBwZXJDYXNlKCldID0gc1trXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICB9XG4gICAgICAgIHZhciBYID0gdXRpbHMuZXh0ZW5kMjtcbiAgICAgICAgdmFyIEEgPSBfKHsgaXNpbmRleDogMSwgZmllbGRzZXQ6IDEgfSksXG4gICAgICAgICAgICBCID0gXyh7IGlucHV0OiAxLCBidXR0b246IDEsIHNlbGVjdDogMSwgdGV4dGFyZWE6IDEsIGxhYmVsOiAxIH0pLFxuICAgICAgICAgICAgQyA9IFgoXyh7IGE6IDEgfSksIEIpLFxuICAgICAgICAgICAgRCA9IFgoeyBpZnJhbWU6IDEgfSwgQyksXG4gICAgICAgICAgICBFID0gXyh7XG4gICAgICAgICAgICAgICAgaHI6IDEsXG4gICAgICAgICAgICAgICAgdWw6IDEsXG4gICAgICAgICAgICAgICAgbWVudTogMSxcbiAgICAgICAgICAgICAgICBkaXY6IDEsXG4gICAgICAgICAgICAgICAgYmxvY2txdW90ZTogMSxcbiAgICAgICAgICAgICAgICBub3NjcmlwdDogMSxcbiAgICAgICAgICAgICAgICB0YWJsZTogMSxcbiAgICAgICAgICAgICAgICBjZW50ZXI6IDEsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogMSxcbiAgICAgICAgICAgICAgICBkaXI6IDEsXG4gICAgICAgICAgICAgICAgcHJlOiAxLFxuICAgICAgICAgICAgICAgIGg1OiAxLFxuICAgICAgICAgICAgICAgIGRsOiAxLFxuICAgICAgICAgICAgICAgIGg0OiAxLFxuICAgICAgICAgICAgICAgIG5vZnJhbWVzOiAxLFxuICAgICAgICAgICAgICAgIGg2OiAxLFxuICAgICAgICAgICAgICAgIG9sOiAxLFxuICAgICAgICAgICAgICAgIGgxOiAxLFxuICAgICAgICAgICAgICAgIGgzOiAxLFxuICAgICAgICAgICAgICAgIGgyOiAxXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIEYgPSBfKHsgaW5zOiAxLCBkZWw6IDEsIHNjcmlwdDogMSwgc3R5bGU6IDEgfSksXG4gICAgICAgICAgICBHID0gWChcbiAgICAgICAgICAgICAgICBfKHtcbiAgICAgICAgICAgICAgICAgICAgYjogMSxcbiAgICAgICAgICAgICAgICAgICAgYWNyb255bTogMSxcbiAgICAgICAgICAgICAgICAgICAgYmRvOiAxLFxuICAgICAgICAgICAgICAgICAgICB2YXI6IDEsXG4gICAgICAgICAgICAgICAgICAgICcjJzogMSxcbiAgICAgICAgICAgICAgICAgICAgYWJicjogMSxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogMSxcbiAgICAgICAgICAgICAgICAgICAgYnI6IDEsXG4gICAgICAgICAgICAgICAgICAgIGk6IDEsXG4gICAgICAgICAgICAgICAgICAgIGNpdGU6IDEsXG4gICAgICAgICAgICAgICAgICAgIGtiZDogMSxcbiAgICAgICAgICAgICAgICAgICAgdTogMSxcbiAgICAgICAgICAgICAgICAgICAgc3RyaWtlOiAxLFxuICAgICAgICAgICAgICAgICAgICBzOiAxLFxuICAgICAgICAgICAgICAgICAgICB0dDogMSxcbiAgICAgICAgICAgICAgICAgICAgc3Ryb25nOiAxLFxuICAgICAgICAgICAgICAgICAgICBxOiAxLFxuICAgICAgICAgICAgICAgICAgICBzYW1wOiAxLFxuICAgICAgICAgICAgICAgICAgICBlbTogMSxcbiAgICAgICAgICAgICAgICAgICAgZGZuOiAxLFxuICAgICAgICAgICAgICAgICAgICBzcGFuOiAxXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgRlxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIEggPSBYKFxuICAgICAgICAgICAgICAgIF8oe1xuICAgICAgICAgICAgICAgICAgICBzdWI6IDEsXG4gICAgICAgICAgICAgICAgICAgIGltZzogMSxcbiAgICAgICAgICAgICAgICAgICAgZW1iZWQ6IDEsXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdDogMSxcbiAgICAgICAgICAgICAgICAgICAgc3VwOiAxLFxuICAgICAgICAgICAgICAgICAgICBiYXNlZm9udDogMSxcbiAgICAgICAgICAgICAgICAgICAgbWFwOiAxLFxuICAgICAgICAgICAgICAgICAgICBhcHBsZXQ6IDEsXG4gICAgICAgICAgICAgICAgICAgIGZvbnQ6IDEsXG4gICAgICAgICAgICAgICAgICAgIGJpZzogMSxcbiAgICAgICAgICAgICAgICAgICAgc21hbGw6IDFcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBHXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgSSA9IFgoXyh7IHA6IDEgfSksIEgpLFxuICAgICAgICAgICAgSiA9IFgoXyh7IGlmcmFtZTogMSB9KSwgSCwgQiksXG4gICAgICAgICAgICBLID0gXyh7XG4gICAgICAgICAgICAgICAgaW1nOiAxLFxuICAgICAgICAgICAgICAgIGVtYmVkOiAxLFxuICAgICAgICAgICAgICAgIG5vc2NyaXB0OiAxLFxuICAgICAgICAgICAgICAgIGJyOiAxLFxuICAgICAgICAgICAgICAgIGtiZDogMSxcbiAgICAgICAgICAgICAgICBjZW50ZXI6IDEsXG4gICAgICAgICAgICAgICAgYnV0dG9uOiAxLFxuICAgICAgICAgICAgICAgIGJhc2Vmb250OiAxLFxuICAgICAgICAgICAgICAgIGg1OiAxLFxuICAgICAgICAgICAgICAgIGg0OiAxLFxuICAgICAgICAgICAgICAgIHNhbXA6IDEsXG4gICAgICAgICAgICAgICAgaDY6IDEsXG4gICAgICAgICAgICAgICAgb2w6IDEsXG4gICAgICAgICAgICAgICAgaDE6IDEsXG4gICAgICAgICAgICAgICAgaDM6IDEsXG4gICAgICAgICAgICAgICAgaDI6IDEsXG4gICAgICAgICAgICAgICAgZm9ybTogMSxcbiAgICAgICAgICAgICAgICBmb250OiAxLFxuICAgICAgICAgICAgICAgICcjJzogMSxcbiAgICAgICAgICAgICAgICBzZWxlY3Q6IDEsXG4gICAgICAgICAgICAgICAgbWVudTogMSxcbiAgICAgICAgICAgICAgICBpbnM6IDEsXG4gICAgICAgICAgICAgICAgYWJicjogMSxcbiAgICAgICAgICAgICAgICBsYWJlbDogMSxcbiAgICAgICAgICAgICAgICBjb2RlOiAxLFxuICAgICAgICAgICAgICAgIHRhYmxlOiAxLFxuICAgICAgICAgICAgICAgIHNjcmlwdDogMSxcbiAgICAgICAgICAgICAgICBjaXRlOiAxLFxuICAgICAgICAgICAgICAgIGlucHV0OiAxLFxuICAgICAgICAgICAgICAgIGlmcmFtZTogMSxcbiAgICAgICAgICAgICAgICBzdHJvbmc6IDEsXG4gICAgICAgICAgICAgICAgdGV4dGFyZWE6IDEsXG4gICAgICAgICAgICAgICAgbm9mcmFtZXM6IDEsXG4gICAgICAgICAgICAgICAgYmlnOiAxLFxuICAgICAgICAgICAgICAgIHNtYWxsOiAxLFxuICAgICAgICAgICAgICAgIHNwYW46IDEsXG4gICAgICAgICAgICAgICAgaHI6IDEsXG4gICAgICAgICAgICAgICAgc3ViOiAxLFxuICAgICAgICAgICAgICAgIGJkbzogMSxcbiAgICAgICAgICAgICAgICB2YXI6IDEsXG4gICAgICAgICAgICAgICAgZGl2OiAxLFxuICAgICAgICAgICAgICAgIG9iamVjdDogMSxcbiAgICAgICAgICAgICAgICBzdXA6IDEsXG4gICAgICAgICAgICAgICAgc3RyaWtlOiAxLFxuICAgICAgICAgICAgICAgIGRpcjogMSxcbiAgICAgICAgICAgICAgICBtYXA6IDEsXG4gICAgICAgICAgICAgICAgZGw6IDEsXG4gICAgICAgICAgICAgICAgYXBwbGV0OiAxLFxuICAgICAgICAgICAgICAgIGRlbDogMSxcbiAgICAgICAgICAgICAgICBpc2luZGV4OiAxLFxuICAgICAgICAgICAgICAgIGZpZWxkc2V0OiAxLFxuICAgICAgICAgICAgICAgIHVsOiAxLFxuICAgICAgICAgICAgICAgIGI6IDEsXG4gICAgICAgICAgICAgICAgYWNyb255bTogMSxcbiAgICAgICAgICAgICAgICBhOiAxLFxuICAgICAgICAgICAgICAgIGJsb2NrcXVvdGU6IDEsXG4gICAgICAgICAgICAgICAgaTogMSxcbiAgICAgICAgICAgICAgICB1OiAxLFxuICAgICAgICAgICAgICAgIHM6IDEsXG4gICAgICAgICAgICAgICAgdHQ6IDEsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogMSxcbiAgICAgICAgICAgICAgICBxOiAxLFxuICAgICAgICAgICAgICAgIHByZTogMSxcbiAgICAgICAgICAgICAgICBwOiAxLFxuICAgICAgICAgICAgICAgIGVtOiAxLFxuICAgICAgICAgICAgICAgIGRmbjogMVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBMID0gWChfKHsgYTogMCB9KSwgSiksIC8vYeS4jeiDveiiq+WIh+W8gO+8jOaJgOS7peaKiuS7llxuICAgICAgICAgICAgTSA9IF8oeyB0cjogMSB9KSxcbiAgICAgICAgICAgIE4gPSBfKHsgJyMnOiAxIH0pLFxuICAgICAgICAgICAgTyA9IFgoXyh7IHBhcmFtOiAxIH0pLCBLKSxcbiAgICAgICAgICAgIFAgPSBYKF8oeyBmb3JtOiAxIH0pLCBBLCBELCBFLCBJKSxcbiAgICAgICAgICAgIFEgPSBfKHsgbGk6IDEsIG9sOiAxLCB1bDogMSB9KSxcbiAgICAgICAgICAgIFIgPSBfKHsgc3R5bGU6IDEsIHNjcmlwdDogMSB9KSxcbiAgICAgICAgICAgIFMgPSBfKHsgYmFzZTogMSwgbGluazogMSwgbWV0YTogMSwgdGl0bGU6IDEgfSksXG4gICAgICAgICAgICBUID0gWChTLCBSKSxcbiAgICAgICAgICAgIFUgPSBfKHsgaGVhZDogMSwgYm9keTogMSB9KSxcbiAgICAgICAgICAgIFYgPSBfKHsgaHRtbDogMSB9KTtcblxuICAgICAgICB2YXIgYmxvY2sgPSBfKHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiAxLFxuICAgICAgICAgICAgICAgIGJsb2NrcXVvdGU6IDEsXG4gICAgICAgICAgICAgICAgY2VudGVyOiAxLFxuICAgICAgICAgICAgICAgIGRpcjogMSxcbiAgICAgICAgICAgICAgICBkaXY6IDEsXG4gICAgICAgICAgICAgICAgZGw6IDEsXG4gICAgICAgICAgICAgICAgZmllbGRzZXQ6IDEsXG4gICAgICAgICAgICAgICAgZm9ybTogMSxcbiAgICAgICAgICAgICAgICBoMTogMSxcbiAgICAgICAgICAgICAgICBoMjogMSxcbiAgICAgICAgICAgICAgICBoMzogMSxcbiAgICAgICAgICAgICAgICBoNDogMSxcbiAgICAgICAgICAgICAgICBoNTogMSxcbiAgICAgICAgICAgICAgICBoNjogMSxcbiAgICAgICAgICAgICAgICBocjogMSxcbiAgICAgICAgICAgICAgICBpc2luZGV4OiAxLFxuICAgICAgICAgICAgICAgIG1lbnU6IDEsXG4gICAgICAgICAgICAgICAgbm9mcmFtZXM6IDEsXG4gICAgICAgICAgICAgICAgb2w6IDEsXG4gICAgICAgICAgICAgICAgcDogMSxcbiAgICAgICAgICAgICAgICBwcmU6IDEsXG4gICAgICAgICAgICAgICAgdGFibGU6IDEsXG4gICAgICAgICAgICAgICAgdWw6IDFcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZW1wdHkgPSBfKHtcbiAgICAgICAgICAgICAgICBhcmVhOiAxLFxuICAgICAgICAgICAgICAgIGJhc2U6IDEsXG4gICAgICAgICAgICAgICAgYmFzZWZvbnQ6IDEsXG4gICAgICAgICAgICAgICAgYnI6IDEsXG4gICAgICAgICAgICAgICAgY29sOiAxLFxuICAgICAgICAgICAgICAgIGNvbW1hbmQ6IDEsXG4gICAgICAgICAgICAgICAgZGlhbG9nOiAxLFxuICAgICAgICAgICAgICAgIGVtYmVkOiAxLFxuICAgICAgICAgICAgICAgIGhyOiAxLFxuICAgICAgICAgICAgICAgIGltZzogMSxcbiAgICAgICAgICAgICAgICBpbnB1dDogMSxcbiAgICAgICAgICAgICAgICBpc2luZGV4OiAxLFxuICAgICAgICAgICAgICAgIGtleWdlbjogMSxcbiAgICAgICAgICAgICAgICBsaW5rOiAxLFxuICAgICAgICAgICAgICAgIG1ldGE6IDEsXG4gICAgICAgICAgICAgICAgcGFyYW06IDEsXG4gICAgICAgICAgICAgICAgc291cmNlOiAxLFxuICAgICAgICAgICAgICAgIHRyYWNrOiAxLFxuICAgICAgICAgICAgICAgIHdicjogMVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIF8oe1xuICAgICAgICAgICAgLy8gJCDooajnpLroh6rlrprnmoTlsZ7mgKdcblxuICAgICAgICAgICAgLy8gYm9keeWklueahOWFg+e0oOWIl+ihqC5cbiAgICAgICAgICAgICRub25Cb2R5Q29udGVudDogWChWLCBVLCBTKSxcblxuICAgICAgICAgICAgLy/lnZfnu5PmnoTlhYPntKDliJfooahcbiAgICAgICAgICAgICRibG9jazogYmxvY2ssXG5cbiAgICAgICAgICAgIC8v5YaF6IGU5YWD57Sg5YiX6KGoXG4gICAgICAgICAgICAkaW5saW5lOiBMLFxuXG4gICAgICAgICAgICAkaW5saW5lV2l0aEE6IFgoXyh7IGE6IDEgfSksIEwpLFxuXG4gICAgICAgICAgICAkYm9keTogWChfKHsgc2NyaXB0OiAxLCBzdHlsZTogMSB9KSwgYmxvY2spLFxuXG4gICAgICAgICAgICAkY2RhdGE6IF8oeyBzY3JpcHQ6IDEsIHN0eWxlOiAxIH0pLFxuXG4gICAgICAgICAgICAvL+iHqumXreWSjOWFg+e0oFxuICAgICAgICAgICAgJGVtcHR5OiBlbXB0eSxcblxuICAgICAgICAgICAgLy/kuI3mmK/oh6rpl63lkIjvvIzkvYbkuI3og73orqlyYW5nZemAieS4remHjOi+uVxuICAgICAgICAgICAgJG5vbkNoaWxkOiBfKHsgaWZyYW1lOiAxLCB0ZXh0YXJlYTogMSB9KSxcbiAgICAgICAgICAgIC8v5YiX6KGo5YWD57Sg5YiX6KGoXG4gICAgICAgICAgICAkbGlzdEl0ZW06IF8oeyBkZDogMSwgZHQ6IDEsIGxpOiAxIH0pLFxuXG4gICAgICAgICAgICAvL+WIl+ihqOagueWFg+e0oOWIl+ihqFxuICAgICAgICAgICAgJGxpc3Q6IF8oeyB1bDogMSwgb2w6IDEsIGRsOiAxIH0pLFxuXG4gICAgICAgICAgICAvL+S4jeiDveiupOS4uuaYr+epuueahOWFg+e0oFxuICAgICAgICAgICAgJGlzTm90RW1wdHk6IF8oe1xuICAgICAgICAgICAgICAgIHRhYmxlOiAxLFxuICAgICAgICAgICAgICAgIHVsOiAxLFxuICAgICAgICAgICAgICAgIG9sOiAxLFxuICAgICAgICAgICAgICAgIGRsOiAxLFxuICAgICAgICAgICAgICAgIGlmcmFtZTogMSxcbiAgICAgICAgICAgICAgICBhcmVhOiAxLFxuICAgICAgICAgICAgICAgIGJhc2U6IDEsXG4gICAgICAgICAgICAgICAgY29sOiAxLFxuICAgICAgICAgICAgICAgIGhyOiAxLFxuICAgICAgICAgICAgICAgIGltZzogMSxcbiAgICAgICAgICAgICAgICBlbWJlZDogMSxcbiAgICAgICAgICAgICAgICBpbnB1dDogMSxcbiAgICAgICAgICAgICAgICBsaW5rOiAxLFxuICAgICAgICAgICAgICAgIG1ldGE6IDEsXG4gICAgICAgICAgICAgICAgcGFyYW06IDEsXG4gICAgICAgICAgICAgICAgaDE6IDEsXG4gICAgICAgICAgICAgICAgaDI6IDEsXG4gICAgICAgICAgICAgICAgaDM6IDEsXG4gICAgICAgICAgICAgICAgaDQ6IDEsXG4gICAgICAgICAgICAgICAgaDU6IDEsXG4gICAgICAgICAgICAgICAgaDY6IDFcbiAgICAgICAgICAgIH0pLFxuXG4gICAgICAgICAgICAvL+WmguaenOayoeacieWtkOiKgueCueWwseWPr+S7peWIoOmZpOeahOWFg+e0oOWIl+ihqO+8jOWDj3NwYW4sYVxuICAgICAgICAgICAgJHJlbW92ZUVtcHR5OiBfKHtcbiAgICAgICAgICAgICAgICBhOiAxLFxuICAgICAgICAgICAgICAgIGFiYnI6IDEsXG4gICAgICAgICAgICAgICAgYWNyb255bTogMSxcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiAxLFxuICAgICAgICAgICAgICAgIGI6IDEsXG4gICAgICAgICAgICAgICAgYmRvOiAxLFxuICAgICAgICAgICAgICAgIGJpZzogMSxcbiAgICAgICAgICAgICAgICBjaXRlOiAxLFxuICAgICAgICAgICAgICAgIGNvZGU6IDEsXG4gICAgICAgICAgICAgICAgZGVsOiAxLFxuICAgICAgICAgICAgICAgIGRmbjogMSxcbiAgICAgICAgICAgICAgICBlbTogMSxcbiAgICAgICAgICAgICAgICBmb250OiAxLFxuICAgICAgICAgICAgICAgIGk6IDEsXG4gICAgICAgICAgICAgICAgaW5zOiAxLFxuICAgICAgICAgICAgICAgIGxhYmVsOiAxLFxuICAgICAgICAgICAgICAgIGtiZDogMSxcbiAgICAgICAgICAgICAgICBxOiAxLFxuICAgICAgICAgICAgICAgIHM6IDEsXG4gICAgICAgICAgICAgICAgc2FtcDogMSxcbiAgICAgICAgICAgICAgICBzbWFsbDogMSxcbiAgICAgICAgICAgICAgICBzcGFuOiAxLFxuICAgICAgICAgICAgICAgIHN0cmlrZTogMSxcbiAgICAgICAgICAgICAgICBzdHJvbmc6IDEsXG4gICAgICAgICAgICAgICAgc3ViOiAxLFxuICAgICAgICAgICAgICAgIHN1cDogMSxcbiAgICAgICAgICAgICAgICB0dDogMSxcbiAgICAgICAgICAgICAgICB1OiAxLFxuICAgICAgICAgICAgICAgIHZhcjogMVxuICAgICAgICAgICAgfSksXG5cbiAgICAgICAgICAgICRyZW1vdmVFbXB0eUJsb2NrOiBfKHsgcDogMSwgZGl2OiAxIH0pLFxuXG4gICAgICAgICAgICAvL+WcqHRhYmxl5YWD57Sg6YeM55qE5YWD57Sg5YiX6KGoXG4gICAgICAgICAgICAkdGFibGVDb250ZW50OiBfKHtcbiAgICAgICAgICAgICAgICBjYXB0aW9uOiAxLFxuICAgICAgICAgICAgICAgIGNvbDogMSxcbiAgICAgICAgICAgICAgICBjb2xncm91cDogMSxcbiAgICAgICAgICAgICAgICB0Ym9keTogMSxcbiAgICAgICAgICAgICAgICB0ZDogMSxcbiAgICAgICAgICAgICAgICB0Zm9vdDogMSxcbiAgICAgICAgICAgICAgICB0aDogMSxcbiAgICAgICAgICAgICAgICB0aGVhZDogMSxcbiAgICAgICAgICAgICAgICB0cjogMSxcbiAgICAgICAgICAgICAgICB0YWJsZTogMVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAvL+S4jei9rOaNoueahOagh+etvlxuICAgICAgICAgICAgJG5vdFRyYW5zQ29udGVudDogXyh7IHByZTogMSwgc2NyaXB0OiAxLCBzdHlsZTogMSwgdGV4dGFyZWE6IDEgfSksXG4gICAgICAgICAgICBodG1sOiBVLFxuICAgICAgICAgICAgaGVhZDogVCxcbiAgICAgICAgICAgIHN0eWxlOiBOLFxuICAgICAgICAgICAgc2NyaXB0OiBOLFxuICAgICAgICAgICAgYm9keTogUCxcbiAgICAgICAgICAgIGJhc2U6IHt9LFxuICAgICAgICAgICAgbGluazoge30sXG4gICAgICAgICAgICBtZXRhOiB7fSxcbiAgICAgICAgICAgIHRpdGxlOiBOLFxuICAgICAgICAgICAgY29sOiB7fSxcbiAgICAgICAgICAgIHRyOiBfKHsgdGQ6IDEsIHRoOiAxIH0pLFxuICAgICAgICAgICAgaW1nOiB7fSxcbiAgICAgICAgICAgIGVtYmVkOiB7fSxcbiAgICAgICAgICAgIGNvbGdyb3VwOiBfKHsgdGhlYWQ6IDEsIGNvbDogMSwgdGJvZHk6IDEsIHRyOiAxLCB0Zm9vdDogMSB9KSxcbiAgICAgICAgICAgIG5vc2NyaXB0OiBQLFxuICAgICAgICAgICAgdGQ6IFAsXG4gICAgICAgICAgICBicjoge30sXG4gICAgICAgICAgICB0aDogUCxcbiAgICAgICAgICAgIGNlbnRlcjogUCxcbiAgICAgICAgICAgIGtiZDogTCxcbiAgICAgICAgICAgIGJ1dHRvbjogWChJLCBFKSxcbiAgICAgICAgICAgIGJhc2Vmb250OiB7fSxcbiAgICAgICAgICAgIGg1OiBMLFxuICAgICAgICAgICAgaDQ6IEwsXG4gICAgICAgICAgICBzYW1wOiBMLFxuICAgICAgICAgICAgaDY6IEwsXG4gICAgICAgICAgICBvbDogUSxcbiAgICAgICAgICAgIGgxOiBMLFxuICAgICAgICAgICAgaDM6IEwsXG4gICAgICAgICAgICBvcHRpb246IE4sXG4gICAgICAgICAgICBoMjogTCxcbiAgICAgICAgICAgIGZvcm06IFgoQSwgRCwgRSwgSSksXG4gICAgICAgICAgICBzZWxlY3Q6IF8oeyBvcHRncm91cDogMSwgb3B0aW9uOiAxIH0pLFxuICAgICAgICAgICAgZm9udDogTCxcbiAgICAgICAgICAgIGluczogTCxcbiAgICAgICAgICAgIG1lbnU6IFEsXG4gICAgICAgICAgICBhYmJyOiBMLFxuICAgICAgICAgICAgbGFiZWw6IEwsXG4gICAgICAgICAgICB0YWJsZTogXyh7IHRoZWFkOiAxLCBjb2w6IDEsIHRib2R5OiAxLCB0cjogMSwgY29sZ3JvdXA6IDEsIGNhcHRpb246IDEsIHRmb290OiAxIH0pLFxuICAgICAgICAgICAgY29kZTogTCxcbiAgICAgICAgICAgIHRmb290OiBNLFxuICAgICAgICAgICAgY2l0ZTogTCxcbiAgICAgICAgICAgIGxpOiBQLFxuICAgICAgICAgICAgaW5wdXQ6IHt9LFxuICAgICAgICAgICAgaWZyYW1lOiBQLFxuICAgICAgICAgICAgc3Ryb25nOiBMLFxuICAgICAgICAgICAgdGV4dGFyZWE6IE4sXG4gICAgICAgICAgICBub2ZyYW1lczogUCxcbiAgICAgICAgICAgIGJpZzogTCxcbiAgICAgICAgICAgIHNtYWxsOiBMLFxuICAgICAgICAgICAgLy90cmFjZTpcbiAgICAgICAgICAgIHNwYW46IF8oeyAnIyc6IDEsIGJyOiAxLCBiOiAxLCBzdHJvbmc6IDEsIHU6IDEsIGk6IDEsIGVtOiAxLCBzdWI6IDEsIHN1cDogMSwgc3RyaWtlOiAxLCBzcGFuOiAxIH0pLFxuICAgICAgICAgICAgaHI6IEwsXG4gICAgICAgICAgICBkdDogTCxcbiAgICAgICAgICAgIHN1YjogTCxcbiAgICAgICAgICAgIG9wdGdyb3VwOiBfKHsgb3B0aW9uOiAxIH0pLFxuICAgICAgICAgICAgcGFyYW06IHt9LFxuICAgICAgICAgICAgYmRvOiBMLFxuICAgICAgICAgICAgdmFyOiBMLFxuICAgICAgICAgICAgZGl2OiBQLFxuICAgICAgICAgICAgb2JqZWN0OiBPLFxuICAgICAgICAgICAgc3VwOiBMLFxuICAgICAgICAgICAgZGQ6IFAsXG4gICAgICAgICAgICBzdHJpa2U6IEwsXG4gICAgICAgICAgICBhcmVhOiB7fSxcbiAgICAgICAgICAgIGRpcjogUSxcbiAgICAgICAgICAgIG1hcDogWChfKHsgYXJlYTogMSwgZm9ybTogMSwgcDogMSB9KSwgQSwgRiwgRSksXG4gICAgICAgICAgICBhcHBsZXQ6IE8sXG4gICAgICAgICAgICBkbDogXyh7IGR0OiAxLCBkZDogMSB9KSxcbiAgICAgICAgICAgIGRlbDogTCxcbiAgICAgICAgICAgIGlzaW5kZXg6IHt9LFxuICAgICAgICAgICAgZmllbGRzZXQ6IFgoXyh7IGxlZ2VuZDogMSB9KSwgSyksXG4gICAgICAgICAgICB0aGVhZDogTSxcbiAgICAgICAgICAgIHVsOiBRLFxuICAgICAgICAgICAgYWNyb255bTogTCxcbiAgICAgICAgICAgIGI6IEwsXG4gICAgICAgICAgICBhOiBYKF8oeyBhOiAxIH0pLCBKKSxcbiAgICAgICAgICAgIGJsb2NrcXVvdGU6IFgoXyh7IHRkOiAxLCB0cjogMSwgdGJvZHk6IDEsIGxpOiAxIH0pLCBQKSxcbiAgICAgICAgICAgIGNhcHRpb246IEwsXG4gICAgICAgICAgICBpOiBMLFxuICAgICAgICAgICAgdTogTCxcbiAgICAgICAgICAgIHRib2R5OiBNLFxuICAgICAgICAgICAgczogTCxcbiAgICAgICAgICAgIGFkZHJlc3M6IFgoRCwgSSksXG4gICAgICAgICAgICB0dDogTCxcbiAgICAgICAgICAgIGxlZ2VuZDogTCxcbiAgICAgICAgICAgIHE6IEwsXG4gICAgICAgICAgICBwcmU6IFgoRywgQyksXG4gICAgICAgICAgICBwOiBYKF8oeyBhOiAxIH0pLCBMKSxcbiAgICAgICAgICAgIGVtOiBMLFxuICAgICAgICAgICAgZGZuOiBMXG4gICAgICAgIH0pO1xuICAgIH0pKCkpO1xuXG4gICAgLy8gY29yZS9kb21VdGlscy5qc1xuICAgIC8qKlxuICAgICAqIERvbeaTjeS9nOW3peWFt+WMhVxuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRS5kb20uZG9tVXRpbHNcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogRG9t5pON5L2c5bel5YW35YyFXG4gICAgICogQHVuZmlsZVxuICAgICAqIEBtb2R1bGUgVUUuZG9tLmRvbVV0aWxzXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0RG9tTm9kZShub2RlLCBzdGFydCwgbHRyLCBzdGFydEZyb21DaGlsZCwgZm4sIGd1YXJkKSB7XG4gICAgICAgIHZhciB0bXBOb2RlID0gc3RhcnRGcm9tQ2hpbGQgJiYgbm9kZVtzdGFydF0sXG4gICAgICAgICAgICBwYXJlbnQ7XG4gICAgICAgICF0bXBOb2RlICYmICh0bXBOb2RlID0gbm9kZVtsdHJdKTtcbiAgICAgICAgd2hpbGUgKCF0bXBOb2RlICYmIChwYXJlbnQgPSAocGFyZW50IHx8IG5vZGUpLnBhcmVudE5vZGUpKSB7XG4gICAgICAgICAgICBpZiAocGFyZW50LnRhZ05hbWUgPT0gJ0JPRFknIHx8IChndWFyZCAmJiAhZ3VhcmQocGFyZW50KSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRtcE5vZGUgPSBwYXJlbnRbbHRyXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodG1wTm9kZSAmJiBmbiAmJiAhZm4odG1wTm9kZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXREb21Ob2RlKHRtcE5vZGUsIHN0YXJ0LCBsdHIsIGZhbHNlLCBmbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRtcE5vZGU7XG4gICAgfVxuICAgIHZhciBhdHRyRml4ID1cbiAgICAgICAgICAgIGllICYmIGJyb3dzZXIudmVyc2lvbiA8IDlcbiAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgICB0YWJpbmRleDogJ3RhYkluZGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogJ3JlYWRPbmx5JyxcbiAgICAgICAgICAgICAgICAgICAgICBmb3I6ICdodG1sRm9yJyxcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ2NsYXNzTmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoOiAnbWF4TGVuZ3RoJyxcbiAgICAgICAgICAgICAgICAgICAgICBjZWxsc3BhY2luZzogJ2NlbGxTcGFjaW5nJyxcbiAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZzogJ2NlbGxQYWRkaW5nJyxcbiAgICAgICAgICAgICAgICAgICAgICByb3dzcGFuOiAncm93U3BhbicsXG4gICAgICAgICAgICAgICAgICAgICAgY29sc3BhbjogJ2NvbFNwYW4nLFxuICAgICAgICAgICAgICAgICAgICAgIHVzZW1hcDogJ3VzZU1hcCcsXG4gICAgICAgICAgICAgICAgICAgICAgZnJhbWVib3JkZXI6ICdmcmFtZUJvcmRlcidcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgICB0YWJpbmRleDogJ3RhYkluZGV4JyxcbiAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogJ3JlYWRPbmx5J1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgc3R5bGVCbG9jayA9IHV0aWxzLmxpc3RUb01hcChbXG4gICAgICAgICAgICAnLXdlYmtpdC1ib3gnLFxuICAgICAgICAgICAgJy1tb3otYm94JyxcbiAgICAgICAgICAgICdibG9jaycsXG4gICAgICAgICAgICAnbGlzdC1pdGVtJyxcbiAgICAgICAgICAgICd0YWJsZScsXG4gICAgICAgICAgICAndGFibGUtcm93LWdyb3VwJyxcbiAgICAgICAgICAgICd0YWJsZS1oZWFkZXItZ3JvdXAnLFxuICAgICAgICAgICAgJ3RhYmxlLWZvb3Rlci1ncm91cCcsXG4gICAgICAgICAgICAndGFibGUtcm93JyxcbiAgICAgICAgICAgICd0YWJsZS1jb2x1bW4tZ3JvdXAnLFxuICAgICAgICAgICAgJ3RhYmxlLWNvbHVtbicsXG4gICAgICAgICAgICAndGFibGUtY2VsbCcsXG4gICAgICAgICAgICAndGFibGUtY2FwdGlvbidcbiAgICAgICAgXSk7XG4gICAgdmFyIGRvbVV0aWxzID0gKGRvbS5kb21VdGlscyA9IHtcbiAgICAgICAgLy/oioLngrnluLjph49cbiAgICAgICAgTk9ERV9FTEVNRU5UOiAxLFxuICAgICAgICBOT0RFX0RPQ1VNRU5UOiA5LFxuICAgICAgICBOT0RFX1RFWFQ6IDMsXG4gICAgICAgIE5PREVfQ09NTUVOVDogOCxcbiAgICAgICAgTk9ERV9ET0NVTUVOVF9GUkFHTUVOVDogMTEsXG5cbiAgICAgICAgLy/kvY3nva7lhbPns7tcbiAgICAgICAgUE9TSVRJT05fSURFTlRJQ0FMOiAwLFxuICAgICAgICBQT1NJVElPTl9ESVNDT05ORUNURUQ6IDEsXG4gICAgICAgIFBPU0lUSU9OX0ZPTExPV0lORzogMixcbiAgICAgICAgUE9TSVRJT05fUFJFQ0VESU5HOiA0LFxuICAgICAgICBQT1NJVElPTl9JU19DT05UQUlORUQ6IDgsXG4gICAgICAgIFBPU0lUSU9OX0NPTlRBSU5TOiAxNixcbiAgICAgICAgLy9pZTbkvb/nlKjlhbbku5bnmoTkvJrmnInkuIDmrrXnqbrnmb3lh7rnjrBcbiAgICAgICAgZmlsbENoYXI6IGllICYmIGJyb3dzZXIudmVyc2lvbiA9PSAnNicgPyAnXFx1ZmVmZicgOiAnXFx1MjAwQicsXG4gICAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLU5vZGXpg6jliIYtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAgICBrZXlzOiB7XG4gICAgICAgICAgICAvKkJhY2tzcGFjZSovIDg6IDEsXG4gICAgICAgICAgICAvKkRlbGV0ZSovIDQ2OiAxLFxuICAgICAgICAgICAgLypTaGlmdCovIDE2OiAxLFxuICAgICAgICAgICAgLypDdHJsKi8gMTc6IDEsXG4gICAgICAgICAgICAvKkFsdCovIDE4OiAxLFxuICAgICAgICAgICAgMzc6IDEsXG4gICAgICAgICAgICAzODogMSxcbiAgICAgICAgICAgIDM5OiAxLFxuICAgICAgICAgICAgNDA6IDEsXG4gICAgICAgICAgICAxMzogMSAvKmVudGVyKi9cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluiKgueCuUHnm7jlr7nkuo7oioLngrlC55qE5L2N572u5YWz57O7XG4gICAgICAgICAqIEBtZXRob2QgZ2V0UG9zaXRpb25cbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGVBIOmcgOimgeafpeivouS9jee9ruWFs+ezu+eahOiKgueCuUFcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGVCIOmcgOimgeafpeivouS9jee9ruWFs+ezu+eahOiKgueCuUJcbiAgICAgICAgICogQHJldHVybiB7IE51bWJlciB9IOiKgueCuUHkuI7oioLngrlC55qE5YWz57O7XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogLy9vdXRwdXQ6IDIwXG4gICAgICAgICAqIHZhciBwb3NpdGlvbiA9IFVFLmRvbS5kb21VdGlscy5nZXRQb3NpdGlvbiggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBkb2N1bWVudC5ib2R5ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIHN3aXRjaCAoIHBvc2l0aW9uICkge1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIC8vMFxuICAgICAgICAgKiAgICAgIGNhc2UgVUUuZG9tLmRvbVV0aWxzLlBPU0lUSU9OX0lERU5USUNBTDpcbiAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coJ+WFg+e0oOebuOWQjCcpO1xuICAgICAgICAgKiAgICAgICAgICBicmVhaztcbiAgICAgICAgICogICAgICAvLzFcbiAgICAgICAgICogICAgICBjYXNlIFVFLmRvbS5kb21VdGlscy5QT1NJVElPTl9ESVNDT05ORUNURUQ6XG4gICAgICAgICAqICAgICAgICAgIGNvbnNvbGUubG9nKCfkuKTkuKroioLngrnlnKjkuI3lkIznmoTmlofmoaPkuK0nKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgLy8yXG4gICAgICAgICAqICAgICAgY2FzZSBVRS5kb20uZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HOlxuICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZygn6IqC54K5QeWcqOiKgueCuULkuYvlkI4nKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgLy80XG4gICAgICAgICAqICAgICAgY2FzZSBVRS5kb20uZG9tVXRpbHMuUE9TSVRJT05fUFJFQ0VESU5HO1xuICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZygn6IqC54K5QeWcqOiKgueCuULkuYvliY0nKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgLy84XG4gICAgICAgICAqICAgICAgY2FzZSBVRS5kb20uZG9tVXRpbHMuUE9TSVRJT05fSVNfQ09OVEFJTkVEOlxuICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZygn6IqC54K5Qeiiq+iKgueCuULljIXlkKsnKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgY2FzZSAxMDpcbiAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coJ+iKgueCuUHooqvoioLngrlC5YyF5ZCr5LiU6IqC54K5QeWcqOiKgueCuULkuYvlkI4nKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgLy8xNlxuICAgICAgICAgKiAgICAgIGNhc2UgVUUuZG9tLmRvbVV0aWxzLlBPU0lUSU9OX0NPTlRBSU5TOlxuICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZygn6IqC54K5QeWMheWQq+iKgueCuUInKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqICAgICAgY2FzZSAyMDpcbiAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coJ+iKgueCuUHljIXlkKvoioLngrlC5LiU6IqC54K5QeWcqOiKgueCuULkuYvliY0nKTtcbiAgICAgICAgICogICAgICAgICAgYnJlYWs7XG4gICAgICAgICAqXG4gICAgICAgICAqIH1cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBnZXRQb3NpdGlvbjogZnVuY3Rpb24gKG5vZGVBLCBub2RlQikge1xuICAgICAgICAgICAgLy8g5aaC5p6c5Lik5Liq6IqC54K55piv5ZCM5LiA5Liq6IqC54K5XG4gICAgICAgICAgICBpZiAobm9kZUEgPT09IG5vZGVCKSB7XG4gICAgICAgICAgICAgICAgLy8gZG9tVXRpbHMuUE9TSVRJT05fSURFTlRJQ0FMXG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbm9kZSxcbiAgICAgICAgICAgICAgICBwYXJlbnRzQSA9IFtub2RlQV0sXG4gICAgICAgICAgICAgICAgcGFyZW50c0IgPSBbbm9kZUJdO1xuICAgICAgICAgICAgbm9kZSA9IG5vZGVBO1xuICAgICAgICAgICAgd2hpbGUgKChub2RlID0gbm9kZS5wYXJlbnROb2RlKSkge1xuICAgICAgICAgICAgICAgIC8vIOWmguaenG5vZGVC5pivbm9kZUHnmoTnpZblhYjoioLngrlcbiAgICAgICAgICAgICAgICBpZiAobm9kZSA9PT0gbm9kZUIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZG9tVXRpbHMuUE9TSVRJT05fSVNfQ09OVEFJTkVEICsgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGFyZW50c0EucHVzaChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUgPSBub2RlQjtcbiAgICAgICAgICAgIHdoaWxlICgobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHtcbiAgICAgICAgICAgICAgICAvLyDlpoLmnpxub2RlQeaYr25vZGVC55qE56WW5YWI6IqC54K5XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUgPT09IG5vZGVBKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGRvbVV0aWxzLlBPU0lUSU9OX0NPTlRBSU5TICsgZG9tVXRpbHMuUE9TSVRJT05fUFJFQ0VESU5HXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAyMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGFyZW50c0IucHVzaChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcmVudHNBLnJldmVyc2UoKTtcbiAgICAgICAgICAgIHBhcmVudHNCLnJldmVyc2UoKTtcbiAgICAgICAgICAgIGlmIChwYXJlbnRzQVswXSAhPT0gcGFyZW50c0JbMF0pIHtcbiAgICAgICAgICAgICAgICAvLyBkb21VdGlscy5QT1NJVElPTl9ESVNDT05ORUNURURcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBpID0gLTE7XG4gICAgICAgICAgICB3aGlsZSAoKGkrKywgcGFyZW50c0FbaV0gPT09IHBhcmVudHNCW2ldKSkge31cbiAgICAgICAgICAgIG5vZGVBID0gcGFyZW50c0FbaV07XG4gICAgICAgICAgICBub2RlQiA9IHBhcmVudHNCW2ldO1xuICAgICAgICAgICAgd2hpbGUgKChub2RlQSA9IG5vZGVBLm5leHRTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgIGlmIChub2RlQSA9PT0gbm9kZUIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZG9tVXRpbHMuUE9TSVRJT05fUFJFQ0VESU5HXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGRvbVV0aWxzLlBPU0lUSU9OX0ZPTExPV0lOR1xuICAgICAgICAgICAgcmV0dXJuIDI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOajgOa1i+iKgueCuW5vZGXlnKjniLboioLngrnkuK3nmoTntKLlvJXkvY3nva5cbiAgICAgICAgICogQG1ldGhvZCBnZXROb2RlSW5kZXhcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5qOA5rWL55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBOdW1iZXIgfSDor6XoioLngrnlnKjniLboioLngrnkuK3nmoTkvY3nva5cbiAgICAgICAgICogQHNlZSBVRS5kb20uZG9tVXRpbHMuZ2V0Tm9kZUluZGV4KE5vZGUsQm9vbGVhbilcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOajgOa1i+iKgueCuW5vZGXlnKjniLboioLngrnkuK3nmoTntKLlvJXkvY3nva7vvIwg5qC55o2u57uZ5a6a55qEbWVyZ2VUZXh0Tm9kZeWPguaVsOWGs+WumuaYr+WQpuimgeWQiOW5tuWkmuS4qui/nue7reeahOaWh+acrOiKgueCueS4uuS4gOS4quiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGdldE5vZGVJbmRleFxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmo4DmtYvnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IG1lcmdlVGV4dE5vZGUg5piv5ZCm5ZCI5bm25aSa5Liq6L+e57ut55qE5paH5pys6IqC54K55Li65LiA5Liq6IqC54K5XG4gICAgICAgICAqIEByZXR1cm4geyBOdW1iZXIgfSDor6XoioLngrnlnKjniLboioLngrnkuK3nmoTkvY3nva5cbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICBub2RlLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSggXCJoZWxsb1wiICkgKTtcbiAgICAgICAgICogICAgICBub2RlLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSggXCJ3b3JsZFwiICkgKTtcbiAgICAgICAgICogICAgICBub2RlLmFwcGVuZENoaWxkKCBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IDJcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmdldE5vZGVJbmRleCggbm9kZSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IDFcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmdldE5vZGVJbmRleCggbm9kZSwgdHJ1ZSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0Tm9kZUluZGV4OiBmdW5jdGlvbiAobm9kZSwgaWdub3JlVGV4dE5vZGUpIHtcbiAgICAgICAgICAgIHZhciBwcmVOb2RlID0gbm9kZSxcbiAgICAgICAgICAgICAgICBpID0gMDtcbiAgICAgICAgICAgIHdoaWxlICgocHJlTm9kZSA9IHByZU5vZGUucHJldmlvdXNTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgIGlmIChpZ25vcmVUZXh0Tm9kZSAmJiBwcmVOb2RlLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByZU5vZGUubm9kZVR5cGUgIT0gcHJlTm9kZS5uZXh0U2libGluZy5ub2RlVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5qOA5rWL6IqC54K5bm9kZeaYr+WQpuWcqOe7meWumueahGRvY3VtZW505a+56LGh5LiKXG4gICAgICAgICAqIEBtZXRob2QgaW5Eb2NcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5qOA5rWL55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IERvbURvY3VtZW50IH0gZG9jIOmcgOimgeajgOa1i+eahGRvY3VtZW505a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g6K+l6IqC54K5bm9kZeaYr+WQpuWcqOe7meWumueahGRvY3VtZW5055qEZG9t5qCR5LiKXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLmRvLmRvbVV0aWxzLmluRG9jKCBub2RlLCBkb2N1bWVudCApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoIG5vZGUgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLmRvLmRvbVV0aWxzLmluRG9jKCBub2RlLCBkb2N1bWVudCApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaW5Eb2M6IGZ1bmN0aW9uIChub2RlLCBkb2MpIHtcbiAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5nZXRQb3NpdGlvbihub2RlLCBkb2MpID09IDEwO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5qC55o2u57uZ5a6a55qE6L+H5ruk6KeE5YiZZmlsdGVyRm7vvIwg5p+l5om+56ym5ZCI6K+l6L+H5ruk6KeE5YiZ55qEbm9kZeiKgueCueeahOesrOS4gOS4quelluWFiOiKgueCue+8jFxuICAgICAgICAgKiDmn6Xmib7nmoTotbfngrnmmK/nu5nlrppub2Rl6IqC54K555qE54i26IqC54K544CCXG4gICAgICAgICAqIEBtZXRob2QgZmluZFBhcmVudFxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmn6Xmib7nmoToioLngrlcbiAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBmaWx0ZXJGbiDoh6rlrprkuYnnmoTov4fmu6Tmlrnms5XjgIJcbiAgICAgICAgICogQHdhcm5pbmcg5p+l5om+55qE57uI54K55piv5YiwYm9keeiKgueCueS4uuatolxuICAgICAgICAgKiBAcmVtaW5kIOiHquWumuS5ieeahOi/h+a7pOaWueazlWZpbHRlckZu5o6l5Y+X5LiA5LiqTm9kZeWvueixoeS9nOS4uuWPguaVsO+8jCDor6Xlr7nosaHku6PooajlvZPliY3miafooYzmo4DmtYvnmoTnpZblhYjoioLngrnjgIIg5aaC5p6c6K+lXG4gICAgICAgICAqICAgICAgICAgIOiKgueCuea7oei2s+i/h+a7pOadoeS7tu+8jCDliJnopoHmsYLov5Tlm550cnVl77yMIOi/meaXtuWwhuebtOaOpei/lOWbnuivpeiKgueCueS9nOS4umZpbmRQYXJlbnQoKeeahOe7k+aenO+8jCDlkKbliJnvvIwg6K+36L+U5ZueZmFsc2XjgIJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOdWxsIH0g5aaC5p6c5om+5Yiw56ym5ZCI6L+H5ruk5p2h5Lu255qE6IqC54K577yMIOWwsei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGZpbHRlck5vZGUgPSBVRS5kb20uZG9tVXRpbHMuZmluZFBhcmVudCggZG9jdW1lbnQuYm9keS5maXJzdENoaWxkLCBmdW5jdGlvbiAoIG5vZGUgKSB7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL+eUseS6juafpeaJvueahOe7iOeCueaYr2JvZHnoioLngrnvvIwg5omA5Lul5rC46L+c5Lmf5LiN5Lya5Yy56YWN5b2T5YmN6L+H5ruk5Zmo55qE5p2h5Lu277yMIOWNs+i/memHjOawuOi/nOS8mui/lOWbnmZhbHNlXG4gICAgICAgICAqICAgICByZXR1cm4gbm9kZS50YWdOYW1lID09PSBcIkhUTUxcIjtcbiAgICAgICAgICpcbiAgICAgICAgICogfSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggZmlsdGVyTm9kZSA9PT0gbnVsbCApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOagueaNrue7meWumueahOi/h+a7pOinhOWImWZpbHRlckZu77yMIOafpeaJvuespuWQiOivpei/h+a7pOinhOWImeeahG5vZGXoioLngrnnmoTnrKzkuIDkuKrnpZblhYjoioLngrnvvIxcbiAgICAgICAgICog5aaC5p6caW5jbHVkZVNlbGbnmoTlgLzkuLp0cnVl77yM5YiZ5p+l5om+55qE6LW354K55piv57uZ5a6a55qE6IqC54K5bm9kZe+8jCDlkKbliJnvvIwg6LW354K55pivbm9kZeeahOeItuiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGZpbmRQYXJlbnRcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5p+l5om+55qE6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gZmlsdGVyRm4g6Ieq5a6a5LmJ55qE6L+H5ruk5pa55rOV44CCXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpbmNsdWRlU2VsZiDmn6Xmib7ov4fnqIvmmK/lkKbljIXlkKvoh6rouqtcbiAgICAgICAgICogQHdhcm5pbmcg5p+l5om+55qE57uI54K55piv5YiwYm9keeiKgueCueS4uuatolxuICAgICAgICAgKiBAcmVtaW5kIOiHquWumuS5ieeahOi/h+a7pOaWueazlWZpbHRlckZu5o6l5Y+X5LiA5LiqTm9kZeWvueixoeS9nOS4uuWPguaVsO+8jCDor6Xlr7nosaHku6PooajlvZPliY3miafooYzmo4DmtYvnmoTnpZblhYjoioLngrnjgIIg5aaC5p6c6K+lXG4gICAgICAgICAqICAgICAgICAgIOiKgueCuea7oei2s+i/h+a7pOadoeS7tu+8jCDliJnopoHmsYLov5Tlm550cnVl77yMIOi/meaXtuWwhuebtOaOpei/lOWbnuivpeiKgueCueS9nOS4umZpbmRQYXJlbnQoKeeahOe7k+aenO+8jCDlkKbliJnvvIwg6K+36L+U5ZueZmFsc2XjgIJcbiAgICAgICAgICogQHJlbWluZCDlpoLmnpxpbmNsdWRlU2VsZuS4unRydWXvvIwg5YiZ6L+H5ruk5Zmo56ys5LiA5qyh5omn6KGM5pe255qE5Y+C5pWw5Lya5piv6IqC54K55pys6Lqr44CCXG4gICAgICAgICAqICAgICAgICAgIOWPjeS5i++8jCDov4fmu6TlmajnrKzkuIDmrKHmiafooYzml7bnmoTlj4LmlbDlsIbmmK/or6XoioLngrnnmoTniLboioLngrnjgIJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOdWxsIH0g5aaC5p6c5om+5Yiw56ym5ZCI6L+H5ruk5p2h5Lu255qE6IqC54K577yMIOWwsei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGJvZHk+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgPGRpdiBpZD1cInRlc3RcIj5cbiAgICAgICAgICogICAgICA8L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgICA8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgICAgICAgLy9vdXRwdXQ6IERJViwgQk9EWVxuICAgICAgICAgKiAgICAgICAgICB2YXIgZmlsdGVyTm9kZSA9IFVFLmRvbS5kb21VdGlscy5maW5kUGFyZW50KCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJ0ZXN0XCIgKSwgZnVuY3Rpb24gKCBub2RlICkge1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgICAgICAgICAgY29uc29sZS5sb2coIG5vZGUudGFnTmFtZSApO1xuICAgICAgICAgKiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgICAgICB9LCB0cnVlICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgPC9zY3JpcHQ+XG4gICAgICAgICAqIDwvYm9keT5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBmaW5kUGFyZW50OiBmdW5jdGlvbiAobm9kZSwgZmlsdGVyRm4sIGluY2x1ZGVTZWxmKSB7XG4gICAgICAgICAgICBpZiAobm9kZSAmJiAhZG9tVXRpbHMuaXNCb2R5KG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgbm9kZSA9IGluY2x1ZGVTZWxmID8gbm9kZSA6IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWZpbHRlckZuIHx8IGZpbHRlckZuKG5vZGUpIHx8IGRvbVV0aWxzLmlzQm9keShub2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZpbHRlckZuICYmICFmaWx0ZXJGbihub2RlKSAmJiBkb21VdGlscy5pc0JvZHkobm9kZSkgPyBudWxsIDogbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5p+l5om+bm9kZeeahOiKgueCueWQjeS4unRhZ05hbWXnmoTnrKzkuIDkuKrnpZblhYjoioLngrnvvIwg5p+l5om+55qE6LW354K55pivbm9kZeiKgueCueeahOeItuiKgueCueOAglxuICAgICAgICAgKiBAbWV0aG9kIGZpbmRQYXJlbnRCeVRhZ05hbWVcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5p+l5om+55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gdGFnTmFtZXMg6ZyA6KaB5p+l5om+55qE54i26IqC54K555qE5ZCN56ew5pWw57uEXG4gICAgICAgICAqIEB3YXJuaW5nIOafpeaJvueahOe7iOeCueaYr+WIsGJvZHnoioLngrnkuLrmraJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOVUxMIH0g5aaC5p6c5om+5Yiw56ym5ZCI5p2h5Lu255qE6IqC54K577yMIOWImei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIG5vZGUgPSBVRS5kb20uZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZSggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIilbMF0sIFsgXCJCT0RZXCIgXSApO1xuICAgICAgICAgKiAvL291dHB1dDogQk9EWVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggbm9kZS50YWdOYW1lICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5p+l5om+bm9kZeeahOiKgueCueWQjeS4unRhZ05hbWXnmoTnpZblhYjoioLngrnvvIwg5aaC5p6caW5jbHVkZVNlbGbnmoTlgLzkuLp0cnVl77yM5YiZ5p+l5om+55qE6LW354K55piv57uZ5a6a55qE6IqC54K5bm9kZe+8jFxuICAgICAgICAgKiDlkKbliJnvvIwg6LW354K55pivbm9kZeeahOeItuiKgueCueOAglxuICAgICAgICAgKiBAbWV0aG9kIGZpbmRQYXJlbnRCeVRhZ05hbWVcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5p+l5om+55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gdGFnTmFtZXMg6ZyA6KaB5p+l5om+55qE54i26IqC54K555qE5ZCN56ew5pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpbmNsdWRlU2VsZiDmn6Xmib7ov4fnqIvmmK/lkKbljIXlkKtub2Rl6IqC54K56Ieq6LqrXG4gICAgICAgICAqIEB3YXJuaW5nIOafpeaJvueahOe7iOeCueaYr+WIsGJvZHnoioLngrnkuLrmraJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOVUxMIH0g5aaC5p6c5om+5Yiw56ym5ZCI5p2h5Lu255qE6IqC54K577yMIOWImei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIHF1ZXJ5VGFyZ2V0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIilbMF07XG4gICAgICAgICAqIHZhciBub2RlID0gVUUuZG9tLmRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoIHF1ZXJ5VGFyZ2V0LCBbIFwiRElWXCIgXSwgdHJ1ZSApO1xuICAgICAgICAgKiAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggcXVlcnlUYXJnZXQgPT09IG5vZGUgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBmaW5kUGFyZW50QnlUYWdOYW1lOiBmdW5jdGlvbiAobm9kZSwgdGFnTmFtZXMsIGluY2x1ZGVTZWxmLCBleGNsdWRlRm4pIHtcbiAgICAgICAgICAgIHRhZ05hbWVzID0gdXRpbHMubGlzdFRvTWFwKHV0aWxzLmlzQXJyYXkodGFnTmFtZXMpID8gdGFnTmFtZXMgOiBbdGFnTmFtZXNdKTtcbiAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5maW5kUGFyZW50KFxuICAgICAgICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhZ05hbWVzW25vZGUudGFnTmFtZV0gJiYgIShleGNsdWRlRm4gJiYgZXhjbHVkZUZuKG5vZGUpKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGluY2x1ZGVTZWxmXG4gICAgICAgICAgICApO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5p+l5om+6IqC54K5bm9kZeeahOelluWFiOiKgueCuembhuWQiO+8jCDmn6Xmib7nmoTotbfngrnmmK/nu5nlrproioLngrnnmoTniLboioLngrnvvIznu5Pmnpzpm4bkuK3kuI3ljIXlkKvnu5nlrprnmoToioLngrnjgIJcbiAgICAgICAgICogQG1ldGhvZCBmaW5kUGFyZW50c1xuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmn6Xmib7nmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IEFycmF5IH0g57uZ5a6a6IqC54K555qE56WW5YWI6IqC54K55pWw57uEXG4gICAgICAgICAqIEBncmFtbWFyIFVFLmRvbS5kb21VdGlscy5maW5kUGFyZW50cyhub2RlKSAgPT4gQXJyYXkgIC8v6L+U5Zue5LiA5Liq56WW5YWI6IqC54K55pWw57uE6ZuG5ZCI77yM5LiN5YyF5ZCr6Ieq6LqrXG4gICAgICAgICAqIEBncmFtbWFyIFVFLmRvbS5kb21VdGlscy5maW5kUGFyZW50cyhub2RlLGluY2x1ZGVTZWxmKSAgPT4gQXJyYXkgIC8v6L+U5Zue5LiA5Liq56WW5YWI6IqC54K55pWw57uE6ZuG5ZCI77yMaW5jbHVkZVNlbGbmjIflrprmmK/lkKbljIXlkKvoh6rouqtcbiAgICAgICAgICogQGdyYW1tYXIgVUUuZG9tLmRvbVV0aWxzLmZpbmRQYXJlbnRzKG5vZGUsaW5jbHVkZVNlbGYsZmlsdGVyRm4pICA9PiBBcnJheSAgLy/ov5Tlm57kuIDkuKrnpZblhYjoioLngrnmlbDnu4Tpm4blkIjvvIxmaWx0ZXJGbuaMh+Wumui/h+a7pOadoeS7tu+8jOi/lOWbnnRydWXnmoRub2Rl5bCG6KKr6YCJ5Y+WXG4gICAgICAgICAqIEBncmFtbWFyIFVFLmRvbS5kb21VdGlscy5maW5kUGFyZW50cyhub2RlLGluY2x1ZGVTZWxmLGZpbHRlckZuLGNsb3NlckZpcnN0KSAgPT4gQXJyYXkgIC8v6L+U5Zue5LiA5Liq56WW5YWI6IqC54K55pWw57uE6ZuG5ZCI77yMY2xvc2VyRmlyc3TkuLp0cnVl55qE6K+d77yMbm9kZeeahOebtOaOpeeItuS6suiKgueCueaYr+aVsOe7hOeahOesrDDkuKpcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOafpeaJvuiKgueCuW5vZGXnmoTnpZblhYjoioLngrnpm4blkIjvvIwg5aaC5p6caW5jbHVkZVNlbGbnmoTlgLzkuLp0cnVl77yMXG4gICAgICAgICAqIOWImei/lOWbnueahOe7k+aenOmbhuS4reWFgeiuuOWHuueOsOW9k+WJjee7meWumueahOiKgueCue+8jCDlkKbliJnvvIwg6K+l6IqC54K55LiN5Lya5Ye6546w5Zyo5YW257uT5p6c6ZuG5Lit44CCXG4gICAgICAgICAqIEBtZXRob2QgZmluZFBhcmVudHNcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5p+l5om+55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpbmNsdWRlU2VsZiDmn6Xmib7nmoTnu5PmnpzkuK3mmK/lkKblhYHorrjljIXlkKvlvZPliY3mn6Xmib7nmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IEFycmF5IH0g57uZ5a6a6IqC54K555qE56WW5YWI6IqC54K55pWw57uEXG4gICAgICAgICAqL1xuICAgICAgICBmaW5kUGFyZW50czogZnVuY3Rpb24gKG5vZGUsIGluY2x1ZGVTZWxmLCBmaWx0ZXJGbiwgY2xvc2VyRmlyc3QpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnRzID0gaW5jbHVkZVNlbGYgJiYgKChmaWx0ZXJGbiAmJiBmaWx0ZXJGbihub2RlKSkgfHwgIWZpbHRlckZuKSA/IFtub2RlXSA6IFtdO1xuICAgICAgICAgICAgd2hpbGUgKChub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudChub2RlLCBmaWx0ZXJGbikpKSB7XG4gICAgICAgICAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNsb3NlckZpcnN0ID8gcGFyZW50cyA6IHBhcmVudHMucmV2ZXJzZSgpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlnKjoioLngrlub2Rl5ZCO6Z2i5o+S5YWl5paw6IqC54K5bmV3Tm9kZVxuICAgICAgICAgKiBAbWV0aG9kIGluc2VydEFmdGVyXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOebruagh+iKgueCuVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbmV3Tm9kZSDmlrDmj5LlhaXnmoToioLngrnvvIwg6K+l6IqC54K55bCG572u5LqO55uu5qCH6IqC54K55LmL5ZCOXG4gICAgICAgICAqIEByZXR1cm4geyBOb2RlIH0g5paw5o+S5YWl55qE6IqC54K5XG4gICAgICAgICAqL1xuICAgICAgICBpbnNlcnRBZnRlcjogZnVuY3Rpb24gKG5vZGUsIG5ld05vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBub2RlLm5leHRTaWJsaW5nXG4gICAgICAgICAgICAgICAgPyBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5ld05vZGUsIG5vZGUubmV4dFNpYmxpbmcpXG4gICAgICAgICAgICAgICAgOiBub2RlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQobmV3Tm9kZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIoOmZpOiKgueCuW5vZGXlj4rlhbbkuIvlsZ7nmoTmiYDmnInoioLngrlcbiAgICAgICAgICogQG1ldGhvZCByZW1vdmVcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5Yig6Zmk55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBOb2RlIH0g6L+U5Zue5Yia5Yig6Zmk55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj5cbiAgICAgICAgICogICAgIDxkaXYgaWQ9XCJjaGlsZFwiPuS9oOWlvTwvZGl2PlxuICAgICAgICAgKiA8L2Rpdj5cbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5yZW1vdmUoIGRvY3VtZW50LmJvZHksIGZhbHNlICk7XG4gICAgICAgICAqICAgICAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJjaGlsZFwiICkgIT09IG51bGwgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yig6Zmk6IqC54K5bm9kZe+8jOW5tuagueaNrmtlZXBDaGlsZHJlbueahOWAvOWGs+WumuaYr+WQpuS/neeVmeWtkOiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIHJlbW92ZVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHliKDpmaTnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGtlZXBDaGlsZHJlbiDmmK/lkKbpnIDopoHkv53nlZnlrZDoioLngrlcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfSDov5Tlm57liJrliKDpmaTnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdFwiPlxuICAgICAgICAgKiAgICAgPGRpdiBpZD1cImNoaWxkXCI+5L2g5aW9PC9kaXY+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKiAgICAgVUUuZG9tLmRvbVV0aWxzLnJlbW92ZSggZG9jdW1lbnQuYm9keSwgdHJ1ZSApO1xuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJjaGlsZFwiICkgIT09IG51bGwgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiAobm9kZSwga2VlcENoaWxkcmVuKSB7XG4gICAgICAgICAgICB2YXIgcGFyZW50ID0gbm9kZS5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgIGNoaWxkO1xuICAgICAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgICAgIGlmIChrZWVwQ2hpbGRyZW4gJiYgbm9kZS5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKChjaGlsZCA9IG5vZGUuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBub2RlO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlj5blvpdub2Rl6IqC54K555qE5LiL5LiA5Liq5YWE5byf6IqC54K577yMIOWmguaenOivpeiKgueCueWFtuWQjuayoeacieWFhOW8n+iKgueCue+8jCDliJnpgJLlvZLmn6Xmib7lhbbniLboioLngrnkuYvlkI7nmoTnrKzkuIDkuKrlhYTlvJ/oioLngrnvvIxcbiAgICAgICAgICog55u05Yiw5om+5Yiw5ruh6Laz5p2h5Lu255qE6IqC54K55oiW6ICF6YCS5b2S5YiwQk9EWeiKgueCueS5i+WQjuaJjeS8mue7k+adn+OAglxuICAgICAgICAgKiBAbWV0aG9kIGdldE5leHREb21Ob2RlXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOmcgOimgeiOt+WPluWFtuWQjueahOWFhOW8n+iKgueCueeahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcmV0dXJuIHsgTm9kZSB8IE5VTEwgfSDlpoLmnpzmib7mu6HotrPmnaHku7bnmoToioLngrnvvIwg5YiZ6L+U5Zue6K+l6IqC54K577yMIOWQpuWImei/lOWbnk5VTExcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiAgICAgPGJvZHk+XG4gICAgICAgICAqICAgICAgPGRpdiBpZD1cInRlc3RcIj5cbiAgICAgICAgICogICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgKiAgICAgIDwvZGl2PlxuICAgICAgICAgKiAgICAgIDxpPnh4eDwvaT5cbiAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGnoioLngrlcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxib2R5PlxuICAgICAgICAgKiAgICAgIDxkaXY+XG4gICAgICAgICAqICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICogICAgICAgICAgPGkgaWQ9XCJ0ZXN0XCI+eHh4PC9pPlxuICAgICAgICAgKiAgICAgIDwvZGl2PlxuICAgICAgICAgKiAgICAgIDxiPnh4eDwvYj5cbiAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy/nlLHkuo5pZOS4unRlc3TnmoRp6IqC54K55LmL5ZCO5rKh5pyJ5YWE5byf6IqC54K577yMIOWImeafpeaJvuWFtueItuiKgueCue+8iGRpdu+8ieWQjumdoueahOWFhOW8n+iKgueCuVxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGLoioLngrlcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Y+W5b6Xbm9kZeiKgueCueeahOS4i+S4gOS4quWFhOW8n+iKgueCue+8jCDlpoLmnpxzdGFydEZyb21DaGlsZOeahOWAvOS4unR1cmXvvIzliJnlhYjojrflj5blhbblrZDoioLngrnvvIxcbiAgICAgICAgICog5aaC5p6c5pyJ5a2Q6IqC54K55YiZ55u05o6l6L+U5Zue56ys5LiA5Liq5a2Q6IqC54K577yb5aaC5p6c5rKh5pyJ5a2Q6IqC54K55oiW6ICFc3RhcnRGcm9tQ2hpbGTnmoTlgLzkuLpmYWxzZe+8jFxuICAgICAgICAgKiDliJnmiafooYw8YSBocmVmPVwiI1VFLmRvbS5kb21VdGlscy5nZXROZXh0RG9tTm9kZShOb2RlKVwiPmdldE5leHREb21Ob2RlKE5vZGUgbm9kZSk8L2E+55qE5p+l5om+6L+H56iL44CCXG4gICAgICAgICAqIEBtZXRob2QgZ2V0TmV4dERvbU5vZGVcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB6I635Y+W5YW25ZCO55qE5YWE5byf6IqC54K555qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBzdGFydEZyb21DaGlsZCDmn6Xmib7ov4fnqIvmmK/lkKbku47lhbblrZDoioLngrnlvIDlp4tcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOVUxMIH0g5aaC5p6c5om+5ruh6Laz5p2h5Lu255qE6IqC54K577yMIOWImei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBzZWUgVUUuZG9tLmRvbVV0aWxzLmdldE5leHREb21Ob2RlKE5vZGUpXG4gICAgICAgICAqL1xuICAgICAgICBnZXROZXh0RG9tTm9kZTogZnVuY3Rpb24gKG5vZGUsIHN0YXJ0RnJvbUNoaWxkLCBmaWx0ZXJGbiwgZ3VhcmQpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXREb21Ob2RlKG5vZGUsICdmaXJzdENoaWxkJywgJ25leHRTaWJsaW5nJywgc3RhcnRGcm9tQ2hpbGQsIGZpbHRlckZuLCBndWFyZCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldFByZURvbU5vZGU6IGZ1bmN0aW9uIChub2RlLCBzdGFydEZyb21DaGlsZCwgZmlsdGVyRm4sIGd1YXJkKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0RG9tTm9kZShub2RlLCAnbGFzdENoaWxkJywgJ3ByZXZpb3VzU2libGluZycsIHN0YXJ0RnJvbUNoaWxkLCBmaWx0ZXJGbiwgZ3VhcmQpO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5qOA5rWL6IqC54K5bm9kZeaYr+WQpuWxnuaYr1VFZGl0b3LlrprkuYnnmoRib29rbWFya+iKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGlzQm9va21hcmtOb2RlXG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOmcgOimgeajgOa1i+eahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOaYr+WQpuaYr2Jvb2ttYXJr6IqC54K5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPHNwYW4gaWQ9XCJfYmFpZHVfYm9va21hcmtfMVwiPjwvc3Bhbj5cbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgICB2YXIgYm9va21hcmtOb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJfYmFpZHVfYm9va21hcmtfMVwiKTtcbiAgICAgICAgICogICAgICAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaXNCb29rbWFya05vZGUoIGJvb2ttYXJrTm9kZSApICk7XG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGlzQm9va21hcmtOb2RlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMSAmJiBub2RlLmlkICYmIC9eX2JhaWR1X2Jvb2ttYXJrXy9pLnRlc3Qobm9kZS5pZCk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5boioLngrlub2Rl5omA5bGe55qEd2luZG935a+56LGhXG4gICAgICAgICAqIEBtZXRob2QgIGdldFdpbmRvd1xuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDoioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IFdpbmRvdyB9IOW9k+WJjeiKgueCueaJgOWxnueahHdpbmRvd+WvueixoVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIC8vb3V0cHV0OiB0cnVlXG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuZ2V0V2luZG93KCBkb2N1bWVudC5ib2R5ICkgPT09IHdpbmRvdyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGdldFdpbmRvdzogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHZhciBkb2MgPSBub2RlLm93bmVyRG9jdW1lbnQgfHwgbm9kZTtcbiAgICAgICAgICAgIHJldHVybiBkb2MuZGVmYXVsdFZpZXcgfHwgZG9jLnBhcmVudFdpbmRvdztcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluemu25vZGVB5LiObm9kZULmnIDov5HnmoTlhazlhbHnmoTnpZblhYjoioLngrlcbiAgICAgICAgICogQG1ldGhvZCAgZ2V0Q29tbW9uQW5jZXN0b3JcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGVBIOesrOS4gOS4quiKgueCuVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZUIg56ys5LqM5Liq6IqC54K5XG4gICAgICAgICAqIEByZW1pbmQg5aaC5p6c57uZ5a6a55qE5Lik5Liq6IqC54K55piv5ZCM5LiA5Liq6IqC54K577yMIOWwhuebtOaOpei/lOWbnuivpeiKgueCueOAglxuICAgICAgICAgKiBAcmV0dXJuIHsgTm9kZSB8IE5VTEwgfSDlpoLmnpzmnKrmib7liLDlhazlhbHoioLngrnvvIwg6L+U5ZueTlVMTO+8jCDlkKbliJnov5Tlm57mnIDov5HnmoTlhazlhbHnpZblhYjoioLngrnjgIJcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiB2YXIgY29tbW9uQW5jZXN0b3IgPSBVRS5kb20uZG9tVXRpbHMuZ2V0Q29tbW9uQW5jZXN0b3IoIGRvY3VtZW50LmJvZHksIGRvY3VtZW50LmJvZHkuZmlyc3RDaGlsZCApO1xuICAgICAgICAgKiAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggY29tbW9uQW5jZXN0b3IudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYm9keScgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBnZXRDb21tb25BbmNlc3RvcjogZnVuY3Rpb24gKG5vZGVBLCBub2RlQikge1xuICAgICAgICAgICAgaWYgKG5vZGVBID09PSBub2RlQikgcmV0dXJuIG5vZGVBO1xuICAgICAgICAgICAgdmFyIHBhcmVudHNBID0gW25vZGVBXSxcbiAgICAgICAgICAgICAgICBwYXJlbnRzQiA9IFtub2RlQl0sXG4gICAgICAgICAgICAgICAgcGFyZW50ID0gbm9kZUEsXG4gICAgICAgICAgICAgICAgaSA9IC0xO1xuICAgICAgICAgICAgd2hpbGUgKChwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyZW50ID09PSBub2RlQikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwYXJlbnRzQS5wdXNoKHBhcmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnQgPSBub2RlQjtcbiAgICAgICAgICAgIHdoaWxlICgocGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmVudCA9PT0gbm9kZUEpIHJldHVybiBwYXJlbnQ7XG4gICAgICAgICAgICAgICAgcGFyZW50c0IucHVzaChwYXJlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50c0EucmV2ZXJzZSgpO1xuICAgICAgICAgICAgcGFyZW50c0IucmV2ZXJzZSgpO1xuICAgICAgICAgICAgd2hpbGUgKChpKyssIHBhcmVudHNBW2ldID09PSBwYXJlbnRzQltpXSkpIHt9XG4gICAgICAgICAgICByZXR1cm4gaSA9PSAwID8gbnVsbCA6IHBhcmVudHNBW2kgLSAxXTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOa4hemZpG5vZGXoioLngrnlt6blj7Pov57nu63kuLrnqbrnmoTlhYTlvJ9pbmxpbmXoioLngrlcbiAgICAgICAgICogQG1ldGhvZCBjbGVhckVtcHR5U2libGluZ1xuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDmiafooYznmoToioLngrnlr7nosaHvvIwg5aaC5p6c6K+l6IqC54K555qE5bem5Y+z6L+e57ut55qE5YWE5byf6IqC54K55piv56m655qEaW5saW5l6IqC54K577yMXG4gICAgICAgICAqIOWImei/meS6m+WFhOW8n+iKgueCueWwhuiiq+WIoOmZpFxuICAgICAgICAgKiBAZ3JhbW1hciBVRS5kb20uZG9tVXRpbHMuY2xlYXJFbXB0eVNpYmxpbmcobm9kZSxpZ25vcmVOZXh0KSAgLy9pZ25vcmVOZXh05oyH5a6a5piv5ZCm5b+955Wl5Y+z6L6556m66IqC54K5XG4gICAgICAgICAqIEBncmFtbWFyIFVFLmRvbS5kb21VdGlscy5jbGVhckVtcHR5U2libGluZyhub2RlLGlnbm9yZU5leHQsaWdub3JlUHJlKSAgLy9pZ25vcmVQcmXmjIflrprmmK/lkKblv73nlaXlt6bovrnnqbroioLngrlcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8Ym9keT5cbiAgICAgICAgICogICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAqICAgICA8c3BhbiBpZD1cInRlc3RcIj48L3NwYW4+XG4gICAgICAgICAqICAgICA8aT48L2k+XG4gICAgICAgICAqICAgICA8Yj48L2I+XG4gICAgICAgICAqICAgICA8ZW0+eHh4PC9lbT5cbiAgICAgICAgICogICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIFVFLmRvbS5kb21VdGlscy5jbGVhckVtcHR5U2libGluZyggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwidGVzdFwiICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICAvL291dHB1dDogPGRpdj48L2Rpdj48c3BhbiBpZD1cInRlc3RcIj48L3NwYW4+PGVtPnh4eDwvZW0+PHNwYW4+PC9zcGFuPlxuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKCBkb2N1bWVudC5ib2R5LmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmuIXpmaRub2Rl6IqC54K55bem5Y+z6L+e57ut5Li656m655qE5YWE5byfaW5saW5l6IqC54K577yMIOWmguaenGlnbm9yZU5leHTnmoTlgLzkuLp0cnVl77yMXG4gICAgICAgICAqIOWImeW/veeVpeWvueWPs+i+ueWFhOW8n+iKgueCueeahOaTjeS9nOOAglxuICAgICAgICAgKiBAbWV0aG9kIGNsZWFyRW1wdHlTaWJsaW5nXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOaJp+ihjOeahOiKgueCueWvueixoe+8jCDlpoLmnpzor6XoioLngrnnmoTlt6blj7Pov57nu63nmoTlhYTlvJ/oioLngrnmmK/nqbrnmoRpbmxpbmXoioLngrnvvIxcbiAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGlnbm9yZU5leHQg5piv5ZCm5b+955Wl5b+955Wl5a+55Y+z6L6555qE5YWE5byf6IqC54K555qE5pON5L2cXG4gICAgICAgICAqIOWImei/meS6m+WFhOW8n+iKgueCueWwhuiiq+WIoOmZpFxuICAgICAgICAgKiBAc2VlIFVFLmRvbS5kb21VdGlscy5jbGVhckVtcHR5U2libGluZyhOb2RlKVxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5riF6Zmkbm9kZeiKgueCueW3puWPs+i/nue7reS4uuepuueahOWFhOW8n2lubGluZeiKgueCue+8jCDlpoLmnpxpZ25vcmVOZXh055qE5YC85Li6dHJ1Ze+8jFxuICAgICAgICAgKiDliJnlv73nlaXlr7nlj7PovrnlhYTlvJ/oioLngrnnmoTmk43kvZzvvIwg5aaC5p6caWdub3JlUHJl55qE5YC85Li6dHJ1Ze+8jOWImeW/veeVpeWvueW3pui+ueWFhOW8n+iKgueCueeahOaTjeS9nOOAglxuICAgICAgICAgKiBAbWV0aG9kIGNsZWFyRW1wdHlTaWJsaW5nXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOaJp+ihjOeahOiKgueCueWvueixoe+8jCDlpoLmnpzor6XoioLngrnnmoTlt6blj7Pov57nu63nmoTlhYTlvJ/oioLngrnmmK/nqbrnmoRpbmxpbmXoioLngrnvvIxcbiAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGlnbm9yZU5leHQg5piv5ZCm5b+955Wl5b+955Wl5a+55Y+z6L6555qE5YWE5byf6IqC54K555qE5pON5L2cXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpZ25vcmVQcmUg5piv5ZCm5b+955Wl5b+955Wl5a+55bem6L6555qE5YWE5byf6IqC54K555qE5pON5L2cXG4gICAgICAgICAqIOWImei/meS6m+WFhOW8n+iKgueCueWwhuiiq+WIoOmZpFxuICAgICAgICAgKiBAc2VlIFVFLmRvbS5kb21VdGlscy5jbGVhckVtcHR5U2libGluZyhOb2RlKVxuICAgICAgICAgKi9cbiAgICAgICAgY2xlYXJFbXB0eVNpYmxpbmc6IGZ1bmN0aW9uIChub2RlLCBpZ25vcmVOZXh0LCBpZ25vcmVQcmUpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNsZWFyKG5leHQsIGRpcikge1xuICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlO1xuICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgbmV4dCAmJlxuICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUobmV4dCkgJiZcbiAgICAgICAgICAgICAgICAgICAgKGRvbVV0aWxzLmlzRW1wdHlJbmxpbmVFbGVtZW50KG5leHQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+i/memHjOS4jeiDveaKiuepuuagvOeul+i/m+adpeS8muWQp+epuuagvOW5suaOie+8jOWHuueOsOaWh+Wtl+mXtOeahOepuuagvOS4ouaOieS6hlxuICAgICAgICAgICAgICAgICAgICAgICAgIW5ldyBSZWdFeHAoJ1teXFx0XFxuXFxyJyArIGRvbVV0aWxzLmZpbGxDaGFyICsgJ10nKS50ZXN0KG5leHQubm9kZVZhbHVlKSlcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IG5leHRbZGlyXTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICBuZXh0ID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAhaWdub3JlTmV4dCAmJiBjbGVhcihub2RlLm5leHRTaWJsaW5nLCAnbmV4dFNpYmxpbmcnKTtcbiAgICAgICAgICAgICFpZ25vcmVQcmUgJiYgY2xlYXIobm9kZS5wcmV2aW91c1NpYmxpbmcsICdwcmV2aW91c1NpYmxpbmcnKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWwhuS4gOS4quaWh+acrOiKgueCuXRleHROb2Rl5ouG5YiG5oiQ5Lik5Liq5paH5pys6IqC54K577yMb2Zmc2V05oyH5a6a5ouG5YiG5L2N572uXG4gICAgICAgICAqIEBtZXRob2Qgc3BsaXRcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IHRleHROb2RlIOmcgOimgeaLhuWIhueahOaWh+acrOiKgueCueWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBpbnQgfSBvZmZzZXQg6ZyA6KaB5ouG5YiG55qE5L2N572u77yMIOS9jee9ruiuoeeul+S7jjDlvIDlp4tcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfSDmi4bliIblkI7lvaLmiJDnmoTmlrDoioLngrlcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdFwiPmFiY2RlZjwvZGl2PlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKiAgICAgIHZhciBuZXdOb2RlID0gVUUuZG9tLmRvbVV0aWxzLnNwbGl0KCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJ0ZXN0XCIgKS5maXJzdENoaWxkLCAzICk7XG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IGRlZlxuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKCBuZXdOb2RlLm5vZGVWYWx1ZSApO1xuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBzcGxpdDogZnVuY3Rpb24gKG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgdmFyIGRvYyA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgICAgICAgICAgIGlmIChicm93c2VyLmllICYmIG9mZnNldCA9PSBub2RlLm5vZGVWYWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IGRvYy5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbVV0aWxzLmluc2VydEFmdGVyKG5vZGUsIG5leHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHJldHZhbCA9IG5vZGUuc3BsaXRUZXh0KG9mZnNldCk7XG4gICAgICAgICAgICAvL2llOOS4i3NwbGl0VGV4dOS4jeS8mui3n+aWsGNoaWxkTm9kZXMs5oiR5Lus5omL5Yqo6Kem5Y+R5LuW55qE5pu05pawXG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5pZTgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IGRvYy5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMuaW5zZXJ0QWZ0ZXIocmV0dmFsLCB0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV0dmFsO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmo4DmtYvmlofmnKzoioLngrl0ZXh0Tm9kZeaYr+WQpuS4uuepuuiKgueCue+8iOWMheaLrOepuuagvOOAgeaNouihjOOAgeWNoOS9jeespuetieWtl+espu+8iVxuICAgICAgICAgKiBAbWV0aG9kICBpc1doaXRlc3BhY2VcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5qOA5rWL55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g5qOA5rWL55qE6IqC54K55piv5ZCm5Li656m6XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj5cbiAgICAgICAgICpcbiAgICAgICAgICogPC9kaXY+XG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzV2hpdGVzcGFjZSggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpLmZpcnN0Q2hpbGQgKSApO1xuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBpc1doaXRlc3BhY2U6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gIW5ldyBSZWdFeHAoJ1teIFxcdFxcblxccicgKyBkb21VdGlscy5maWxsQ2hhciArICddJykudGVzdChub2RlLm5vZGVWYWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5blhYPntKBlbGVtZW5055u45a+55LqOdmlld3BvcnTnmoTkvY3nva7lnZDmoIdcbiAgICAgICAgICogQG1ldGhvZCBnZXRYWVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gZWxlbWVudCDpnIDopoHorqHnrpfkvY3nva7nmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOi/lOWbnuW9ouWmgnt4OmxlZnQseTp0b3B955qE5LiA5Liqa2V5LXZhbHVl5pig5bCE5a+56LGh77yMIOWFtuS4remUrnjku6PooajmsLTlubPlgY/np7vot53nprvvvIxcbiAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHnku6PooajlnoLnm7TlgY/np7vot53nprvjgIJcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiB2YXIgbG9jYXRpb24gPSBVRS5kb20uZG9tVXRpbHMuZ2V0WFkoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKSApO1xuICAgICAgICAgKiAvL291dHB1dDogdGVzdOeahOWdkOagh+S4ujogMTIsIDI0XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCAndGVzdOeahOWdkOagh+S4uu+8miAnLCBsb2NhdGlvbi54LCAnLCcsIGxvY2F0aW9uLnkgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBnZXRYWTogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciB4ID0gMCxcbiAgICAgICAgICAgICAgICB5ID0gMDtcbiAgICAgICAgICAgIHdoaWxlIChlbGVtZW50Lm9mZnNldFBhcmVudCkge1xuICAgICAgICAgICAgICAgIHkgKz0gZWxlbWVudC5vZmZzZXRUb3A7XG4gICAgICAgICAgICAgICAgeCArPSBlbGVtZW50Lm9mZnNldExlZnQ7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQub2Zmc2V0UGFyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHsgeDogeCwgeTogeSB9O1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5Li65YWD57SgZWxlbWVudOe7keWumuWOn+eUn0RPTeS6i+S7tu+8jHR5cGXkuLrkuovku7bnsbvlnovvvIxoYW5kbGVy5Li65aSE55CG5Ye95pWwXG4gICAgICAgICAqIEBtZXRob2Qgb25cbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IGVsZW1lbnQg6ZyA6KaB57uR5a6a5LqL5Lu255qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHR5cGUg57uR5a6a55qE5LqL5Lu257G75Z6LXG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gaGFuZGxlciDkuovku7blpITnkIblmahcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMub24oZG9jdW1lbnQuYm9keSxcImNsaWNrXCIsZnVuY3Rpb24oZSl7XG4gICAgICAgICAqICAgICAvL2XkuLrkuovku7blr7nosaHvvIx0aGlz5Li66KKr54K55Ye75YWD57Sg5a+55oiP6YKj5LiqXG4gICAgICAgICAqIH0pO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOS4uuWFg+e0oGVsZW1lbnTnu5Hlrprljp/nlJ9ET03kuovku7bvvIx0eXBl5Li65LqL5Lu257G75Z6L77yMaGFuZGxlcuS4uuWkhOeQhuWHveaVsFxuICAgICAgICAgKiBAbWV0aG9kIG9uXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBlbGVtZW50IOmcgOimgee7keWumuS6i+S7tueahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IHR5cGUg57uR5a6a55qE5LqL5Lu257G75Z6L5pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gaGFuZGxlciDkuovku7blpITnkIblmahcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMub24oZG9jdW1lbnQuYm9keSxbXCJjbGlja1wiLFwibW91c2Vkb3duXCJdLGZ1bmN0aW9uKGV2dCl7XG4gICAgICAgICAqICAgICAvL2V2dOS4uuS6i+S7tuWvueixoe+8jHRoaXPkuLrooqvngrnlh7vlhYPntKDlr7nosaFcbiAgICAgICAgICogfSk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgb246IGZ1bmN0aW9uIChlbGVtZW50LCB0eXBlLCBoYW5kbGVyKSB7XG4gICAgICAgICAgICB2YXIgdHlwZXMgPSB1dGlscy5pc0FycmF5KHR5cGUpID8gdHlwZSA6IHV0aWxzLnRyaW0odHlwZSkuc3BsaXQoL1xccysvKSxcbiAgICAgICAgICAgICAgICBrID0gdHlwZXMubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGspXG4gICAgICAgICAgICAgICAgd2hpbGUgKGstLSkge1xuICAgICAgICAgICAgICAgICAgICB0eXBlID0gdHlwZXNba107XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhbmRsZXIuX2QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyLl9kID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHM6IFtdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXkgPSB0eXBlICsgaGFuZGxlci50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gdXRpbHMuaW5kZXhPZihoYW5kbGVyLl9kLmVscywgZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhbmRsZXIuX2Rba2V5XSB8fCBpbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyLl9kLmVscy5wdXNoKGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWhhbmRsZXIuX2Rba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyLl9kW2tleV0gPSBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlci5jYWxsKGV2dC5zcmNFbGVtZW50LCBldnQgfHwgd2luZG93LmV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmF0dGFjaEV2ZW50KCdvbicgKyB0eXBlLCBoYW5kbGVyLl9kW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxlbWVudCA9IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDop6PpmaRET03kuovku7bnu5HlrppcbiAgICAgICAgICogQG1ldGhvZCB1blxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gZWxlbWVudCDpnIDopoHop6PpmaTkuovku7bnu5HlrprnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdHlwZSDpnIDopoHmjqXop6bnu5HlrprnmoTkuovku7bnsbvlnotcbiAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBoYW5kbGVyIOWvueW6lOeahOS6i+S7tuWkhOeQhuWZqFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIFVFLmRvbS5kb21VdGlscy51bihkb2N1bWVudC5ib2R5LFwiY2xpY2tcIixmdW5jdGlvbihldnQpe1xuICAgICAgICAgKiAgICAgLy9ldnTkuLrkuovku7blr7nosaHvvIx0aGlz5Li66KKr54K55Ye75YWD57Sg5a+56LGhXG4gICAgICAgICAqIH0pO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOino+mZpERPTeS6i+S7tue7keWumlxuICAgICAgICAgKiBAbWV0aG9kIHVuXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBlbGVtZW50IOmcgOimgeino+mZpOS6i+S7tue7keWumueahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IHR5cGUg6ZyA6KaB5o6l6Kem57uR5a6a55qE5LqL5Lu257G75Z6L5pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gaGFuZGxlciDlr7nlupTnmoTkuovku7blpITnkIblmahcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMudW4oZG9jdW1lbnQuYm9keSwgW1wiY2xpY2tcIixcIm1vdXNlZG93blwiXSxmdW5jdGlvbihldnQpe1xuICAgICAgICAgKiAgICAgLy9ldnTkuLrkuovku7blr7nosaHvvIx0aGlz5Li66KKr54K55Ye75YWD57Sg5a+56LGhXG4gICAgICAgICAqIH0pO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHVuOiBmdW5jdGlvbiAoZWxlbWVudCwgdHlwZSwgaGFuZGxlcikge1xuICAgICAgICAgICAgdmFyIHR5cGVzID0gdXRpbHMuaXNBcnJheSh0eXBlKSA/IHR5cGUgOiB1dGlscy50cmltKHR5cGUpLnNwbGl0KC9cXHMrLyksXG4gICAgICAgICAgICAgICAgayA9IHR5cGVzLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChrKVxuICAgICAgICAgICAgICAgIHdoaWxlIChrLS0pIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZSA9IHR5cGVzW2tdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgaGFuZGxlciwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IHR5cGUgKyBoYW5kbGVyLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGV0YWNoRXZlbnQoJ29uJyArIHR5cGUsIGhhbmRsZXIuX2QgPyBoYW5kbGVyLl9kW2tleV0gOiBoYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFuZGxlci5fZCAmJiBoYW5kbGVyLl9kW2tleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSB1dGlscy5pbmRleE9mKGhhbmRsZXIuX2QuZWxzLCBlbGVtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlci5fZC5lbHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlci5fZC5lbHMubGVuZ3RoID09IDAgJiYgZGVsZXRlIGhhbmRsZXIuX2Rba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5q+U6L6D6IqC54K5bm9kZUHkuI7oioLngrlub2RlQuaYr+WQpuWFt+acieebuOWQjOeahOagh+etvuWQjeOAgeWxnuaAp+WQjeS7peWPiuWxnuaAp+WAvFxuICAgICAgICAgKiBAbWV0aG9kICBpc1NhbWVFbGVtZW50XG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlQSDpnIDopoHmr5TovoPnmoToioLngrlcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGVCIOmcgOimgeavlOi+g+eahOiKgueCuVxuICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOS4pOS4quiKgueCueaYr+WQpuWFt+acieebuOWQjOeahOagh+etvuWQjeOAgeWxnuaAp+WQjeS7peWPiuWxnuaAp+WAvFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEycHhcIj5zc3NzPC9zcGFuPlxuICAgICAgICAgKiA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxMnB4XCI+YmJiYmI8L3NwYW4+XG4gICAgICAgICAqIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEzcHhcIj5zc3NzPC9zcGFuPlxuICAgICAgICAgKiA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4XCI+YmJiYmI8L3NwYW4+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJzcGFuXCIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0cnVlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzU2FtZUVsZW1lbnQoIG5vZGVzWzBdLCBub2Rlc1sxXSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaXNTYW1lRWxlbWVudCggbm9kZXNbMl0sIG5vZGVzWzNdICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaXNTYW1lRWxlbWVudDogZnVuY3Rpb24gKG5vZGVBLCBub2RlQikge1xuICAgICAgICAgICAgaWYgKG5vZGVBLnRhZ05hbWUgIT0gbm9kZUIudGFnTmFtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0aGlzQXR0cnMgPSBub2RlQS5hdHRyaWJ1dGVzLFxuICAgICAgICAgICAgICAgIG90aGVyQXR0cnMgPSBub2RlQi5hdHRyaWJ1dGVzO1xuICAgICAgICAgICAgaWYgKCFpZSAmJiB0aGlzQXR0cnMubGVuZ3RoICE9IG90aGVyQXR0cnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGF0dHJBLFxuICAgICAgICAgICAgICAgIGF0dHJCLFxuICAgICAgICAgICAgICAgIGFsID0gMCxcbiAgICAgICAgICAgICAgICBibCA9IDA7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgKGF0dHJBID0gdGhpc0F0dHJzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBpZiAoYXR0ckEubm9kZU5hbWUgPT0gJ3N0eWxlJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ckEuc3BlY2lmaWVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbCsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc1NhbWVTdHlsZShub2RlQSwgbm9kZUIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJBLnNwZWNpZmllZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWwrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJCID0gb3RoZXJBdHRycy5nZXROYW1lZEl0ZW0oYXR0ckEubm9kZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhdHRyQiA9IG5vZGVCLmF0dHJpYnV0ZXNbYXR0ckEubm9kZU5hbWVdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWF0dHJCLnNwZWNpZmllZCB8fCBhdHRyQS5ub2RlVmFsdWUgIT0gYXR0ckIubm9kZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyDmnInlj6/og71hdHRyQueahOWxnuaAp+WMheWQq+S6hmF0dHJB55qE5bGe5oCn5LmL5aSW6L+Y5pyJ6Ieq5bex55qE5bGe5oCnXG4gICAgICAgICAgICBpZiAoaWUpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyAoYXR0ckIgPSBvdGhlckF0dHJzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJCLnNwZWNpZmllZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmwrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYWwgIT0gYmwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKTmlq3oioLngrlub2RlQeS4juiKgueCuW5vZGVC55qE5YWD57Sg55qEc3R5bGXlsZ7mgKfmmK/lkKbkuIDoh7RcbiAgICAgICAgICogQG1ldGhvZCBpc1NhbWVTdHlsZVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZUEg6ZyA6KaB5q+U6L6D55qE6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlQiDpnIDopoHmr5TovoPnmoToioLngrlcbiAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDkuKTkuKroioLngrnmmK/lkKblhbfmnInnm7jlkIznmoRzdHlsZeWxnuaAp+WAvFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEycHhcIj5zc3NzPC9zcGFuPlxuICAgICAgICAgKiA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxMnB4XCI+YmJiYmI8L3NwYW4+XG4gICAgICAgICAqIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEzcHhcIj5zc3NzPC9zcGFuPlxuICAgICAgICAgKiA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4XCI+YmJiYmI8L3NwYW4+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICB2YXIgbm9kZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJzcGFuXCIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0cnVlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzU2FtZVN0eWxlKCBub2Rlc1swXSwgbm9kZXNbMV0gKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGZhbHNlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzU2FtZVN0eWxlKCBub2Rlc1syXSwgbm9kZXNbM10gKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBpc1NhbWVTdHlsZTogZnVuY3Rpb24gKG5vZGVBLCBub2RlQikge1xuICAgICAgICAgICAgdmFyIHN0eWxlQSA9IG5vZGVBLnN0eWxlLmNzc1RleHQucmVwbGFjZSgvKCA/OyA/KS9nLCAnOycpLnJlcGxhY2UoLyggPzogPykvZywgJzonKSxcbiAgICAgICAgICAgICAgICBzdHlsZUIgPSBub2RlQi5zdHlsZS5jc3NUZXh0LnJlcGxhY2UoLyggPzsgPykvZywgJzsnKS5yZXBsYWNlKC8oID86ID8pL2csICc6Jyk7XG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5vcGVyYSkge1xuICAgICAgICAgICAgICAgIHN0eWxlQSA9IG5vZGVBLnN0eWxlO1xuICAgICAgICAgICAgICAgIHN0eWxlQiA9IG5vZGVCLnN0eWxlO1xuICAgICAgICAgICAgICAgIGlmIChzdHlsZUEubGVuZ3RoICE9IHN0eWxlQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIHN0eWxlQSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoL14oXFxkK3xjc3N0ZXh0KSQvaS50ZXN0KHApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoc3R5bGVBW3BdICE9IHN0eWxlQltwXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFzdHlsZUEgfHwgIXN0eWxlQikge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHlsZUEgPT0gc3R5bGVCO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3R5bGVBID0gc3R5bGVBLnNwbGl0KCc7Jyk7XG4gICAgICAgICAgICBzdHlsZUIgPSBzdHlsZUIuc3BsaXQoJzsnKTtcbiAgICAgICAgICAgIGlmIChzdHlsZUEubGVuZ3RoICE9IHN0eWxlQi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHN0eWxlQVtpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmluZGV4T2Yoc3R5bGVCLCBjaSkgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5qOA5p+l6IqC54K5bm9kZeaYr+WQpuS4umJsb2Nr5YWD57SgXG4gICAgICAgICAqIEBtZXRob2QgaXNCbG9ja0VsbVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmo4DmtYvnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDmmK/lkKbmmK9ibG9ja+WFg+e0oOiKgueCuVxuICAgICAgICAgKiBAd2FybmluZyDor6Xmlrnms5XnmoTliKTmlq3op4TliJnlpoLkuIvvvJog5aaC5p6c6K+l5YWD57Sg5Y6f5pys5pivYmxvY2vlhYPntKDvvIwg5YiZ5LiN6K666K+l5YWD57Sg5b2T5YmN55qEY3Nz5qC35byP5piv5LuA5LmI6YO95Lya6L+U5ZuedHJ1Ze+8m1xuICAgICAgICAgKiAgICAgICAgICDlkKbliJnvvIzmo4DmtYvor6XlhYPntKDnmoRjc3PmoLflvI/vvIwg5aaC5p6c6K+l5YWD57Sg5b2T5YmN5pivYmxvY2vlhYPntKDvvIwg5YiZ6L+U5ZuedHJ1ZeOAgiDlhbbkvZnmg4XlhrXkuIvpg73ov5Tlm55mYWxzZeOAglxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxzcGFuIGlkPVwidGVzdDFcIiBzdHlsZT1cImRpc3BsYXk6IGJsb2NrXCI+PC9zcGFuPlxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3QyXCI+PC9zcGFuPlxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdDNcIiBzdHlsZT1cImRpc3BsYXk6IGlubGluZVwiPjwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaXNCbG9ja0VsbSggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0MVwiKSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaXNCbG9ja0VsbSggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0MlwiKSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIFVFLmRvbS5kb21VdGlscy5pc0Jsb2NrRWxtKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3QzXCIpICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaXNCbG9ja0VsbTogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgbm9kZS5ub2RlVHlwZSA9PSAxICYmXG4gICAgICAgICAgICAgICAgKGR0ZC4kYmxvY2tbbm9kZS50YWdOYW1lXSB8fCBzdHlsZUJsb2NrW2RvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUobm9kZSwgJ2Rpc3BsYXknKV0pICYmXG4gICAgICAgICAgICAgICAgIWR0ZC4kbm9uQ2hpbGRbbm9kZS50YWdOYW1lXVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOajgOa1i25vZGXoioLngrnmmK/lkKbkuLpib2R56IqC54K5XG4gICAgICAgICAqIEBtZXRob2QgaXNCb2R5XG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeajgOa1i+eahGRvbeWFg+e0oFxuICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOe7meWumueahOWFg+e0oOaYr+WQpuaYr2JvZHnlhYPntKBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiAvL291dHB1dDogdHJ1ZVxuICAgICAgICAgKiBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzQm9keSggZG9jdW1lbnQuYm9keSApICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaXNCb2R5OiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PSAxICYmIG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09ICdib2R5JztcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOS7pW5vZGXoioLngrnkuLrliIbnlYzvvIzlsIbor6XoioLngrnnmoTmjIflrprnpZblhYjoioLngrlwYXJlbnTmi4bliIbmiJDkuKTkuKrni6znq4vnmoToioLngrnvvIxcbiAgICAgICAgICog5ouG5YiG5b2i5oiQ55qE5Lik5Liq6IqC54K55LmL6Ze05pivbm9kZeiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGJyZWFrUGFyZW50XG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOS9nOS4uuWIhueVjOeahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gcGFyZW50IOivpeiKgueCueW/hemhu+aYr25vZGXoioLngrnnmoTnpZblhYjoioLngrnvvIwg5LiU5pivYmxvY2voioLngrnjgIJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfSDnu5nlrprnmoRub2Rl5YiG55WM6IqC54K5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpLFxuICAgICAgICAgKiAgICAgICAgICB3cmFwTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcbiAgICAgICAgICogICAgICAgICAgcGFyZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgcGFyZW50LmFwcGVuZENoaWxkKCBub2RlICk7XG4gICAgICAgICAqICAgICAgd3JhcE5vZGUuYXBwZW5kQ2hpbGQoIHBhcmVudCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIC8v5ouG5YiG5YmNXG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IDxwPjxzcGFuPjwvc3Bhbj48L3A+XG4gICAgICAgICAqICAgICAgY29uc29sZS5sb2coIHdyYXBOb2RlLmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIFVFLmRvbS5kb21VdGlscy5icmVha1BhcmVudCggbm9kZSwgcGFyZW50ICk7XG4gICAgICAgICAqICAgICAgLy/mi4bliIblkI5cbiAgICAgICAgICogICAgICAvL291dHB1dDogPHA+PC9wPjxzcGFuPjwvc3Bhbj48cD48L3A+XG4gICAgICAgICAqICAgICAgY29uc29sZS5sb2coIHdyYXBOb2RlLmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGJyZWFrUGFyZW50OiBmdW5jdGlvbiAobm9kZSwgcGFyZW50KSB7XG4gICAgICAgICAgICB2YXIgdG1wTm9kZSxcbiAgICAgICAgICAgICAgICBwYXJlbnRDbG9uZSA9IG5vZGUsXG4gICAgICAgICAgICAgICAgY2xvbmUgPSBub2RlLFxuICAgICAgICAgICAgICAgIGxlZnROb2RlcyxcbiAgICAgICAgICAgICAgICByaWdodE5vZGVzO1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgIHBhcmVudENsb25lID0gcGFyZW50Q2xvbmUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICBpZiAobGVmdE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBwYXJlbnRDbG9uZS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB0bXBOb2RlLmFwcGVuZENoaWxkKGxlZnROb2Rlcyk7XG4gICAgICAgICAgICAgICAgICAgIGxlZnROb2RlcyA9IHRtcE5vZGU7XG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBwYXJlbnRDbG9uZS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB0bXBOb2RlLmFwcGVuZENoaWxkKHJpZ2h0Tm9kZXMpO1xuICAgICAgICAgICAgICAgICAgICByaWdodE5vZGVzID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0Tm9kZXMgPSBwYXJlbnRDbG9uZS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICByaWdodE5vZGVzID0gbGVmdE5vZGVzLmNsb25lTm9kZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdoaWxlICgodG1wTm9kZSA9IGNsb25lLnByZXZpb3VzU2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdE5vZGVzLmluc2VydEJlZm9yZSh0bXBOb2RlLCBsZWZ0Tm9kZXMuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdoaWxlICgodG1wTm9kZSA9IGNsb25lLm5leHRTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICByaWdodE5vZGVzLmFwcGVuZENoaWxkKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjbG9uZSA9IHBhcmVudENsb25lO1xuICAgICAgICAgICAgfSB3aGlsZSAocGFyZW50ICE9PSBwYXJlbnRDbG9uZSk7XG4gICAgICAgICAgICB0bXBOb2RlID0gcGFyZW50LnBhcmVudE5vZGU7XG4gICAgICAgICAgICB0bXBOb2RlLmluc2VydEJlZm9yZShsZWZ0Tm9kZXMsIHBhcmVudCk7XG4gICAgICAgICAgICB0bXBOb2RlLmluc2VydEJlZm9yZShyaWdodE5vZGVzLCBwYXJlbnQpO1xuICAgICAgICAgICAgdG1wTm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgcmlnaHROb2Rlcyk7XG4gICAgICAgICAgICBkb21VdGlscy5yZW1vdmUocGFyZW50KTtcbiAgICAgICAgICAgIHJldHVybiBub2RlO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5qOA5p+l6IqC54K5bm9kZeaYr+WQpuaYr+epumlubGluZeiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kICBpc0VtcHR5SW5saW5lRWxlbWVudFxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmo4DmtYvnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IE51bWJlciB9ICDlpoLmnpznu5nlrprnmoToioLngrnmmK/nqbrnmoRpbmxpbmXoioLngrnvvIwg5YiZ6L+U5ZueMSwg5ZCm5YiZ6L+U5ZueMOOAglxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxiPjxpPjwvaT48L2I+ID0+IDFcbiAgICAgICAgICogPGI+PGk+PC9pPjx1PjwvdT48L2I+ID0+IDFcbiAgICAgICAgICogPGI+PC9iPiA9PiAxXG4gICAgICAgICAqIDxiPnh4PGk+PC9pPjwvYj4gPT4gMFxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGlzRW1wdHlJbmxpbmVFbGVtZW50OiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgIT0gMSB8fCAhZHRkLiRyZW1vdmVFbXB0eVtub2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub2RlID0gbm9kZS5maXJzdENoaWxkO1xuICAgICAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAvL+WmguaenOaYr+WIm+W7uueahGJvb2ttYXJr5bCx6Lez6L+HXG4gICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQm9va21hcmtOb2RlKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIChub2RlLm5vZGVUeXBlID09IDEgJiYgIWRvbVV0aWxzLmlzRW1wdHlJbmxpbmVFbGVtZW50KG5vZGUpKSB8fFxuICAgICAgICAgICAgICAgICAgICAobm9kZS5ub2RlVHlwZSA9PSAzICYmICFkb21VdGlscy5pc1doaXRlc3BhY2Uobm9kZSkpXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaRub2Rl6IqC54K55LiL6aaW5bC+5Lik56uv55qE56m655m95paH5pys5a2Q6IqC54K5XG4gICAgICAgICAqIEBtZXRob2QgdHJpbVdoaXRlVGV4dE5vZGVcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IG5vZGUg6ZyA6KaB5omn6KGM5Yig6Zmk5pON5L2c55qE5YWD57Sg5a+56LGhXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogICAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgbm9kZS5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIFwiXCIgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICBub2RlLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSggXCJcIiApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgLy8zXG4gICAgICAgICAqICAgICAgY29uc29sZS5sb2coIG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICBVRS5kb20uZG9tVXRpbHMudHJpbVdoaXRlVGV4dE5vZGUoIG5vZGUgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICAvLzFcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggbm9kZS5jaGlsZE5vZGVzLmxlbmd0aCApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHRyaW1XaGl0ZVRleHROb2RlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgZnVuY3Rpb24gcmVtb3ZlKGRpcikge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZDtcbiAgICAgICAgICAgICAgICB3aGlsZSAoKGNoaWxkID0gbm9kZVtkaXJdKSAmJiBjaGlsZC5ub2RlVHlwZSA9PSAzICYmIGRvbVV0aWxzLmlzV2hpdGVzcGFjZShjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVtb3ZlKCdmaXJzdENoaWxkJyk7XG4gICAgICAgICAgICByZW1vdmUoJ2xhc3RDaGlsZCcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlkIjlubZub2Rl6IqC54K55LiL55u45ZCM55qE5a2Q6IqC54K5XG4gICAgICAgICAqIEBuYW1lIG1lcmdlQ2hpbGRcbiAgICAgICAgICogQGRlc2NcbiAgICAgICAgICogVUUuZG9tLmRvbVV0aWxzLm1lcmdlQ2hpbGQobm9kZSx0YWdOYW1lKSAvL3RhZ05hbWXopoHlkIjlubbnmoTlrZDoioLngrnnmoTmoIfnrb5cbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogPHA+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTJweDtcIj54eDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEycHg7XCI+YWE8L3NwYW4+eHg8L3NwYW4+PC9wPlxuICAgICAgICAgKiA9PT4gVUUuZG9tLmRvbVV0aWxzLm1lcmdlQ2hpbGQobm9kZSwnc3BhbicpXG4gICAgICAgICAqIDxwPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjEycHg7XCI+eHhhYXh4PC9zcGFuPjwvcD5cbiAgICAgICAgICovXG4gICAgICAgIG1lcmdlQ2hpbGQ6IGZ1bmN0aW9uIChub2RlLCB0YWdOYW1lLCBhdHRycykge1xuICAgICAgICAgICAgdmFyIGxpc3QgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShub2RlLCBub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGxpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIGlmICghY2kucGFyZW50Tm9kZSB8fCBkb21VdGlscy5pc0Jvb2ttYXJrTm9kZShjaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vc3BhbuWNleeLrOWkhOeQhlxuICAgICAgICAgICAgICAgIGlmIChjaS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ3NwYW4nKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlID09PSBjaS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy50cmltV2hpdGVUZXh0Tm9kZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmNoaWxkTm9kZXMubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSBjaS5zdHlsZS5jc3NUZXh0ICsgJzsnICsgbm9kZS5zdHlsZS5jc3NUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2kuc3R5bGUuY3NzVGV4dCA9IG5vZGUuc3R5bGUuY3NzVGV4dCArICc7JyArIGNpLnN0eWxlLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhdHRycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0eWxlID0gYXR0cnMuc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3R5bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZSA9IHN0eWxlLnNwbGl0KCc7Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDAsIHM7IChzID0gc3R5bGVbaisrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaS5zdHlsZVt1dGlscy5jc3NTdHlsZVRvRG9tU3R5bGUocy5zcGxpdCgnOicpWzBdKV0gPSBzLnNwbGl0KCc6JylbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc1NhbWVTdHlsZShjaSwgbm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc1NhbWVFbGVtZW50KG5vZGUsIGNpKSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2ksIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5Y6f55Sf5pa55rOVZ2V0RWxlbWVudHNCeVRhZ05hbWXnmoTlsIHoo4VcbiAgICAgICAgICogQG1ldGhvZCBnZXRFbGVtZW50c0J5VGFnTmFtZVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDnm67moIfoioLngrnlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdGFnTmFtZSDpnIDopoHmn6Xmib7nmoToioLngrnnmoR0YWdOYW1l77yMIOWkmuS4qnRhZ05hbWXku6XnqbrmoLzliIblibJcbiAgICAgICAgICogQHJldHVybiB7IEFycmF5IH0g56ym5ZCI5p2h5Lu255qE6IqC54K56ZuG5ZCIXG4gICAgICAgICAqL1xuICAgICAgICBnZXRFbGVtZW50c0J5VGFnTmFtZTogZnVuY3Rpb24gKG5vZGUsIG5hbWUsIGZpbHRlcikge1xuICAgICAgICAgICAgaWYgKGZpbHRlciAmJiB1dGlscy5pc1N0cmluZyhmaWx0ZXIpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNsYXNzTmFtZSA9IGZpbHRlcjtcbiAgICAgICAgICAgICAgICBmaWx0ZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuaGFzQ2xhc3Mobm9kZSwgY2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmFtZSA9IHV0aWxzXG4gICAgICAgICAgICAgICAgLnRyaW0obmFtZSlcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvWyBdezIsfS9nLCAnICcpXG4gICAgICAgICAgICAgICAgLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICB2YXIgYXJyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBuID0gMCwgbmk7IChuaSA9IG5hbWVbbisrXSk7ICkge1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ID0gbm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZShuaSk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBsaXN0W2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWx0ZXIgfHwgZmlsdGVyKGNpKSkgYXJyLnB1c2goY2kpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGFycjtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWwhuiKgueCuW5vZGXmj5Dlj5bliLDniLboioLngrnkuIpcbiAgICAgICAgICogQG1ldGhvZCBtZXJnZVRvUGFyZW50XG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeaPkOWPlueahOWFg+e0oOWvueixoVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxkaXYgaWQ9XCJwYXJlbnRcIj5cbiAgICAgICAgICogICAgIDxkaXYgaWQ9XCJzdWJcIj5cbiAgICAgICAgICogICAgICAgICA8c3BhbiBpZD1cImNoaWxkXCI+PC9zcGFuPlxuICAgICAgICAgKiAgICAgPC9kaXY+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgdmFyIGNoaWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwiY2hpbGRcIiApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHN1YlxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIGNoaWxkLnBhcmVudE5vZGUuaWQgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5tZXJnZVRvUGFyZW50KCBjaGlsZCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHBhcmVudFxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIGNoaWxkLnBhcmVudE5vZGUuaWQgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgbWVyZ2VUb1BhcmVudDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICB3aGlsZSAocGFyZW50ICYmIGR0ZC4kcmVtb3ZlRW1wdHlbcGFyZW50LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmVudC50YWdOYW1lID09IG5vZGUudGFnTmFtZSB8fCBwYXJlbnQudGFnTmFtZSA9PSAnQScpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/pkojlr7lh5qCH562+5Y2V54us5aSE55CGXG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnRyaW1XaGl0ZVRleHROb2RlKHBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgIC8vc3BhbumcgOimgeeJueauiuWkhOeQhiAg5LiN5aSE55CG6L+Z5qC355qE5oOF5Ya1IDxzcGFuIHN0bHllPVwiY29sb3I6I2ZmZlwiPnh4eDxzcGFuIHN0eWxlPVwiY29sb3I6I2NjY1wiPnh4eDwvc3Bhbj54eHg8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIChwYXJlbnQudGFnTmFtZSA9PSAnU1BBTicgJiYgIWRvbVV0aWxzLmlzU2FtZVN0eWxlKHBhcmVudCwgbm9kZSkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAocGFyZW50LnRhZ05hbWUgPT0gJ0EnICYmIG5vZGUudGFnTmFtZSA9PSAnU1BBTicpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudC5jaGlsZE5vZGVzLmxlbmd0aCA+IDEgfHwgcGFyZW50ICE9PSBub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSBwYXJlbnQuc3R5bGUuY3NzVGV4dCArICc7JyArIG5vZGUuc3R5bGUuY3NzVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LnN0eWxlLmNzc1RleHQgKz0gJzsnICsgbm9kZS5zdHlsZS5jc3NUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6OTUyIGHmoIfnrb7opoHkv53mjIHkuIvliJLnur9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50LnRhZ05hbWUgPT0gJ0EnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9ICd1bmRlcmxpbmUnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50LnRhZ05hbWUgIT0gJ0EnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPT09IG5vZGUucGFyZW50Tm9kZSAmJiBkb21VdGlscy5yZW1vdmUobm9kZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWQiOW5tuiKgueCuW5vZGXnmoTlt6blj7PlhYTlvJ/oioLngrlcbiAgICAgICAgICogQG1ldGhvZCBtZXJnZVNpYmxpbmdcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IG5vZGUg6ZyA6KaB5ZCI5bm255qE55uu5qCH6IqC54K5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGI+eHh4eDwvYj48YiBpZD1cInRlc3RcIj5vb288L2I+PGI+eHh4eDwvYj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciBkZW1vTm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5tZXJnZVNpYmxpbmcoIGRlbW9Ob2RlICk7XG4gICAgICAgICAqICAgICAvL291dHB1dDogeHh4eG9vb3h4eHhcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBkZW1vTm9kZS5pbm5lckhUTUwgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5ZCI5bm26IqC54K5bm9kZeeahOW3puWPs+WFhOW8n+iKgueCue+8jCDlj6/ku6XmoLnmja7nu5nlrprnmoTmnaHku7bpgInmi6nmmK/lkKblv73nlaXlkIjlubblt6boioLngrnjgIJcbiAgICAgICAgICogQG1ldGhvZCBtZXJnZVNpYmxpbmdcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IG5vZGUg6ZyA6KaB5ZCI5bm255qE55uu5qCH6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpZ25vcmVQcmUg5piv5ZCm5b+955Wl5ZCI5bm25bem6IqC54K5XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGI+eHh4eDwvYj48YiBpZD1cInRlc3RcIj5vb288L2I+PGI+eHh4eDwvYj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciBkZW1vTm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5tZXJnZVNpYmxpbmcoIGRlbW9Ob2RlLCB0cnVlICk7XG4gICAgICAgICAqICAgICAvL291dHB1dDogb29veHh4eFxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIGRlbW9Ob2RlLmlubmVySFRNTCApO1xuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlkIjlubboioLngrlub2Rl55qE5bem5Y+z5YWE5byf6IqC54K577yM5Y+v5Lul5qC55o2u57uZ5a6a55qE5p2h5Lu26YCJ5oup5piv5ZCm5b+955Wl5ZCI5bm25bem5Y+z6IqC54K544CCXG4gICAgICAgICAqIEBtZXRob2QgbWVyZ2VTaWJsaW5nXG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeWQiOW5tueahOebruagh+iKgueCuVxuICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gaWdub3JlUHJlIOaYr+WQpuW/veeVpeWQiOW5tuW3puiKgueCuVxuICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gaWdub3JlTmV4dCDmmK/lkKblv73nlaXlkIjlubblj7PoioLngrlcbiAgICAgICAgICogQHJlbWluZCDlpoLmnpzlkIzml7blv73nlaXlt6blj7PoioLngrnvvIwg5YiZ6K+l5pON5L2c5LuA5LmI5Lmf5LiN5Lya5YGaXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGI+eHh4eDwvYj48YiBpZD1cInRlc3RcIj5vb288L2I+PGI+eHh4eDwvYj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciBkZW1vTm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5tZXJnZVNpYmxpbmcoIGRlbW9Ob2RlLCBmYWxzZSwgdHJ1ZSApO1xuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHh4eHhvb29cbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBkZW1vTm9kZS5pbm5lckhUTUwgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgbWVyZ2VTaWJsaW5nOiBmdW5jdGlvbiAobm9kZSwgaWdub3JlUHJlLCBpZ25vcmVOZXh0KSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBtZXJnZShydGwsIHN0YXJ0LCBub2RlKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5leHQ7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAobmV4dCA9IG5vZGVbcnRsXSkgJiZcbiAgICAgICAgICAgICAgICAgICAgIWRvbVV0aWxzLmlzQm9va21hcmtOb2RlKG5leHQpICYmXG4gICAgICAgICAgICAgICAgICAgIG5leHQubm9kZVR5cGUgPT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pc1NhbWVFbGVtZW50KG5vZGUsIG5leHQpXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChuZXh0LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCA9PSAnZmlyc3RDaGlsZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmluc2VydEJlZm9yZShuZXh0Lmxhc3RDaGlsZCwgbm9kZS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChuZXh0LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShuZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAhaWdub3JlUHJlICYmIG1lcmdlKCdwcmV2aW91c1NpYmxpbmcnLCAnZmlyc3RDaGlsZCcsIG5vZGUpO1xuICAgICAgICAgICAgIWlnbm9yZU5leHQgJiYgbWVyZ2UoJ25leHRTaWJsaW5nJywgJ2xhc3RDaGlsZCcsIG5vZGUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDorr7nva7oioLngrlub2Rl5Y+K5YW25a2Q6IqC54K55LiN5Lya6KKr6YCJ5LitXG4gICAgICAgICAqIEBtZXRob2QgdW5TZWxlY3RhYmxlXG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeaJp+ihjOaTjeS9nOeahGRvbeWFg+e0oFxuICAgICAgICAgKiBAcmVtaW5kIOaJp+ihjOivpeaTjeS9nOWQjueahOiKgueCue+8jCDlsIbkuI3og73ooqvpvKDmoIfpgInkuK1cbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMudW5TZWxlY3RhYmxlKCBkb2N1bWVudC5ib2R5ICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgdW5TZWxlY3RhYmxlOlxuICAgICAgICAgICAgKGllICYmIGJyb3dzZXIuaWU5YmVsb3cpIHx8IGJyb3dzZXIub3BlcmFcbiAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy9mb3IgaWU5XG4gICAgICAgICAgICAgICAgICAgICAgbm9kZS5vbnNlbGVjdHN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICBub2RlLm9uY2xpY2sgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLm9ua2V5dXAgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLm9ua2V5ZG93biA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICBub2RlLnVuc2VsZWN0YWJsZSA9ICdvbic7XG4gICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3Vuc2VsZWN0YWJsZScsICdvbicpO1xuICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbm9kZS5hbGxbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGNpLnRhZ05hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaWZyYW1lJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3RleHRhcmVhJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2lucHV0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3NlbGVjdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpLnVuc2VsZWN0YWJsZSA9ICdvbic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3Vuc2VsZWN0YWJsZScsICdvbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLk1velVzZXJTZWxlY3QgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLndlYmtpdFVzZXJTZWxlY3QgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLm1zVXNlclNlbGVjdCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc3R5bGUuS2h0bWxVc2VyU2VsZWN0ID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdub25lJztcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaToioLngrlub2Rl5LiK55qE5oyH5a6a5bGe5oCn5ZCN56ew55qE5bGe5oCnXG4gICAgICAgICAqIEBtZXRob2QgIHJlbW92ZUF0dHJpYnV0ZXNcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5Yig6Zmk5bGe5oCn55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGF0dHJOYW1lcyDlj6/ku6XmmK/nqbrmoLzpmpTlvIDnmoTlpJrkuKrlsZ7mgKflkI3np7DvvIzor6Xmk43kvZzlsIbkvJrkvp3mrKHliKDpmaTnm7jlupTnmoTlsZ7mgKdcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwid3JhcFwiPlxuICAgICAgICAgKiAgICAgIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7XCIgaWQ9XCJ0ZXN0XCIgbmFtZT1cImZvbGxvd01lXCI+eHh4eHg8L3NwYW4+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgVUUuZG9tLmRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApLCBcImlkIG5hbWVcIiApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7XCI+eHh4eHg8L3NwYW4+XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwXCIpLmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaToioLngrlub2Rl5LiK55qE5oyH5a6a5bGe5oCn5ZCN56ew55qE5bGe5oCnXG4gICAgICAgICAqIEBtZXRob2QgIHJlbW92ZUF0dHJpYnV0ZXNcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5Yig6Zmk5bGe5oCn55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gYXR0ck5hbWVzIOmcgOimgeWIoOmZpOeahOWxnuaAp+WQjeaVsOe7hFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxkaXYgaWQ9XCJ3cmFwXCI+XG4gICAgICAgICAqICAgICAgPHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtcIiBpZD1cInRlc3RcIiBuYW1lPVwiZm9sbG93TWVcIj54eHh4eDwvc3Bhbj5cbiAgICAgICAgICogPC9kaXY+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICBVRS5kb20uZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwidGVzdFwiICksIFtcImlkXCIsIFwibmFtZVwiXSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7XCI+eHh4eHg8L3NwYW4+XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwXCIpLmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdmVBdHRyaWJ1dGVzOiBmdW5jdGlvbiAobm9kZSwgYXR0ck5hbWVzKSB7XG4gICAgICAgICAgICBhdHRyTmFtZXMgPSB1dGlscy5pc0FycmF5KGF0dHJOYW1lcylcbiAgICAgICAgICAgICAgICA/IGF0dHJOYW1lc1xuICAgICAgICAgICAgICAgIDogdXRpbHNcbiAgICAgICAgICAgICAgICAgICAgICAudHJpbShhdHRyTmFtZXMpXG4gICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1sgXXsyLH0vZywgJyAnKVxuICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdCgnICcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBhdHRyTmFtZXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIGNpID0gYXR0ckZpeFtjaV0gfHwgY2k7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChjaSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdjbGFzc05hbWUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVtjaV0gPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBub2RlLmdldEF0dHJpYnV0ZU5vZGUoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAhYnJvd3Nlci5pZSAmJiB2YWwgJiYgbm9kZS5yZW1vdmVBdHRyaWJ1dGVOb2RlKHZhbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKGNpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqGRvY+S4i+WIm+W7uuS4gOS4quagh+etvuWQjeS4unRhZ++8jOWxnuaAp+S4umF0dHJz55qE5YWD57SgXG4gICAgICAgICAqIEBtZXRob2QgY3JlYXRlRWxlbWVudFxuICAgICAgICAgKiBAcGFyYW0geyBEb21Eb2N1bWVudCB9IGRvYyDmlrDliJvlu7rnmoTlhYPntKDlsZ7kuo7or6Vkb2N1bWVudOiKgueCueWIm+W7ulxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0YWdOYW1lIOmcgOimgeWIm+W7uueahOWFg+e0oOeahOagh+etvuWQjVxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhdHRycyDmlrDliJvlu7rnmoTlhYPntKDnmoTlsZ7mgKdrZXktdmFsdWXpm4blkIhcbiAgICAgICAgICogQHJldHVybiB7IEVsZW1lbnQgfSDmlrDliJvlu7rnmoTlhYPntKDlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiB2YXIgZWxlID0gVUUuZG9tLmRvbVV0aWxzLmNyZWF0ZUVsZW1lbnQoIGRvY3VtZW50LCAnZGl2Jywge1xuICAgICAgICAgKiAgICAgaWQ6ICd0ZXN0J1xuICAgICAgICAgKiB9ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiBESVZcbiAgICAgICAgICogY29uc29sZS5sb2coIGVsZS50YWdOYW1lICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiB0ZXN0XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBlbGUuaWQgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBjcmVhdGVFbGVtZW50OiBmdW5jdGlvbiAoZG9jLCB0YWcsIGF0dHJzKSB7XG4gICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhkb2MuY3JlYXRlRWxlbWVudCh0YWcpLCBhdHRycyk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDkuLroioLngrlub2Rl5re75Yqg5bGe5oCnYXR0cnPvvIxhdHRyc+S4uuWxnuaAp+mUruWAvOWvuVxuICAgICAgICAgKiBAbWV0aG9kIHNldEF0dHJpYnV0ZXNcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IG5vZGUg6ZyA6KaB6K6+572u5bGe5oCn55qE5YWD57Sg5a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IGF0dHJzIOmcgOimgeiuvue9rueahOWxnuaAp+WQjS3lgLzlr7lcbiAgICAgICAgICogQHJldHVybiB7IEVsZW1lbnQgfSDorr7nva7lsZ7mgKfnmoTlhYPntKDlr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3RcIj48L3NwYW4+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICB2YXIgdGVzdE5vZGUgPSBVRS5kb20uZG9tVXRpbHMuc2V0QXR0cmlidXRlcyggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwidGVzdFwiICksIHtcbiAgICAgICAgICogICAgICAgICBpZDogJ2RlbW8nXG4gICAgICAgICAqICAgICB9ICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogZGVtb1xuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLmlkICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgc2V0QXR0cmlidXRlczogZnVuY3Rpb24gKG5vZGUsIGF0dHJzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBhdHRyIGluIGF0dHJzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGF0dHJzLmhhc093blByb3BlcnR5KGF0dHIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJzW2F0dHJdO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGF0dHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2ll5LiL6KaB6L+Z5qC36LWL5YC877yMc2V0QXR0cmlidXRl5LiN6LW35L2c55SoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5jbGFzc05hbWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3N0eWxlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNzc1RleHQgPSBub2RlLnN0eWxlLmNzc1RleHQgKyAnOycgKyB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2lubmVySFRNTCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVthdHRyXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndmFsdWUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoYXR0ckZpeFthdHRyXSB8fCBhdHRyLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog6I635Y+W5YWD57SgZWxlbWVudOe7j+i/h+iuoeeul+WQjueahOagt+W8j+WAvFxuICAgICAgICAgKiBAbWV0aG9kIGdldENvbXB1dGVkU3R5bGVcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IGVsZW1lbnQg6ZyA6KaB6I635Y+W5qC35byP55qE5YWD57Sg5a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHN0eWxlTmFtZSDpnIDopoHojrflj5bnmoTmoLflvI/lkI1cbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOiOt+WPluWIsOeahOagt+W8j+WAvFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5cbiAgICAgICAgICogICAgICAjdGVzdCB7XG4gICAgICAgICAqICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgICogICAgICB9XG4gICAgICAgICAqIDwvc3R5bGU+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzcGFuIGlkPVwidGVzdFwiPjwvc3Bhbj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIC8vb3V0cHV0OiAxNXB4XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApLCAnZm9udC1zaXplJyApICk7XG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGdldENvbXB1dGVkU3R5bGU6IGZ1bmN0aW9uIChlbGVtZW50LCBzdHlsZU5hbWUpIHtcbiAgICAgICAgICAgIC8v5LiA5LiL55qE5bGe5oCn5Y2V54us5aSE55CGXG4gICAgICAgICAgICB2YXIgcHJvcyA9ICd3aWR0aCBoZWlnaHQgdG9wIGxlZnQnO1xuXG4gICAgICAgICAgICBpZiAocHJvcy5pbmRleE9mKHN0eWxlTmFtZSkgPiAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnRbXG4gICAgICAgICAgICAgICAgICAgICAgICAnb2Zmc2V0JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVOYW1lLnJlcGxhY2UoL15cXHcvLCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcy50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIF0gKyAncHgnXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5b+955Wl5paH5pys6IqC54K5XG4gICAgICAgICAgICBpZiAoZWxlbWVudC5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vaWXkuItmb250LXNpemXoi6Vib2R55LiL5a6a5LmJ5LqGZm9udC1zaXpl77yM5YiZ5LuOY3VycmVudFN0eWxl6YeM5Lya5Y+W5Yiw6L+Z5LiqZm9udC1zaXplLiDlj5bkuI3liLDlrp7pmYXlgLzvvIzmlYXmraTkv67mlLkuXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgYnJvd3Nlci5pZSAmJlxuICAgICAgICAgICAgICAgIGJyb3dzZXIudmVyc2lvbiA8IDkgJiZcbiAgICAgICAgICAgICAgICBzdHlsZU5hbWUgPT0gJ2ZvbnQtc2l6ZScgJiZcbiAgICAgICAgICAgICAgICAhZWxlbWVudC5zdHlsZS5mb250U2l6ZSAmJlxuICAgICAgICAgICAgICAgICFkdGQuJGVtcHR5W2VsZW1lbnQudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAhZHRkLiRub25DaGlsZFtlbGVtZW50LnRhZ05hbWVdXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgICAgICAgICAgc3Bhbi5zdHlsZS5jc3NUZXh0ID0gJ3BhZGRpbmc6MDtib3JkZXI6MDtmb250LWZhbWlseTpzaW1zdW47JztcbiAgICAgICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9ICcuJztcbiAgICAgICAgICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKHNwYW4pO1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBzcGFuLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnJlbW92ZUNoaWxkKHNwYW4pO1xuICAgICAgICAgICAgICAgIHNwYW4gPSBudWxsO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQgKyAncHgnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRTdHlsZShlbGVtZW50LCBzdHlsZU5hbWUpIHx8XG4gICAgICAgICAgICAgICAgICAgICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBkb21VdGlscy5nZXRXaW5kb3coZWxlbWVudCkuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50LCAnJykuZ2V0UHJvcGVydHlWYWx1ZShzdHlsZU5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IChlbGVtZW50LmN1cnJlbnRTdHlsZSB8fCBlbGVtZW50LnN0eWxlKVt1dGlscy5jc3NTdHlsZVRvRG9tU3R5bGUoc3R5bGVOYW1lKV0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1dGlscy50cmFuc1VuaXRUb1B4KHV0aWxzLmZpeENvbG9yKHN0eWxlTmFtZSwgdmFsdWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIoOmZpOWFg+e0oGVsZW1lbnTmjIflrprnmoRjbGFzc05hbWVcbiAgICAgICAgICogQG1ldGhvZCByZW1vdmVDbGFzc2VzXG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBlbGUg6ZyA6KaB5Yig6ZmkY2xhc3PnmoTlhYPntKDoioLngrlcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY2xhc3NOYW1lcyDpnIDopoHliKDpmaTnmoRjbGFzc05hbWXvvIwg5aSa5LiqY2xhc3NOYW1l5LmL6Ze05Lul56m65qC85YiG5byAXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPHNwYW4gaWQ9XCJ0ZXN0XCIgY2xhc3M9XCJ0ZXN0MSB0ZXN0MiB0ZXN0M1wiPnh4eDwvc3Bhbj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgIHZhciB0ZXN0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApO1xuICAgICAgICAgKiAgICAgVUUuZG9tLmRvbVV0aWxzLnJlbW92ZUNsYXNzZXMoIHRlc3ROb2RlLCBcInRlc3QxIHRlc3QyXCIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0ZXN0M1xuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLmNsYXNzTmFtZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaTlhYPntKBlbGVtZW505oyH5a6a55qEY2xhc3NOYW1lXG4gICAgICAgICAqIEBtZXRob2QgcmVtb3ZlQ2xhc3Nlc1xuICAgICAgICAgKiBAcGFyYW0geyBFbGVtZW50IH0gZWxlIOmcgOimgeWIoOmZpGNsYXNz55qE5YWD57Sg6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gY2xhc3NOYW1lcyDpnIDopoHliKDpmaTnmoRjbGFzc05hbWXmlbDnu4RcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3RcIiBjbGFzcz1cInRlc3QxIHRlc3QyIHRlc3QzXCI+eHh4PC9zcGFuPlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgdmFyIHRlc3ROb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwidGVzdFwiICk7XG4gICAgICAgICAqICAgICBVRS5kb20uZG9tVXRpbHMucmVtb3ZlQ2xhc3NlcyggdGVzdE5vZGUsIFtcInRlc3QxXCIsIFwidGVzdDJcIl0gKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0ZXN0M1xuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLmNsYXNzTmFtZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdmVDbGFzc2VzOiBmdW5jdGlvbiAoZWxtLCBjbGFzc05hbWVzKSB7XG4gICAgICAgICAgICBjbGFzc05hbWVzID0gdXRpbHMuaXNBcnJheShjbGFzc05hbWVzKVxuICAgICAgICAgICAgICAgID8gY2xhc3NOYW1lc1xuICAgICAgICAgICAgICAgIDogdXRpbHNcbiAgICAgICAgICAgICAgICAgICAgICAudHJpbShjbGFzc05hbWVzKVxuICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9bIF17Mix9L2csICcgJylcbiAgICAgICAgICAgICAgICAgICAgICAuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgY2xzID0gZWxtLmNsYXNzTmFtZTsgKGNpID0gY2xhc3NOYW1lc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgY2xzID0gY2xzLnJlcGxhY2UobmV3IFJlZ0V4cCgnXFxcXGInICsgY2kgKyAnXFxcXGInKSwgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xzID0gdXRpbHMudHJpbShjbHMpLnJlcGxhY2UoL1sgXXsyLH0vZywgJyAnKTtcbiAgICAgICAgICAgIGlmIChjbHMpIHtcbiAgICAgICAgICAgICAgICBlbG0uY2xhc3NOYW1lID0gY2xzO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVBdHRyaWJ1dGVzKGVsbSwgWydjbGFzcyddKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOe7meWFg+e0oGVsZW1lbnTmt7vliqBjbGFzc05hbWVcbiAgICAgICAgICogQG1ldGhvZCBhZGRDbGFzc1xuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gZWxlIOmcgOimgeWinuWKoGNsYXNzTmFtZeeahOWFg+e0oFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbGFzc05hbWVzIOmcgOimgea3u+WKoOeahGNsYXNzTmFtZe+8jCDlpJrkuKpjbGFzc05hbWXkuYvpl7Tku6XnqbrmoLzliIblibJcbiAgICAgICAgICogQHJlbWluZCDnm7jlkIznmoTnsbvlkI3kuI3kvJrooqvph43lpI3mt7vliqBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3RcIiBjbGFzcz1cImNsczEgY2xzMlwiPjwvc3Bhbj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciB0ZXN0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5hZGRDbGFzcyggdGVzdE5vZGUsIFwiY2xzMiBjbHMzIGNsczRcIiApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGNsMSBjbHMyIGNsczMgY2xzNFxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLmNsYXNzTmFtZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOe7meWFg+e0oGVsZW1lbnTmt7vliqBjbGFzc05hbWVcbiAgICAgICAgICogQG1ldGhvZCBhZGRDbGFzc1xuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gZWxlIOmcgOimgeWinuWKoGNsYXNzTmFtZeeahOWFg+e0oFxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IGNsYXNzTmFtZXMg6ZyA6KaB5re75Yqg55qEY2xhc3NOYW1l55qE5pWw57uEXG4gICAgICAgICAqIEByZW1pbmQg55u45ZCM55qE57G75ZCN5LiN5Lya6KKr6YeN5aSN5re75YqgXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPHNwYW4gaWQ9XCJ0ZXN0XCIgY2xhc3M9XCJjbHMxIGNsczJcIj48L3NwYW4+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqICAgICB2YXIgdGVzdE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3RcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICBVRS5kb20uZG9tVXRpbHMuYWRkQ2xhc3MoIHRlc3ROb2RlLCBbXCJjbHMyXCIsIFwiY2xzM1wiLCBcImNsczRcIl0gKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiBjbDEgY2xzMiBjbHMzIGNsczRcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCB0ZXN0Tm9kZS5jbGFzc05hbWUgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBhZGRDbGFzczogZnVuY3Rpb24gKGVsbSwgY2xhc3NOYW1lcykge1xuICAgICAgICAgICAgaWYgKCFlbG0pIHJldHVybjtcbiAgICAgICAgICAgIGNsYXNzTmFtZXMgPSB1dGlsc1xuICAgICAgICAgICAgICAgIC50cmltKGNsYXNzTmFtZXMpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1sgXXsyLH0vZywgJyAnKVxuICAgICAgICAgICAgICAgIC5zcGxpdCgnICcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpLCBjbHMgPSBlbG0uY2xhc3NOYW1lOyAoY2kgPSBjbGFzc05hbWVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBpZiAoIW5ldyBSZWdFeHAoJ1xcXFxiJyArIGNpICsgJ1xcXFxiJykudGVzdChjbHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNscyArPSAnICcgKyBjaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbG0uY2xhc3NOYW1lID0gdXRpbHMudHJpbShjbHMpO1xuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5Yik5pat5YWD57SgZWxlbWVudOaYr+WQpuWMheWQq+e7meWumueahOagt+W8j+exu+WQjWNsYXNzTmFtZVxuICAgICAgICAgKiBAbWV0aG9kIGhhc0NsYXNzXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBlbGUg6ZyA6KaB5qOA5rWL55qE5YWD57SgXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNsYXNzTmFtZXMg6ZyA6KaB5qOA5rWL55qEY2xhc3NOYW1l77yMIOWkmuS4qmNsYXNzTmFtZeS5i+mXtOeUqOepuuagvOWIhuWJslxuICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOWFg+e0oOaYr+WQpuWMheWQq+aJgOaciee7meWumueahGNsYXNzTmFtZVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxzcGFuIGlkPVwidGVzdDFcIiBjbGFzcz1cImNsczEgY2xzMlwiPjwvc3Bhbj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciB0ZXN0MSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdDFcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaGFzQ2xhc3MoIHRlc3QxLCBcImNsczIgY2xzMSBjbHMzXCIgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaGFzQ2xhc3MoIHRlc3QxLCBcImNsczIgY2xzMVwiICkgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Yik5pat5YWD57SgZWxlbWVudOaYr+WQpuWMheWQq+e7meWumueahOagt+W8j+exu+WQjWNsYXNzTmFtZVxuICAgICAgICAgKiBAbWV0aG9kIGhhc0NsYXNzXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBlbGUg6ZyA6KaB5qOA5rWL55qE5YWD57SgXG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gY2xhc3NOYW1lcyDpnIDopoHmo4DmtYvnmoRjbGFzc05hbWXmlbDnu4RcbiAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDlhYPntKDmmK/lkKbljIXlkKvmiYDmnInnu5nlrprnmoRjbGFzc05hbWVcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3QxXCIgY2xhc3M9XCJjbHMxIGNsczJcIj48L3NwYW4+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqICAgICB2YXIgdGVzdDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3QxXCIpO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGZhbHNlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmhhc0NsYXNzKCB0ZXN0MSwgWyBcImNsczJcIiwgXCJjbHMxXCIsIFwiY2xzM1wiIF0gKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaGFzQ2xhc3MoIHRlc3QxLCBbIFwiY2xzMlwiLCBcImNsczFcIiBdKSApO1xuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBoYXNDbGFzczogZnVuY3Rpb24gKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICAgICAgICAgICAgaWYgKHV0aWxzLmlzUmVnRXhwKGNsYXNzTmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lLnRlc3QoZWxlbWVudC5jbGFzc05hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xhc3NOYW1lID0gdXRpbHNcbiAgICAgICAgICAgICAgICAudHJpbShjbGFzc05hbWUpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1sgXXsyLH0vZywgJyAnKVxuICAgICAgICAgICAgICAgIC5zcGxpdCgnICcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpLCBjbHMgPSBlbGVtZW50LmNsYXNzTmFtZTsgKGNpID0gY2xhc3NOYW1lW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBpZiAoIW5ldyBSZWdFeHAoJ1xcXFxiJyArIGNpICsgJ1xcXFxiJywgJ2knKS50ZXN0KGNscykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpIC0gMSA9PSBjbGFzc05hbWUubGVuZ3RoO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDpmLvmraLkuovku7bpu5jorqTooYzkuLpcbiAgICAgICAgICogQG1ldGhvZCBwcmV2ZW50RGVmYXVsdFxuICAgICAgICAgKiBAcGFyYW0geyBFdmVudCB9IGV2dCDpnIDopoHpmLvmraLpu5jorqTooYzkuLrnmoTkuovku7blr7nosaFcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMucHJldmVudERlZmF1bHQoIGV2dCApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQgPyBldnQucHJldmVudERlZmF1bHQoKSA6IChldnQucmV0dXJuVmFsdWUgPSBmYWxzZSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaTlhYPntKBlbGVtZW505oyH5a6a55qE5qC35byPXG4gICAgICAgICAqIEBtZXRob2QgcmVtb3ZlU3R5bGVcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IGVsZW1lbnQg6ZyA6KaB5Yig6Zmk5qC35byP55qE5YWD57SgXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHN0eWxlTmFtZSDpnIDopoHliKDpmaTnmoTmoLflvI/lkI1cbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8c3BhbiBpZD1cInRlc3RcIiBzdHlsZT1cImNvbG9yOiByZWQ7IGJhY2tncm91bmQ6IGJsdWU7XCI+PC9zcGFuPlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgdmFyIHRlc3ROb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgVUUuZG9tLmRvbVV0aWxzLnJlbW92ZVN0eWxlKCB0ZXN0Tm9kZSwgJ2NvbG9yJyApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IGJhY2tncm91bmQ6IGJsdWU7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGVzdE5vZGUuc3R5bGUuY3NzVGV4dCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICByZW1vdmVTdHlsZTogZnVuY3Rpb24gKGVsZW1lbnQsIG5hbWUpIHtcbiAgICAgICAgICAgIGlmIChicm93c2VyLmllKSB7XG4gICAgICAgICAgICAgICAgLy/pkojlr7ljb2xvcuWFiOWNleeLrOWkhOeQhuS4gOS4i1xuICAgICAgICAgICAgICAgIGlmIChuYW1lID09ICdjb2xvcicpIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZSA9ICcoXnw7KScgKyBuYW1lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmNzc1RleHQgPSBlbGVtZW50LnN0eWxlLmNzc1RleHQucmVwbGFjZShuZXcgUmVnRXhwKG5hbWUgKyAnW146XSo6W147XSs7PycsICdpZycpLCAnJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5yZW1vdmVBdHRyaWJ1dGUodXRpbHMuY3NzU3R5bGVUb0RvbVN0eWxlKG5hbWUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICghZWxlbWVudC5zdHlsZS5jc3NUZXh0KSB7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhlbGVtZW50LCBbJ3N0eWxlJ10pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog6I635Y+W5YWD57SgZWxlbWVudOeahHN0eWxl5bGe5oCn55qE5oyH5a6a5YC8XG4gICAgICAgICAqIEBtZXRob2QgZ2V0U3R5bGVcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IGVsZW1lbnQg6ZyA6KaB6I635Y+W5bGe5oCn5YC855qE5YWD57SgXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHN0eWxlTmFtZSDpnIDopoHojrflj5bnmoRzdHlsZeeahOWQjeensFxuICAgICAgICAgKiBAd2FybmluZyDor6Xmlrnms5Xku4Xojrflj5blhYPntKBzdHlsZeWxnuaAp+S4reaJgOagh+aYjueahOWAvFxuICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6K+l5YWD57Sg5YyF5ZCr5oyH5a6a55qEc3R5bGXlsZ7mgKflgLxcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdFwiIHN0eWxlPVwiY29sb3I6IHJlZDtcIj48L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgICB2YXIgdGVzdE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJ0ZXN0XCIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICAvL291dHB1dDogcmVkXG4gICAgICAgICAqICAgICAgY29uc29sZS5sb2coIFVFLmRvbS5kb21VdGlscy5nZXRTdHlsZSggdGVzdE5vZGUsIFwiY29sb3JcIiApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IFwiXCJcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmdldFN0eWxlKCB0ZXN0Tm9kZSwgXCJiYWNrZ3JvdW5kXCIgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBnZXRTdHlsZTogZnVuY3Rpb24gKGVsZW1lbnQsIG5hbWUpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVsZW1lbnQuc3R5bGVbdXRpbHMuY3NzU3R5bGVUb0RvbVN0eWxlKG5hbWUpXTtcbiAgICAgICAgICAgIHJldHVybiB1dGlscy5maXhDb2xvcihuYW1lLCB2YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDkuLrlhYPntKBlbGVtZW506K6+572u5qC35byP5bGe5oCn5YC8XG4gICAgICAgICAqIEBtZXRob2Qgc2V0U3R5bGVcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IGVsZW1lbnQg6ZyA6KaB6K6+572u5qC35byP55qE5YWD57SgXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHN0eWxlTmFtZSDmoLflvI/lkI1cbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3R5bGVWYWx1ZSDmoLflvI/lgLxcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdFwiPjwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIHZhciB0ZXN0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcInRlc3RcIiApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgIC8vb3V0cHV0OiBcIlwiXG4gICAgICAgICAqICAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLnN0eWxlLmNvbG9yICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgVUUuZG9tLmRvbVV0aWxzLnNldFN0eWxlKCB0ZXN0Tm9kZSwgJ2NvbG9yJywgJ3JlZCcgKTtcbiAgICAgICAgICogICAgICAvL291dHB1dDogXCJyZWRcIlxuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKCB0ZXN0Tm9kZS5zdHlsZS5jb2xvciApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBzZXRTdHlsZTogZnVuY3Rpb24gKGVsZW1lbnQsIG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlW3V0aWxzLmNzc1N0eWxlVG9Eb21TdHlsZShuYW1lKV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmICghdXRpbHMudHJpbShlbGVtZW50LnN0eWxlLmNzc1RleHQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVzKGVsZW1lbnQsICdzdHlsZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5Li65YWD57SgZWxlbWVudOiuvue9ruWkmuS4quagt+W8j+WxnuaAp+WAvFxuICAgICAgICAgKiBAbWV0aG9kIHNldFN0eWxlc1xuICAgICAgICAgKiBAcGFyYW0geyBFbGVtZW50IH0gZWxlbWVudCDpnIDopoHorr7nva7moLflvI/nmoTlhYPntKBcbiAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gc3R5bGVzIOagt+W8j+WQjeWAvOWvuVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxkaXYgaWQ9XCJ0ZXN0XCI+PC9kaXY+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgdmFyIHRlc3ROb2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwidGVzdFwiICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgLy9vdXRwdXQ6IFwiXCJcbiAgICAgICAgICogICAgICBjb25zb2xlLmxvZyggdGVzdE5vZGUuc3R5bGUuY29sb3IgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgICBVRS5kb20uZG9tVXRpbHMuc2V0U3R5bGVzKCB0ZXN0Tm9kZSwge1xuICAgICAgICAgKiAgICAgICAgICAnY29sb3InOiAncmVkJ1xuICAgICAgICAgKiAgICAgIH0gKTtcbiAgICAgICAgICogICAgICAvL291dHB1dDogXCJyZWRcIlxuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKCB0ZXN0Tm9kZS5zdHlsZS5jb2xvciApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBzZXRTdHlsZXM6IGZ1bmN0aW9uIChlbGVtZW50LCBzdHlsZXMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIG5hbWUgaW4gc3R5bGVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0eWxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZShlbGVtZW50LCBuYW1lLCBzdHlsZXNbbmFtZV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIoOmZpF9tb3pfZGlydHnlsZ7mgKdcbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICogQG1ldGhvZCByZW1vdmVEaXJ0eUF0dHJcbiAgICAgICAgICovXG4gICAgICAgIHJlbW92ZURpcnR5QXR0cjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgbm9kZXMgPSBub2RlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCcqJyk7IChjaSA9IG5vZGVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBjaS5yZW1vdmVBdHRyaWJ1dGUoJ19tb3pfZGlydHknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCdfbW96X2RpcnR5Jyk7XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5blrZDoioLngrnnmoTmlbDph49cbiAgICAgICAgICogQG1ldGhvZCBnZXRDaGlsZENvdW50XG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeajgOa1i+eahOWFg+e0oFxuICAgICAgICAgKiBAcmV0dXJuIHsgTnVtYmVyIH0g57uZ5a6a55qEbm9kZeWFg+e0oOeahOWtkOiKgueCueaVsOmHj1xuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxkaXYgaWQ9XCJ0ZXN0XCI+XG4gICAgICAgICAqICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgKiA8L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiAzXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmdldENoaWxkQ291bnQoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKSApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOagueaNrue7meWumueahOi/h+a7pOinhOWIme+8jCDojrflj5bnrKblkIjmnaHku7bnmoTlrZDoioLngrnnmoTmlbDph49cbiAgICAgICAgICogQG1ldGhvZCBnZXRDaGlsZENvdW50XG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeajgOa1i+eahOWFg+e0oFxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOi/h+a7pOWZqO+8jCDopoHmsYLlr7nnrKblkIjmnaHku7bnmoTlrZDoioLngrnov5Tlm550cnVl77yMIOWPjeS5i+WImeimgeaxgui/lOWbnmZhbHNlXG4gICAgICAgICAqIEByZXR1cm4geyBOdW1iZXIgfSDnrKblkIjov4fmu6TmnaHku7bnmoRub2Rl5YWD57Sg55qE5a2Q6IqC54K55pWw6YePXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj5cbiAgICAgICAgICogICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IDFcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuZ2V0Q2hpbGRDb3VudCggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpLCBmdW5jdGlvbiAoIG5vZGUgKSB7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09IDE7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICB9ICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0Q2hpbGRDb3VudDogZnVuY3Rpb24gKG5vZGUsIGZuKSB7XG4gICAgICAgICAgICB2YXIgY291bnQgPSAwLFxuICAgICAgICAgICAgICAgIGZpcnN0ID0gbm9kZS5maXJzdENoaWxkO1xuICAgICAgICAgICAgZm4gPVxuICAgICAgICAgICAgICAgIGZuIHx8XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgd2hpbGUgKGZpcnN0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGZuKGZpcnN0KSkge1xuICAgICAgICAgICAgICAgICAgICBjb3VudCsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmaXJzdCA9IGZpcnN0Lm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvdW50O1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKTmlq3nu5nlrproioLngrnmmK/lkKbkuLrnqbroioLngrlcbiAgICAgICAgICogQG1ldGhvZCBpc0VtcHR5Tm9kZVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmo4DmtYvnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDoioLngrnmmK/lkKbkuLrnqbpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBVRS5kb20uZG9tVXRpbHMuaXNFbXB0eU5vZGUoIGRvY3VtZW50LmJvZHkgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBpc0VtcHR5Tm9kZTogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgIW5vZGUuZmlyc3RDaGlsZCB8fFxuICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldENoaWxkQ291bnQobm9kZSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFkb21VdGlscy5pc0JyKG5vZGUpICYmICFkb21VdGlscy5pc0Jvb2ttYXJrTm9kZShub2RlKSAmJiAhZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpO1xuICAgICAgICAgICAgICAgIH0pID09IDBcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFyU2VsZWN0ZWRBcnI6IGZ1bmN0aW9uIChub2Rlcykge1xuICAgICAgICAgICAgdmFyIG5vZGU7XG4gICAgICAgICAgICB3aGlsZSAoKG5vZGUgPSBub2Rlcy5wb3AoKSkpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVBdHRyaWJ1dGVzKG5vZGUsIFsnY2xhc3MnXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlsIbmmL7npLrljLrln5/mu5rliqjliLDmjIflrproioLngrnnmoTkvY3nva5cbiAgICAgICAgICogQG1ldGhvZCBzY3JvbGxUb1ZpZXdcbiAgICAgICAgICogQHBhcmFtICAgIHtOb2RlfSAgIG5vZGUgICAg6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSAgICB7d2luZG93fSAgIHdpbiAgICAgIHdpbmRvd+WvueixoVxuICAgICAgICAgKiBAcGFyYW0gICAge051bWJlcn0gICAgb2Zmc2V0VG9wICAgIOi3neemu+S4iuaWueeahOWBj+enu+mHj1xuICAgICAgICAgKi9cbiAgICAgICAgc2Nyb2xsVG9WaWV3OiBmdW5jdGlvbiAobm9kZSwgd2luLCBvZmZzZXRUb3ApIHtcbiAgICAgICAgICAgIHZhciBnZXRWaWV3UGFuZVNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkb2MgPSB3aW4uZG9jdW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlID0gZG9jLmNvbXBhdE1vZGUgPT0gJ0NTUzFDb21wYXQnO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IChtb2RlID8gZG9jLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA6IGRvYy5ib2R5LmNsaWVudFdpZHRoKSB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAobW9kZSA/IGRvYy5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IDogZG9jLmJvZHkuY2xpZW50SGVpZ2h0KSB8fCAwXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXRTY3JvbGxQb3NpdGlvbiA9IGZ1bmN0aW9uICh3aW4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCdwYWdlWE9mZnNldCcgaW4gd2luKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6IHdpbi5wYWdlWE9mZnNldCB8fCAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IHdpbi5wYWdlWU9mZnNldCB8fCAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRvYyA9IHdpbi5kb2N1bWVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeDogZG9jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IHx8IGRvYy5ib2R5LnNjcm9sbExlZnQgfHwgMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiBkb2MuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2MuYm9keS5zY3JvbGxUb3AgfHwgMFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgd2luSGVpZ2h0ID0gZ2V0Vmlld1BhbmVTaXplKCkuaGVpZ2h0LFxuICAgICAgICAgICAgICAgIG9mZnNldCA9IHdpbkhlaWdodCAqIC0xICsgb2Zmc2V0VG9wO1xuICAgICAgICAgICAgb2Zmc2V0ICs9IG5vZGUub2Zmc2V0SGVpZ2h0IHx8IDA7XG4gICAgICAgICAgICB2YXIgZWxlbWVudFBvc2l0aW9uID0gZG9tVXRpbHMuZ2V0WFkobm9kZSk7XG4gICAgICAgICAgICBvZmZzZXQgKz0gZWxlbWVudFBvc2l0aW9uLnk7XG4gICAgICAgICAgICB2YXIgY3VycmVudFNjcm9sbCA9IGdldFNjcm9sbFBvc2l0aW9uKHdpbikueTtcbiAgICAgICAgICAgIC8vIG9mZnNldCArPSA1MDtcbiAgICAgICAgICAgIGlmIChvZmZzZXQgPiBjdXJyZW50U2Nyb2xsIHx8IG9mZnNldCA8IGN1cnJlbnRTY3JvbGwgLSB3aW5IZWlnaHQpIHtcbiAgICAgICAgICAgICAgICB3aW4uc2Nyb2xsVG8oMCwgb2Zmc2V0ICsgKG9mZnNldCA8IDAgPyAtMjAgOiAyMCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvKipcbiAgICAgICAgICog5Yik5pat57uZ5a6a6IqC54K55piv5ZCm5Li6YnJcbiAgICAgICAgICogQG1ldGhvZCBpc0JyXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOmcgOimgeWIpOaWreeahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOe7meWumueahOiKgueCueaYr+WQpuaYr2Jy6IqC54K5XG4gICAgICAgICAqL1xuICAgICAgICBpc0JyOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMSAmJiBub2RlLnRhZ05hbWUgPT0gJ0JSJztcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIpOaWree7meWumueahOiKgueCueaYr+WQpuaYr+S4gOS4quKAnOWhq+WFheKAneiKgueCuVxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKiBAbWV0aG9kIGlzRmlsbENoYXJcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5Yik5pat55qE6IqC54K5XG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpc0luU3RhcnQg5piv5ZCm5LuO6IqC54K55YaF5a6555qE5byA5aeL5L2N572u5Yy56YWNXG4gICAgICAgICAqIEByZXR1cm5zIHsgQm9vbGVhbiB9IOiKgueCueaYr+WQpuaYr+Whq+WFheiKgueCuVxuICAgICAgICAgKi9cbiAgICAgICAgaXNGaWxsQ2hhcjogZnVuY3Rpb24gKG5vZGUsIGlzSW5TdGFydCkge1xuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgIT0gMykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgdmFyIHRleHQgPSBub2RlLm5vZGVWYWx1ZTtcbiAgICAgICAgICAgIGlmIChpc0luU3RhcnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBkb21VdGlscy5maWxsQ2hhcikudGVzdCh0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhdGV4dC5yZXBsYWNlKG5ldyBSZWdFeHAoZG9tVXRpbHMuZmlsbENoYXIsICdnJyksICcnKS5sZW5ndGg7XG4gICAgICAgIH0sXG4gICAgICAgIGlzU3RhcnRJbmJsb2NrOiBmdW5jdGlvbiAocmFuZ2UpIHtcbiAgICAgICAgICAgIHZhciB0bXBSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICBmbGFnID0gMCxcbiAgICAgICAgICAgICAgICBzdGFydCA9IHRtcFJhbmdlLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgIHRtcDtcbiAgICAgICAgICAgIGlmIChzdGFydC5ub2RlVHlwZSA9PSAxICYmIHN0YXJ0LmNoaWxkTm9kZXNbdG1wUmFuZ2Uuc3RhcnRPZmZzZXRdKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5jaGlsZE5vZGVzW3RtcFJhbmdlLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICB2YXIgcHJlID0gc3RhcnQucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgIHdoaWxlIChwcmUgJiYgZG9tVXRpbHMuaXNGaWxsQ2hhcihwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcHJlO1xuICAgICAgICAgICAgICAgICAgICBwcmUgPSBwcmUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmlzRmlsbENoYXIoc3RhcnQsIHRydWUpICYmIHRtcFJhbmdlLnN0YXJ0T2Zmc2V0ID09IDEpIHtcbiAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRTdGFydEJlZm9yZShzdGFydCk7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSB0bXBSYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2hpbGUgKHN0YXJ0ICYmIGRvbVV0aWxzLmlzRmlsbENoYXIoc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgdG1wID0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodG1wKSB7XG4gICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wKTtcbiAgICAgICAgICAgICAgICBzdGFydCA9IHRtcFJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDEgJiYgZG9tVXRpbHMuaXNFbXB0eU5vZGUoc3RhcnQpICYmIHRtcFJhbmdlLnN0YXJ0T2Zmc2V0ID09IDEpIHtcbiAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRTdGFydChzdGFydCwgMCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB3aGlsZSAoIXRtcFJhbmdlLnN0YXJ0T2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSB0bXBSYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShzdGFydCkgfHwgZG9tVXRpbHMuaXNCb2R5KHN0YXJ0KSkge1xuICAgICAgICAgICAgICAgICAgICBmbGFnID0gMTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBwcmUgPSB0bXBSYW5nZS5zdGFydENvbnRhaW5lci5wcmV2aW91c1NpYmxpbmcsXG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKCFwcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wUmFuZ2Uuc3RhcnRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChwcmUgJiYgZG9tVXRpbHMuaXNGaWxsQ2hhcihwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gcHJlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gcHJlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodG1wTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRTdGFydEJlZm9yZSh0bXBSYW5nZS5zdGFydENvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmxhZyAmJiAhZG9tVXRpbHMuaXNCb2R5KHRtcFJhbmdlLnN0YXJ0Q29udGFpbmVyKSA/IDEgOiAwO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKTmlq3nu5nlrprnmoTlhYPntKDmmK/lkKbmmK/kuIDkuKrnqbrlhYPntKBcbiAgICAgICAgICogQG1ldGhvZCBpc0VtcHR5QmxvY2tcbiAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IG5vZGUg6ZyA6KaB5Yik5pat55qE5YWD57SgXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g5piv5ZCm5piv56m65YWD57SgXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj48L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0cnVlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzRW1wdHlCbG9jayggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpICkgKTtcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5qC55o2u5oyH5a6a55qE5Yik5pat6KeE5YiZ5Yik5pat57uZ5a6a55qE5YWD57Sg5piv5ZCm5piv5LiA5Liq56m65YWD57SgXG4gICAgICAgICAqIEBtZXRob2QgaXNFbXB0eUJsb2NrXG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBub2RlIOmcgOimgeWIpOaWreeahOWFg+e0oFxuICAgICAgICAgKiBAcGFyYW0geyBSZWdFeHAgfSByZWcg5a+55YaF5a655omn6KGM5Yik5pat55qE5q2j5YiZ6KGo6L6+5byP5a+56LGhXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g5piv5ZCm5piv56m65YWD57SgXG4gICAgICAgICAqL1xuICAgICAgICBpc0VtcHR5QmxvY2s6IGZ1bmN0aW9uIChub2RlLCByZWcpIHtcbiAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlICE9IDEpIHJldHVybiAwO1xuICAgICAgICAgICAgcmVnID0gcmVnIHx8IG5ldyBSZWdFeHAoJ1sgXFx4YTBcXHRcXHJcXG4nICsgZG9tVXRpbHMuZmlsbENoYXIgKyAnXScsICdnJyk7XG5cbiAgICAgICAgICAgIGlmIChub2RlW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddLnJlcGxhY2UocmVnLCAnJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgbiBpbiBkdGQuJGlzTm90RW1wdHkpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZShuKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOenu+WKqOWFg+e0oOS9v+W+l+ivpeWFg+e0oOeahOS9jee9ruenu+WKqOaMh+WumueahOWBj+enu+mHj+eahOi3neemu1xuICAgICAgICAgKiBAbWV0aG9kIHNldFZpZXdwb3J0T2Zmc2V0XG4gICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBlbGVtZW50IOmcgOimgeiuvue9ruWBj+enu+mHj+eahOWFg+e0oFxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBvZmZzZXQg5YGP56e76YeP77yMIOW9ouWmgnsgbGVmdDogMTAwLCB0b3A6IDUwIH3nmoTkuIDkuKrplK7lgLzlr7nvvIwg6KGo56S66K+l5YWD57Sg5bCG5ZyoXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOeOsOacieeahOS9jee9ruS4iuWQkeawtOW5s+aWueWQkeWBj+enu29mZnNldC5sZWZ055qE6Led56a777yMIOWcqOerluebtOaWueWQkeS4iuWBj+enu1xuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQudG9w55qE6Led56a7XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIiBzdHlsZT1cInRvcDogMTAwcHg7IGxlZnQ6IDUwcHg7IHBvc2l0aW9uOiBhYnNvbHV0ZTtcIj48L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgIHZhciB0ZXN0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5zZXRWaWV3cG9ydE9mZnNldCggdGVzdE5vZGUsIHtcbiAgICAgICAgICogICAgICAgICBsZWZ0OiAyMDAsXG4gICAgICAgICAqICAgICAgICAgdG9wOiA1MFxuICAgICAgICAgKiAgICAgfSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRvcDogMzAwcHg7IGxlZnQ6IDEwMHB4OyBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGVzdE5vZGUuc3R5bGUuY3NzVGV4dCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBzZXRWaWV3cG9ydE9mZnNldDogZnVuY3Rpb24gKGVsZW1lbnQsIG9mZnNldCkge1xuICAgICAgICAgICAgdmFyIGxlZnQgPSBwYXJzZUludChlbGVtZW50LnN0eWxlLmxlZnQpIHwgMDtcbiAgICAgICAgICAgIHZhciB0b3AgPSBwYXJzZUludChlbGVtZW50LnN0eWxlLnRvcCkgfCAwO1xuICAgICAgICAgICAgdmFyIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgdmFyIG9mZnNldExlZnQgPSBvZmZzZXQubGVmdCAtIHJlY3QubGVmdDtcbiAgICAgICAgICAgIHZhciBvZmZzZXRUb3AgPSBvZmZzZXQudG9wIC0gcmVjdC50b3A7XG4gICAgICAgICAgICBpZiAob2Zmc2V0TGVmdCkge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUubGVmdCA9IGxlZnQgKyBvZmZzZXRMZWZ0ICsgJ3B4JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvZmZzZXRUb3ApIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLnRvcCA9IHRvcCArIG9mZnNldFRvcCArICdweCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOeUqOKAnOWhq+WFheWtl+espuKAneWhq+WFheiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGZpbGxOb2RlXG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqIEBwYXJhbSB7IERvbURvY3VtZW50IH0gZG9jIOWhq+WFheeahOiKgueCueaJgOWcqOeahGRvY21lbnTlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5aGr5YWF55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj48L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICogICAgIHZhciB0ZXN0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiAwXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGVzdE5vZGUuY2hpbGROb2Rlcy5sZW5ndGggKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5maWxsTm9kZSggZG9jdW1lbnQsIHRlc3ROb2RlICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogMVxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3ROb2RlLmNoaWxkTm9kZXMubGVuZ3RoICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGZpbGxOb2RlOiBmdW5jdGlvbiAoZG9jLCBub2RlKSB7XG4gICAgICAgICAgICB2YXIgdG1wTm9kZSA9IGJyb3dzZXIuaWUgPyBkb2MuY3JlYXRlVGV4dE5vZGUoZG9tVXRpbHMuZmlsbENoYXIpIDogZG9jLmNyZWF0ZUVsZW1lbnQoJ2JyJyk7XG4gICAgICAgICAgICBub2RlLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0bXBOb2RlKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5oqK6IqC54K5c3Jj55qE5omA5pyJ5a2Q6IqC54K56L+95Yqg5Yiw5Y+m5LiA5Liq6IqC54K5dGFn5LiK5Y67XG4gICAgICAgICAqIEBtZXRob2QgbW92ZUNoaWxkXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBzcmMg5rqQ6IqC54K577yMIOivpeiKgueCueS4i+eahOaJgOacieWtkOiKgueCueWwhuiiq+enu+mZpFxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gdGFnIOebruagh+iKgueCue+8jCDku47mupDoioLngrnnp7vpmaTnmoTlrZDoioLngrnlsIbooqvov73liqDliLDor6XoioLngrnkuItcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdDFcIj5cbiAgICAgICAgICogICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdDJcIj5cbiAgICAgICAgICogICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAqIDwvZGl2PlxuICAgICAgICAgKlxuICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgdmFyIHRlc3QxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0MVwiKSxcbiAgICAgICAgICogICAgICAgICB0ZXN0MiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdDJcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICBVRS5kb20uZG9tVXRpbHMubW92ZUNoaWxkKCB0ZXN0MSwgdGVzdDIgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiBcIlwi77yI56m65a2X56ym5Liy77yJXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGVzdDEuaW5uZXJIVE1MICk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogXCI8ZGl2PjwvZGl2PjxzcGFuPjwvc3Bhbj5cIlxuICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHRlc3QyLmlubmVySFRNTCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmioroioLngrlzcmPnmoTmiYDmnInlrZDoioLngrnnp7vliqjliLDlj6bkuIDkuKroioLngrl0YWfkuIrljrssIOWPr+S7pemAmui/h2RpcuWPguaVsOaOp+WItumZhOWKoOeahOihjOS4uuaYr+KAnOi/veWKoOKAnei/mOaYr+KAnOaPkuWFpemhtumDqOKAnVxuICAgICAgICAgKiBAbWV0aG9kIG1vdmVDaGlsZFxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gc3JjIOa6kOiKgueCue+8jCDor6XoioLngrnkuIvnmoTmiYDmnInlrZDoioLngrnlsIbooqvnp7vpmaRcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IHRhZyDnm67moIfoioLngrnvvIwg5LuO5rqQ6IqC54K556e76Zmk55qE5a2Q6IqC54K55bCG6KKr6ZmE5Yqg5Yiw6K+l6IqC54K55LiLXG4gICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBkaXIg6ZmE5Yqg5pa55byP77yMIOWmguaenOS4unRydWXvvIwg5YiZ6ZmE5Yqg6L+b5Y6755qE6IqC54K55bCG6KKr5pS+5Yiw55uu5qCH6IqC54K555qE6aG26YOo77yMIOWPjeS5i++8jOWImeaUvuWIsOacq+WwvlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAqIDxkaXYgaWQ9XCJ0ZXN0MVwiPlxuICAgICAgICAgKiAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICogPC9kaXY+XG4gICAgICAgICAqIDxkaXYgaWQ9XCJ0ZXN0MlwiPlxuICAgICAgICAgKiAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICogPC9kaXY+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICB2YXIgdGVzdDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3QxXCIpLFxuICAgICAgICAgKiAgICAgICAgIHRlc3QyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0MlwiKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIFVFLmRvbS5kb21VdGlscy5tb3ZlQ2hpbGQoIHRlc3QxLCB0ZXN0MiwgdHJ1ZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IFwiXCLvvIjnqbrlrZfnrKbkuLLvvIlcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCB0ZXN0MS5pbm5lckhUTUwgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiBcIjxzcGFuPjwvc3Bhbj48ZGl2PjwvZGl2PlwiXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggdGVzdDIuaW5uZXJIVE1MICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIG1vdmVDaGlsZDogZnVuY3Rpb24gKHNyYywgdGFnLCBkaXIpIHtcbiAgICAgICAgICAgIHdoaWxlIChzcmMuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgIGlmIChkaXIgJiYgdGFnLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFnLmluc2VydEJlZm9yZShzcmMubGFzdENoaWxkLCB0YWcuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGFnLmFwcGVuZENoaWxkKHNyYy5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWIpOaWreiKgueCueeahOagh+etvuS4iuaYr+WQpuS4jeWtmOWcqOS7u+S9leWxnuaAp1xuICAgICAgICAgKiBAbWV0aG9kIGhhc05vQXR0cmlidXRlc1xuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpnIDopoHmo4DmtYvnmoToioLngrnlr7nosaFcbiAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDoioLngrnmmK/lkKbkuI3ljIXlkKvku7vkvZXlsZ7mgKdcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgKiA8ZGl2IGlkPVwidGVzdFwiPjxzcGFuPnh4eHg8L3NwYW4+PC9kaXY+XG4gICAgICAgICAqXG4gICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAqXG4gICAgICAgICAqICAgICAvL291dHB1dDogZmFsc2VcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaGFzTm9BdHRyaWJ1dGVzKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3RcIikgKSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuaGFzTm9BdHRyaWJ1dGVzKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlc3RcIikuZmlyc3RDaGlsZCApICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGhhc05vQXR0cmlidXRlczogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBicm93c2VyLmllID8gL148XFx3K1xccyo/Pi8udGVzdChub2RlLm91dGVySFRNTCkgOiBub2RlLmF0dHJpYnV0ZXMubGVuZ3RoID09IDA7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOajgOa1i+iKgueCueaYr+WQpuaYr1VFZGl0b3LmiYDkvb/nlKjnmoTovoXliqnoioLngrlcbiAgICAgICAgICogQG1ldGhvZCBpc0N1c3RvbWVOb2RlXG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOmcgOimgeajgOa1i+eahOiKgueCuVxuICAgICAgICAgKiBAcmVtaW5kIOi+heWKqeiKgueCueaYr+aMh+e8lui+keWZqOimgeWujOaIkOW3peS9nOS4tOaXtua3u+WKoOeahOiKgueCue+8jCDlnKjovpPlh7rnmoTml7blgJnlsIbkvJrku47nvJbovpHlmajlhoXnp7vpmaTvvIwg5LiN5Lya5b2x5ZON5pyA57uI55qE57uT5p6c44CCXG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g57uZ5a6a55qE6IqC54K55piv5ZCm5piv5LiA5Liq6L6F5Yqp6IqC54K5XG4gICAgICAgICAqL1xuICAgICAgICBpc0N1c3RvbWVOb2RlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMSAmJiBub2RlLmdldEF0dHJpYnV0ZSgnX3VlX2N1c3RvbV9ub2RlXycpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmo4DmtYvoioLngrnnmoTmoIfnrb7mmK/lkKbmmK/nu5nlrprnmoTmoIfnrb5cbiAgICAgICAgICogQG1ldGhvZCBpc1RhZ05vZGVcbiAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5qOA5rWL55qE6IqC54K55a+56LGhXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHRhZ05hbWUg5qCH562+XG4gICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g6IqC54K555qE5qCH562+5piv5ZCm5piv57uZ5a6a55qE5qCH562+XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICogPGRpdiBpZD1cInRlc3RcIj48L2Rpdj5cbiAgICAgICAgICpcbiAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICpcbiAgICAgICAgICogICAgIC8vb3V0cHV0OiB0cnVlXG4gICAgICAgICAqICAgICBjb25zb2xlLmxvZyggVUUuZG9tLmRvbVV0aWxzLmlzVGFnTm9kZSggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZXN0XCIpLCBcImRpdlwiICkgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgaXNUYWdOb2RlOiBmdW5jdGlvbiAobm9kZSwgdGFnTmFtZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09IDEgJiYgbmV3IFJlZ0V4cCgnXFxcXGInICsgbm9kZS50YWdOYW1lICsgJ1xcXFxiJywgJ2knKS50ZXN0KHRhZ05hbWVzKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog57uZ5a6a5LiA5Liq6IqC54K55pWw57uE77yM5Zyo6YCa6L+H5oyH5a6a55qE6L+H5ruk5Zmo6L+H5ruk5ZCO77yMIOiOt+WPluWFtuS4rea7oei2s+i/h+a7pOadoeS7tueahOesrOS4gOS4quiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGZpbHRlck5vZGVMaXN0XG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gbm9kZUxpc3Qg6ZyA6KaB6L+H5ruk55qE6IqC54K55pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gZm4g6L+H5ruk5Zmo77yMIOWvueespuWQiOadoeS7tueahOiKgueCue+8jCDmiafooYznu5Pmnpzov5Tlm550cnVl77yMIOWPjeS5i+WImei/lOWbnmZhbHNlXG4gICAgICAgICAqIEByZXR1cm4geyBOb2RlIHwgTlVMTCB9IOWmguaenOaJvuWIsOespuWQiOi/h+a7pOadoeS7tueahOiKgueCue+8jCDliJnov5Tlm57or6XoioLngrnvvIwg5ZCm5YiZ6L+U5ZueTlVMTFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIHZhciBkaXZOb2RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiZGl2XCIpO1xuICAgICAgICAgKiBkaXZOb2RlcyA9IFtdLnNsaWNlLmNhbGwoIGRpdk5vZGVzLCAwICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiBudWxsXG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBVRS5kb20uZG9tVXRpbHMuZmlsdGVyTm9kZUxpc3QoIGRpdk5vZGVzLCBmdW5jdGlvbiAoIG5vZGUgKSB7XG4gICAgICAgICAqICAgICByZXR1cm4gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdkaXYnO1xuICAgICAgICAgKiB9ICkgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnu5nlrprkuIDkuKroioLngrnmlbDnu4Rub2RlTGlzdOWSjOS4gOe7hOagh+etvuWQjXRhZ05hbWVz77yMIOiOt+WPluWFtuS4reiDveWkn+WMuemFjeagh+etvuWQjeeahOiKgueCuembhuWQiOS4reeahOesrOS4gOS4quiKgueCuVxuICAgICAgICAgKiBAbWV0aG9kIGZpbHRlck5vZGVMaXN0XG4gICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gbm9kZUxpc3Qg6ZyA6KaB6L+H5ruk55qE6IqC54K55pWw57uEXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHRhZ05hbWVzIOmcgOimgeWMuemFjeeahOagh+etvuWQje+8jCDlpJrkuKrmoIfnrb7lkI3kuYvpl7TnlKjnqbrmoLzliIblibJcbiAgICAgICAgICogQHJldHVybiB7IE5vZGUgfCBOVUxMIH0g5aaC5p6c5om+5Yiw5qCH562+5ZCN5Yy56YWN55qE6IqC54K577yMIOWImei/lOWbnuivpeiKgueCue+8jCDlkKbliJnov5Tlm55OVUxMXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGRpdk5vZGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIik7XG4gICAgICAgICAqIGRpdk5vZGVzID0gW10uc2xpY2UuY2FsbCggZGl2Tm9kZXMsIDAgKTtcbiAgICAgICAgICpcbiAgICAgICAgICogLy9vdXRwdXQ6IG51bGxcbiAgICAgICAgICogY29uc29sZS5sb2coIFVFLmRvbS5kb21VdGlscy5maWx0ZXJOb2RlTGlzdCggZGl2Tm9kZXMsICdhIHNwYW4nICkgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnu5nlrprkuIDkuKroioLngrnmlbDnu4TvvIzlnKjpgJrov4fmjIflrprnmoTov4fmu6Tlmajov4fmu6TlkI7vvIwg5aaC5p6c5Y+C5pWwZm9yQWxs5Li6dHJ1Ze+8jCDliJnkvJrov5Tlm57miYDmnInmu6HotrPov4fmu6RcbiAgICAgICAgICog5p2h5Lu255qE6IqC54K56ZuG5ZCI77yMIOWQpuWIme+8jCDov5Tlm57mu6HotrPmnaHku7bnmoToioLngrnpm4blkIjkuK3nmoTnrKzkuIDkuKroioLngrlcbiAgICAgICAgICogQG1ldGhvZCBmaWx0ZXJOb2RlTGlzdFxuICAgICAgICAgKiBAcGFyYW0geyBBcnJheSB9IG5vZGVMaXN0IOmcgOimgei/h+a7pOeahOiKgueCueaVsOe7hFxuICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOi/h+a7pOWZqO+8jCDlr7nnrKblkIjmnaHku7bnmoToioLngrnvvIwg5omn6KGM57uT5p6c6L+U5ZuedHJ1Ze+8jCDlj43kuYvliJnov5Tlm55mYWxzZVxuICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gZm9yQWxsIOaYr+WQpui/lOWbnuaVtOS4quiKgueCueaVsOe7hCwg5aaC5p6c6K+l5Y+C5pWw5Li6ZmFsc2XvvIwg5YiZ6L+U5Zue6IqC54K56ZuG5ZCI5Lit55qE56ys5LiA5Liq6IqC54K5XG4gICAgICAgICAqIEByZXR1cm4geyBBcnJheSB8IE5vZGUgfCBOVUxMIH0g5aaC5p6c5om+5Yiw56ym5ZCI6L+H5ruk5p2h5Lu255qE6IqC54K577yMIOWImeagueaNruWPguaVsGZvckFsbOeahOWAvOWGs+Wumui/lOWbnua7oei2s1xuICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6L+H5ruk5p2h5Lu255qE6IqC54K55pWw57uE5oiW56ys5LiA5Liq6IqC54K577yMIOWQpuWImei/lOWbnk5VTExcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiB2YXIgZGl2Tm9kZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImRpdlwiKTtcbiAgICAgICAgICogZGl2Tm9kZXMgPSBbXS5zbGljZS5jYWxsKCBkaXZOb2RlcywgMCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogM++8iOWBh+WumuaciTPkuKpkaXbvvIlcbiAgICAgICAgICogY29uc29sZS5sb2coIGRpdk5vZGVzLmxlbmd0aCApO1xuICAgICAgICAgKlxuICAgICAgICAgKiB2YXIgbm9kZXMgPSBVRS5kb20uZG9tVXRpbHMuZmlsdGVyTm9kZUxpc3QoIGRpdk5vZGVzLCBmdW5jdGlvbiAoIG5vZGUgKSB7XG4gICAgICAgICAqICAgICByZXR1cm4gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdkaXYnO1xuICAgICAgICAgKiB9LCB0cnVlICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8vb3V0cHV0OiAzXG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBub2Rlcy5sZW5ndGggKTtcbiAgICAgICAgICpcbiAgICAgICAgICogdmFyIG5vZGUgPSBVRS5kb20uZG9tVXRpbHMuZmlsdGVyTm9kZUxpc3QoIGRpdk5vZGVzLCBmdW5jdGlvbiAoIG5vZGUgKSB7XG4gICAgICAgICAqICAgICByZXR1cm4gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdkaXYnO1xuICAgICAgICAgKiB9LCBmYWxzZSApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL291dHB1dDogZGl2XG4gICAgICAgICAqIGNvbnNvbGUubG9nKCBub2RlLm5vZGVOYW1lICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgZmlsdGVyTm9kZUxpc3Q6IGZ1bmN0aW9uIChub2RlbGlzdCwgZmlsdGVyLCBmb3JBbGwpIHtcbiAgICAgICAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICAgICAgICBpZiAoIXV0aWxzLmlzRnVuY3Rpb24oZmlsdGVyKSkge1xuICAgICAgICAgICAgICAgIHZhciBzdHIgPSBmaWx0ZXI7XG4gICAgICAgICAgICAgICAgZmlsdGVyID0gZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHV0aWxzLmluZGV4T2YodXRpbHMuaXNBcnJheShzdHIpID8gc3RyIDogc3RyLnNwbGl0KCcgJyksIG4udGFnTmFtZS50b0xvd2VyQ2FzZSgpKSAhPSAtMTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXRpbHMuZWFjaChub2RlbGlzdCwgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXIobikgJiYgcmVzdWx0cy5wdXNoKG4pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0cy5sZW5ndGggPT0gMCA/IG51bGwgOiByZXN1bHRzLmxlbmd0aCA9PSAxIHx8ICFmb3JBbGwgPyByZXN1bHRzWzBdIDogcmVzdWx0cztcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICog5p+l6K+i57uZ5a6a55qEcmFuZ2XpgInljLrmmK/lkKblnKjnu5nlrprnmoRub2Rl6IqC54K55YaF77yM5LiU5Zyo6K+l6IqC54K555qE5pyA5pyr5bC+XG4gICAgICAgICAqIEBtZXRob2QgaXNJbk5vZGVFbmRCb3VuZGFyeVxuICAgICAgICAgKiBAcGFyYW0geyBVRS5kb20uUmFuZ2UgfSBybmcg6ZyA6KaB5Yik5pat55qEcmFuZ2Xlr7nosaHvvIwg6K+l5a+56LGh55qEc3RhcnRDb250YWluZXLkuI3og73kuLpOVUxMXG4gICAgICAgICAqIEBwYXJhbSBub2RlIOmcgOimgeajgOa1i+eahOiKgueCueWvueixoVxuICAgICAgICAgKiBAcmV0dXJuIHsgTnVtYmVyIH0g5aaC5p6c57uZ5a6a55qE6YCJ5Y+WcmFuZ2Xlr7nosaHmmK/lnKhub2Rl5YaF6YOo55qE5pyA5pyr56uv77yMIOWImei/lOWbnjEsIOWQpuWImei/lOWbnjBcbiAgICAgICAgICovXG4gICAgICAgIGlzSW5Ob2RlRW5kQm91bmRhcnk6IGZ1bmN0aW9uIChybmcsIG5vZGUpIHtcbiAgICAgICAgICAgIHZhciBzdGFydCA9IHJuZy5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgIGlmIChzdGFydC5ub2RlVHlwZSA9PSAzICYmIHJuZy5zdGFydE9mZnNldCAhPSBzdGFydC5ub2RlVmFsdWUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSAmJiBybmcuc3RhcnRPZmZzZXQgIT0gc3RhcnQuY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdoaWxlIChzdGFydCAhPT0gbm9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChzdGFydC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH0sXG4gICAgICAgIGlzQm91bmRhcnlOb2RlOiBmdW5jdGlvbiAobm9kZSwgZGlyKSB7XG4gICAgICAgICAgICB2YXIgdG1wO1xuICAgICAgICAgICAgd2hpbGUgKCFkb21VdGlscy5pc0JvZHkobm9kZSkpIHtcbiAgICAgICAgICAgICAgICB0bXAgPSBub2RlO1xuICAgICAgICAgICAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKHRtcCAhPT0gbm9kZVtkaXJdKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZmlsbEh0bWw6IGJyb3dzZXIuaWUxMWJlbG93ID8gJyZuYnNwOycgOiAnPGJyLz4nXG4gICAgfSk7XG4gICAgdmFyIGZpbGxDaGFyUmVnID0gbmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKTtcblxuICAgIC8vIGNvcmUvUmFuZ2UuanNcbiAgICAvKipcbiAgICAgKiBSYW5nZeWwgeijhVxuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRS5kb21cbiAgICAgKiBAY2xhc3MgUmFuZ2VcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogZG9t5pON5L2c5bCB6KOFXG4gICAgICogQHVuZmlsZVxuICAgICAqIEBtb2R1bGUgVUUuZG9tXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBSYW5nZeWunueOsOexu++8jOacrOexu+aYr1VFZGl0b3LlupXlsYLmoLjlv4PnsbvvvIzlsIHoo4XkuI3lkIzmtY/op4jlmajkuYvpl7TnmoRSYW5nZeaTjeS9nOOAglxuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFLmRvbVxuICAgICAqIEBjbGFzcyBSYW5nZVxuICAgICAqL1xuXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGd1aWQgPSAwLFxuICAgICAgICAgICAgZmlsbENoYXIgPSBkb21VdGlscy5maWxsQ2hhcixcbiAgICAgICAgICAgIGZpbGxEYXRhO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmm7TmlrByYW5nZeeahGNvbGxhcHNl54q25oCBXG4gICAgICAgICAqIEBwYXJhbSAge1JhbmdlfSAgIHJhbmdlICAgIHJhbmdl5a+56LGhXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiB1cGRhdGVDb2xsYXBzZShyYW5nZSkge1xuICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2VkID1cbiAgICAgICAgICAgICAgICByYW5nZS5zdGFydENvbnRhaW5lciAmJlxuICAgICAgICAgICAgICAgIHJhbmdlLmVuZENvbnRhaW5lciAmJlxuICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0Q29udGFpbmVyID09PSByYW5nZS5lbmRDb250YWluZXIgJiZcbiAgICAgICAgICAgICAgICByYW5nZS5zdGFydE9mZnNldCA9PSByYW5nZS5lbmRPZmZzZXQ7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZWxlY3RPbmVOb2RlKHJuZykge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAhcm5nLmNvbGxhcHNlZCAmJlxuICAgICAgICAgICAgICAgIHJuZy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAxICYmXG4gICAgICAgICAgICAgICAgcm5nLnN0YXJ0Q29udGFpbmVyID09PSBybmcuZW5kQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICAgcm5nLmVuZE9mZnNldCAtIHJuZy5zdGFydE9mZnNldCA9PSAxXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNldEVuZFBvaW50KHRvU3RhcnQsIG5vZGUsIG9mZnNldCwgcmFuZ2UpIHtcbiAgICAgICAgICAgIC8v5aaC5p6cbm9kZeaYr+iHqumXreWQiOagh+etvuimgeWkhOeQhlxuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMSAmJiAoZHRkLiRlbXB0eVtub2RlLnRhZ05hbWVdIHx8IGR0ZC4kbm9uQ2hpbGRbbm9kZS50YWdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICBvZmZzZXQgPSBkb21VdGlscy5nZXROb2RlSW5kZXgobm9kZSkgKyAodG9TdGFydCA/IDAgOiAxKTtcbiAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRvU3RhcnQpIHtcbiAgICAgICAgICAgICAgICByYW5nZS5zdGFydENvbnRhaW5lciA9IG5vZGU7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnRPZmZzZXQgPSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5lbmRDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByYW5nZS5lbmRDb250YWluZXIgPSBub2RlO1xuICAgICAgICAgICAgICAgIHJhbmdlLmVuZE9mZnNldCA9IG9mZnNldDtcbiAgICAgICAgICAgICAgICBpZiAoIXJhbmdlLnN0YXJ0Q29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1cGRhdGVDb2xsYXBzZShyYW5nZSk7XG4gICAgICAgICAgICByZXR1cm4gcmFuZ2U7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBleGVjQ29udGVudHNBY3Rpb24ocmFuZ2UsIGFjdGlvbikge1xuICAgICAgICAgICAgLy/osIPmlbTovrnnlYxcbiAgICAgICAgICAgIC8vcmFuZ2UuaW5jbHVkZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICB2YXIgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBlbmQgPSByYW5nZS5lbmRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgc3RhcnRPZmZzZXQgPSByYW5nZS5zdGFydE9mZnNldCxcbiAgICAgICAgICAgICAgICBlbmRPZmZzZXQgPSByYW5nZS5lbmRPZmZzZXQsXG4gICAgICAgICAgICAgICAgZG9jID0gcmFuZ2UuZG9jdW1lbnQsXG4gICAgICAgICAgICAgICAgZnJhZyA9IGRvYy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG4gICAgICAgICAgICAgICAgdG1wU3RhcnQsXG4gICAgICAgICAgICAgICAgdG1wRW5kO1xuICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICBzdGFydCA9IHN0YXJ0LmNoaWxkTm9kZXNbc3RhcnRPZmZzZXRdIHx8ICh0bXBTdGFydCA9IHN0YXJ0LmFwcGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZSgnJykpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlbmQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgIGVuZCA9IGVuZC5jaGlsZE5vZGVzW2VuZE9mZnNldF0gfHwgKHRtcEVuZCA9IGVuZC5hcHBlbmRDaGlsZChkb2MuY3JlYXRlVGV4dE5vZGUoJycpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCAmJiBzdGFydC5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChkb2MuY3JlYXRlVGV4dE5vZGUoc3RhcnQuc3Vic3RyaW5nRGF0YShzdGFydE9mZnNldCwgZW5kT2Zmc2V0IC0gc3RhcnRPZmZzZXQpKSk7XG4gICAgICAgICAgICAgICAgLy9pcyBub3QgY2xvbmVcbiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0LmRlbGV0ZURhdGEoc3RhcnRPZmZzZXQsIGVuZE9mZnNldCAtIHN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmcmFnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGN1cnJlbnQsXG4gICAgICAgICAgICAgICAgY3VycmVudExldmVsLFxuICAgICAgICAgICAgICAgIGNsb25lID0gZnJhZyxcbiAgICAgICAgICAgICAgICBzdGFydFBhcmVudHMgPSBkb21VdGlscy5maW5kUGFyZW50cyhzdGFydCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgZW5kUGFyZW50cyA9IGRvbVV0aWxzLmZpbmRQYXJlbnRzKGVuZCwgdHJ1ZSk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgc3RhcnRQYXJlbnRzW2ldID09IGVuZFBhcmVudHNbaV07ICkge1xuICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGogPSBpLCBzaTsgKHNpID0gc3RhcnRQYXJlbnRzW2pdKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudCA9IHNpLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgIGlmIChzaSA9PSBzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRtcFN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2Uuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT0gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb25lLmFwcGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZShzdGFydC5ub2RlVmFsdWUuc2xpY2Uoc3RhcnRPZmZzZXQpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pcyBub3QgY2xvbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LmRlbGV0ZURhdGEoc3RhcnRPZmZzZXQsIHN0YXJ0Lm5vZGVWYWx1ZS5sZW5ndGggLSBzdGFydE9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9uZS5hcHBlbmRDaGlsZCghYWN0aW9uID8gc3RhcnQuY2xvbmVOb2RlKHRydWUpIDogc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudExldmVsID0gc2kuY2xvbmVOb2RlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgY2xvbmUuYXBwZW5kQ2hpbGQoY3VycmVudExldmVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnQgPT09IGVuZCB8fCBjdXJyZW50ID09PSBlbmRQYXJlbnRzW2pdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzaSA9IGN1cnJlbnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIGNsb25lLmFwcGVuZENoaWxkKCFhY3Rpb24gPyBjdXJyZW50LmNsb25lTm9kZSh0cnVlKSA6IGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gc2k7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNsb25lID0gY3VycmVudExldmVsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xvbmUgPSBmcmFnO1xuICAgICAgICAgICAgaWYgKCFzdGFydFBhcmVudHNbaV0pIHtcbiAgICAgICAgICAgICAgICBjbG9uZS5hcHBlbmRDaGlsZChzdGFydFBhcmVudHNbaSAtIDFdLmNsb25lTm9kZShmYWxzZSkpO1xuICAgICAgICAgICAgICAgIGNsb25lID0gY2xvbmUuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGogPSBpLCBlaTsgKGVpID0gZW5kUGFyZW50c1tqXSk7IGorKykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBlaS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgaWYgKGVpID09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRtcEVuZCAmJiByYW5nZS5lbmRDb250YWluZXIubm9kZVR5cGUgPT0gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmUuYXBwZW5kQ2hpbGQoZG9jLmNyZWF0ZVRleHROb2RlKGVuZC5zdWJzdHJpbmdEYXRhKDAsIGVuZE9mZnNldCkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaXMgbm90IGNsb25lXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kLmRlbGV0ZURhdGEoMCwgZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRMZXZlbCA9IGVpLmNsb25lTm9kZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIGNsb25lLmFwcGVuZENoaWxkKGN1cnJlbnRMZXZlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v5aaC5p6c5Lik56uv5ZCM57qn77yM5Y+z6L6556ys5LiA5qyh5bey57uP6KKr5byA5aeL5YGa5LqGXG4gICAgICAgICAgICAgICAgaWYgKGogIT0gaSB8fCAhc3RhcnRQYXJlbnRzW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudCA9PT0gc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVpID0gY3VycmVudC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9uZS5pbnNlcnRCZWZvcmUoIWFjdGlvbiA/IGN1cnJlbnQuY2xvbmVOb2RlKHRydWUpIDogY3VycmVudCwgY2xvbmUuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZWk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xvbmUgPSBjdXJyZW50TGV2ZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VcbiAgICAgICAgICAgICAgICAgICAgLnNldFN0YXJ0QmVmb3JlKFxuICAgICAgICAgICAgICAgICAgICAgICAgIWVuZFBhcmVudHNbaV0gPyBlbmRQYXJlbnRzW2kgLSAxXSA6ICFzdGFydFBhcmVudHNbaV0gPyBzdGFydFBhcmVudHNbaSAtIDFdIDogZW5kUGFyZW50c1tpXVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIC5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRtcFN0YXJ0ICYmIGRvbVV0aWxzLnJlbW92ZSh0bXBTdGFydCk7XG4gICAgICAgICAgICB0bXBFbmQgJiYgZG9tVXRpbHMucmVtb3ZlKHRtcEVuZCk7XG4gICAgICAgICAgICByZXR1cm4gZnJhZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliJvlu7rkuIDkuKrot59kb2N1bWVudOe7keWumueahOepuueahFJhbmdl5a6e5L6LXG4gICAgICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAgICAgKiBAcGFyYW0geyBEb2N1bWVudCB9IGRvY3VtZW50IOaWsOW7uueahOmAieWMuuaJgOWxnueahOaWh+aho+WvueixoVxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHsgTm9kZSB9IHN0YXJ0Q29udGFpbmVyIOW9k+WJjVJhbmdl55qE5byA5aeL6L6555WM55qE5a655Zmo6IqC54K5LCDlj6/ku6XmmK/kuIDkuKrlhYPntKDoioLngrnmiJbogIXmmK/mlofmnKzoioLngrlcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm9wZXJ0eSB7IE5vZGUgfSBzdGFydE9mZnNldCDlvZPliY1SYW5nZeeahOW8gOWni+i+ueeVjOWuueWZqOiKgueCueeahOWBj+enu+mHjywg5aaC5p6c5piv5YWD57Sg6IqC54K577yMXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6K+l5YC85bCx5pivY2hpbGROb2Rlc+S4reeahOesrOWHoOS4quiKgueCue+8jCDlpoLmnpzmmK/mlofmnKzoioLngrnlsLHmmK/mlofmnKzlhoXlrrnnmoTnrKzlh6DkuKrlrZfnrKZcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm9wZXJ0eSB7IE5vZGUgfSBlbmRDb250YWluZXIg5b2T5YmNUmFuZ2XnmoTnu5PmnZ/ovrnnlYznmoTlrrnlmajoioLngrksIOWPr+S7peaYr+S4gOS4quWFg+e0oOiKgueCueaIluiAheaYr+aWh+acrOiKgueCuVxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHsgTm9kZSB9IGVuZE9mZnNldCDlvZPliY1SYW5nZeeahOe7k+adn+i+ueeVjOWuueWZqOiKgueCueeahOWBj+enu+mHjywg5aaC5p6c5piv5YWD57Sg6IqC54K577yMXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6K+l5YC85bCx5pivY2hpbGROb2Rlc+S4reeahOesrOWHoOS4quiKgueCue+8jCDlpoLmnpzmmK/mlofmnKzoioLngrnlsLHmmK/mlofmnKzlhoXlrrnnmoTnrKzlh6DkuKrlrZfnrKZcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBwcm9wZXJ0eSB7IEJvb2xlYW4gfSBjb2xsYXBzZWQg5b2T5YmNUmFuZ2XmmK/lkKbpl63lkIhcbiAgICAgICAgICogQGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKiBAcmVtaW5kIFJhbmdl5piv6Zet5ZCI55qE5pe25YCZ77yMIHN0YXJ0Q29udGFpbmVyID09PSBlbmRDb250YWluZXIgJiYgc3RhcnRPZmZzZXQgPT09IGVuZE9mZnNldFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IHsgRG9jdW1lbnQgfSBkb2N1bWVudCDlvZPliY1SYW5nZeaJgOWxnueahERvY3VtZW505a+56LGhXG4gICAgICAgICAqIEByZW1pbmQg5LiN5ZCMcmFuZ2XnmoTnmoRkb2N1bWVudOWxnuaAp+WPr+S7peaYr+S4jeWQjOeahFxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIFJhbmdlID0gKGRvbS5SYW5nZSA9IGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgIG1lLnN0YXJ0Q29udGFpbmVyID0gbWUuc3RhcnRPZmZzZXQgPSBtZS5lbmRDb250YWluZXIgPSBtZS5lbmRPZmZzZXQgPSBudWxsO1xuICAgICAgICAgICAgbWUuZG9jdW1lbnQgPSBkb2N1bWVudDtcbiAgICAgICAgICAgIG1lLmNvbGxhcHNlZCA9IHRydWU7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDliKDpmaRmaWxsRGF0YVxuICAgICAgICAgKiBAcGFyYW0gZG9jXG4gICAgICAgICAqIEBwYXJhbSBleGNsdWRlTm9kZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlRmlsbERhdGEoZG9jLCBleGNsdWRlTm9kZSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoZmlsbERhdGEgJiYgZG9tVXRpbHMuaW5Eb2MoZmlsbERhdGEsIGRvYykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWxsRGF0YS5ub2RlVmFsdWUucmVwbGFjZShmaWxsQ2hhclJlZywgJycpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBmaWxsRGF0YS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGZpbGxEYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNFbXB0eUlubGluZUVsZW1lbnQodG1wTm9kZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3NhZmFyaeeahGNvbnRhaW5z5pyJYnVnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGJyb3dzZXIuc2FmYXJpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gIShkb21VdGlscy5nZXRQb3NpdGlvbih0bXBOb2RlLCBleGNsdWRlTm9kZSkgJiBkb21VdGlscy5QT1NJVElPTl9DT05UQUlOUylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAhdG1wTm9kZS5jb250YWlucyhleGNsdWRlTm9kZSkpXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsRGF0YSA9IHRtcE5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IGZpbGxEYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsbERhdGEubm9kZVZhbHVlID0gZmlsbERhdGEubm9kZVZhbHVlLnJlcGxhY2UoZmlsbENoYXJSZWcsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogQHBhcmFtIG5vZGVcbiAgICAgICAgICogQHBhcmFtIGRpclxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gbWVyZ2VTaWJsaW5nKG5vZGUsIGRpcikge1xuICAgICAgICAgICAgdmFyIHRtcE5vZGU7XG4gICAgICAgICAgICBub2RlID0gbm9kZVtkaXJdO1xuICAgICAgICAgICAgd2hpbGUgKG5vZGUgJiYgZG9tVXRpbHMuaXNGaWxsQ2hhcihub2RlKSkge1xuICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBub2RlW2Rpcl07XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5vZGUpO1xuICAgICAgICAgICAgICAgIG5vZGUgPSB0bXBOb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgUmFuZ2UucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlhYvpmobpgInljLrnmoTlhoXlrrnliLDkuIDkuKpEb2N1bWVudEZyYWdtZW506YeMXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGNsb25lQ29udGVudHNcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBEb2N1bWVudEZyYWdtZW50IHwgTlVMTCB9IOWmguaenOmAieWMuuaYr+mXreWQiOeahOWwhui/lOWbnm51bGzvvIwg5ZCm5YiZ77yMIOi/lOWbnuWMheWQq+aJgGNsb25l5YaF5a6555qERG9jdW1lbnRGcmFnbWVudOWFg+e0oFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDxib2R5PlxuICAgICAgICAgICAgICogICAgICA8IS0tIOS4reaLrOWPt+ihqOekuumAieWMuiAtLT5cbiAgICAgICAgICAgICAqICAgICAgPGI+eDxpPnhbeDwvaT54eF14PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgPHNjcmlwdD5cbiAgICAgICAgICAgICAqICAgICAgICAgIC8vcmFuZ2XmmK/lt7LpgInkuK3nmoTpgInljLpcbiAgICAgICAgICAgICAqICAgICAgICAgIHZhciBmcmFnbWVudCA9IHJhbmdlLmNsb25lQ29udGVudHMoKSxcbiAgICAgICAgICAgICAqICAgICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKCBmcmFnbWVudCApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgICAgIC8vb3V0cHV0OiA8aT54PC9pPnh4XG4gICAgICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZyggbm9kZS5pbm5lckhUTUwgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNsb25lQ29udGVudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsYXBzZWQgPyBudWxsIDogZXhlY0NvbnRlbnRzQWN0aW9uKHRoaXMsIDApO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDliKDpmaTlvZPliY3pgInljLrojIPlm7TkuK3nmoTmiYDmnInlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgZGVsZXRlQ29udGVudHNcbiAgICAgICAgICAgICAqIEByZW1pbmQg5omn6KGM5a6M6K+l5pON5L2c5ZCO77yMIOW9k+WJjVJhbmdl5a+56LGh5Y+Y5oiQ5LqG6Zet5ZCI54q25oCBXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmN5pON5L2c55qEUmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8Ym9keT5cbiAgICAgICAgICAgICAqICAgICAgPCEtLSDkuK3mi6zlj7fooajnpLrpgInljLogLS0+XG4gICAgICAgICAgICAgKiAgICAgIDxiPng8aT54W3g8L2k+eHhdeDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL3Jhbmdl5piv5bey6YCJ5Lit55qE6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgICAgICByYW5nZS5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgICAgIC8v56uW57q/6KGo56S66Zet5ZCI5ZCO55qE6YCJ5Yy65L2N572uXG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogPGI+eDxpPng8L2k+fHg8L2I+XG4gICAgICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZyggZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgICAvL+atpOaXtu+8jCByYW5nZeeahOWQhOmhueWxnuaAp+S4ulxuICAgICAgICAgICAgICogICAgICAgICAgLy9vdXRwdXQ6IEJcbiAgICAgICAgICAgICAqICAgICAgICAgIGNvbnNvbGUubG9nKCByYW5nZS5zdGFydENvbnRhaW5lci50YWdOYW1lICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogMlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLnN0YXJ0T2Zmc2V0ICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogQlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLmVuZENvbnRhaW5lci50YWdOYW1lICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogMlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLmVuZE9mZnNldCApO1xuICAgICAgICAgICAgICogICAgICAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICAgICAqICAgICAgICAgIGNvbnNvbGUubG9nKCByYW5nZS5jb2xsYXBzZWQgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGRlbGV0ZUNvbnRlbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHR4dDtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb250ZW50c0FjdGlvbih0aGlzLCAxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIud2Via2l0KSB7XG4gICAgICAgICAgICAgICAgICAgIHR4dCA9IHRoaXMuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eHQubm9kZVR5cGUgPT0gMyAmJiAhdHh0Lm5vZGVWYWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUodHh0KS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0eHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlsIblvZPliY3pgInljLrnmoTlhoXlrrnmj5Dlj5bliLDkuIDkuKpEb2N1bWVudEZyYWdtZW506YeMXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGV4dHJhY3RDb250ZW50c1xuICAgICAgICAgICAgICogQHJlbWluZCDmiafooYzor6Xmk43kvZzlkI7vvIwg6YCJ5Yy65bCG5Y+Y5oiQ6Zet5ZCI54q25oCBXG4gICAgICAgICAgICAgKiBAd2FybmluZyDmiafooYzor6Xmk43kvZzlkI7vvIwg5Y6f5p2l6YCJ5Yy65omA6YCJ5Lit55qE5YaF5a655bCG5LuOZG9t5qCR5LiK5Yml56a75Ye65p2lXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgRG9jdW1lbnRGcmFnbWVudCB9IOi/lOWbnuWMheWQq+aJgOaPkOWPluWGheWuueeahERvY3VtZW50RnJhZ21lbnTlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8Ym9keT5cbiAgICAgICAgICAgICAqICAgICAgPCEtLSDkuK3mi6zlj7fooajnpLrpgInljLogLS0+XG4gICAgICAgICAgICAgKiAgICAgIDxiPng8aT54W3g8L2k+eHhdeDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL3Jhbmdl5piv5bey6YCJ5Lit55qE6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgICAgICB2YXIgZnJhZ21lbnQgPSByYW5nZS5leHRyYWN0Q29udGVudHMoKSxcbiAgICAgICAgICAgICAqICAgICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoIGZyYWdtZW50ICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgICAgICAgLy/nq5bnur/ooajnpLrpl63lkIjlkI7nmoTpgInljLrkvY3nva5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogPGI+eDxpPng8L2k+fHg8L2I+XG4gICAgICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZyggZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgKTtcbiAgICAgICAgICAgICAqICAgICAgICAgIC8vb3V0cHV0OiA8aT54PC9pPnh4XG4gICAgICAgICAgICAgKiAgICAgICAgICBjb25zb2xlLmxvZyggbm9kZS5pbm5lckhUTUwgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgICAvL+atpOaXtu+8jCByYW5nZeeahOWQhOmhueWxnuaAp+S4ulxuICAgICAgICAgICAgICogICAgICAgICAgLy9vdXRwdXQ6IEJcbiAgICAgICAgICAgICAqICAgICAgICAgIGNvbnNvbGUubG9nKCByYW5nZS5zdGFydENvbnRhaW5lci50YWdOYW1lICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogMlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLnN0YXJ0T2Zmc2V0ICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogQlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLmVuZENvbnRhaW5lci50YWdOYW1lICk7XG4gICAgICAgICAgICAgKiAgICAgICAgICAvL291dHB1dDogMlxuICAgICAgICAgICAgICogICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLmVuZE9mZnNldCApO1xuICAgICAgICAgICAgICogICAgICAgICAgLy9vdXRwdXQ6IHRydWVcbiAgICAgICAgICAgICAqICAgICAgICAgIGNvbnNvbGUubG9nKCByYW5nZS5jb2xsYXBzZWQgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBleHRyYWN0Q29udGVudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsYXBzZWQgPyBudWxsIDogZXhlY0NvbnRlbnRzQWN0aW9uKHRoaXMsIDIpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva5SYW5nZeeahOW8gOWni+WuueWZqOiKgueCueWSjOWBj+enu+mHj1xuICAgICAgICAgICAgICogQG1ldGhvZCAgc2V0U3RhcnRcbiAgICAgICAgICAgICAqIEByZW1pbmQg5aaC5p6c57uZ5a6a55qE6IqC54K55piv5YWD57Sg6IqC54K577yM6YKj5LmIb2Zmc2V05oyH55qE5piv5YW25a2Q5YWD57Sg5Lit57Si5byV5Li6b2Zmc2V055qE5YWD57Sg77yMXG4gICAgICAgICAgICAgKiAgICAgICAgICDlpoLmnpzmmK/mlofmnKzoioLngrnvvIzpgqPkuYhvZmZzZXTmjIfnmoTmmK/lhbbmlofmnKzlhoXlrrnnmoTnrKxvZmZzZXTkuKrlrZfnrKZcbiAgICAgICAgICAgICAqIEByZW1pbmQg5aaC5p6c5o+Q5L6b55qE5a655Zmo6IqC54K55piv5LiA5Liq5LiN6IO95YyF5ZCr5a2Q5YWD57Sg55qE6IqC54K577yMIOWImeivpemAieWMuueahOW8gOWni+WuueWZqOWwhuiiq+iuvue9rlxuICAgICAgICAgICAgICogICAgICAgICAg5Li66K+l6IqC54K555qE54i26IqC54K577yMIOatpOaXtu+8jCDlhbbot53nprvlvIDlp4vlrrnlmajnmoTlgY/np7vph4/kuZ/lj5jmiJDkuobor6XoioLngrnlnKjlhbbniLboioLngrlcbiAgICAgICAgICAgICAqICAgICAgICAgIOS4reeahOe0ouW8lVxuICAgICAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg5bCG6KKr6K6+5Li65b2T5YmN6YCJ5Yy65byA5aeL6L6555WM5a655Zmo55qE6IqC54K55a+56LGhXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBpbnQgfSBvZmZzZXQg6YCJ5Yy655qE5byA5aeL5L2N572u5YGP56e76YePXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8IS0tIOmAieWMuiAtLT5cbiAgICAgICAgICAgICAqIDxiPnh4eDxpPng8c3Bhbj54eDwvc3Bhbj54eDxlbT54eDwvZW0+eHh4PC9pPlt4eHhdPC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pON5L2cXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2Uuc2V0U3RhcnQoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaVwiKVswXSwgMSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+atpOaXtu+8jCDpgInljLrlj5jmiJDkuoZcbiAgICAgICAgICAgICAqICAgICAvLzxiPnh4eDxpPnhbPHNwYW4+eHg8L3NwYW4+eHg8ZW0+eHg8L2VtPnh4eDwvaT54eHhdPC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogPCEtLSDpgInljLogLS0+XG4gICAgICAgICAgICAgKiA8Yj54eHg8aW1nPlt4eF14PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pON5L2cXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2Uuc2V0U3RhcnQoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW1nXCIpWzBdLCAzICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5q2k5pe277yMIOmAieWMuuWPmOaIkOS6hlxuICAgICAgICAgICAgICogICAgIC8vPGI+eHh4WzxpbWc+eHhdeDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRTdGFydDogZnVuY3Rpb24gKG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZXRFbmRQb2ludCh0cnVlLCBub2RlLCBvZmZzZXQsIHRoaXMpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva5SYW5nZeeahOe7k+adn+WuueWZqOWSjOWBj+enu+mHj1xuICAgICAgICAgICAgICogQG1ldGhvZCAgc2V0RW5kXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDkvZzkuLrlvZPliY3pgInljLrnu5PmnZ/ovrnnlYzlrrnlmajnmoToioLngrnlr7nosaFcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IGludCB9IG9mZnNldCDnu5PmnZ/ovrnnlYznmoTlgY/np7vph49cbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOnNldFN0YXJ0KE5vZGUsaW50KVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldEVuZDogZnVuY3Rpb24gKG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZXRFbmRQb2ludChmYWxzZSwgbm9kZSwgb2Zmc2V0LCB0aGlzKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5bCGUmFuZ2XlvIDlp4vkvY3nva7orr7nva7liLBub2Rl6IqC54K55LmL5ZCOXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBzZXRTdGFydEFmdGVyXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOivpeaTjeS9nOWwhuS8muaKiue7meWumuiKgueCueeahOeItuiKgueCueS9nOS4unJhbmdl55qE5byA5aeL5a655Zmo77yMIOS4lOWBj+enu+mHj+aYr+ivpeiKgueCueWcqOWFtueItuiKgueCueS4reeahOS9jee9rue0ouW8lSsxXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDpgInljLrnmoTlvIDlp4vovrnnlYzlsIbntKfmjqXnnYDor6XoioLngrnkuYvlkI5cbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDwhLS0g6YCJ5Yy656S65L6LIC0tPlxuICAgICAgICAgICAgICogPGI+eHg8aT54eHg8L2k+PHNwYW4+eHhbeDwvc3Bhbj54eHhdPC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pON5L2cXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlciggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpXCIpWzBdICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v57uT5p6c6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgLy88Yj54eDxpPnh4eDwvaT5bPHNwYW4+eHh4PC9zcGFuPnh4eF08L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0U3RhcnRBZnRlcjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXRTdGFydChub2RlLnBhcmVudE5vZGUsIGRvbVV0aWxzLmdldE5vZGVJbmRleChub2RlKSArIDEpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlsIZSYW5nZeW8gOWni+S9jee9ruiuvue9ruWIsG5vZGXoioLngrnkuYvliY1cbiAgICAgICAgICAgICAqIEBtZXRob2QgIHNldFN0YXJ0QmVmb3JlXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOivpeaTjeS9nOWwhuS8muaKiue7meWumuiKgueCueeahOeItuiKgueCueS9nOS4unJhbmdl55qE5byA5aeL5a655Zmo77yMIOS4lOWBj+enu+mHj+aYr+ivpeiKgueCueWcqOWFtueItuiKgueCueS4reeahOS9jee9rue0ouW8lVxuICAgICAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg5paw55qE6YCJ5Yy65byA5aeL5L2N572u5Zyo6K+l6IqC54K55LmL5YmNXG4gICAgICAgICAgICAgKiBAc2VlIFVFLmRvbS5SYW5nZTpzZXRTdGFydEFmdGVyKE5vZGUpXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0U3RhcnRCZWZvcmU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0U3RhcnQobm9kZS5wYXJlbnROb2RlLCBkb21VdGlscy5nZXROb2RlSW5kZXgobm9kZSkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlsIZSYW5nZee7k+adn+S9jee9ruiuvue9ruWIsG5vZGXoioLngrnkuYvlkI5cbiAgICAgICAgICAgICAqIEBtZXRob2QgIHNldEVuZEFmdGVyXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOivpeaTjeS9nOWwhuS8muaKiue7meWumuiKgueCueeahOeItuiKgueCueS9nOS4unJhbmdl55qE57uT5p2f5a655Zmo77yMIOS4lOWBj+enu+mHj+aYr+ivpeiKgueCueWcqOWFtueItuiKgueCueS4reeahOS9jee9rue0ouW8lSsxXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDnm67moIfoioLngrlcbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOnNldFN0YXJ0QWZ0ZXIoTm9kZSlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDwhLS0g6YCJ5Yy656S65L6LIC0tPlxuICAgICAgICAgICAgICogPGI+W3h4PGk+eHh4PC9pPjxzcGFuPnh4XXg8L3NwYW4+eHh4PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pON5L2cXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlciggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzcGFuXCIpWzBdICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v57uT5p6c6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgLy88Yj5beHg8aT54eHg8L2k+PHNwYW4+eHh4PC9zcGFuPl14eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0RW5kQWZ0ZXI6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0RW5kKG5vZGUucGFyZW50Tm9kZSwgZG9tVXRpbHMuZ2V0Tm9kZUluZGV4KG5vZGUpICsgMSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOWwhlJhbmdl57uT5p2f5L2N572u6K6+572u5Yiwbm9kZeiKgueCueS5i+WJjVxuICAgICAgICAgICAgICogQG1ldGhvZCAgc2V0RW5kQmVmb3JlXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOivpeaTjeS9nOWwhuS8muaKiue7meWumuiKgueCueeahOeItuiKgueCueS9nOS4unJhbmdl55qE57uT5p2f5a655Zmo77yMIOS4lOWBj+enu+mHj+aYr+ivpeiKgueCueWcqOWFtueItuiKgueCueS4reeahOS9jee9rue0ouW8lVxuICAgICAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg55uu5qCH6IqC54K5XG4gICAgICAgICAgICAgKiBAc2VlIFVFLmRvbS5SYW5nZTpzZXRFbmRBZnRlcihOb2RlKVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldEVuZEJlZm9yZTogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXRFbmQobm9kZS5wYXJlbnROb2RlLCBkb21VdGlscy5nZXROb2RlSW5kZXgobm9kZSkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva5SYW5nZeeahOW8gOWni+S9jee9ruWIsG5vZGXoioLngrnlhoXnmoTnrKzkuIDkuKrlrZDoioLngrnkuYvliY1cbiAgICAgICAgICAgICAqIEBtZXRob2QgIHNldFN0YXJ0QXRGaXJzdFxuICAgICAgICAgICAgICogQHJlbWluZCDpgInljLrnmoTlvIDlp4vlrrnlmajlsIblj5jmiJDnu5nlrprnmoToioLngrnvvIwg5LiU5YGP56e76YeP5Li6MFxuICAgICAgICAgICAgICogQHJlbWluZCDlpoLmnpznu5nlrprnmoToioLngrnmmK/lhYPntKDoioLngrnvvIwg5YiZ6K+l6IqC54K55b+F6aG75piv5YWB6K645YyF5ZCr5a2Q6IqC54K555qE5YWD57Sg44CCXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDnm67moIfoioLngrlcbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOnNldFN0YXJ0QmVmb3JlKE5vZGUpXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8IS0tIOmAieWMuuekuuS+iyAtLT5cbiAgICAgICAgICAgICAqIDxiPnh4PGk+eHh4PC9pPjxzcGFuPlt4eF14PC9zcGFuPnh4eDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+aJp+ihjOaTjeS9nFxuICAgICAgICAgICAgICogICAgIHJhbmdlLnNldFN0YXJ0QXRGaXJzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpXCIpWzBdICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v57uT5p6c6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgLy88Yj54eDxpPlt4eHg8L2k+PHNwYW4+eHhdeDwvc3Bhbj54eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0U3RhcnRBdEZpcnN0OiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNldFN0YXJ0KG5vZGUsIDApO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva5SYW5nZeeahOW8gOWni+S9jee9ruWIsG5vZGXoioLngrnlhoXnmoTmnIDlkI7kuIDkuKroioLngrnkuYvlkI5cbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0U3RhcnRBdExhc3RcbiAgICAgICAgICAgICAqIEByZW1pbmQg6YCJ5Yy655qE5byA5aeL5a655Zmo5bCG5Y+Y5oiQ57uZ5a6a55qE6IqC54K577yMIOS4lOWBj+enu+mHj+S4uuivpeiKgueCueeahOWtkOiKgueCueaVsFxuICAgICAgICAgICAgICogQHJlbWluZCDlpoLmnpznu5nlrprnmoToioLngrnmmK/lhYPntKDoioLngrnvvIwg5YiZ6K+l6IqC54K55b+F6aG75piv5YWB6K645YyF5ZCr5a2Q6IqC54K555qE5YWD57Sg44CCXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDnm67moIfoioLngrlcbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOnNldFN0YXJ0QXRGaXJzdChOb2RlKVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldFN0YXJ0QXRMYXN0OiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNldFN0YXJ0KG5vZGUsIG5vZGUubm9kZVR5cGUgPT0gMyA/IG5vZGUubm9kZVZhbHVlLmxlbmd0aCA6IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGgpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva5SYW5nZeeahOe7k+adn+S9jee9ruWIsG5vZGXoioLngrnlhoXnmoTnrKzkuIDkuKroioLngrnkuYvliY1cbiAgICAgICAgICAgICAqIEBtZXRob2QgIHNldEVuZEF0Rmlyc3RcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOebruagh+iKgueCuVxuICAgICAgICAgICAgICogQHJlbWluZCDpgInljLrnmoTnu5PmnZ/lrrnlmajlsIblj5jmiJDnu5nlrprnmoToioLngrnvvIwg5LiU5YGP56e76YeP5Li6MFxuICAgICAgICAgICAgICogQHJlbWluZCBub2Rl5b+F6aG75piv5LiA5Liq5YWD57Sg6IqC54K577yMIOS4lOW/hemhu+aYr+WFgeiuuOWMheWQq+WtkOiKgueCueeahOWFg+e0oOOAglxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6c2V0U3RhcnRBdEZpcnN0KE5vZGUpXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0RW5kQXRGaXJzdDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXRFbmQobm9kZSwgMCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuvue9rlJhbmdl55qE57uT5p2f5L2N572u5Yiwbm9kZeiKgueCueWGheeahOacgOWQjuS4gOS4quiKgueCueS5i+WQjlxuICAgICAgICAgICAgICogQG1ldGhvZCAgc2V0RW5kQXRMYXN0XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBOb2RlIH0gbm9kZSDnm67moIfoioLngrlcbiAgICAgICAgICAgICAqIEByZW1pbmQg6YCJ5Yy655qE57uT5p2f5a655Zmo5bCG5Y+Y5oiQ57uZ5a6a55qE6IqC54K577yMIOS4lOWBj+enu+mHj+S4uuivpeiKgueCueeahOWtkOiKgueCueaVsOmHj1xuICAgICAgICAgICAgICogQHJlbWluZCBub2Rl5b+F6aG75piv5LiA5Liq5YWD57Sg6IqC54K577yMIOS4lOW/hemhu+aYr+WFgeiuuOWMheWQq+WtkOiKgueCueeahOWFg+e0oOOAglxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6c2V0U3RhcnRBdEZpcnN0KE5vZGUpXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0RW5kQXRMYXN0OiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNldEVuZChub2RlLCBub2RlLm5vZGVUeXBlID09IDMgPyBub2RlLm5vZGVWYWx1ZS5sZW5ndGggOiBub2RlLmNoaWxkTm9kZXMubGVuZ3RoKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6YCJ5Lit57uZ5a6a6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kICBzZWxlY3ROb2RlXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOatpOaXtu+8jCDpgInljLrnmoTlvIDlp4vlrrnlmajlkoznu5PmnZ/lrrnlmajpg73mmK/or6XoioLngrnnmoTniLboioLngrnvvIwg5YW2c3RhcnRPZmZzZXTmmK/or6XoioLngrnlnKjniLboioLngrnkuK3nmoTkvY3nva7ntKLlvJXvvIxcbiAgICAgICAgICAgICAqICAgICAgICAgIOiAjGVuZE9mZnNldOS4unN0YXJ0T2Zmc2V0KzFcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOmcgOimgemAieS4reeahOiKgueCuVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGh77yM5q2k5pe255qEcmFuZ2Xku4XljIXlkKvlvZPliY3nu5nlrprnmoToioLngrnlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8IS0tIOmAieWMuuekuuS+iyAtLT5cbiAgICAgICAgICAgICAqIDxiPnh4PGk+eHh4PC9pPjxzcGFuPlt4eF14PC9zcGFuPnh4eDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+aJp+ihjOaTjeS9nFxuICAgICAgICAgICAgICogICAgIHJhbmdlLnNlbGVjdE5vZGUoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaVwiKVswXSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+e7k+aenOmAieWMulxuICAgICAgICAgICAgICogICAgIC8vPGI+eHhbPGk+eHh4PC9pPl08c3Bhbj54eHg8L3NwYW4+eHh4PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNlbGVjdE5vZGU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0U3RhcnRCZWZvcmUobm9kZSkuc2V0RW5kQWZ0ZXIobm9kZSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOmAieS4ree7meWumuiKgueCueWGhemDqOeahOaJgOacieiKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCAgc2VsZWN0Tm9kZUNvbnRlbnRzXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOatpOaXtu+8jCDpgInljLrnmoTlvIDlp4vlrrnlmajlkoznu5PmnZ/lrrnlmajpg73mmK/or6XoioLngrnvvIwg5YW2c3RhcnRPZmZzZXTkuLow77yMXG4gICAgICAgICAgICAgKiAgICAgICAgICDogIxlbmRPZmZzZXTmmK/or6XoioLngrnnmoTlrZDoioLngrnmlbDjgIJcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE5vZGUgfSBub2RlIOebruagh+iKgueCue+8jCDlvZPliY1yYW5nZeWwhuWMheWQq+ivpeiKgueCueWGheeahOaJgOacieiKgueCuVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGh77yMIOatpOaXtnJhbmdl5LuF5YyF5ZCr57uZ5a6a6IqC54K555qE5omA5pyJ5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogPCEtLSDpgInljLrnpLrkvosgLS0+XG4gICAgICAgICAgICAgKiA8Yj54eDxpPnh4eDwvaT48c3Bhbj5beHhdeDwvc3Bhbj54eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/miafooYzmk43kvZxcbiAgICAgICAgICAgICAqICAgICByYW5nZS5zZWxlY3ROb2RlKCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJcIilbMF0gKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/nu5PmnpzpgInljLpcbiAgICAgICAgICAgICAqICAgICAvLzxiPlt4eDxpPnh4eDwvaT48c3Bhbj54eHg8L3NwYW4+eHh4XTwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZWxlY3ROb2RlQ29udGVudHM6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0U3RhcnQobm9kZSwgMCkuc2V0RW5kQXRMYXN0KG5vZGUpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBjbG9uZeW9k+WJjVJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBjbG9uZVJhbmdlXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOi/lOWbnueahHJhbmdl5piv5LiA5Liq5YWo5paw55qEcmFuZ2Xlr7nosaHvvIwg5YW25YaF6YOo5omA5pyJ5bGe5oCn5LiO5b2T5YmN6KKrY2xvbmXnmoRyYW5nZeebuOWQjOOAglxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGh55qE5LiA5Liq5Ymv5pysXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNsb25lUmFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmFuZ2UobWUuZG9jdW1lbnQpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRTdGFydChtZS5zdGFydENvbnRhaW5lciwgbWUuc3RhcnRPZmZzZXQpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRFbmQobWUuZW5kQ29udGFpbmVyLCBtZS5lbmRPZmZzZXQpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlkJHlvZPliY3pgInljLrnmoTnu5PmnZ/lpITpl63lkIjpgInljLpcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGNvbGxhcHNlXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8IS0tIOmAieWMuuekuuS+iyAtLT5cbiAgICAgICAgICAgICAqIDxiPnh4PGk+eHh4PC9pPjxzcGFuPlt4eF14PC9zcGFuPnh4eDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+aJp+ihjOaTjeS9nFxuICAgICAgICAgICAgICogICAgIHJhbmdlLmNvbGxhcHNlKCk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v57uT5p6c6YCJ5Yy6XG4gICAgICAgICAgICAgKiAgICAgLy/igJx84oCd6KGo56S66YCJ5Yy65bey6Zet5ZCIXG4gICAgICAgICAgICAgKiAgICAgLy88Yj54eDxpPnh4eDwvaT48c3Bhbj54eHx4PC9zcGFuPnh4eDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6Zet5ZCI5b2T5YmN6YCJ5Yy677yM5qC55o2u57uZ5a6a55qEdG9TdGFydOWPguaVsOmhueWGs+WumuaYr+WQkeW9k+WJjemAieWMuuW8gOWni+WkhOmXreWQiOi/mOaYr+WQkee7k+adn+WkhOmXreWQiO+8jFxuICAgICAgICAgICAgICog5aaC5p6cdG9TdGFydOeahOWAvOS4unRydWXvvIzliJnlkJHlvIDlp4vkvY3nva7pl63lkIjvvIwg5Y+N5LmL77yM5ZCR57uT5p2f5L2N572u6Zet5ZCI44CCXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBjb2xsYXBzZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IHRvU3RhcnQg5piv5ZCm5ZCR6YCJ5Yy65byA5aeL5aSE6Zet5ZCIXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaHvvIzmraTml7ZyYW5nZeWvueixoeWkhOS6jumXreWQiOeKtuaAgVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6Y29sbGFwc2UoKVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDwhLS0g6YCJ5Yy656S65L6LIC0tPlxuICAgICAgICAgICAgICogPGI+eHg8aT54eHg8L2k+PHNwYW4+W3h4XXg8L3NwYW4+eHh4PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pON5L2cXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2UuY29sbGFwc2UoIHRydWUgKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/nu5PmnpzpgInljLpcbiAgICAgICAgICAgICAqICAgICAvL+KAnHzigJ3ooajnpLrpgInljLrlt7Lpl63lkIhcbiAgICAgICAgICAgICAqICAgICAvLzxiPnh4PGk+eHh4PC9pPjxzcGFuPnx4eHg8L3NwYW4+eHh4PC9iPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNvbGxhcHNlOiBmdW5jdGlvbiAodG9TdGFydCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKHRvU3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuZW5kQ29udGFpbmVyID0gbWUuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgIG1lLmVuZE9mZnNldCA9IG1lLnN0YXJ0T2Zmc2V0O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLnN0YXJ0Q29udGFpbmVyID0gbWUuZW5kQ29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICBtZS5zdGFydE9mZnNldCA9IG1lLmVuZE9mZnNldDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWUuY29sbGFwc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWU7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiwg+aVtHJhbmdl55qE5byA5aeL5L2N572u5ZKM57uT5p2f5L2N572u77yM5L2/5YW2XCLmlLbnvKlcIuWIsOacgOWwj+eahOS9jee9rlxuICAgICAgICAgICAgICogQG1ldGhvZCAgc2hyaW5rQm91bmRhcnlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDxzcGFuPnh4PGI+eHhbPC9iPnh4eHh4XTwvc3Bhbj4gPT4gPHNwYW4+eHg8Yj54eDwvYj5beHh4eHhdPC9zcGFuPlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDwhLS0g6YCJ5Yy656S65L6LIC0tPlxuICAgICAgICAgICAgICogPGI+eFt4eDwvYj48aT5deHh4PC9pPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5omn6KGM5pS257ypXG4gICAgICAgICAgICAgKiAgICAgcmFuZ2Uuc2hyaW5rQm91bmRhcnkoKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/nu5PmnpzpgInljLpcbiAgICAgICAgICAgICAqICAgICAvLzxiPnhbeHhdPC9iPjxpPnh4eDwvaT5cbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIFs8Yj48aT54eHh4PC9pPnh4eHh4eHg8L2I+XSA9PiA8Yj48aT5beHh4eDwvaT54eHh4eHh4XTwvYj5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6LCD5pW0cmFuZ2XnmoTlvIDlp4vkvY3nva7lkoznu5PmnZ/kvY3nva7vvIzkvb/lhbZcIuaUtue8qVwi5Yiw5pyA5bCP55qE5L2N572u77yMXG4gICAgICAgICAgICAgKiDlpoLmnpxpZ25vcmVFbmTnmoTlgLzkuLp0cnVl77yM5YiZ5b+955Wl5a+557uT5p2f5L2N572u55qE6LCD5pW0XG4gICAgICAgICAgICAgKiBAbWV0aG9kICBzaHJpbmtCb3VuZGFyeVxuICAgICAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGlnbm9yZUVuZCDmmK/lkKblv73nlaXlr7nnu5PmnZ/kvY3nva7nmoTosIPmlbRcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uZG9tVXRpbHMuUmFuZ2U6c2hyaW5rQm91bmRhcnkoKVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzaHJpbmtCb3VuZGFyeTogZnVuY3Rpb24gKGlnbm9yZUVuZCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgICAgICBjb2xsYXBzZWQgPSBtZS5jb2xsYXBzZWQ7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2sobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5ub2RlVHlwZSA9PSAxICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUobm9kZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICFkdGQuJG5vbkNoaWxkW25vZGUudGFnTmFtZV1cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgd2hpbGUgKFxuICAgICAgICAgICAgICAgICAgICBtZS5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAxICYmIC8v5pivZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAoY2hpbGQgPSBtZS5zdGFydENvbnRhaW5lci5jaGlsZE5vZGVzW21lLnN0YXJ0T2Zmc2V0XSkgJiYgLy/lrZDoioLngrnkuZ/mmK9lbGVtZW50XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrKGNoaWxkKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBtZS5zZXRTdGFydChjaGlsZCwgMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1lLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWlnbm9yZUVuZCkge1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5lbmRDb250YWluZXIubm9kZVR5cGUgPT0gMSAmJiAvL+aYr2VsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVuZE9mZnNldCA+IDAgJiYgLy/lpoLmnpzmmK/nqbrlhYPntKDlsLHpgIDlh7ogZW5kT2Zmc2V0PTDpgqPkuYhlbmRPZmZzdC0x5Li66LSf5YC877yMY2hpbGROb2Rlc1tlbmRPZmZzZXRd5oql6ZSZXG4gICAgICAgICAgICAgICAgICAgICAgICAoY2hpbGQgPSBtZS5lbmRDb250YWluZXIuY2hpbGROb2Rlc1ttZS5lbmRPZmZzZXQgLSAxXSkgJiYgLy/lrZDoioLngrnkuZ/mmK9lbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVjayhjaGlsZClcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZXRFbmQoY2hpbGQsIGNoaWxkLmNoaWxkTm9kZXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbWU7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluemu+W9k+WJjemAieWMuuWGheWMheWQq+eahOaJgOacieiKgueCueacgOi/keeahOWFrOWFseelluWFiOiKgueCue+8jFxuICAgICAgICAgICAgICogQG1ldGhvZCAgZ2V0Q29tbW9uQW5jZXN0b3JcbiAgICAgICAgICAgICAqIEByZW1pbmQg6L+U5Zue55qE5YWs5YWx56WW5YWI6IqC54K55LiA5a6a5LiN5pivcmFuZ2Xoh6rouqvnmoTlrrnlmajoioLngrnvvIwg5L2G5pyJ5Y+v6IO95piv5LiA5Liq5paH5pys6IqC54K5XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgTm9kZSB9IOW9k+WJjXJhbmdl5a+56LGh5YaF5omA5pyJ6IqC54K555qE5YWs5YWx56WW5YWI6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogLy/pgInljLrnpLrkvotcbiAgICAgICAgICAgICAqIDxzcGFuPnh4eDxiPnhbeDxlbT54eF14PC9lbT54eHg8L2I+eHg8L3NwYW4+XG4gICAgICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICB2YXIgbm9kZSA9IHJhbmdlLmdldENvbW1vbkFuY2VzdG9yKCk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v5YWs5YWx56WW5YWI6IqC54K55piv77yaIGLoioLngrlcbiAgICAgICAgICAgICAqICAgICAvL+i+k+WHuu+8miBCXG4gICAgICAgICAgICAgKiAgICAgY29uc29sZS5sb2cobm9kZS50YWdOYW1lKTtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8L3NjcmlwdD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmN6YCJ5Yy65omA5YyF5ZCr55qE5omA5pyJ6IqC54K555qE5YWs5YWx56WW5YWI6IqC54K577yMIOWPr+S7peagueaNrue7meWumueahOWPguaVsCBpbmNsdWRlU2VsZiDlhrPlrprojrflj5bliLBcbiAgICAgICAgICAgICAqIOeahOWFrOWFseelluWFiOiKgueCueaYr+WQpuWPr+S7peaYr+W9k+WJjemAieWMuueahHN0YXJ0Q29udGFpbmVy5oiWZW5kQ29udGFpbmVy6IqC54K577yMIOWmguaenCBpbmNsdWRlU2VsZlxuICAgICAgICAgICAgICog55qE5Y+W5YC85Li6dHJ1Ze+8jCDliJnov5Tlm57nmoToioLngrnlj6/ku6XmmK/oh6rouqvnmoTlrrnlmajoioLngrnvvIwg5ZCm5YiZ77yMIOWImeS4jeiDveaYr+WuueWZqOiKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCAgZ2V0Q29tbW9uQW5jZXN0b3JcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpbmNsdWRlU2VsZiDmmK/lkKblhYHorrjojrflj5bliLDnmoTlhazlhbHnpZblhYjoioLngrnmmK/lvZPliY1yYW5nZeWvueixoeeahOWuueWZqOiKgueCuVxuICAgICAgICAgICAgICogQHJldHVybiB7IE5vZGUgfSDlvZPliY1yYW5nZeWvueixoeWGheaJgOacieiKgueCueeahOWFrOWFseelluWFiOiKgueCuVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6Z2V0Q29tbW9uQW5jZXN0b3IoKVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDxib2R5PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICA8IS0tIOmAieWMuuekuuS+iyAtLT5cbiAgICAgICAgICAgICAqICAgICA8Yj54eHg8aT54eHh4PHNwYW4+eHhbeDwvc3Bhbj54eF14PC9pPnh4eHh4eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgICAgICB2YXIgbm9kZSA9IHJhbmdlLmdldENvbW1vbkFuY2VzdG9yKCBmYWxzZSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgICAgLy/ov5nph4znmoTlhazlhbHnpZblhYjoioLngrnmmK9C6ICM5LiN5pivSe+8jCDmmK/lm6DkuLrlj4LmlbDpmZDliLbkuobojrflj5bliLDnmoToioLngrnkuI3og73mmK/lrrnlmajoioLngrlcbiAgICAgICAgICAgICAqICAgICAgICAgLy9vdXRwdXQ6IEJcbiAgICAgICAgICAgICAqICAgICAgICAgY29uc29sZS5sb2coIG5vZGUudGFnTmFtZSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICA8L3NjcmlwdD5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8L2JvZHk+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluW9k+WJjemAieWMuuaJgOWMheWQq+eahOaJgOacieiKgueCueeahOWFrOWFseelluWFiOiKgueCue+8jCDlj6/ku6XmoLnmja7nu5nlrprnmoTlj4LmlbAgaW5jbHVkZVNlbGYg5Yaz5a6a6I635Y+W5YiwXG4gICAgICAgICAgICAgKiDnmoTlhazlhbHnpZblhYjoioLngrnmmK/lkKblj6/ku6XmmK/lvZPliY3pgInljLrnmoRzdGFydENvbnRhaW5lcuaIlmVuZENvbnRhaW5lcuiKgueCue+8jCDlpoLmnpwgaW5jbHVkZVNlbGZcbiAgICAgICAgICAgICAqIOeahOWPluWAvOS4unRydWXvvIwg5YiZ6L+U5Zue55qE6IqC54K55Y+v5Lul5piv6Ieq6Lqr55qE5a655Zmo6IqC54K577yMIOWQpuWIme+8jCDliJnkuI3og73mmK/lrrnlmajoioLngrnvvJsg5ZCM5pe25Y+v5Lul5qC55o2uXG4gICAgICAgICAgICAgKiBpZ25vcmVUZXh0Tm9kZSDlj4LmlbDnmoTlj5blgLzlhrPlrprmmK/lkKblv73nlaXnsbvlnovkuLrmlofmnKzoioLngrnnmoTnpZblhYjoioLngrnjgIJcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGdldENvbW1vbkFuY2VzdG9yXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gaW5jbHVkZVNlbGYg5piv5ZCm5YWB6K646I635Y+W5Yiw55qE5YWs5YWx56WW5YWI6IqC54K55piv5b2T5YmNcmFuZ2Xlr7nosaHnmoTlrrnlmajoioLngrlcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpZ25vcmVUZXh0Tm9kZSDojrflj5bnpZblhYjoioLngrnnmoTov4fnqIvkuK3mmK/lkKblv73nlaXnsbvlnovkuLrmlofmnKzoioLngrnnmoTnpZblhYjoioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBOb2RlIH0g5b2T5YmNcmFuZ2Xlr7nosaHlhoXmiYDmnInoioLngrnnmoTlhazlhbHnpZblhYjoioLngrlcbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOmdldENvbW1vbkFuY2VzdG9yKClcbiAgICAgICAgICAgICAqIEBzZWUgVUUuZG9tLlJhbmdlOmdldENvbW1vbkFuY2VzdG9yKEJvb2xlYW4pXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogPGJvZHk+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDwhLS0g6YCJ5Yy656S65L6LIC0tPlxuICAgICAgICAgICAgICogICAgIDxiPnh4eDxpPnh4eHg8c3Bhbj54W3hdeDwvc3Bhbj54eHg8L2k+eHh4eHh4eDwvYj5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgPHNjcmlwdD5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgIHZhciBub2RlID0gcmFuZ2UuZ2V0Q29tbW9uQW5jZXN0b3IoIHRydWUsIGZhbHNlICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgICAgICAvL291dHB1dDogU1BBTlxuICAgICAgICAgICAgICogICAgICAgICBjb25zb2xlLmxvZyggbm9kZS50YWdOYW1lICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDwvYm9keT5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDb21tb25BbmNlc3RvcjogZnVuY3Rpb24gKGluY2x1ZGVTZWxmLCBpZ25vcmVUZXh0Tm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gbWUuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IG1lLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5jbHVkZVNlbGYgJiYgc2VsZWN0T25lTm9kZSh0aGlzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5jaGlsZE5vZGVzW21lLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydC5ub2RlVHlwZSA9PSAxKSByZXR1cm4gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy/lj6rmnInlnKjkuIrmnaXlsLHnm7jnrYnnmoTmg4XlhrXkuIvmiY3kvJrlh7rnjrDmmK/mlofmnKznmoTmg4XlhrVcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlnbm9yZVRleHROb2RlICYmIHN0YXJ0Lm5vZGVUeXBlID09IDMgPyBzdGFydC5wYXJlbnROb2RlIDogc3RhcnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5nZXRDb21tb25BbmNlc3RvcihzdGFydCwgZW5kKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6LCD5pW05b2T5YmNUmFuZ2XnmoTlvIDlp4vlkoznu5PmnZ/ovrnnlYzlrrnlmajvvIzlpoLmnpzmmK/lrrnlmajoioLngrnmmK/mlofmnKzoioLngrks5bCx6LCD5pW05Yiw5YyF5ZCr6K+l5paH5pys6IqC54K555qE54i26IqC54K55LiKXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHRyaW1Cb3VuZGFyeVxuICAgICAgICAgICAgICogQHJlbWluZCDor6Xmk43kvZzmnInlj6/og73kvJrlvJXotbfmlofmnKzoioLngrnooqvliIflvIBcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAvL+mAieWMuuekuuS+i1xuICAgICAgICAgICAgICogPGI+eHh4PGk+W3h4eHh4XTwvaT54eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICAgICAqICAgICAvL+acquiwg+aVtOWJje+8jCDpgInljLrnmoTlvIDlp4vlrrnlmajlkoznu5PmnZ/pg73mmK/mlofmnKzoioLngrlcbiAgICAgICAgICAgICAqICAgICAvL+aJp+ihjOiwg+aVtFxuICAgICAgICAgICAgICogICAgIHJhbmdlLnRyaW1Cb3VuZGFyeSgpO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+iwg+aVtOS5i+WQju+8jCDlrrnlmajoioLngrnlj5jmiJDkuoZp6IqC54K5XG4gICAgICAgICAgICAgKiAgICAgLy88Yj54eHhbPGk+eHh4eHg8L2k+XXh4eDwvYj5cbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDosIPmlbTlvZPliY1SYW5nZeeahOW8gOWni+WSjOe7k+adn+i+ueeVjOWuueWZqO+8jOWmguaenOaYr+WuueWZqOiKgueCueaYr+aWh+acrOiKgueCuSzlsLHosIPmlbTliLDljIXlkKvor6XmlofmnKzoioLngrnnmoTniLboioLngrnkuIrvvIxcbiAgICAgICAgICAgICAqIOWPr+S7peagueaNriBpZ25vcmVFbmQg5Y+C5pWw55qE5YC85Yaz5a6a5piv5ZCm6LCD5pW05a+557uT5p2f6L6555WM55qE6LCD5pW0XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHRyaW1Cb3VuZGFyeVxuICAgICAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IGlnbm9yZUVuZCDmmK/lkKblv73nlaXlr7nnu5PmnZ/ovrnnlYznmoTosIPmlbRcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAvL+mAieWMuuekuuS+i1xuICAgICAgICAgICAgICogPGI+eHh4PGk+W3h4eHh4XTwvaT54eHg8L2I+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICAgICAqICAgICAvL+acquiwg+aVtOWJje+8jCDpgInljLrnmoTlvIDlp4vlrrnlmajlkoznu5PmnZ/pg73mmK/mlofmnKzoioLngrlcbiAgICAgICAgICAgICAqICAgICAvL+aJp+ihjOiwg+aVtFxuICAgICAgICAgICAgICogICAgIHJhbmdlLnRyaW1Cb3VuZGFyeSggdHJ1ZSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+iwg+aVtOS5i+WQju+8jCDlvIDlp4vlrrnlmajoioLngrnlj5jmiJDkuoZp6IqC54K5XG4gICAgICAgICAgICAgKiAgICAgLy/kvYbmmK/vvIwg57uT5p2f5a655Zmo5rKh5pyJ5Y+R55Sf5Y+Y5YyWXG4gICAgICAgICAgICAgKiAgICAgLy88Yj54eHhbPGk+eHh4eHhdPC9pPnh4eDwvYj5cbiAgICAgICAgICAgICAqIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHRyaW1Cb3VuZGFyeTogZnVuY3Rpb24gKGlnbm9yZUVuZCkge1xuICAgICAgICAgICAgICAgIHRoaXMudHh0VG9FbG1Cb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHRoaXMuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IHRoaXMuc3RhcnRPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgIGNvbGxhcHNlZCA9IHRoaXMuY29sbGFwc2VkLFxuICAgICAgICAgICAgICAgICAgICBlbmQgPSB0aGlzLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMykge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUoc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9mZnNldCA+PSBzdGFydC5ub2RlVmFsdWUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydEFmdGVyKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRleHROb2RlID0gZG9tVXRpbHMuc3BsaXQoc3RhcnQsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/ot5/mlrDnu5PmnZ/ovrnnlYxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEVuZCh0ZXh0Tm9kZSwgdGhpcy5lbmRPZmZzZXQgLSBvZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RhcnQucGFyZW50Tm9kZSA9PT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW5kT2Zmc2V0ICs9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUodGV4dE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghaWdub3JlRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IHRoaXMuZW5kT2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICBlbmQgPSB0aGlzLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVuZC5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEVuZEJlZm9yZShlbmQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPCBlbmQubm9kZVZhbHVlLmxlbmd0aCAmJiBkb21VdGlscy5zcGxpdChlbmQsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRFbmRBZnRlcihlbmQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlpoLmnpzpgInljLrlnKjmlofmnKznmoTovrnnlYzkuIrvvIzlsLHmianlsZXpgInljLrliLDmlofmnKznmoTniLboioLngrnkuIosIOWmguaenOW9k+WJjemAieWMuuaYr+mXreWQiOeahO+8jCDliJnku4DkuYjkuZ/kuI3lgZpcbiAgICAgICAgICAgICAqIEBtZXRob2QgdHh0VG9FbG1Cb3VuZGFyeVxuICAgICAgICAgICAgICogQHJlbWluZCDor6Xmk43kvZzkuI3kvJrkv67mlLlkb23oioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5aaC5p6c6YCJ5Yy65Zyo5paH5pys55qE6L6555WM5LiK77yM5bCx5omp5bGV6YCJ5Yy65Yiw5paH5pys55qE54i26IqC54K55LiKLCDlpoLmnpzlvZPliY3pgInljLrmmK/pl63lkIjnmoTvvIwg5YiZ5qC55o2u5Y+C5pWw6aG5XG4gICAgICAgICAgICAgKiBpZ25vcmVDb2xsYXBzZWQg55qE5YC85Yaz5a6a5piv5ZCm5omn6KGM6K+l6LCD5pW0XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHR4dFRvRWxtQm91bmRhcnlcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpZ25vcmVDb2xsYXBzZWQg5piv5ZCm5b+955Wl6YCJ5Yy655qE6Zet5ZCI54q25oCB77yMIOWmguaenOivpeWPguaVsOWPluWAvOS4unRydWXvvIwg5YiZXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICDkuI3orrrpgInljLrmmK/lkKbpl63lkIjvvIwg6YO95Lya5omn6KGM6K+l5pON5L2c77yMIOWPjeS5i++8jCDliJnkuI3kvJrlr7npl63lkIjnmoTpgInljLrmiafooYzor6Xmk43kvZxcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICB0eHRUb0VsbUJvdW5kYXJ5OiBmdW5jdGlvbiAoaWdub3JlQ29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gYWRqdXN0KHIsIGMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhaW5lciA9IHJbYyArICdDb250YWluZXInXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IHJbYyArICdPZmZzZXQnXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lci5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzZXQnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGMucmVwbGFjZSgvKFxcdykvLCBmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQmVmb3JlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0oY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAob2Zmc2V0ID49IGNvbnRhaW5lci5ub2RlVmFsdWUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcltcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NldCcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYy5yZXBsYWNlKC8oXFx3KS8sIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdBZnRlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKGNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoaWdub3JlQ29sbGFwc2VkIHx8ICF0aGlzLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICBhZGp1c3QodGhpcywgJ3N0YXJ0Jyk7XG4gICAgICAgICAgICAgICAgICAgIGFkanVzdCh0aGlzLCAnZW5kJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlnKjlvZPliY3pgInljLrnmoTlvIDlp4vkvY3nva7liY3mj5LlhaXoioLngrnvvIzmlrDmj5LlhaXnmoToioLngrnkvJrooqvor6VyYW5nZeWMheWQq1xuICAgICAgICAgICAgICogQG1ldGhvZCAgaW5zZXJ0Tm9kZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgTm9kZSB9IG5vZGUg6ZyA6KaB5o+S5YWl55qE6IqC54K5XG4gICAgICAgICAgICAgKiBAcmVtaW5kIOaPkuWFpeeahOiKgueCueWPr+S7peaYr+S4gOS4qkRvY3VtZW50RnJhZ21lbnTkvp3mrKHmj5LlhaXlpJrkuKroioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpbnNlcnROb2RlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBmaXJzdCA9IG5vZGUsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aCA9IDE7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMTEpIHtcbiAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aCA9IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudHJpbUJvdW5kYXJ5KHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHRoaXMuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldCA9IHRoaXMuc3RhcnRPZmZzZXQ7XG4gICAgICAgICAgICAgICAgdmFyIG5leHROb2RlID0gc3RhcnQuY2hpbGROb2Rlc1tvZmZzZXRdO1xuICAgICAgICAgICAgICAgIGlmIChuZXh0Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydC5pbnNlcnRCZWZvcmUobm9kZSwgbmV4dE5vZGUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0LmFwcGVuZENoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZmlyc3QucGFyZW50Tm9kZSA9PT0gdGhpcy5lbmRDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmRPZmZzZXQgPSB0aGlzLmVuZE9mZnNldCArIGxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0U3RhcnRCZWZvcmUoZmlyc3QpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDpl63lkIjpgInljLrliLDlvZPliY3pgInljLrnmoTlvIDlp4vkvY3nva7vvIwg5bm25LiU5a6a5L2N5YWJ5qCH5Yiw6Zet5ZCI5ZCO55qE5L2N572uXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBzZXRDdXJzb3JcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6Y29sbGFwc2UoKVxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6Zet5ZCI6YCJ5Yy677yM5Y+v5Lul5qC55o2u5Y+C5pWwdG9FbmTnmoTlgLzmjqfliLbpgInljLrmmK/lkJHliY3pl63lkIjov5jmmK/lkJHlkI7pl63lkIjvvIwg5bm25LiU5a6a5L2N5YWJ5qCH5Yiw6Zet5ZCI5ZCO55qE5L2N572u44CCXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBzZXRDdXJzb3JcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSB0b0VuZCDmmK/lkKblkJHlkI7pl63lkIjvvIwg5aaC5p6c5Li6dHJ1Ze+8jCDliJnpl63lkIjpgInljLrml7bvvIwg5bCG5ZCR57uT5p2f5a655Zmo5pa55ZCR6Zet5ZCI77yMXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICDlj43kuYvvvIzliJnlkJHlvIDlp4vlrrnlmajmlrnlkJHpl63lkIhcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6Y29sbGFwc2UoQm9vbGVhbilcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0Q3Vyc29yOiBmdW5jdGlvbiAodG9FbmQsIG5vRmlsbERhdGEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb2xsYXBzZSghdG9FbmQpLnNlbGVjdChub0ZpbGxEYXRhKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Yib5bu65b2T5YmNcmFuZ2XnmoTkuIDkuKrkuabnrb7vvIzorrDlvZXkuIvlvZPliY1yYW5nZeeahOS9jee9ru+8jOaWueS+v+W9k2RvbeagkeaUueWPmOaXtu+8jOi/mOiDveaJvuWbnuWOn+adpeeahOmAieWMuuS9jee9rlxuICAgICAgICAgICAgICogQG1ldGhvZCBjcmVhdGVCb29rbWFya1xuICAgICAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IHNlcmlhbGl6ZSDmjqfliLbov5Tlm57nmoTmoIforrDkvY3nva7mmK/lr7nlvZPliY3kvY3nva7nmoTlvJXnlKjov5jmmK9JRO+8jOWmguaenOivpeWAvOS4unRydWXvvIzliJlcbiAgICAgICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6L+U5Zue5qCH6K6w5L2N572u55qESUTvvIwg5Y+N5LmL5YiZ6L+U5Zue5qCH6K6w5L2N572u6IqC54K555qE5byV55SoXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgT2JqZWN0IH0g6L+U5Zue5LiA5Liq5Lmm562+6K6w5b2V6ZSu5YC85a+577yMIOWFtuWMheWQq+eahGtleeacie+8miBzdGFydCA9PiDlvIDlp4vmoIforrDnmoRJROaIluiAheW8leeUqO+8jFxuICAgICAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCA9PiDnu5PmnZ/moIforrDnmoRJROaIluW8leeUqO+8jCBpZCA9PiDlvZPliY3moIforrDnmoTnsbvlnovvvIwg5aaC5p6c5Li6dHJ1Ze+8jOWImeihqOekulxuICAgICAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIOi/lOWbnueahOiusOW9leeahOexu+Wei+S4uklE77yMIOWPjeS5i+WImeS4uuW8leeUqFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBjcmVhdGVCb29rbWFyazogZnVuY3Rpb24gKHNlcmlhbGl6ZSwgc2FtZSkge1xuICAgICAgICAgICAgICAgIHZhciBlbmROb2RlLFxuICAgICAgICAgICAgICAgICAgICBzdGFydE5vZGUgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICAgICAgICBzdGFydE5vZGUuc3R5bGUuY3NzVGV4dCA9ICdkaXNwbGF5Om5vbmU7bGluZS1oZWlnaHQ6MHB4Oyc7XG4gICAgICAgICAgICAgICAgc3RhcnROb2RlLmFwcGVuZENoaWxkKHRoaXMuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ1xcdTIwMEQnKSk7XG4gICAgICAgICAgICAgICAgc3RhcnROb2RlLmlkID0gJ19iYWlkdV9ib29rbWFya19zdGFydF8nICsgKHNhbWUgPyAnJyA6IGd1aWQrKyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIGVuZE5vZGUgPSBzdGFydE5vZGUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBlbmROb2RlLmlkID0gJ19iYWlkdV9ib29rbWFya19lbmRfJyArIChzYW1lID8gJycgOiBndWlkKyspO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmluc2VydE5vZGUoc3RhcnROb2RlKTtcbiAgICAgICAgICAgICAgICBpZiAoZW5kTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbGxhcHNlKCkuaW5zZXJ0Tm9kZShlbmROb2RlKS5zZXRFbmRCZWZvcmUoZW5kTm9kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRBZnRlcihzdGFydE5vZGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiBzZXJpYWxpemUgPyBzdGFydE5vZGUuaWQgOiBzdGFydE5vZGUsXG4gICAgICAgICAgICAgICAgICAgIGVuZDogZW5kTm9kZSA/IChzZXJpYWxpemUgPyBlbmROb2RlLmlkIDogZW5kTm9kZSkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBpZDogc2VyaWFsaXplXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogIOiwg+aVtOW9k+WJjXJhbmdl55qE6L6555WM5Yiw5Lmm562+5L2N572u77yM5bm25Yig6Zmk6K+l5Lmm562+5a+56LGh5omA5qCH6K6w55qE5L2N572u5YaF55qE6IqC54K5XG4gICAgICAgICAgICAgKiAgQG1ldGhvZCAgbW92ZVRvQm9va21hcmtcbiAgICAgICAgICAgICAqICBAcGFyYW0geyBCb29rTWFyayB9IGJvb2ttYXJrIGNyZWF0ZUJvb2ttYXJr5omA5Yib5bu655qE5qCH562+5a+56LGhXG4gICAgICAgICAgICAgKiAgQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKiAgQHNlZSBVRS5kb20uUmFuZ2U6Y3JlYXRlQm9va21hcmsoQm9vbGVhbilcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbW92ZVRvQm9va21hcms6IGZ1bmN0aW9uIChib29rbWFyaykge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IGJvb2ttYXJrLmlkID8gdGhpcy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChib29rbWFyay5zdGFydCkgOiBib29rbWFyay5zdGFydCxcbiAgICAgICAgICAgICAgICAgICAgZW5kID0gYm9va21hcmsuZW5kICYmIGJvb2ttYXJrLmlkID8gdGhpcy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChib29rbWFyay5lbmQpIDogYm9va21hcmsuZW5kO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUoc3RhcnQpO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShzdGFydCk7XG4gICAgICAgICAgICAgICAgaWYgKGVuZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldEVuZEJlZm9yZShlbmQpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoZW5kKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6LCD5pW0cmFuZ2XnmoTovrnnlYzvvIzkvb/lhbZcIuaUvuWkp1wi5Yiw5pyA6L+R55qE54i26IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kICBlbmxhcmdlXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOS8muW8lei1t+mAieWMuueahOWPmOWMllxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDosIPmlbRyYW5nZeeahOi+ueeVjO+8jOS9v+WFtlwi5pS+5aSnXCLliLDmnIDov5HnmoTniLboioLngrnvvIzmoLnmja7lj4LmlbAgdG9CbG9jayDnmoTlj5blgLzvvIwg5Y+v5LulXG4gICAgICAgICAgICAgKiDopoHmsYLmianlpKfkuYvlkI7nmoTniLboioLngrnmmK9ibG9ja+iKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCAgZW5sYXJnZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgQm9vbGVhbiB9IHRvQmxvY2sg5piv5ZCm6KaB5rGC5omp5aSn5LmL5ZCO55qE54i26IqC54K55b+F6aG75pivYmxvY2voioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBlbmxhcmdlOiBmdW5jdGlvbiAodG9CbG9jaywgc3RvcEZuKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlzQm9keSA9IGRvbVV0aWxzLmlzQm9keSxcbiAgICAgICAgICAgICAgICAgICAgcHJlLFxuICAgICAgICAgICAgICAgICAgICBub2RlLFxuICAgICAgICAgICAgICAgICAgICB0bXAgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICAgICAgICAgICAgICBpZiAodG9CbG9jaykge1xuICAgICAgICAgICAgICAgICAgICBub2RlID0gdGhpcy5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuY2hpbGROb2Rlc1t0aGlzLnN0YXJ0T2Zmc2V0XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IG5vZGUgPSBub2RlLmNoaWxkTm9kZXNbdGhpcy5zdGFydE9mZnNldF07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodG1wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgPSBub2RlID0gdG1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQmxvY2tFbG0obm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gcHJlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgocHJlID0gbm9kZS5wcmV2aW91c1NpYmxpbmcpICYmICFkb21VdGlscy5pc0Jsb2NrRWxtKHByZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHByZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydEJlZm9yZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSB0aGlzLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChwcmUgPSBub2RlLmNoaWxkTm9kZXNbdGhpcy5lbmRPZmZzZXRdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuaW5zZXJ0QmVmb3JlKHRtcCwgcHJlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0bXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gbm9kZSA9IHRtcDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0Jsb2NrRWxtKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHByZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoKHByZSA9IG5vZGUubmV4dFNpYmxpbmcpICYmICFkb21VdGlscy5pc0Jsb2NrRWxtKHByZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHByZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRFbmRBZnRlcihub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0bXAucGFyZW50Tm9kZSA9PT0gdGhpcy5lbmRDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW5kT2Zmc2V0LS07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8g5omp5bGV6L6555WM5Yiw5pyA5aSnXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy5zdGFydE9mZnNldCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RvcEZuICYmIHN0b3BGbih0aGlzLnN0YXJ0Q29udGFpbmVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQm9keSh0aGlzLnN0YXJ0Q29udGFpbmVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydEJlZm9yZSh0aGlzLnN0YXJ0Q29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZE9mZnNldCA9PVxuICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMuZW5kQ29udGFpbmVyLm5vZGVUeXBlID09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMuZW5kQ29udGFpbmVyLmNoaWxkTm9kZXMubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmVuZENvbnRhaW5lci5ub2RlVmFsdWUubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdG9wRm4gJiYgc3RvcEZuKHRoaXMuZW5kQ29udGFpbmVyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQm9keSh0aGlzLmVuZENvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kQWZ0ZXIodGhpcy5lbmRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVubGFyZ2VUb0Jsb2NrRWxtOiBmdW5jdGlvbiAoaWdub3JlRW5kKSB7XG4gICAgICAgICAgICAgICAgd2hpbGUgKCFkb21VdGlscy5pc0Jsb2NrRWxtKHRoaXMuc3RhcnRDb250YWluZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUodGhpcy5zdGFydENvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghaWdub3JlRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICghZG9tVXRpbHMuaXNCbG9ja0VsbSh0aGlzLmVuZENvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kQWZ0ZXIodGhpcy5lbmRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6LCD5pW0UmFuZ2XnmoTovrnnlYzvvIzkvb/lhbZcIue8qeWwj1wi5Yiw5pyA5ZCI6YCC55qE5L2N572uXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGFkanVzdG1lbnRCb3VuZGFyeVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjXJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKiBAc2VlIFVFLmRvbS5SYW5nZTpzaHJpbmtCb3VuZGFyeSgpXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGFkanVzdG1lbnRCb3VuZGFyeTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKFxuICAgICAgICAgICAgICAgICAgICAgICAgIWRvbVV0aWxzLmlzQm9keSh0aGlzLnN0YXJ0Q29udGFpbmVyKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydE9mZnNldCA9PVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRDb250YWluZXJbdGhpcy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAzID8gJ25vZGVWYWx1ZScgOiAnY2hpbGROb2RlcyddXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRDb250YWluZXJbdGhpcy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAzID8gJ25vZGVWYWx1ZScgOiAnY2hpbGROb2RlcyddLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRBZnRlcih0aGlzLnN0YXJ0Q29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCb2R5KHRoaXMuZW5kQ29udGFpbmVyKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIXRoaXMuZW5kT2Zmc2V0ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZENvbnRhaW5lclt0aGlzLmVuZENvbnRhaW5lci5ub2RlVHlwZSA9PSAzID8gJ25vZGVWYWx1ZScgOiAnY2hpbGROb2RlcyddLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kQmVmb3JlKHRoaXMuZW5kQ29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog57uZcmFuZ2XpgInljLrkuK3nmoTlhoXlrrnmt7vliqDnu5nlrprnmoRpbmxpbmXmoIfnrb5cbiAgICAgICAgICAgICAqIEBtZXRob2QgYXBwbHlJbmxpbmVTdHlsZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdGFnTmFtZSDpnIDopoHmt7vliqDnmoTmoIfnrb7lkI1cbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKiA8cD54eHh4W3h4eHhdeDwvcD4gID09PiAgcmFuZ2UuYXBwbHlJbmxpbmVTdHlsZShcInN0cm9uZ1wiKSAgPT0+ICA8cD54eHh4WzxzdHJvbmc+eHh4eDwvc3Ryb25nPl14PC9wPlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDnu5lyYW5nZemAieWMuuS4reeahOWGheWuuea3u+WKoOe7meWumueahGlubGluZeagh+etvu+8jCDlubbkuJTkuLrmoIfnrb7pmYTliqDkuIrkuIDkupvliJ3lp4vljJblsZ7mgKfjgIJcbiAgICAgICAgICAgICAqIEBtZXRob2QgYXBwbHlJbmxpbmVTdHlsZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdGFnTmFtZSDpnIDopoHmt7vliqDnmoTmoIfnrb7lkI1cbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IGF0dHJzIOi3n+maj+aWsOa3u+WKoOeahOagh+etvueahOWxnuaAp1xuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjemAieWMulxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqIDxwPnh4eHhbeHh4eF14PC9wPlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqID09PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIDwhLS0g5omn6KGM5pON5L2cIC0tPlxuICAgICAgICAgICAgICogcmFuZ2UuYXBwbHlJbmxpbmVTdHlsZShcInN0cm9uZ1wiLHtcInN0eWxlXCI6XCJmb250LXNpemU6MTJweFwifSlcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA9PT5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8cD54eHh4WzxzdHJvbmcgc3R5bGU9XCJmb250LXNpemU6MTJweFwiPnh4eHg8L3N0cm9uZz5deDwvcD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBhcHBseUlubGluZVN0eWxlOiBmdW5jdGlvbiAodGFnTmFtZSwgYXR0cnMsIGxpc3QpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb2xsYXBzZWQpIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMudHJpbUJvdW5kYXJ5KClcbiAgICAgICAgICAgICAgICAgICAgLmVubGFyZ2UoZmFsc2UsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PSAxICYmIGRvbVV0aWxzLmlzQmxvY2tFbG0obm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5hZGp1c3RtZW50Qm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICB2YXIgYm9va21hcmsgPSB0aGlzLmNyZWF0ZUJvb2ttYXJrKCksXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IGJvb2ttYXJrLmVuZCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyRm4gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMSA/IG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9ICdicicgOiAhZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoYm9va21hcmsuc3RhcnQsIGZhbHNlLCBmaWx0ZXJGbiksXG4gICAgICAgICAgICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgICAgICAgICAgIHByZSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLmNsb25lUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiBkb21VdGlscy5nZXRQb3NpdGlvbihjdXJyZW50LCBlbmQpICYgZG9tVXRpbHMuUE9TSVRJT05fUFJFQ0VESU5HKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Lm5vZGVUeXBlID09IDMgfHwgZHRkW3RhZ05hbWVdW2N1cnJlbnQudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGN1cnJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobm9kZSAmJiAobm9kZS5ub2RlVHlwZSA9PSAzIHx8IGR0ZFt0YWdOYW1lXVtub2RlLnRhZ05hbWVdKSAmJiBub2RlICE9PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgPSBub2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShub2RlLCBub2RlLm5vZGVUeXBlID09IDEsIG51bGwsIGZ1bmN0aW9uIChwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGR0ZFt0YWdOYW1lXVtwYXJlbnQudGFnTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJhZyA9IHJhbmdlLnNldEVuZEFmdGVyKHByZSkuZXh0cmFjdENvbnRlbnRzKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxtO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpc3QgJiYgbGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxldmVsLCB0b3A7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wID0gbGV2ZWwgPSBsaXN0WzBdLmNsb25lTm9kZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDEsIGNpOyAoY2kgPSBsaXN0W2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWwuYXBwZW5kQ2hpbGQoY2kuY2xvbmVOb2RlKGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsID0gbGV2ZWwuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxtID0gbGV2ZWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsbSA9IHJhbmdlLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRBdHRyaWJ1dGVzKGVsbSwgYXR0cnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLmFwcGVuZENoaWxkKGZyYWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShsaXN0ID8gdG9wIDogZWxtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5aSE55CG5LiL5ruR57q/5ZyoYeS4iueahOaDheWGtVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFOb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZ05hbWUgPT0gJ3NwYW4nICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnMuc3R5bGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvdGV4dFxcLWRlY29yYXRpb24vLnRlc3QoYXR0cnMuc3R5bGUpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGFOb2RlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShlbG0sICdhJywgdHJ1ZSkpXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRBdHRyaWJ1dGVzKGFOb2RlLCBhdHRycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGVsbSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxtID0gYU5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm1lcmdlU2libGluZyhlbG0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmNsZWFyRW1wdHlTaWJsaW5nKGVsbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WOu+mZpOWtkOiKgueCueebuOWQjOeahFxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMubWVyZ2VDaGlsZChlbG0sIGF0dHJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShlbG0sIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5tZXJnZVRvUGFyZW50KGVsbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZSA9PT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgdHJ1ZSwgZmlsdGVyRm4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog56e76Zmk5b2T5YmN6YCJ5Yy65YaF5oyH5a6a55qEaW5saW5l5qCH562+77yM5L2G5L+d55WZ5YW25Lit55qE5YaF5a65XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlbW92ZUlubGluZVN0eWxlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0YWdOYW1lIOmcgOimgeenu+mZpOeahOagh+etvuWQjVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOW9k+WJjeeahHJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogeHhbeDxzcGFuPnh4eDxlbT55eXk8L2VtPnp6XXo8L3NwYW4+ICA9PiByYW5nZS5yZW1vdmVJbmxpbmVTdHlsZShbXCJlbVwiXSkgID0+IHh4W3g8c3Bhbj54eHh5eXl6el16PC9zcGFuPlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDnp7vpmaTlvZPliY3pgInljLrlhoXmjIflrprnmoTkuIDnu4RpbmxpbmXmoIfnrb7vvIzkvYbkv53nlZnlhbbkuK3nmoTlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgcmVtb3ZlSW5saW5lU3R5bGVcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gdGFnTmFtZUFyciDpnIDopoHnp7vpmaTnmoTmoIfnrb7lkI3nmoTmlbDnu4RcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY3nmoRyYW5nZeWvueixoVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6cmVtb3ZlSW5saW5lU3R5bGUoU3RyaW5nKVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZW1vdmVJbmxpbmVTdHlsZTogZnVuY3Rpb24gKHRhZ05hbWVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29sbGFwc2VkKSByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB0YWdOYW1lcyA9IHV0aWxzLmlzQXJyYXkodGFnTmFtZXMpID8gdGFnTmFtZXMgOiBbdGFnTmFtZXNdO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hyaW5rQm91bmRhcnkoKS5hZGp1c3RtZW50Qm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICBlbmQgPSB0aGlzLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHV0aWxzLmluZGV4T2YodGFnTmFtZXMsIHN0YXJ0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSkgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAnYm9keScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZW5kLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1dGlscy5pbmRleE9mKHRhZ05hbWVzLCBlbmQudGFnTmFtZS50b0xvd2VyQ2FzZSgpKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW5kLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAnYm9keScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IGVuZC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgYm9va21hcmsgPSB0aGlzLmNyZWF0ZUJvb2ttYXJrKCksXG4gICAgICAgICAgICAgICAgICAgIGZyYWcsXG4gICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlO1xuICAgICAgICAgICAgICAgIGlmIChzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHRoaXMuY2xvbmVSYW5nZSgpLnNldEVuZEJlZm9yZShib29rbWFyay5zdGFydCkuc2V0U3RhcnRCZWZvcmUoc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICBmcmFnID0gdG1wUmFuZ2UuZXh0cmFjdENvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLmluc2VydE5vZGUoZnJhZyk7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmNsZWFyRW1wdHlTaWJsaW5nKHN0YXJ0LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYm9va21hcmsuc3RhcnQsIHN0YXJ0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVuZCkge1xuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHRoaXMuY2xvbmVSYW5nZSgpLnNldFN0YXJ0QWZ0ZXIoYm9va21hcmsuZW5kKS5zZXRFbmRBZnRlcihlbmQpO1xuICAgICAgICAgICAgICAgICAgICBmcmFnID0gdG1wUmFuZ2UuZXh0cmFjdENvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLmluc2VydE5vZGUoZnJhZyk7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmNsZWFyRW1wdHlTaWJsaW5nKGVuZCwgZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBlbmQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYm9va21hcmsuZW5kLCBlbmQubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudCA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGJvb2ttYXJrLnN0YXJ0LCBmYWxzZSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBuZXh0O1xuICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IGJvb2ttYXJrLmVuZCkge1xuICAgICAgICAgICAgICAgICAgICBuZXh0ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgdHJ1ZSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodXRpbHMuaW5kZXhPZih0YWdOYW1lcywgY3VycmVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gbmV4dDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubW92ZVRvQm9va21hcmsoYm9va21hcmspO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5blvZPliY3pgInkuK3nmoToh6rpl63lkIjnmoToioLngrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGdldENsb3NlZE5vZGVcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBOb2RlIHwgTlVMTCB9IOWmguaenOW9k+WJjemAieS4reeahOaYr+iHqumXreWQiOiKgueCue+8jCDliJnov5Tlm57or6XoioLngrnvvIwg5ZCm5YiZ6L+U5ZueTlVMTFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDbG9zZWROb2RlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmNsb25lUmFuZ2UoKS5hZGp1c3RtZW50Qm91bmRhcnkoKS5zaHJpbmtCb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0T25lTm9kZShyYW5nZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQubm9kZVR5cGUgPT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkdGQuJGVtcHR5W2NoaWxkLnRhZ05hbWVdIHx8IGR0ZC4kbm9uQ2hpbGRbY2hpbGQudGFnTmFtZV0pXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOWcqOmhtemdouS4iumrmOS6rnJhbmdl5omA6KGo56S655qE6YCJ5Yy6XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNlbGVjdFxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLmRvbS5SYW5nZSB9IOi/lOWbnuW9k+WJjVJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIC8v6L+Z6YeM5LiN5Yy65YiGaWU55Lul5LiK77yMdHJhY2U6MzgyNFxuICAgICAgICAgICAgc2VsZWN0OiBicm93c2VyLmllXG4gICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAobm9GaWxsRGF0YSwgdGV4dFJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgdmFyIG5hdGl2ZVJhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5jb2xsYXBzZWQpIHRoaXMuc2hyaW5rQm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZ2V0Q2xvc2VkTm9kZSgpO1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlICYmICF0ZXh0UmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJhbmdlID0gdGhpcy5kb2N1bWVudC5ib2R5LmNyZWF0ZUNvbnRyb2xSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2UuYWRkRWxlbWVudChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgdmFyIGJvb2ttYXJrID0gdGhpcy5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IGJvb2ttYXJrLnN0YXJ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQ7XG4gICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2UgPSB0aGlzLmRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2UubW92ZVRvRWxlbWVudFRleHQoc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJhbmdlLm1vdmVTdGFydCgnY2hhcmFjdGVyJywgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmF0aXZlUmFuZ2VFbmQgPSB0aGlzLmRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCA9IGJvb2ttYXJrLmVuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2VFbmQubW92ZVRvRWxlbWVudFRleHQoZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2Uuc2V0RW5kUG9pbnQoJ0VuZFRvRW5kJywgbmF0aXZlUmFuZ2VFbmQpO1xuICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbm9GaWxsRGF0YSAmJiB0aGlzLnN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlICE9IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5L2/55SoPHNwYW4+fHg8c3Bhbj7lm7rlrprkvY/lhYnmoIdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBUZXh0ID0gdGhpcy5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShmaWxsQ2hhciksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gdGhpcy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXAuYXBwZW5kQ2hpbGQodGhpcy5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShmaWxsQ2hhcikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodG1wLCBzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0bXBUZXh0LCBzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+W9k+eCuWIsaSx15pe277yM5LiN6IO95riF6ZmkaeS4iui+ueeahGJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZUZpbGxEYXRhKHRoaXMuZG9jdW1lbnQsIHRtcFRleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbERhdGEgPSB0bXBUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VTaWJsaW5nKHRtcCwgJ3ByZXZpb3VzU2libGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VTaWJsaW5nKHN0YXJ0LCAnbmV4dFNpYmxpbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJhbmdlLm1vdmVTdGFydCgnY2hhcmFjdGVyJywgLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgdGhpcy5tb3ZlVG9Cb29rbWFyayhib29rbWFyayk7XG4gICAgICAgICAgICAgICAgICAgICAgdG1wICYmIGRvbVV0aWxzLnJlbW92ZSh0bXApO1xuICAgICAgICAgICAgICAgICAgICAgIC8vSUXlnKjpmpDol4/nirbmgIHkuIvkuI3mlK/mjIFyYW5nZeaTjeS9nO+8jGNhdGNo5LiA5LiLXG4gICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IGZ1bmN0aW9uIChub3RJbnNlcnRGaWxsRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrT2Zmc2V0KHJuZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBjaGVjayhub2RlLCBvZmZzZXQsIGRpcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMyAmJiBub2RlLm5vZGVWYWx1ZS5sZW5ndGggPCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmdbZGlyICsgJ09mZnNldCddID0gbm9kZS5ub2RlVmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrKHJuZy5zdGFydENvbnRhaW5lciwgcm5nLnN0YXJ0T2Zmc2V0LCAnc3RhcnQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2socm5nLmVuZENvbnRhaW5lciwgcm5nLmVuZE9mZnNldCwgJ2VuZCcpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB2YXIgd2luID0gZG9tVXRpbHMuZ2V0V2luZG93KHRoaXMuZG9jdW1lbnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzZWwgPSB3aW4uZ2V0U2VsZWN0aW9uKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR4dE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgLy9GRuS4i+WFs+mXreiHquWKqOmVv+mrmOaXtua7muWKqOadoeWcqOWFs+mXrWRpYWxvZ+aXtuS8mui3s1xuICAgICAgICAgICAgICAgICAgICAgIC8vZmbkuIvlpoLmnpzkuI1ib2R5LmZvY3Vz5bCG5LiN6IO95a6a5L2N6Zet5ZCI5YWJ5qCH5Yiw57yW6L6R5Zmo5YaFXG4gICAgICAgICAgICAgICAgICAgICAgYnJvd3Nlci5nZWNrbyA/IHRoaXMuZG9jdW1lbnQuYm9keS5mb2N1cygpIDogd2luLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzZWwucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRyYWNlOjg3MCBjaHJvbWUvc2FmYXJp5ZCO6L655pivYnLlr7nkuo7pl63lkIjlvpdyYW5nZeS4jeiDveWumuS9jSDmiYDku6XljrvmjonkuobliKTmlq1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSAhPSAzICYmISAoKGNoaWxkID0gdGhpcy5zdGFydENvbnRhaW5lci5jaGlsZE5vZGVzW3RoaXMuc3RhcnRPZmZzZXRdKSAmJiBjaGlsZC5ub2RlVHlwZSA9PSAxICYmIGNoaWxkLnRhZ05hbWUgPT0gJ0JSJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jb2xsYXBzZWQgJiYgIW5vdEluc2VydEZpbGxEYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgLy9vcGVhcuWmguaenOayoeacieiKgueCueaOpeedgO+8jOWOn+eUn+eahOS4jeiDveWkn+WumuS9jSzkuI3og73lnKhib2R555qE56ys5LiA57qn5o+S5YWl56m655m96IqC54K5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgaWYgKG5vdEluc2VydEZpbGxEYXRhICYmIGJyb3dzZXIub3BlcmEgJiYgIWRvbVV0aWxzLmlzQm9keSh0aGlzLnN0YXJ0Q29udGFpbmVyKSAmJiB0aGlzLnN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcCA9IHRoaXMuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluc2VydE5vZGUodG1wKS5zZXRTdGFydCh0bXAsIDApLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WkhOeQhuWFieagh+iQveWcqOaWh+acrOiKgueCueeahOaDheWGtVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lpITnkIbku6XkuIvnmoTmg4XlhrVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vPGI+fHh4eHg8L2I+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLzxiPnh4eHg8L2I+fHh4eHhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8veHh4eDxiPnw8L2I+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkID0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkID0gc3RhcnQuY2hpbGROb2Rlc1t0aGlzLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhKHN0YXJ0Lm5vZGVUeXBlID09IDMgJiYgdGhpcy5zdGFydE9mZnNldCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2hpbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAhY2hpbGQucHJldmlvdXNTaWJsaW5nIHx8IGNoaWxkLnByZXZpb3VzU2libGluZy5ub2RlVHlwZSAhPSAzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogIXN0YXJ0Lmxhc3RDaGlsZCB8fCBzdGFydC5sYXN0Q2hpbGQubm9kZVR5cGUgIT0gMylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4dE5vZGUgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGZpbGxDaGFyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+i3n+edgOWJjei+uei1sFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5zZXJ0Tm9kZSh0eHROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVGaWxsRGF0YSh0aGlzLmRvY3VtZW50LCB0eHROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZVNpYmxpbmcodHh0Tm9kZSwgJ3ByZXZpb3VzU2libGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlU2libGluZyh0eHROb2RlLCAnbmV4dFNpYmxpbmcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsRGF0YSA9IHR4dE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydCh0eHROb2RlLCBicm93c2VyLndlYmtpdCA/IDEgOiAwKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmF0aXZlUmFuZ2UgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbGxhcHNlZCAmJiBicm93c2VyLm9wZXJhICYmIHRoaXMuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gdGhpcy5zdGFydENvbnRhaW5lci5jaGlsZE5vZGVzW3RoaXMuc3RhcnRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5b6A5YmN6Z2g5ouiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLnN0YXJ0Q29udGFpbmVyLmxhc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQgJiYgZG9tVXRpbHMuaXNCcihjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydEJlZm9yZShjaGlsZCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WQkeWQjumdoOaLolxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjaGlsZCAmJiBkb21VdGlscy5pc0Jsb2NrRWxtKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGQubm9kZVR5cGUgPT0gMSAmJiBjaGlsZC5jaGlsZE5vZGVzWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZCA9IGNoaWxkLmNoaWxkTm9kZXNbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZCAmJiB0aGlzLnNldFN0YXJ0QmVmb3JlKGNoaWxkKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAvL+aYr2NyZWF0ZUFkZHJlc3PmnIDlkI7kuIDkvY3nrpfnmoTkuI3lh4bvvIznjrDlnKjov5nph4zov5vooYzlvq7osINcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tPZmZzZXQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJhbmdlLnNldFN0YXJ0KHRoaXMuc3RhcnRDb250YWluZXIsIHRoaXMuc3RhcnRPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBuYXRpdmVSYW5nZS5zZXRFbmQodGhpcy5lbmRDb250YWluZXIsIHRoaXMuZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsLmFkZFJhbmdlKG5hdGl2ZVJhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOa7muWKqOWIsOW9k+WJjXJhbmdl5byA5aeL55qE5L2N572uXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNjcm9sbFRvVmlld1xuICAgICAgICAgICAgICogQHBhcmFtIHsgV2luZG93IH0gd2luIOW9k+WJjXJhbmdl5a+56LGh5omA5bGe55qEd2luZG935a+56LGhXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNUmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOa7muWKqOWIsOi3neemu+W9k+WJjXJhbmdl5byA5aeL5L2N572uIG9mZnNldCDnmoTkvY3nva7lpIRcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2Nyb2xsVG9WaWV3XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBXaW5kb3cgfSB3aW4g5b2T5YmNcmFuZ2Xlr7nosaHmiYDlsZ7nmoR3aW5kb3flr7nosaFcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE51bWJlciB9IG9mZnNldCDot53nprtyYW5nZeW8gOWni+S9jee9ruWkhOeahOWBj+enu+mHj++8jCDlpoLmnpzkuLrmraPmlbDvvIwg5YiZ5ZCR5LiL5YGP56e777yMIOWPjeS5i++8jCDliJnlkJHkuIrlgY/np7tcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1SYW5nZeWvueixoVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzY3JvbGxUb1ZpZXc6IGZ1bmN0aW9uICh3aW4sIG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHdpbiA9IHdpbiA/IHdpbmRvdyA6IGRvbVV0aWxzLmdldFdpbmRvdyh0aGlzLmRvY3VtZW50KTtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBzcGFuID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgIC8vdHJhY2U6NzE3XG4gICAgICAgICAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSAnJm5ic3A7JztcbiAgICAgICAgICAgICAgICBtZS5jbG9uZVJhbmdlKCkuaW5zZXJ0Tm9kZShzcGFuKTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5zY3JvbGxUb1ZpZXcoc3Bhbiwgd2luLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShzcGFuKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWU7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOWIpOaWreW9k+WJjemAieWMuuWGheWuueaYr+WQpuWNoOS9jeesplxuICAgICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5GaWxsQ2hhclxuICAgICAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDlpoLmnpzmmK/ljaDkvY3nrKbov5Tlm550cnVl77yM5ZCm5YiZ6L+U5ZueZmFsc2VcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaW5GaWxsQ2hhcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHRoaXMuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbGxhcHNlZCAmJlxuICAgICAgICAgICAgICAgICAgICBzdGFydC5ub2RlVHlwZSA9PSAzICYmXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0Lm5vZGVWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoJ14nICsgZG9tVXRpbHMuZmlsbENoYXIpLCAnJykubGVuZ3RoICsgMSA9PVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQubm9kZVZhbHVlLmxlbmd0aFxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDkv53lrZhcbiAgICAgICAgICAgICAqIEBtZXRob2QgY3JlYXRlQWRkcmVzc1xuICAgICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g6L+U5Zue5byA5aeL5ZKM57uT5p2f55qE5L2N572uXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogPGJvZHk+XG4gICAgICAgICAgICAgKiAgICAgPHA+XG4gICAgICAgICAgICAgKiAgICAgICAgIGFhYWFcbiAgICAgICAgICAgICAqICAgICAgICAgPGVtPlxuICAgICAgICAgICAgICogICAgICAgICAgICAgPCEtLSDpgInljLrlvIDlp4sgLS0+XG4gICAgICAgICAgICAgKiAgICAgICAgICAgICBiYmJiXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICA8IS0tIOmAieWMuue7k+adnyAtLT5cbiAgICAgICAgICAgICAqICAgICAgICAgPC9lbT5cbiAgICAgICAgICAgICAqICAgICA8L3A+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKiAgICAgICAgIC8vb3V0cHV0OiB7c3RhcnRBZGRyZXNzOlswLDEsMCwwXSxlbmRBZGRyZXNzOlswLDEsMCw0XX1cbiAgICAgICAgICAgICAqICAgICAgICAgY29uc29sZS5sb2coIHJhbmdlLmNyZWF0ZUFkZHJlc3MoKSApO1xuICAgICAgICAgICAgICogICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICogPC9ib2R5PlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNyZWF0ZUFkZHJlc3M6IGZ1bmN0aW9uIChpZ25vcmVFbmQsIGlnbm9yZVR4dCkge1xuICAgICAgICAgICAgICAgIHZhciBhZGRyID0ge30sXG4gICAgICAgICAgICAgICAgICAgIG1lID0gdGhpcztcblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldEFkZHJlc3MoaXNTdGFydCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGlzU3RhcnQgPyBtZS5zdGFydENvbnRhaW5lciA6IG1lLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudHMgPSBkb21VdGlscy5maW5kUGFyZW50cyhub2RlLCB0cnVlLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZG9tVXRpbHMuaXNCb2R5KG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRycyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHBhcmVudHNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRkcnMucHVzaChkb21VdGlscy5nZXROb2RlSW5kZXgoY2ksIGlnbm9yZVR4dCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdEluZGV4ID0gMDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaWdub3JlVHh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBub2RlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodG1wTm9kZSAmJiB0bXBOb2RlLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RJbmRleCArPSB0bXBOb2RlLm5vZGVWYWx1ZS5yZXBsYWNlKGZpbGxDaGFyUmVnLCAnJykubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gdG1wTm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0SW5kZXggKz0gaXNTdGFydCA/IG1lLnN0YXJ0T2Zmc2V0IDogbWUuZW5kT2Zmc2V0OyAvLyAtIChmaWxsQ2hhclJlZy50ZXN0KG5vZGUubm9kZVZhbHVlKSA/IDEgOiAwIClcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUuY2hpbGROb2Rlc1tpc1N0YXJ0ID8gbWUuc3RhcnRPZmZzZXQgOiBtZS5lbmRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0SW5kZXggPSBkb21VdGlscy5nZXROb2RlSW5kZXgobm9kZSwgaWdub3JlVHh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gaXNTdGFydCA/IG1lLnN0YXJ0Q29udGFpbmVyIDogbWUuZW5kQ29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSBub2RlLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChmaXJzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRmlsbENoYXIoZmlyc3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBmaXJzdC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0SW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdC5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGZpcnN0ICYmIGZpcnN0Lm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBmaXJzdC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0ID0gZmlyc3QubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaXJzdEluZGV4ID0gaXNTdGFydCA/IChkb21VdGlscy5pc0ZpbGxDaGFyKG5vZGUpID8gMCA6IG1lLnN0YXJ0T2Zmc2V0KSA6IG1lLmVuZE9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZmlyc3RJbmRleCA8IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0SW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGFkZHJzLnB1c2goZmlyc3RJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRycztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWRkci5zdGFydEFkZHJlc3MgPSBnZXRBZGRyZXNzKHRydWUpO1xuICAgICAgICAgICAgICAgIGlmICghaWdub3JlRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZHIuZW5kQWRkcmVzcyA9IG1lLmNvbGxhcHNlZCA/IFtdLmNvbmNhdChhZGRyLnN0YXJ0QWRkcmVzcykgOiBnZXRBZGRyZXNzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhZGRyO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDkv53lrZhcbiAgICAgICAgICAgICAqIEBtZXRob2QgY3JlYXRlQWRkcmVzc1xuICAgICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g6L+U5Zue5byA5aeL5ZKM57uT5p2f55qE5L2N572uXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgaHRtbFxuICAgICAgICAgICAgICogPGJvZHk+XG4gICAgICAgICAgICAgKiAgICAgPHA+XG4gICAgICAgICAgICAgKiAgICAgICAgIGFhYWFcbiAgICAgICAgICAgICAqICAgICAgICAgPGVtPlxuICAgICAgICAgICAgICogICAgICAgICAgICAgPCEtLSDpgInljLrlvIDlp4sgLS0+XG4gICAgICAgICAgICAgKiAgICAgICAgICAgICBiYmJiXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICA8IS0tIOmAieWMuue7k+adnyAtLT5cbiAgICAgICAgICAgICAqICAgICAgICAgPC9lbT5cbiAgICAgICAgICAgICAqICAgICA8L3A+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgKiAgICAgICAgIHZhciByYW5nZSA9IGVkaXRvci5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAqICAgICAgICAgcmFuZ2UubW92ZVRvQWRkcmVzcyh7c3RhcnRBZGRyZXNzOlswLDEsMCwwXSxlbmRBZGRyZXNzOlswLDEsMCw0XX0pO1xuICAgICAgICAgICAgICogICAgICAgICByYW5nZS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAqICAgICAgICAgLy9vdXRwdXQ6ICdiYmJiJ1xuICAgICAgICAgICAgICogICAgICAgICBjb25zb2xlLmxvZyhlZGl0b3Iuc2VsZWN0aW9uLmdldFRleHQoKSk7XG4gICAgICAgICAgICAgKiAgICAgPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiA8L2JvZHk+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbW92ZVRvQWRkcmVzczogZnVuY3Rpb24gKGFkZHIsIGlnbm9yZUVuZCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZ2V0Tm9kZShhZGRyZXNzLCBpc1N0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlID0gbWUuZG9jdW1lbnQuYm9keSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgbCA9IGFkZHJlc3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaSA9IGFkZHJlc3NbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSB0bXBOb2RlLmNoaWxkTm9kZXNbY2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0bXBOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gY2k7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2V0U3RhcnRCZWZvcmUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNldFN0YXJ0KHBhcmVudE5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG1wTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNldEVuZEJlZm9yZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2V0RW5kKHBhcmVudE5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZ2V0Tm9kZShhZGRyLnN0YXJ0QWRkcmVzcywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgIWlnbm9yZUVuZCAmJiBhZGRyLmVuZEFkZHJlc3MgJiYgZ2V0Tm9kZShhZGRyLmVuZEFkZHJlc3MpO1xuICAgICAgICAgICAgICAgIHJldHVybiBtZTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Yik5pat57uZ5a6a55qEUmFuZ2Xlr7nosaHmmK/lkKblkozlvZPliY1SYW5nZeWvueixoeihqOekuueahOaYr+WQjOS4gOS4qumAieWMulxuICAgICAgICAgICAgICogQG1ldGhvZCBlcXVhbHNcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVFLmRvbS5SYW5nZSB9IOmcgOimgeWIpOaWreeahFJhbmdl5a+56LGhXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgQm9vbGVhbiB9IOWmguaenOe7meWumueahFJhbmdl5a+56LGh5LiO5b2T5YmNUmFuZ2Xlr7nosaHooajnpLrnmoTmmK/lkIzkuIDkuKrpgInljLrvvIwg5YiZ6L+U5ZuedHJ1Ze+8jCDlkKbliJnov5Tlm55mYWxzZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBlcXVhbHM6IGZ1bmN0aW9uIChybmcpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIHRoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3BdICE9PSBybmdbcF0pIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6YGN5Y6GcmFuZ2XlhoXnmoToioLngrnjgILmr4/lvZPpgY3ljobkuIDkuKroioLngrnml7bvvIwg6YO95Lya5omn6KGM5Y+C5pWw6aG5IGRvRm4g5oyH5a6a55qE5Ye95pWw77yMIOivpeWHveaVsOeahOaOpeWPl+W9k+WJjemBjeWOhueahOiKgueCuVxuICAgICAgICAgICAgICog5L2c5Li65YW25Y+C5pWw44CCXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHRyYXZlcnNhbFxuICAgICAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSAgZG9GbiDlr7nmr4/kuKrpgY3ljobnmoToioLngrnopoHmiafooYznmoTmlrnms5XvvIwg6K+l5pa55rOV5o6l5Y+X5b2T5YmN6YGN5Y6G55qE6IqC54K55L2c5Li65YW25Y+C5pWwXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUuZG9tLlJhbmdlIH0g5b2T5YmNcmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBodG1sXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPGJvZHk+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIDwhLS0g6YCJ5Yy65byA5aeLIC0tPlxuICAgICAgICAgICAgICogICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgICAgICAqICAgICA8YT48L2E+XG4gICAgICAgICAgICAgKiAgICAgPCEtLSDpgInljLrnu5PmnZ8gLS0+XG4gICAgICAgICAgICAgKiA8L2JvZHk+XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPHNjcmlwdD5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy9vdXRwdXQ6IDxzcGFuPjwvc3Bhbj48YT48L2E+XG4gICAgICAgICAgICAgKiAgICAgY29uc29sZS5sb2coIHJhbmdlLmNsb25lQ29udGVudHMoKSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICByYW5nZS50cmF2ZXJzYWwoIGZ1bmN0aW9uICggbm9kZSApIHtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgICAgIGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcbiAgICAgICAgICAgICAqICAgICAgICAgICAgIG5vZGUuY2xhc3NOYW1lID0gXCJ0ZXN0XCI7XG4gICAgICAgICAgICAgKiAgICAgICAgIH1cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgfSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL291dHB1dDogPHNwYW4gY2xhc3M9XCJ0ZXN0XCI+PC9zcGFuPjxhIGNsYXNzPVwidGVzdFwiPjwvYT5cbiAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggcmFuZ2UuY2xvbmVDb250ZW50cygpICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOmBjeWOhnJhbmdl5YaF55qE6IqC54K544CCXG4gICAgICAgICAgICAgKiDmr4/lvZPpgY3ljobkuIDkuKroioLngrnml7bvvIwg6YO95Lya5omn6KGM5Y+C5pWw6aG5IGRvRm4g5oyH5a6a55qE5Ye95pWw77yMIOivpeWHveaVsOeahOaOpeWPl+W9k+WJjemBjeWOhueahOiKgueCuVxuICAgICAgICAgICAgICog5L2c5Li65YW25Y+C5pWw44CCXG4gICAgICAgICAgICAgKiDlj6/ku6XpgJrov4flj4LmlbDpobkgZmlsdGVyRm4g5p2l5oyH5a6a5LiA5Liq6L+H5ruk5Zmo77yMIOWPquacieespuWQiOivpei/h+a7pOWZqOi/h+a7pOinhOWImeeahOiKgueCueaJjeS8muinplxuICAgICAgICAgICAgICog5Y+RZG9GbuWHveaVsOeahOaJp+ihjFxuICAgICAgICAgICAgICogQG1ldGhvZCB0cmF2ZXJzYWxcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gZG9GbiDlr7nmr4/kuKrpgY3ljobnmoToioLngrnopoHmiafooYznmoTmlrnms5XvvIwg6K+l5pa55rOV5o6l5Y+X5b2T5YmN6YGN5Y6G55qE6IqC54K55L2c5Li65YW25Y+C5pWwXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZpbHRlckZuIOi/h+a7pOWZqO+8jCDor6Xlh73mlbDmjqXlj5flvZPliY3pgY3ljobnmoToioLngrnkvZzkuLrlj4LmlbDvvIwg5aaC5p6c6K+l6IqC54K55ruh6Laz6L+H5rukXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICDop4TliJnvvIwg6K+36L+U5ZuedHJ1Ze+8jCDor6XoioLngrnkvJrop6blj5Fkb0Zu77yMIOWQpuWIme+8jCDor7fov5Tlm55mYWxzZe+8jCDliJnor6XoioLngrnkuI1cbiAgICAgICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgIOS8muinpuWPkWRvRm7jgIJcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS5kb20uUmFuZ2UgfSDlvZPliY1yYW5nZeWvueixoVxuICAgICAgICAgICAgICogQHNlZSBVRS5kb20uUmFuZ2U6dHJhdmVyc2FsKEZ1bmN0aW9uKVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGh0bWxcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8Ym9keT5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgPCEtLSDpgInljLrlvIDlp4sgLS0+XG4gICAgICAgICAgICAgKiAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICAgICAgICogICAgIDxhPjwvYT5cbiAgICAgICAgICAgICAqICAgICA8IS0tIOmAieWMuue7k+adnyAtLT5cbiAgICAgICAgICAgICAqIDwvYm9keT5cbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiA8c2NyaXB0PlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL291dHB1dDogPHNwYW4+PC9zcGFuPjxhPjwvYT5cbiAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggcmFuZ2UuY2xvbmVDb250ZW50cygpICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIHJhbmdlLnRyYXZlcnNhbCggZnVuY3Rpb24gKCBub2RlICkge1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAgICAgbm9kZS5jbGFzc05hbWUgPSBcInRlc3RcIjtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgfSwgZnVuY3Rpb24gKCBub2RlICkge1xuICAgICAgICAgICAgICogICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09IDE7XG4gICAgICAgICAgICAgKiAgICAgfSApO1xuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL291dHB1dDogPHNwYW4gY2xhc3M9XCJ0ZXN0XCI+PC9zcGFuPjxhIGNsYXNzPVwidGVzdFwiPjwvYT5cbiAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyggcmFuZ2UuY2xvbmVDb250ZW50cygpICk7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogPC9zY3JpcHQ+XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdHJhdmVyc2FsOiBmdW5jdGlvbiAoZG9GbiwgZmlsdGVyRm4pIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb2xsYXBzZWQpIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBib29rbWFyayA9IHRoaXMuY3JlYXRlQm9va21hcmsoKSxcbiAgICAgICAgICAgICAgICAgICAgZW5kID0gYm9va21hcmsuZW5kLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoYm9va21hcmsuc3RhcnQsIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnQgJiYgY3VycmVudCAhPT0gZW5kICYmIGRvbVV0aWxzLmdldFBvc2l0aW9uKGN1cnJlbnQsIGVuZCkgJiBkb21VdGlscy5QT1NJVElPTl9QUkVDRURJTkcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgZmlsdGVyRm4pO1xuICAgICAgICAgICAgICAgICAgICBkb0ZuKGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubW92ZVRvQm9va21hcmsoYm9va21hcmspO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICAvLyBjb3JlL1NlbGVjdGlvbi5qc1xuICAgIC8qKlxuICAgICAqIOmAiembhlxuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRS5kb21cbiAgICAgKiBAY2xhc3MgU2VsZWN0aW9uXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOmAieWMuumbhuWQiFxuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFLmRvbVxuICAgICAqIEBjbGFzcyBTZWxlY3Rpb25cbiAgICAgKi9cbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBnZXRCb3VuZGFyeUluZm9ybWF0aW9uKHJhbmdlLCBzdGFydCkge1xuICAgICAgICAgICAgdmFyIGdldEluZGV4ID0gZG9tVXRpbHMuZ2V0Tm9kZUluZGV4O1xuICAgICAgICAgICAgcmFuZ2UgPSByYW5nZS5kdXBsaWNhdGUoKTtcbiAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKHN0YXJ0KTtcbiAgICAgICAgICAgIHZhciBwYXJlbnQgPSByYW5nZS5wYXJlbnRFbGVtZW50KCk7XG4gICAgICAgICAgICAvL+WmguaenOiKgueCuemHjOayoeacieWtkOiKgueCue+8jOebtOaOpemAgOWHulxuICAgICAgICAgICAgaWYgKCFwYXJlbnQuaGFzQ2hpbGROb2RlcygpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY29udGFpbmVyOiBwYXJlbnQsIG9mZnNldDogMCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHNpYmxpbmdzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIHRlc3RSYW5nZSA9IHJhbmdlLmR1cGxpY2F0ZSgpLFxuICAgICAgICAgICAgICAgIHN0YXJ0SW5kZXggPSAwLFxuICAgICAgICAgICAgICAgIGVuZEluZGV4ID0gc2libGluZ3MubGVuZ3RoIC0gMSxcbiAgICAgICAgICAgICAgICBpbmRleCA9IC0xLFxuICAgICAgICAgICAgICAgIGRpc3RhbmNlO1xuICAgICAgICAgICAgd2hpbGUgKHN0YXJ0SW5kZXggPD0gZW5kSW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpbmRleCA9IE1hdGguZmxvb3IoKHN0YXJ0SW5kZXggKyBlbmRJbmRleCkgLyAyKTtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IHNpYmxpbmdzW2luZGV4XTtcbiAgICAgICAgICAgICAgICB0ZXN0UmFuZ2UubW92ZVRvRWxlbWVudFRleHQoY2hpbGQpO1xuICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IHRlc3RSYW5nZS5jb21wYXJlRW5kUG9pbnRzKCdTdGFydFRvU3RhcnQnLCByYW5nZSk7XG4gICAgICAgICAgICAgICAgaWYgKHBvc2l0aW9uID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBlbmRJbmRleCA9IGluZGV4IC0gMTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBvc2l0aW9uIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydEluZGV4ID0gaW5kZXggKyAxO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTA0M1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBjb250YWluZXI6IHBhcmVudCwgb2Zmc2V0OiBnZXRJbmRleChjaGlsZCkgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHtcbiAgICAgICAgICAgICAgICB0ZXN0UmFuZ2UubW92ZVRvRWxlbWVudFRleHQocGFyZW50KTtcbiAgICAgICAgICAgICAgICB0ZXN0UmFuZ2Uuc2V0RW5kUG9pbnQoJ1N0YXJ0VG9TdGFydCcsIHJhbmdlKTtcbiAgICAgICAgICAgICAgICBkaXN0YW5jZSA9IHRlc3RSYW5nZS50ZXh0LnJlcGxhY2UoLyhcXHJcXG58XFxyKS9nLCAnXFxuJykubGVuZ3RoO1xuICAgICAgICAgICAgICAgIHNpYmxpbmdzID0gcGFyZW50LmNoaWxkTm9kZXM7XG4gICAgICAgICAgICAgICAgaWYgKCFkaXN0YW5jZSkge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZCA9IHNpYmxpbmdzW3NpYmxpbmdzLmxlbmd0aCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBjb250YWluZXI6IGNoaWxkLCBvZmZzZXQ6IGNoaWxkLm5vZGVWYWx1ZS5sZW5ndGggfTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgaSA9IHNpYmxpbmdzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB3aGlsZSAoZGlzdGFuY2UgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3RhbmNlIC09IHNpYmxpbmdzWy0taV0ubm9kZVZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY29udGFpbmVyOiBzaWJsaW5nc1tpXSwgb2Zmc2V0OiAtZGlzdGFuY2UgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRlc3RSYW5nZS5jb2xsYXBzZShwb3NpdGlvbiA+IDApO1xuICAgICAgICAgICAgdGVzdFJhbmdlLnNldEVuZFBvaW50KHBvc2l0aW9uID4gMCA/ICdTdGFydFRvU3RhcnQnIDogJ0VuZFRvU3RhcnQnLCByYW5nZSk7XG4gICAgICAgICAgICBkaXN0YW5jZSA9IHRlc3RSYW5nZS50ZXh0LnJlcGxhY2UoLyhcXHJcXG58XFxyKS9nLCAnXFxuJykubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKCFkaXN0YW5jZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkdGQuJGVtcHR5W2NoaWxkLnRhZ05hbWVdIHx8IGR0ZC4kbm9uQ2hpbGRbY2hpbGQudGFnTmFtZV1cbiAgICAgICAgICAgICAgICAgICAgPyB7IGNvbnRhaW5lcjogcGFyZW50LCBvZmZzZXQ6IGdldEluZGV4KGNoaWxkKSArIChwb3NpdGlvbiA+IDAgPyAwIDogMSkgfVxuICAgICAgICAgICAgICAgICAgICA6IHsgY29udGFpbmVyOiBjaGlsZCwgb2Zmc2V0OiBwb3NpdGlvbiA+IDAgPyAwIDogY2hpbGQuY2hpbGROb2Rlcy5sZW5ndGggfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdoaWxlIChkaXN0YW5jZSA+IDApIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gY2hpbGRbcG9zaXRpb24gPiAwID8gJ3ByZXZpb3VzU2libGluZycgOiAnbmV4dFNpYmxpbmcnXTtcbiAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2UgLT0gY2hpbGQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGNvbnRhaW5lcjogcGFyZW50LCBvZmZzZXQ6IGdldEluZGV4KHByZSkgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBjb250YWluZXI6IGNoaWxkLCBvZmZzZXQ6IHBvc2l0aW9uID4gMCA/IC1kaXN0YW5jZSA6IGNoaWxkLm5vZGVWYWx1ZS5sZW5ndGggKyBkaXN0YW5jZSB9O1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWwhmllUmFuZ2XovazmjaLkuLpSYW5nZeWvueixoVxuICAgICAgICAgKiBAcGFyYW0ge1JhbmdlfSAgIGllUmFuZ2UgICAgaWVSYW5nZeWvueixoVxuICAgICAgICAgKiBAcGFyYW0ge1JhbmdlfSAgIHJhbmdlICAgICAgUmFuZ2Xlr7nosaFcbiAgICAgICAgICogQHJldHVybiAge1JhbmdlfSAgcmFuZ2UgICAgICAg6L+U5Zue6L2s5o2i5ZCO55qEUmFuZ2Xlr7nosaFcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHRyYW5zZm9ybUlFUmFuZ2VUb1JhbmdlKGllUmFuZ2UsIHJhbmdlKSB7XG4gICAgICAgICAgICBpZiAoaWVSYW5nZS5pdGVtKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZShpZVJhbmdlLml0ZW0oMCkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgYmkgPSBnZXRCb3VuZGFyeUluZm9ybWF0aW9uKGllUmFuZ2UsIHRydWUpO1xuICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KGJpLmNvbnRhaW5lciwgYmkub2Zmc2V0KTtcbiAgICAgICAgICAgICAgICBpZiAoaWVSYW5nZS5jb21wYXJlRW5kUG9pbnRzKCdTdGFydFRvRW5kJywgaWVSYW5nZSkgIT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBiaSA9IGdldEJvdW5kYXJ5SW5mb3JtYXRpb24oaWVSYW5nZSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQoYmkuY29udGFpbmVyLCBiaS5vZmZzZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByYW5nZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflvpdpZVJhbmdlXG4gICAgICAgICAqIEBwYXJhbSB7U2VsZWN0aW9ufSBzZWwgICAgU2VsZWN0aW9u5a+56LGhXG4gICAgICAgICAqIEByZXR1cm4ge2llUmFuZ2V9ICAgIOW+l+WIsGllUmFuZ2VcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9nZXRJRVJhbmdlKHNlbCkge1xuICAgICAgICAgICAgdmFyIGllUmFuZ2U7XG4gICAgICAgICAgICAvL2ll5LiL5pyJ5Y+v6IO95oql6ZSZXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGllUmFuZ2UgPSBzZWwuZ2V0TmF0aXZlKCkuY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBlbCA9IGllUmFuZ2UuaXRlbSA/IGllUmFuZ2UuaXRlbSgwKSA6IGllUmFuZ2UucGFyZW50RWxlbWVudCgpO1xuICAgICAgICAgICAgaWYgKChlbC5vd25lckRvY3VtZW50IHx8IGVsKSA9PT0gc2VsLmRvY3VtZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGllUmFuZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBTZWxlY3Rpb24gPSAoZG9tLlNlbGVjdGlvbiA9IGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgaWZyYW1lO1xuICAgICAgICAgICAgbWUuZG9jdW1lbnQgPSBkb2M7XG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5pZTliZWxvdykge1xuICAgICAgICAgICAgICAgIGlmcmFtZSA9IGRvbVV0aWxzLmdldFdpbmRvdyhkb2MpLmZyYW1lRWxlbWVudDtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbihpZnJhbWUsICdiZWZvcmVkZWFjdGl2YXRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5fYmFrSUVSYW5nZSA9IG1lLmdldElFUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbihpZnJhbWUsICdhY3RpdmF0ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghX2dldElFUmFuZ2UobWUpICYmIG1lLl9iYWtJRVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX2Jha0lFUmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7fVxuICAgICAgICAgICAgICAgICAgICBtZS5fYmFrSUVSYW5nZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZnJhbWUgPSBkb2MgPSBudWxsO1xuICAgICAgICB9KTtcblxuICAgICAgICBTZWxlY3Rpb24ucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgcmFuZ2VJbkJvZHk6IGZ1bmN0aW9uIChybmcsIHR4dFJhbmdlKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5vZGUgPVxuICAgICAgICAgICAgICAgICAgICBicm93c2VyLmllOWJlbG93IHx8IHR4dFJhbmdlID8gKHJuZy5pdGVtID8gcm5nLml0ZW0oKSA6IHJuZy5wYXJlbnRFbGVtZW50KCkpIDogcm5nLnN0YXJ0Q29udGFpbmVyO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUgPT09IHRoaXMuZG9jdW1lbnQuYm9keSB8fCBkb21VdGlscy5pbkRvYyhub2RlLCB0aGlzLmRvY3VtZW50KTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5Y6f55Sfc2VsZWNpdG9u5a+56LGhXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldE5hdGl2ZVxuICAgICAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOiOt+W+l3NlbGVjdGlvbuWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5zZWxlY3Rpb24uZ2V0TmF0aXZlKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0TmF0aXZlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvYyA9IHRoaXMuZG9jdW1lbnQ7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFkb2MgPyBudWxsIDogYnJvd3Nlci5pZTliZWxvdyA/IGRvYy5zZWxlY3Rpb24gOiBkb21VdGlscy5nZXRXaW5kb3coZG9jKS5nZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635b6XaWVSYW5nZVxuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRJRVJhbmdlXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgT2JqZWN0IH0g6L+U5ZueaWXljp/nlJ/nmoRSYW5nZVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5zZWxlY3Rpb24uZ2V0SUVSYW5nZSgpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldElFUmFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaWVSYW5nZSA9IF9nZXRJRVJhbmdlKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICghaWVSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYmFrSUVSYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Jha0lFUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGllUmFuZ2U7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOe8k+WtmOW9k+WJjemAieWMuueahHJhbmdl5ZKM6YCJ5Yy655qE5byA5aeL6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGNhY2hlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNhY2hlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NhY2hlZFJhbmdlID0gdGhpcy5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NhY2hlZFN0YXJ0RWxlbWVudCA9IHRoaXMuZ2V0U3RhcnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jYWNoZWRTdGFydEVsZW1lbnRQYXRoID0gdGhpcy5nZXRTdGFydEVsZW1lbnRQYXRoKCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPlumAieWMuuW8gOWni+S9jee9rueahOeItuiKgueCueWIsGJvZHlcbiAgICAgICAgICAgICAqIEBtZXRob2QgZ2V0U3RhcnRFbGVtZW50UGF0aFxuICAgICAgICAgICAgICogQHJldHVybiB7IEFycmF5IH0g6L+U5Zue54i26IqC54K56ZuG5ZCIXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0U3RhcnRFbGVtZW50UGF0aDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jYWNoZWRTdGFydEVsZW1lbnRQYXRoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZWRTdGFydEVsZW1lbnRQYXRoO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLmdldFN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5maW5kUGFyZW50cyhzdGFydCwgdHJ1ZSwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5riF56m657yT5a2YXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNsZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY2FjaGVkU3RhcnRFbGVtZW50UGF0aCA9IHRoaXMuX2NhY2hlZFJhbmdlID0gdGhpcy5fY2FjaGVkU3RhcnRFbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog57yW6L6R5Zmo5piv5ZCm5b6X5Yiw5LqG6YCJ5Yy6XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGlzRm9jdXNcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaXNGb2N1czogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllOWJlbG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmF0aXZlUmFuZ2UgPSBfZ2V0SUVSYW5nZSh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhIShuYXRpdmVSYW5nZSAmJiB0aGlzLnJhbmdlSW5Cb2R5KG5hdGl2ZVJhbmdlKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gISF0aGlzLmdldE5hdGl2ZSgpLnJhbmdlQ291bnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPlumAieWMuuWvueW6lOeahFJhbmdlXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldFJhbmdlXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgT2JqZWN0IH0g5b6X5YiwUmFuZ2Xlr7nosaFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3Iuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0UmFuZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIG9wdGltemUocmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gbWUuZG9jdW1lbnQuYm9keS5maXJzdENoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGFwc2VkID0gcmFuZ2UuY29sbGFwc2VkO1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQgJiYgY2hpbGQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoY2hpbGQsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICghcmFuZ2Uuc3RhcnRDb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KG1lLmRvY3VtZW50LmJvZHksIDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKG1lLl9jYWNoZWRSYW5nZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZWRSYW5nZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gbmV3IGJhaWR1LmVkaXRvci5kb20uUmFuZ2UobWUuZG9jdW1lbnQpO1xuXG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWU5YmVsb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5hdGl2ZVJhbmdlID0gbWUuZ2V0SUVSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmF0aXZlUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5aSH5Lu955qEX2Jha0lFUmFuZ2Xlj6/og73lt7Lnu4/lrp7mlYjkuobvvIxkb23moJHlj5HnlJ/kuoblj5jljJbmr5TlpoLku47mupDnoIHmqKHlvI/liIflm57mnaXvvIzmiYDku6V0cnnkuIDkuIvvvIzlrp7mlYjlsLHmlL7liLBib2R55byA5aeL5L2N572uXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybUlFUmFuZ2VUb1JhbmdlKG5hdGl2ZVJhbmdlLCByYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW16ZShyYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpbXplKHJhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWwgPSBtZS5nZXROYXRpdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbCAmJiBzZWwucmFuZ2VDb3VudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0UmFuZ2UgPSBzZWwuZ2V0UmFuZ2VBdCgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsYXN0UmFuZ2UgPSBzZWwuZ2V0UmFuZ2VBdChzZWwucmFuZ2VDb3VudCAtIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0U3RhcnQoZmlyc3RSYW5nZS5zdGFydENvbnRhaW5lciwgZmlyc3RSYW5nZS5zdGFydE9mZnNldClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0RW5kKGxhc3RSYW5nZS5lbmRDb250YWluZXIsIGxhc3RSYW5nZS5lbmRPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCAmJiBkb21VdGlscy5pc0JvZHkocmFuZ2Uuc3RhcnRDb250YWluZXIpICYmICFyYW5nZS5zdGFydE9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGltemUocmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZToxNzM0IOacieWPr+iDveW3sue7j+S4jeWcqGRvbeagkeS4iuS6hu+8jOagh+ivhueahOiKgueCuVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Jha1JhbmdlICYmIGRvbVV0aWxzLmluRG9jKHRoaXMuX2Jha1JhbmdlLnN0YXJ0Q29udGFpbmVyLCB0aGlzLmRvY3VtZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9iYWtSYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGltemUocmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAodGhpcy5fYmFrUmFuZ2UgPSByYW5nZSk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluW8gOWni+WFg+e0oO+8jOeUqOS6jueKtuaAgeWPjeWwhFxuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRTdGFydFxuICAgICAgICAgICAgICogQHJldHVybiB7IEVsZW1lbnQgfSDojrflvpflvIDlp4vlhYPntKBcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3Iuc2VsZWN0aW9uLmdldFN0YXJ0KCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0U3RhcnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY2FjaGVkU3RhcnRFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWNoZWRTdGFydEVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IGJyb3dzZXIuaWU5YmVsb3cgPyB0aGlzLmdldElFUmFuZ2UoKSA6IHRoaXMuZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgICAgICAgICB0bXAsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudDtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZTliZWxvdykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RvZG8g57uZ56ys5LiA5Liq5YC85Y+v6IO95Lya5pyJ6Zeu6aKYXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy9jb250cm9s5YWD57SgXG4gICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZS5pdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmFuZ2UuaXRlbSgwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHJhbmdlLmR1cGxpY2F0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAvL+S/ruato2ll5LiLPGI+eDwvYj5beHhdIOmXreWQiOWQjiA8Yj54fDwvYj54eFxuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS50ZXh0Lmxlbmd0aCA+IDAgJiYgdG1wUmFuZ2UubW92ZVN0YXJ0KCdjaGFyYWN0ZXInLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UuY29sbGFwc2UoMSk7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gdG1wUmFuZ2UucGFyZW50RWxlbWVudCgpO1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSB0bXAgPSByYW5nZS5wYXJlbnRFbGVtZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgodG1wID0gdG1wLnBhcmVudE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG1wID09IHN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zaHJpbmtCb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSAmJiBzdGFydC5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnQuY2hpbGROb2Rlc1tNYXRoLm1pbihzdGFydC5jaGlsZE5vZGVzLmxlbmd0aCAtIDEsIHJhbmdlLnN0YXJ0T2Zmc2V0KV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBzdGFydDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5b6X5Yiw6YCJ5Yy65Lit55qE5paH5pysXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldFRleHRcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDpgInljLrkuK3ljIXlkKvnmoTmlofmnKxcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3Iuc2VsZWN0aW9uLmdldFRleHQoKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRUZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5hdGl2ZVNlbCwgbmF0aXZlUmFuZ2U7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNGb2N1cygpICYmIChuYXRpdmVTZWwgPSB0aGlzLmdldE5hdGl2ZSgpKSkge1xuICAgICAgICAgICAgICAgICAgICBuYXRpdmVSYW5nZSA9IGJyb3dzZXIuaWU5YmVsb3cgPyBuYXRpdmVTZWwuY3JlYXRlUmFuZ2UoKSA6IG5hdGl2ZVNlbC5nZXRSYW5nZUF0KDApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYnJvd3Nlci5pZTliZWxvdyA/IG5hdGl2ZVJhbmdlLnRleHQgOiBuYXRpdmVSYW5nZS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOa4hemZpOmAieWMulxuICAgICAgICAgICAgICogQG1ldGhvZCBjbGVhclJhbmdlXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNlbGVjdGlvbi5jbGVhclJhbmdlKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgY2xlYXJSYW5nZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0TmF0aXZlKClbYnJvd3Nlci5pZTliZWxvdyA/ICdlbXB0eScgOiAncmVtb3ZlQWxsUmFuZ2VzJ10oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KSgpO1xuXG4gICAgLy8gY29yZS9FZGl0b3IuanNcbiAgICAvKipcbiAgICAgKiDnvJbovpHlmajkuLvnsbvvvIzljIXlkKvnvJbovpHlmajmj5DkvpvnmoTlpKfpg6jliIblhaznlKjmjqXlj6NcbiAgICAgKiBAZmlsZVxuICAgICAqIEBtb2R1bGUgVUVcbiAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFVFZGl0b3LlhaznlKjnqbrpl7TvvIxVRWRpdG9y5omA5pyJ55qE5Yqf6IO96YO95oyC6L295Zyo6K+l56m66Ze05LiLXG4gICAgICogQHVuZmlsZVxuICAgICAqIEBtb2R1bGUgVUVcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFVFZGl0b3LnmoTmoLjlv4PnsbvvvIzkuLrnlKjmiLfmj5DkvpvkuI7nvJbovpHlmajkuqTkupLnmoTmjqXlj6PjgIJcbiAgICAgKiBAdW5maWxlXG4gICAgICogQG1vZHVsZSBVRVxuICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgKi9cblxuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1aWQgPSAwLFxuICAgICAgICAgICAgX3NlbGVjdGlvbkNoYW5nZVRpbWVyO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5bnvJbovpHlmajnmoRodG1s5YaF5a6577yM6LWL5YC85Yiw57yW6L6R5Zmo5omA5Zyo6KGo5Y2V55qEdGV4dGFyZWHmlofmnKzln5/ph4zpnaJcbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICogQG1ldGhvZCBzZXRWYWx1ZVxuICAgICAgICAgKiBAcGFyYW0geyBVRS5FZGl0b3IgfSBlZGl0b3Ig57yW6L6R5Zmo5LqL5L6LXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBzZXRWYWx1ZShmb3JtLCBlZGl0b3IpIHtcbiAgICAgICAgICAgIHZhciB0ZXh0YXJlYTtcbiAgICAgICAgICAgIGlmIChlZGl0b3IudGV4dGFyZWEpIHtcbiAgICAgICAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZWRpdG9yLnRleHRhcmVhKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgdGksIHRpcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGZvcm0sICd0ZXh0YXJlYScpOyAodGkgPSB0aXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpLmlkID09ICd1ZWRpdG9yX3RleHRhcmVhXycgKyBlZGl0b3Iub3B0aW9ucy50ZXh0YXJlYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRhcmVhID0gdGk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0YXJlYSA9IGVkaXRvci50ZXh0YXJlYTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRleHRhcmVhKSB7XG4gICAgICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChcbiAgICAgICAgICAgICAgICAgICAgKHRleHRhcmVhID0gZG9tVXRpbHMuY3JlYXRlRWxlbWVudChkb2N1bWVudCwgJ3RleHRhcmVhJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogZWRpdG9yLm9wdGlvbnMudGV4dGFyZWEsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogJ3VlZGl0b3JfdGV4dGFyZWFfJyArIGVkaXRvci5vcHRpb25zLnRleHRhcmVhLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdkaXNwbGF5Om5vbmUnXG4gICAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgLy/kuI3opoHkuqfnlJ/lpJrkuKp0ZXh0YXJlYVxuICAgICAgICAgICAgICAgIGVkaXRvci50ZXh0YXJlYSA9IHRleHRhcmVhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgIXRleHRhcmVhLmdldEF0dHJpYnV0ZSgnbmFtZScpICYmIHRleHRhcmVhLnNldEF0dHJpYnV0ZSgnbmFtZScsIGVkaXRvci5vcHRpb25zLnRleHRhcmVhKTtcbiAgICAgICAgICAgIHRleHRhcmVhLnZhbHVlID0gZWRpdG9yLmhhc0NvbnRlbnRzKClcbiAgICAgICAgICAgICAgICA/IGVkaXRvci5vcHRpb25zLmFsbEh0bWxFbmFibGVkXG4gICAgICAgICAgICAgICAgICAgID8gZWRpdG9yLmdldEFsbEh0bWwoKVxuICAgICAgICAgICAgICAgICAgICA6IGVkaXRvci5nZXRDb250ZW50KG51bGwsIG51bGwsIHRydWUpXG4gICAgICAgICAgICAgICAgOiAnJztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBsb2FkUGx1Z2lucyhtZSkge1xuICAgICAgICAgICAgLy/liJ3lp4vljJbmj5Lku7ZcbiAgICAgICAgICAgIGZvciAodmFyIHBpIGluIFVFLnBsdWdpbnMpIHtcbiAgICAgICAgICAgICAgICBVRS5wbHVnaW5zW3BpXS5jYWxsKG1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjaGVja0N1ckxhbmcoSTE4Tikge1xuICAgICAgICAgICAgZm9yICh2YXIgbGFuZyBpbiBJMThOKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBsYW5nUmVhZGllZChtZSkge1xuICAgICAgICAgICAgbWUubGFuZ0lzUmVhZHkgPSB0cnVlO1xuXG4gICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2xhbmdSZWFkeScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOe8lui+keWZqOWHhuWkh+Wwsee7quWQjuS8muinpuWPkeivpeS6i+S7tlxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IHJlYWR5XG4gICAgICAgICAqIEByZW1pbmQgcmVuZGVy5pa55rOV5omn6KGM5a6M5oiQ5LmL5ZCOLOS8muinpuWPkeivpeS6i+S7tlxuICAgICAgICAgKiBAcmVtaW5kXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogZWRpdG9yLmFkZExpc3RlbmVyKCAncmVhZHknLCBmdW5jdGlvbiggZWRpdG9yICkge1xuICAgICAgICAgKiAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKCAnZm9jdXMnICk7IC8v57yW6L6R5Zmo5a625Zyo5a6M5oiQ5ZCO77yM6K6p57yW6L6R5Zmo5ou/5Yiw54Sm54K5XG4gICAgICAgICAqIH0gKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICAvKipcbiAgICAgICAgICog5omn6KGMZGVzdHJveeaWueazlSzkvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBkZXN0cm95XG4gICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOmRlc3Ryb3koKVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaJp+ihjHJlc2V05pa55rOVLOS8muinpuWPkeivpeS6i+S7tlxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IHJlc2V0XG4gICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOnJlc2V0KClcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmiafooYxmb2N1c+aWueazlSzkvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBmb2N1c1xuICAgICAgICAgKiBAc2VlIFVFLkVkaXRvcjpmb2N1cyhCb29sZWFuKVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOivreiogOWKoOi9veWujOaIkOS8muinpuWPkeivpeS6i+S7tlxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IGxhbmdSZWFkeVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOi/kOihjOWRveS7pOS5i+WQjuS8muinpuWPkeivpeWRveS7pFxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IGJlZm9yZUV4ZWNDb21tYW5kXG4gICAgICAgICAqL1xuICAgICAgICAvKipcbiAgICAgICAgICog6L+Q6KGM5ZG95Luk5LmL5ZCO5Lya6Kem5Y+R6K+l5ZG95LukXG4gICAgICAgICAqIEBtb2R1bGUgVUVcbiAgICAgICAgICogQGNsYXNzIEVkaXRvclxuICAgICAgICAgKiBAZXZlbnQgYWZ0ZXJFeGVjQ29tbWFuZFxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOi/kOihjOWRveS7pOS5i+WJjeS8muinpuWPkeivpeWRveS7pFxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IGZpcnN0QmVmb3JlRXhlY0NvbW1hbmRcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlnKhnZXRDb250ZW505pa55rOV5omn6KGM5LmL5YmN5Lya6Kem5Y+R6K+l5LqL5Lu2XG4gICAgICAgICAqIEBtb2R1bGUgVUVcbiAgICAgICAgICogQGNsYXNzIEVkaXRvclxuICAgICAgICAgKiBAZXZlbnQgYmVmb3JlR2V0Q29udGVudFxuICAgICAgICAgKiBAc2VlIFVFLkVkaXRvcjpnZXRDb250ZW50KClcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlnKhnZXRDb250ZW505pa55rOV5omn6KGM5LmL5ZCO5Lya6Kem5Y+R6K+l5LqL5Lu2XG4gICAgICAgICAqIEBtb2R1bGUgVUVcbiAgICAgICAgICogQGNsYXNzIEVkaXRvclxuICAgICAgICAgKiBAZXZlbnQgYWZ0ZXJHZXRDb250ZW50XG4gICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOmdldENvbnRlbnQoKVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqGdldEFsbEh0bWzmlrnms5XmiafooYzml7bkvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBnZXRBbGxIdG1sXG4gICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOmdldEFsbEh0bWwoKVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqHNldENvbnRlbnTmlrnms5XmiafooYzkuYvliY3kvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBiZWZvcmVTZXRDb250ZW50XG4gICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOnNldENvbnRlbnQoU3RyaW5nKVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqHNldENvbnRlbnTmlrnms5XmiafooYzkuYvlkI7kvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBhZnRlclNldENvbnRlbnRcbiAgICAgICAgICogQHNlZSBVRS5FZGl0b3I6c2V0Q29udGVudChTdHJpbmcpXG4gICAgICAgICAqL1xuICAgICAgICAvKipcbiAgICAgICAgICog5q+P5b2T57yW6L6R5Zmo5YaF6YOo6YCJ5Yy65Y+R55Sf5pS55Y+Y5pe277yM5bCG6Kem5Y+R6K+l5LqL5Lu2XG4gICAgICAgICAqIEBldmVudCBzZWxlY3Rpb25jaGFuZ2VcbiAgICAgICAgICogQHdhcm5pbmcg6K+l5LqL5Lu255qE6Kem5Y+R6Z2e5bi46aKR57mB77yM5LiN5bu66K6u5Zyo6K+l5LqL5Lu255qE5aSE55CG6L+H56iL5Lit5YGa6YeN6YeP57qn55qE5aSE55CGXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogZWRpdG9yLmFkZExpc3RlbmVyKCAnc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24oIGVkaXRvciApIHtcbiAgICAgICAgICogICAgIGNvbnNvbGUubG9nKCfpgInljLrlj5HnlJ/mlLnlj5gnKTtcbiAgICAgICAgICogfVxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWcqOaJgOaciXNlbGVjdGlvbmNoYW5nZeeahOebkeWQrOWHveaVsOaJp+ihjOS5i+WJje+8jOS8muinpuWPkeivpeS6i+S7tlxuICAgICAgICAgKiBAbW9kdWxlIFVFXG4gICAgICAgICAqIEBjbGFzcyBFZGl0b3JcbiAgICAgICAgICogQGV2ZW50IGJlZm9yZVNlbGVjdGlvbkNoYW5nZVxuICAgICAgICAgKiBAc2VlIFVFLkVkaXRvcjpzZWxlY3Rpb25jaGFuZ2VcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlnKjmiYDmnIlzZWxlY3Rpb25jaGFuZ2XnmoTnm5HlkKzlh73mlbDmiafooYzlrozkuYvlkI7vvIzkvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBhZnRlclNlbGVjdGlvbkNoYW5nZVxuICAgICAgICAgKiBAc2VlIFVFLkVkaXRvcjpzZWxlY3Rpb25jaGFuZ2VcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnvJbovpHlmajlhoXlrrnlj5HnlJ/mlLnlj5jml7bkvJrop6blj5Hor6Xkuovku7ZcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgRWRpdG9yXG4gICAgICAgICAqIEBldmVudCBjb250ZW50Q2hhbmdlXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDku6Xpu5jorqTlj4LmlbDmnoTlu7rkuIDkuKrnvJbovpHlmajlrp7kvotcbiAgICAgICAgICogQGNvbnN0cnVjdG9yXG4gICAgICAgICAqIEByZW1pbmQg6YCa6L+HIOaUueaehOmAoOaWueazleWunuS+i+WMlueahOe8lui+keWZqCzkuI3luKZ1aeWxgi7pnIDopoFyZW5kZXLliLDkuIDkuKrlrrnlmags57yW6L6R5Zmo5a6e5L6L5omN6IO95q2j5bi45riy5p+T5Yiw6aG16Z2iXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIGVkaXRvciA9IG5ldyBVRS5FZGl0b3IoKTtcbiAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCdibG9kJyk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKiBAc2VlIFVFLkNvbmZpZ1xuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5Lul57uZ5a6a55qE5Y+C5pWw6ZuG5ZCI5Yib5bu65LiA5Liq57yW6L6R5Zmo5a6e5L6L77yM5a+55LqO5pyq5oyH5a6a55qE5Y+C5pWw77yM5bCG5bqU55So6buY6K6k5Y+C5pWw44CCXG4gICAgICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAgICAgKiBAcmVtaW5kIOmAmui/hyDmlLnmnoTpgKDmlrnms5Xlrp7kvovljJbnmoTnvJbovpHlmags5LiN5bimdWnlsYIu6ZyA6KaBcmVuZGVy5Yiw5LiA5Liq5a655ZmoLOe8lui+keWZqOWunuS+i+aJjeiDveato+W4uOa4suafk+WIsOmhtemdolxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBzZXR0aW5nIOWIm+W7uue8lui+keWZqOeahOWPguaVsFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIHZhciBlZGl0b3IgPSBuZXcgVUUuRWRpdG9yKCk7XG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCgnYmxvZCcpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICogQHNlZSBVRS5Db25maWdcbiAgICAgICAgICovXG4gICAgICAgIHZhciBFZGl0b3IgPSAoVUUuRWRpdG9yID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICBtZS51aWQgPSB1aWQrKztcbiAgICAgICAgICAgIEV2ZW50QmFzZS5jYWxsKG1lKTtcbiAgICAgICAgICAgIG1lLmNvbW1hbmRzID0ge307XG4gICAgICAgICAgICBtZS5vcHRpb25zID0gdXRpbHMuZXh0ZW5kKHV0aWxzLmNsb25lKG9wdGlvbnMgfHwge30pLCBVRURJVE9SX0NPTkZJRywgdHJ1ZSk7XG4gICAgICAgICAgICBtZS5zaG9ydGN1dGtleXMgPSB7fTtcbiAgICAgICAgICAgIG1lLmlucHV0UnVsZXMgPSBbXTtcbiAgICAgICAgICAgIG1lLm91dHB1dFJ1bGVzID0gW107XG4gICAgICAgICAgICAvL+iuvue9rum7mOiupOeahOW4uOeUqOWxnuaAp1xuICAgICAgICAgICAgbWUuc2V0T3B0KEVkaXRvci5kZWZhdWx0T3B0aW9ucyhtZSkpO1xuXG4gICAgICAgICAgICAvKiDlsJ3or5XlvILmraXliqDovb3lkI7lj7DphY3nva4gKi9cbiAgICAgICAgICAgIG1lLmxvYWRTZXJ2ZXJDb25maWcoKTtcblxuICAgICAgICAgICAgaWYgKCF1dGlscy5pc0VtcHR5T2JqZWN0KFVFLkkxOE4pKSB7XG4gICAgICAgICAgICAgICAgLy/kv67mlLnpu5jorqTnmoTor63oqIDnsbvlnotcbiAgICAgICAgICAgICAgICBtZS5vcHRpb25zLmxhbmcgPSBjaGVja0N1ckxhbmcoVUUuSTE4Tik7XG4gICAgICAgICAgICAgICAgVUUucGx1Z2luLmxvYWQobWUpO1xuICAgICAgICAgICAgICAgIGxhbmdSZWFkaWVkKG1lKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdXRpbHMubG9hZEZpbGUoXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM6IG1lLm9wdGlvbnMubGFuZ1BhdGggKyBtZS5vcHRpb25zLmxhbmcgKyAnLycgKyBtZS5vcHRpb25zLmxhbmcgKyAnLmpzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhZzogJ3NjcmlwdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAndGV4dC9qYXZhc2NyaXB0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmVyOiAnZGVmZXInXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFVFLnBsdWdpbi5sb2FkKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmdSZWFkaWVkKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIFVFLmluc3RhbnRzWyd1ZWRpdG9ySW5zdGFudCcgKyBtZS51aWRdID0gbWU7XG4gICAgICAgIH0pO1xuICAgICAgICBFZGl0b3IucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgcmVnaXN0ZXJDb21tYW5kOiBmdW5jdGlvbiAobmFtZSwgb2JqKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21tYW5kc1tuYW1lXSA9IG9iajtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOe8lui+keWZqOWvueWkluaPkOS+m+eahOebkeWQrHJlYWR55LqL5Lu255qE5o6l5Y+j77yMIOmAmui/h+iwg+eUqOivpeaWueazle+8jOi+vuWIsOeahOaViOaenOS4juebkeWQrHJlYWR55LqL5Lu25piv5LiA6Ie055qEXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlYWR5XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IGZuIOe8lui+keWZqHJlYWR55LmL5ZCO5omA5omn6KGM55qE5Zue6LCDLCDlpoLmnpzlnKjms6jlhozkuovku7bkuYvliY3nvJbovpHlmajlt7Lnu49yZWFkee+8jOWwhuS8mlxuICAgICAgICAgICAgICog56uL5Y2z6Kem5Y+R6K+l5Zue6LCD44CCXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOmcgOimgeetieW+hee8lui+keWZqOWKoOi9veWujOaIkOWQjuaJjeiDveaJp+ihjOeahOS7o+eggSzlj6/ku6Xkvb/nlKjor6Xmlrnms5XkvKDlhaVcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IucmVhZHkoIGZ1bmN0aW9uKCBlZGl0b3IgKSB7XG4gICAgICAgICAgICAgKiAgICAgZWRpdG9yLnNldENvbnRlbnQoJ+WIneWni+WMluWujOavlScpO1xuICAgICAgICAgICAgICogfSApO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKiBAc2VlIFVFLkVkaXRvci5ldmVudDpyZWFkeVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZWFkeTogZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuaXNSZWFkeSA/IGZuLmFwcGx5KG1lKSA6IG1lLmFkZExpc3RlbmVyKCdyZWFkeScsIGZuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOivpeaWueazleaYr+aPkOS+m+e7meaPkuS7tumHjOmdouS9v+eUqO+8jOiuvue9rumFjee9rumhuem7mOiupOWAvFxuICAgICAgICAgICAgICogQG1ldGhvZCBzZXRPcHRcbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOS4ieWkhOiuvue9rumFjee9rumhueeahOS8mOWFiOe6pzog5a6e5L6L5YyW5pe25Lyg5YWl5Y+C5pWwID4gc2V0T3B0KCnorr7nva4gPiBjb25maWfmlofku7bph4zorr7nva5cbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleS7heS+m+e8lui+keWZqOaPkuS7tuWGhemDqOWSjOe8lui+keWZqOWIneWni+WMluaXtuiwg+eUqO+8jOWFtuS7luWcsOaWueS4jeiDveiwg+eUqOOAglxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0ga2V5IOe8lui+keWZqOeahOWPr+aOpeWPl+eahOmAiemhueWQjeensFxuICAgICAgICAgICAgICogQHBhcmFtIHsgKiB9IHZhbCAg6K+l6YCJ6aG55Y+v5o6l5Y+X55qE5YC8XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNldE9wdCggJ2luaXRDb250ZW50JywgJ+asoui/juS9v+eUqOe8lui+keWZqCcgKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6K+l5pa55rOV5piv5o+Q5L6b57uZ5o+S5Lu26YeM6Z2i5L2/55So77yM5Lule2tleTp2YWx1ZX3pm4blkIjnmoTmlrnlvI/orr7nva7mj5Lku7blhoXnlKjliLDnmoTphY3nva7pobnpu5jorqTlgLxcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0T3B0XG4gICAgICAgICAgICAgKiBAd2FybmluZyDkuInlpITorr7nva7phY3nva7pobnnmoTkvJjlhYjnuqc6IOWunuS+i+WMluaXtuS8oOWFpeWPguaVsCA+IHNldE9wdCgp6K6+572uID4gY29uZmln5paH5Lu26YeM6K6+572uXG4gICAgICAgICAgICAgKiBAd2FybmluZyDor6Xmlrnms5Xku4XkvpvnvJbovpHlmajmj5Lku7blhoXpg6jlkoznvJbovpHlmajliJ3lp4vljJbml7bosIPnlKjvvIzlhbbku5blnLDmlrnkuI3og73osIPnlKjjgIJcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IG9wdGlvbnMg5bCG6KaB6K6+572u55qE6YCJ6aG555qE6ZSu5YC85a+55a+56LGhXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNldE9wdCgge1xuICAgICAgICAgICAgICogICAgICdpbml0Q29udGVudCc6ICfmrKLov47kvb/nlKjnvJbovpHlmagnXG4gICAgICAgICAgICAgKiB9ICk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0T3B0OiBmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqW2tleV0gPSB2YWw7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqID0ga2V5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB1dGlscy5leHRlbmQodGhpcy5vcHRpb25zLCBvYmosIHRydWUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldE9wdDogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnNba2V5XTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOmUgOavgee8lui+keWZqOWunuS+i++8jOS9v+eUqHRleHRhcmVh5Luj5pu/XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGRlc3Ryb3lcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IuZGVzdHJveSgpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnZGVzdHJveScpO1xuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBtZS5jb250YWluZXIucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB2YXIgdGV4dGFyZWEgPSBtZS50ZXh0YXJlYTtcbiAgICAgICAgICAgICAgICBpZiAoIXRleHRhcmVhKSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRleHRhcmVhLCBjb250YWluZXIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHRhcmVhLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0ZXh0YXJlYS5zdHlsZS53aWR0aCA9IG1lLmlmcmFtZS5vZmZzZXRXaWR0aCArICdweCc7XG4gICAgICAgICAgICAgICAgdGV4dGFyZWEuc3R5bGUuaGVpZ2h0ID0gbWUuaWZyYW1lLm9mZnNldEhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgdGV4dGFyZWEudmFsdWUgPSBtZS5nZXRDb250ZW50KCk7XG4gICAgICAgICAgICAgICAgdGV4dGFyZWEuaWQgPSBtZS5rZXk7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjb250YWluZXIpO1xuICAgICAgICAgICAgICAgIHZhciBrZXkgPSBtZS5rZXk7XG4gICAgICAgICAgICAgICAgLy90cmFjZToyMDA0XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBtZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWUuaGFzT3duUHJvcGVydHkocCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW3BdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFVFLmRlbEVkaXRvcihrZXkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmuLLmn5PnvJbovpHlmajnmoRET03liLDmjIflrprlrrnlmahcbiAgICAgICAgICAgICAqIEBtZXRob2QgcmVuZGVyXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjb250YWluZXJJZCDmjIflrprkuIDkuKrlrrnlmahJRFxuICAgICAgICAgICAgICogQHJlbWluZCDmiafooYzor6Xmlrnms5Us5Lya6Kem5Y+RcmVhZHnkuovku7ZcbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOW/hemhu+S4lOWPquiDveiwg+eUqOS4gOasoVxuICAgICAgICAgICAgICovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5riy5p+T57yW6L6R5Zmo55qERE9N5Yiw5oyH5a6a5a655ZmoXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlbmRlclxuICAgICAgICAgICAgICogQHBhcmFtIHsgRWxlbWVudCB9IGNvbnRhaW5lckRvbSDnm7TmjqXmjIflrprlrrnlmajlr7nosaFcbiAgICAgICAgICAgICAqIEByZW1pbmQg5omn6KGM6K+l5pa55rOVLOS8muinpuWPkXJlYWR55LqL5Lu2XG4gICAgICAgICAgICAgKiBAd2FybmluZyDlv4XpobvkuJTlj6rog73osIPnlKjkuIDmrKFcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiAoY29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyA9IG1lLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIGdldFN0eWxlVmFsdWUgPSBmdW5jdGlvbiAoYXR0cikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUoY29udGFpbmVyLCBhdHRyKSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGNvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5pbml0aWFsRnJhbWVXaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5taW5GcmFtZVdpZHRoID0gb3B0aW9ucy5pbml0aWFsRnJhbWVXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubWluRnJhbWVXaWR0aCA9IG9wdGlvbnMuaW5pdGlhbEZyYW1lV2lkdGggPSBjb250YWluZXIub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuaW5pdGlhbEZyYW1lSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1pbkZyYW1lSGVpZ2h0ID0gb3B0aW9ucy5pbml0aWFsRnJhbWVIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmluaXRpYWxGcmFtZUhlaWdodCA9IG9wdGlvbnMubWluRnJhbWVIZWlnaHQgPSBjb250YWluZXIub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gLyUkLy50ZXN0KG9wdGlvbnMuaW5pdGlhbEZyYW1lV2lkdGgpXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICcxMDAlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgOiBvcHRpb25zLmluaXRpYWxGcmFtZVdpZHRoIC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U3R5bGVWYWx1ZSgncGFkZGluZy1sZWZ0JykgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRTdHlsZVZhbHVlKCdwYWRkaW5nLXJpZ2h0JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAncHgnO1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gLyUkLy50ZXN0KG9wdGlvbnMuaW5pdGlhbEZyYW1lSGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICAgICAgPyAnMTAwJSdcbiAgICAgICAgICAgICAgICAgICAgICAgIDogb3B0aW9ucy5pbml0aWFsRnJhbWVIZWlnaHQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRTdHlsZVZhbHVlKCdwYWRkaW5nLXRvcCcpIC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U3R5bGVWYWx1ZSgncGFkZGluZy1ib3R0b20nKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdweCc7XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLnpJbmRleCA9IG9wdGlvbnMuekluZGV4O1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBsb2NhbExhbmcgPSB3aW5kb3cuTGFuZyA9PSAnamEtanAnID8gJ2xvY2FsZS1qcCcgOiAnJztcblxuICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAoaWUgJiYgYnJvd3Nlci52ZXJzaW9uIDwgOSA/ICcnIDogJzwhRE9DVFlQRSBodG1sPicpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPGh0bWwgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwnIGNsYXNzPSd2aWV3IFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsTGFuZyArXG4gICAgICAgICAgICAgICAgICAgICAgICBcIicgPjxoZWFkPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPHN0eWxlIHR5cGU9J3RleHQvY3NzJz5cIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAvL+iuvue9ruWbm+WRqOeahOeVmei+uVxuICAgICAgICAgICAgICAgICAgICAgICAgJy52aWV3e3BhZGRpbmc6MDt3b3JkLXdyYXA6YnJlYWstd29yZDtjdXJzb3I6dGV4dDtoZWlnaHQ6OTAlO31cXG4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiLnZpZXcubG9jYWxlLWpwIGJvZHl7Zm9udC1mYW1pbHk6ICdub3RvX3NhbnNyZWd1bGFyJywgJ2hpcmFnaW5vIGtha3UgZ290aGljIHBybycsICdNUyBHb3RoaWMnLCAnbWVpcnlvJywgQXJpYWwsICdIaXJhZ2lubyBTYW5zIEdCJzt9XFxuXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/orr7nva7pu5jorqTlrZfkvZPlkozlrZflj7dcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vZm9udC1mYW1pbHnkuI3og73lkaLpmo/kvr/mlLnvvIzlnKhzYWZhcmnkuItmaWxsY2hhcuS8muacieino+aekOmXrumimFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2JvZHl7bWFyZ2luOjhweDtmb250LWZhbWlseTpzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxNnB4O30nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v6K6+572u5q616JC96Ze06LedXG4gICAgICAgICAgICAgICAgICAgICAgICAncHttYXJnaW46NXB4IDA7fTwvc3R5bGU+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAob3B0aW9ucy5pZnJhbWVDc3NVcmxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2NzcycgaHJlZj0nXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMudW5odG1sKG9wdGlvbnMuaWZyYW1lQ3NzVXJsKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIicvPlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKG9wdGlvbnMuaW5pdGlhbFN0eWxlID8gJzxzdHlsZT4nICsgb3B0aW9ucy5pbml0aWFsU3R5bGUgKyAnPC9zdHlsZT4nIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPC9oZWFkPjxib2R5IGNsYXNzPSd2aWV3JyA+PC9ib2R5PlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChpZSA/IFwiZGVmZXI9J2RlZmVyJ1wiIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiIGlkPSdfaW5pdGlhbFNjcmlwdCc+XCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZWRpdG9yID0gd2luZG93LnBhcmVudC5VRS5pbnN0YW50c1sndWVkaXRvckluc3RhbnRcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS51aWQgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCInXTtlZGl0b3IuX3NldHVwKGRvY3VtZW50KTt9LDApO1wiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidmFyIF90bXBTY3JpcHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnX2luaXRpYWxTY3JpcHQnKTtfdG1wU2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoX3RtcFNjcmlwdCk7PC9zY3JpcHQ+PC9odG1sPlwiO1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5jcmVhdGVFbGVtZW50KGRvY3VtZW50LCAnaWZyYW1lJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAndWVkaXRvcl8nICsgbWUudWlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhbWVib3JkZXI6ICcwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WFiOazqOmHiuaOieS6hu+8jOWKoOeahOWOn+WboOW/mOiusOS6hu+8jOS9huW8gOWQr+S8muebtOaOpeWvvOiHtOWFqOWxj+aooeW8j+S4i+WGheWuueWkmuaXtuS4jeS8muWHuueOsOa7muWKqOadoVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBzY3JvbGxpbmcgOidubycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnamF2YXNjcmlwdDp2b2lkKGZ1bmN0aW9uKCl7ZG9jdW1lbnQub3BlbigpOycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAob3B0aW9ucy5jdXN0b21Eb21haW4gJiYgZG9jdW1lbnQuZG9tYWluICE9IGxvY2F0aW9uLmhvc3RuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdkb2N1bWVudC5kb21haW49XCInICsgZG9jdW1lbnQuZG9tYWluICsgJ1wiOydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RvY3VtZW50LndyaXRlKFwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCIpO2RvY3VtZW50LmNsb3NlKCk7fSgpKSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICAgICAgICAgICAgICAgICAgICAvL+ino+WGs+WmguaenOaYr+e7meWumueahOeZvuWIhuavlO+8jOS8muWvvOiHtOmrmOW6pueul+S4jeWvueeahOmXrumimFxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgvJSQvLnRlc3Qob3B0aW9ucy5pbml0aWFsRnJhbWVXaWR0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1pbkZyYW1lV2lkdGggPSBvcHRpb25zLmluaXRpYWxGcmFtZVdpZHRoID0gY29udGFpbmVyLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5aaC5p6c6L+Z6YeM57uZ5a6a5a695bqm77yM5Lya5a+86Ie0aWXlnKjmi5bliqjnqpflj6PlpKflsI/ml7bvvIznvJbovpHljLrln5/kuI3pmo/nnYDlj5jljJZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9IG9wdGlvbnMuaW5pdGlhbEZyYW1lV2lkdGggKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC8lJC8udGVzdChvcHRpb25zLmluaXRpYWxGcmFtZUhlaWdodCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1pbkZyYW1lSGVpZ2h0ID0gb3B0aW9ucy5pbml0aWFsRnJhbWVIZWlnaHQgPSBjb250YWluZXIub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSBvcHRpb25zLmluaXRpYWxGcmFtZUhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog57yW6L6R5Zmo5Yid5aeL5YyWXG4gICAgICAgICAgICAgKiBAbWV0aG9kIF9zZXR1cFxuICAgICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEVsZW1lbnQgfSBkb2Mg57yW6L6R5ZmoSWZyYW1l5Lit55qE5paH5qGj5a+56LGhXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgX3NldHVwOiBmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyA9IG1lLm9wdGlvbnM7XG4gICAgICAgICAgICAgICAgaWYgKGllKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvYy5ib2R5LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgZG9jLmJvZHkuY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgZG9jLmJvZHkuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkb2MuYm9keS5jb250ZW50RWRpdGFibGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb2MuYm9keS5zcGVsbGNoZWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbWUuZG9jdW1lbnQgPSBkb2M7XG4gICAgICAgICAgICAgICAgbWUud2luZG93ID0gZG9jLmRlZmF1bHRWaWV3IHx8IGRvYy5wYXJlbnRXaW5kb3c7XG4gICAgICAgICAgICAgICAgbWUuaWZyYW1lID0gbWUud2luZG93LmZyYW1lRWxlbWVudDtcbiAgICAgICAgICAgICAgICBtZS5ib2R5ID0gZG9jLmJvZHk7XG4gICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uID0gbmV3IGRvbS5TZWxlY3Rpb24oZG9jKTtcbiAgICAgICAgICAgICAgICAvL2dlY2tv5Yid5aeL5YyW5bCx6IO95b6X5YiwcmFuZ2Us5peg5rOV5Yik5pataXNGb2N1c+S6hlxuICAgICAgICAgICAgICAgIHZhciBnZWNrb1NlbDtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5nZWNrbyAmJiAoZ2Vja29TZWwgPSB0aGlzLnNlbGVjdGlvbi5nZXROYXRpdmUoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZ2Vja29TZWwucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2luaXRFdmVudHMoKTtcbiAgICAgICAgICAgICAgICAvL+S4umZvcm3mj5DkuqTmj5DkvpvkuIDkuKrpmpDol4/nmoR0ZXh0YXJlYVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGZvcm0gPSB0aGlzLmlmcmFtZS5wYXJlbnROb2RlOyAhZG9tVXRpbHMuaXNCb2R5KGZvcm0pOyBmb3JtID0gZm9ybS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmb3JtLnRhZ05hbWUgPT0gJ0ZPUk0nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5mb3JtID0gZm9ybTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5vcHRpb25zLmF1dG9TeW5jRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKG1lLndpbmRvdywgJ2JsdXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFZhbHVlKGZvcm0sIG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZm9ybSwgJ3N1Ym1pdCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFsdWUodGhpcywgbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuaW5pdGlhbENvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuYXV0b0NsZWFyaW5pdGlhbENvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvbGRFeGVjQ29tbWFuZCA9IG1lLmV4ZWNDb21tYW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdmaXJzdEJlZm9yZUV4ZWNDb21tYW5kJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9sZEV4ZWNDb21tYW5kLmFwcGx5KG1lLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NldERlZmF1bHRDb250ZW50KG9wdGlvbnMuaW5pdGlhbENvbnRlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgdGhpcy5zZXRDb250ZW50KG9wdGlvbnMuaW5pdGlhbENvbnRlbnQsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+e8lui+keWZqOS4jeiDveS4uuepuuWGheWuuVxuXG4gICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlOb2RlKG1lLmJvZHkpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuaW5uZXJIVE1MID0gJzxwPicgKyAoYnJvd3Nlci5pZSA/ICcnIDogJzxici8+JykgKyAnPC9wPic7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v5aaC5p6c6KaB5rGCZm9jdXMsIOWwseaKiuWFieagh+WumuS9jeWIsOWGheWuueW8gOWni1xuICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLmZvY3VzKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZm9jdXMobWUub3B0aW9ucy5mb2N1c0luRW5kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5aaC5p6c6Ieq5Yqo5riF6Zmk5byA552A77yM5bCx5LiN6ZyA6KaB5YGac2VsZWN0aW9uY2hhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgIW1lLm9wdGlvbnMuYXV0b0NsZWFyaW5pdGlhbENvbnRlbnQgJiYgbWUuX3NlbGVjdGlvbkNoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFtZS5jb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuY29udGFpbmVyID0gdGhpcy5pZnJhbWUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuZnVsbHNjcmVlbiAmJiBtZS51aSkge1xuICAgICAgICAgICAgICAgICAgICBtZS51aS5zZXRGdWxsU2NyZWVuKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmV4ZWNDb21tYW5kKCcyRC1wb3NpdGlvbicsIGZhbHNlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBtZS5kb2N1bWVudC5leGVjQ29tbWFuZCgnZW5hYmxlSW5saW5lVGFibGVFZGl0aW5nJywgZmFsc2UsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmV4ZWNDb21tYW5kKCdlbmFibGVPYmplY3RSZXNpemluZycsIGZhbHNlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cblxuICAgICAgICAgICAgICAgIC8v5oyC5o6l5b+r5o236ZSuXG4gICAgICAgICAgICAgICAgbWUuX2JpbmRzaG9ydGN1dEtleXMoKTtcbiAgICAgICAgICAgICAgICBtZS5pc1JlYWR5ID0gMTtcbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3JlYWR5Jyk7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5vbnJlYWR5ICYmIG9wdGlvbnMub25yZWFkeS5jYWxsKG1lKTtcbiAgICAgICAgICAgICAgICBpZiAoIWJyb3dzZXIuaWU5YmVsb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUud2luZG93LCBbJ2JsdXInLCAnZm9jdXMnXSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vY2hyb21l5LiL5Lya5Ye6546wYWx0K3RhYuWIh+aNouaXtu+8jOWvvOiHtOmAieWMuuS9jee9ruS4jeWvuVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PSAnYmx1cicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5fYmFrUmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5fYmFrTmF0aXZlUmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0TmF0aXZlKCkuZ2V0UmFuZ2VBdCgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmdldE5hdGl2ZSgpLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX2Jha05hdGl2ZVJhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9iYWtSYW5nZSAmJiBtZS5fYmFrUmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vdHJhY2U6MTUxOCBmZjMuNmJvZHnkuI3lpJ/lr5vvvIzkvJrlr7zoh7Tngrnlh7vnqbrnmb3lpITml6Dms5XojrflvpfnhKbngrlcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5nZWNrbyAmJiBicm93c2VyLnZlcnNpb24gPD0gMTA5MDIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/kv67lpI1mZjMuNuWIneWni+WMlui/m+adpe+8jOS4jeiDveeCueWHu+iOt+W+l+eEpueCuVxuICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuYm9keS5zdHlsZS5oZWlnaHQgPSBtZS5pZnJhbWUub2Zmc2V0SGVpZ2h0IC0gMjAgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICFvcHRpb25zLmlzU2hvdyAmJiBtZS5zZXRIaWRlKCk7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5yZWFkb25seSAmJiBtZS5zZXREaXNhYmxlZCgpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlkIzmraXmlbDmja7liLDnvJbovpHlmajmiYDlnKjnmoRmb3JtXG4gICAgICAgICAgICAgKiDku47nvJbovpHlmajnmoTlrrnlmajoioLngrnlkJHkuIrmn6Xmib5mb3Jt5YWD57Sg77yM6Iul5om+5Yiw77yM5bCx5ZCM5q2l57yW6L6R5YaF5a655Yiw5om+5Yiw55qEZm9ybemHjO+8jOS4uuaPkOS6pOaVsOaNruWBmuWHhuWkh++8jOS4u+imgeeUqOS6juaYr+aJi+WKqOaPkOS6pOeahOaDheWGtVxuICAgICAgICAgICAgICog5ZCO5Y+w5Y+W5b6X5pWw5o2u55qE6ZSu5YC877yM5L2/55So5L2g5a655Zmo5LiK55qEbmFtZeWxnuaAp++8jOWmguaenOayoeacieWwseS9v+eUqOWPguaVsOmHjOeahHRleHRhcmVh6aG5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHN5bmNcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3Iuc3luYygpO1xuICAgICAgICAgICAgICogZm9ybS5zdW1iaXQoKTsgLy9mb3Jt5Y+Y6YeP5bey57uP5oyH5ZCR5LqGZm9ybeWFg+e0oFxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja7kvKDlhaXnmoRmb3JtSWTvvIzlnKjpobXpnaLkuIrmn6Xmib7opoHlkIzmraXmlbDmja7nmoTooajljZXvvIzoi6Xmib7liLDvvIzlsLHlkIzmraXnvJbovpHlhoXlrrnliLDmib7liLDnmoRmb3Jt6YeM77yM5Li65o+Q5Lqk5pWw5o2u5YGa5YeG5aSHXG4gICAgICAgICAgICAgKiDlkI7lj7Dlj5blvpfmlbDmja7nmoTplK7lgLzvvIzor6XplK7lgLzpu5jorqTkvb/nlKjnu5nlrprnmoTnvJbovpHlmajlrrnlmajnmoRuYW1l5bGe5oCn77yM5aaC5p6c5rKh5pyJbmFtZeWxnuaAp+WImeS9v+eUqOWPguaVsOmhuemHjOe7meWumueahOKAnHRleHRhcmVh4oCd6aG5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHN5bmNcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGZvcm1JRCDmjIflrprkuIDkuKropoHlkIzmraXmlbDmja7nmoRmb3Jt55qEaWQs57yW6L6R5Zmo55qE5pWw5o2u5Lya5ZCM5q2l5Yiw5L2g5oyH5a6aZm9ybeS4i1xuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzeW5jOiBmdW5jdGlvbiAoZm9ybUlkKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgZm9ybSA9IGZvcm1JZFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChmb3JtSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGRvbVV0aWxzLmZpbmRQYXJlbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5pZnJhbWUucGFyZW50Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUudGFnTmFtZSA9PSAnRk9STSc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGZvcm0gJiYgc2V0VmFsdWUoZm9ybSwgbWUpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva7nvJbovpHlmajpq5jluqZcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0SGVpZ2h0XG4gICAgICAgICAgICAgKiBAcmVtaW5kIOW9k+mFjee9rumhuWF1dG9IZWlnaHRFbmFibGVk5Li655yf5pe2LOivpeaWueazleaXoOaViFxuICAgICAgICAgICAgICogQHBhcmFtIHsgTnVtYmVyIH0gbnVtYmVyIOiuvue9rueahOmrmOW6puWAvO+8jOe6r+aVsOWAvO+8jOS4jeW4puWNleS9jVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5zZXRIZWlnaHQobnVtYmVyKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRIZWlnaHQ6IGZ1bmN0aW9uIChoZWlnaHQsIG5vdFNldEhlaWdodCkge1xuICAgICAgICAgICAgICAgIGlmIChoZWlnaHQgIT09IHBhcnNlSW50KHRoaXMuaWZyYW1lLnBhcmVudE5vZGUuc3R5bGUuaGVpZ2h0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlmcmFtZS5wYXJlbnROb2RlLnN0eWxlLmhlaWdodCA9IGhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICFub3RTZXRIZWlnaHQgJiYgKHRoaXMub3B0aW9ucy5taW5GcmFtZUhlaWdodCA9IHRoaXMub3B0aW9ucy5pbml0aWFsRnJhbWVIZWlnaHQgPSBoZWlnaHQpO1xuICAgICAgICAgICAgICAgIHRoaXMuYm9keS5zdHlsZS5oZWlnaHQgPSBoZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgICAgICFub3RTZXRIZWlnaHQgJiYgdGhpcy50cmlnZ2VyKCdzZXRIZWlnaHQnKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Li657yW6L6R5Zmo55qE57yW6L6R5ZG95Luk5o+Q5L6b5b+r5o236ZSuXG4gICAgICAgICAgICAgKiDov5nkuKrmjqXlj6PmmK/kuLrmj5Lku7bmianlsZXmj5DkvpvnmoTmjqXlj6Ms5Li76KaB5piv5Li65paw5re75Yqg55qE5o+S5Lu277yM5aaC5p6c6ZyA6KaB5re75Yqg5b+r5o236ZSu77yM5omA5o+Q5L6b55qE5o6l5Y+jXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGFkZHNob3J0Y3V0a2V5XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBrZXlzZXQg5ZG95Luk5ZCN5ZKM5b+r5o236ZSu6ZSu5YC85a+55a+56LGh77yM5aSa5Liq5oyJ6ZKu55qE5b+r5o236ZSu55So4oCc77yL4oCd5YiG6ZqUXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmFkZHNob3J0Y3V0a2V5KHtcbiAgICAgICAgICAgICAqICAgICBcIkJvbGRcIiA6IFwiY3RybCs2NlwiLC8vXkJcbiAgICAgICAgICAgICAqICAgICBcIkl0YWxpY1wiIDogXCJjdHJsKzczXCIsIC8vXklcbiAgICAgICAgICAgICAqIH0pO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6L+Z5Liq5o6l5Y+j5piv5Li65o+S5Lu25omp5bGV5o+Q5L6b55qE5o6l5Y+jLOS4u+imgeaYr+S4uuaWsOa3u+WKoOeahOaPkuS7tu+8jOWmguaenOmcgOimgea3u+WKoOW/q+aNt+mUru+8jOaJgOaPkOS+m+eahOaOpeWPo1xuICAgICAgICAgICAgICogQG1ldGhvZCBhZGRzaG9ydGN1dGtleVxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOinpuWPkeW/q+aNt+mUruaXtu+8jOWTjeW6lOeahOWRveS7pFxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0ga2V5cyDlv6vmjbfplK7nmoTlrZfnrKbkuLLvvIzlpJrkuKrmjInpkq7nlKjigJzvvIvigJ3liIbpmpRcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IuYWRkc2hvcnRjdXRrZXkoXCJVbmRlcmxpbmVcIiwgXCJjdHJsKzg1XCIpOyAvL15VXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYWRkc2hvcnRjdXRrZXk6IGZ1bmN0aW9uIChjbWQsIGtleXMpIHtcbiAgICAgICAgICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgICAgICAgICAgaWYgKGtleXMpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqW2NtZF0gPSBrZXlzO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG9iaiA9IGNtZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdXRpbHMuZXh0ZW5kKHRoaXMuc2hvcnRjdXRrZXlzLCBvYmopO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlr7nnvJbovpHlmajorr7nva5rZXlkb3du5LqL5Lu255uR5ZCs77yM57uR5a6a5b+r5o236ZSu5ZKM5ZG95Luk77yM5b2T5b+r5o236ZSu57uE5ZCI6Kem5Y+R5oiQ5Yqf77yM5Lya5ZON5bqU5a+55bqU55qE5ZG95LukXG4gICAgICAgICAgICAgKiBAbWV0aG9kIF9iaW5kc2hvcnRjdXRLZXlzXG4gICAgICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBfYmluZHNob3J0Y3V0S2V5czogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHNob3J0Y3V0a2V5cyA9IHRoaXMuc2hvcnRjdXRrZXlzO1xuICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKHR5cGUsIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBlLmtleUNvZGUgfHwgZS53aGljaDtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBzaG9ydGN1dGtleXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXAgPSBzaG9ydGN1dGtleXNbaV0uc3BsaXQoJywnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHQgPSAwLCB0aTsgKHRpID0gdG1wW3QrK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aSA9IHRpLnNwbGl0KCc6Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IHRpWzBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSA9IHRpWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgvXihjdHJsKShcXCtzaGlmdCk/XFwrKFxcZCspJC8udGVzdChrZXkudG9Mb3dlckNhc2UoKSkgfHwgL14oXFxkKykkLy50ZXN0KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKChSZWdFeHAuJDEgPT0gJ2N0cmwnID8gZS5jdHJsS2V5IHx8IGUubWV0YUtleSA6IDApICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFJlZ0V4cC4kMiAhPSAnJyA/IGVbUmVnRXhwLiQyLnNsaWNlKDEpICsgJ0tleSddIDogMSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlDb2RlID09IFJlZ0V4cC4kMykgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleUNvZGUgPT0gUmVnRXhwLiQxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lLnF1ZXJ5Q29tbWFuZFN0YXRlKGksIHBhcmFtKSAhPSAtMSkgbWUuZXhlY0NvbW1hbmQoaSwgcGFyYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucHJldmVudERlZmF1bHQoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W57yW6L6R5Zmo55qE5YaF5a65XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldENvbnRlbnRcbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOivpeaWueazleiOt+WPluWIsOeahOaYr+e7j+i/h+e8lui+keWZqOWGhee9rueahOi/h+a7pOinhOWImei/m+ihjOi/h+a7pOWQjuW+l+WIsOeahOWGheWuuVxuICAgICAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOe8lui+keWZqOeahOWGheWuueWtl+espuS4siwg5aaC5p6c57yW6L6R5Zmo55qE5YaF5a655Li656m677yM5oiW6ICF5piv56m655qE5qCH562+5YaF5a6577yI5aaCOuKAnSZsdDtwJmd0OyZsdDtici8mZ3Q7Jmx0Oy9wJmd0O+KAnO+8ie+8jCDliJnov5Tlm57nqbrlrZfnrKbkuLJcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiAvL+e8lui+keWZqGh0bWzlhoXlrrk6PHA+MTxzdHJvbmc+MjxlbT4zNDwvZW0+NTwvc3Ryb25nPjY8L3A+XG4gICAgICAgICAgICAgKiB2YXIgY29udGVudCA9IGVkaXRvci5nZXRDb250ZW50KCk7IC8v6L+U5Zue5YC8OjxwPjE8c3Ryb25nPjI8ZW0+MzQ8L2VtPjU8L3N0cm9uZz42PC9wPlxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5bnvJbovpHlmajnmoTlhoXlrrnjgIIg5Y+v5Lul6YCa6L+H5Y+C5pWw5a6a5LmJ57yW6L6R5Zmo5YaF572u55qE5Yik56m66KeE5YiZXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldENvbnRlbnRcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0gZm4g6Ieq5a6a55qE5Yik56m66KeE5YiZ77yMIOimgeaxguivpeaWueazlei/lOWbnuS4gOS4qmJvb2xlYW7nsbvlnovnmoTlgLzvvIxcbiAgICAgICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgIOS7o+ihqOW9k+WJjee8lui+keWZqOeahOWGheWuueaYr+WQpuepuu+8jFxuICAgICAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAg5aaC5p6c6L+U5ZuedHJ1Ze+8jCDliJnor6Xmlrnms5XlsIbnm7TmjqXov5Tlm57nqbrlrZfnrKbkuLLvvJvlpoLmnpzov5Tlm55mYWxzZe+8jOWImee8lui+keWZqOWwhui/lOWbnlxuICAgICAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAg57uP6L+H5YaF572u6L+H5ruk6KeE5YiZ5aSE55CG5ZCO55qE5YaF5a6544CCXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOivpeaWueazleWcqOWkhOeQhuWMheWQq+acieWIneWni+WMluWGheWuueeahOaXtuWAmeiDvei1t+WIsOW+iOWlveeahOS9nOeUqOOAglxuICAgICAgICAgICAgICogQHdhcm5pbmcg6K+l5pa55rOV6I635Y+W5Yiw55qE5piv57uP6L+H57yW6L6R5Zmo5YaF572u55qE6L+H5ruk6KeE5YiZ6L+b6KGM6L+H5ruk5ZCO5b6X5Yiw55qE5YaF5a65XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g57yW6L6R5Zmo55qE5YaF5a655a2X56ym5LiyXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogLy8gZWRpdG9yIOaYr+S4gOS4que8lui+keWZqOeahOWunuS+i1xuICAgICAgICAgICAgICogdmFyIGNvbnRlbnQgPSBlZGl0b3IuZ2V0Q29udGVudCggZnVuY3Rpb24gKCBlZGl0b3IgKSB7XG4gICAgICAgICAgICAgKiAgICAgIHJldHVybiBlZGl0b3IuYm9keS5pbm5lckhUTUwgPT09ICfmrKLov47kvb/nlKhVRWRpdG9yJzsgLy/ov5Tlm57nqbrlrZfnrKbkuLJcbiAgICAgICAgICAgICAqIH0gKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDb250ZW50OiBmdW5jdGlvbiAoY21kLCBmbiwgbm90U2V0Q3Vyc29yLCBpZ25vcmVCbGFuaywgZm9ybWF0dGVyKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoY21kICYmIHV0aWxzLmlzRnVuY3Rpb24oY21kKSkge1xuICAgICAgICAgICAgICAgICAgICBmbiA9IGNtZDtcbiAgICAgICAgICAgICAgICAgICAgY21kID0gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChmbiA/ICFmbigpIDogIXRoaXMuaGFzQ29udGVudHMoKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYmVmb3JlZ2V0Y29udGVudCcpO1xuICAgICAgICAgICAgICAgIHZhciByb290ID0gVUUuaHRtbHBhcnNlcihtZS5ib2R5LmlubmVySFRNTCwgaWdub3JlQmxhbmspO1xuICAgICAgICAgICAgICAgIG1lLmZpbHRlck91dHB1dFJ1bGUocm9vdCk7XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcmdldGNvbnRlbnQnLCBjbWQsIHJvb3QpO1xuICAgICAgICAgICAgICAgIHJldHVybiByb290LnRvSHRtbChmb3JtYXR0ZXIpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlj5blvpflrozmlbTnmoRodG1s5Luj56CB77yM5Y+v5Lul55u05o6l5pi+56S65oiQ5a6M5pW055qEaHRtbOaWh+aho1xuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRBbGxIdG1sXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g57yW6L6R5Zmo55qE5YaF5a65aHRtbOaWh+aho+Wtl+espuS4slxuICAgICAgICAgICAgICogQGVheG1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRBbGxIdG1sKCk7IC8v6L+U5Zue5qC85byP5aSn6Ie05pivOiA8aHRtbD48aGVhZD4uLi48L2hlYWQ+PGJvZHk+Li4uPC9ib2R5PjwvaHRtbD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRBbGxIdG1sOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgaGVhZEh0bWwgPSBbXSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbCA9ICcnO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnZ2V0QWxsSHRtbCcsIGhlYWRIdG1sKTtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPiA4KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBoZWFkSHRtbEZvcklFOSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKG1lLmRvY3VtZW50LnN0eWxlU2hlZXRzLCBmdW5jdGlvbiAoc2kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRIdG1sRm9ySUU5ICs9IHNpLmhyZWZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICc8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgdHlwZT1cInRleHQvY3NzXCIgaHJlZj1cIicgKyBzaS5ocmVmICsgJ1wiIC8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJzxzdHlsZT4nICsgc2kuY3NzVGV4dCArICc8L3N0eWxlPic7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKG1lLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKSwgZnVuY3Rpb24gKHNpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkSHRtbEZvcklFOSArPSBzaS5vdXRlckhUTUw7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAnPGh0bWw+PGhlYWQ+JyArXG4gICAgICAgICAgICAgICAgICAgIChtZS5vcHRpb25zLmNoYXJzZXRcbiAgICAgICAgICAgICAgICAgICAgICAgID8gJzxtZXRhIGh0dHAtZXF1aXY9XCJDb250ZW50LVR5cGVcIiBjb250ZW50PVwidGV4dC9odG1sOyBjaGFyc2V0PScgKyBtZS5vcHRpb25zLmNoYXJzZXQgKyAnXCIvPidcbiAgICAgICAgICAgICAgICAgICAgICAgIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgKGhlYWRIdG1sRm9ySUU5IHx8IG1lLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0uaW5uZXJIVE1MKSArXG4gICAgICAgICAgICAgICAgICAgIGhlYWRIdG1sLmpvaW4oJ1xcbicpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvaGVhZD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxib2R5ICcgK1xuICAgICAgICAgICAgICAgICAgICAoaWUgJiYgYnJvd3Nlci52ZXJzaW9uIDwgOSA/ICdjbGFzcz1cInZpZXdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPicgK1xuICAgICAgICAgICAgICAgICAgICBtZS5nZXRDb250ZW50KG51bGwsIG51bGwsIHRydWUpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvYm9keT48L2h0bWw+J1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOW+l+WIsOe8lui+keWZqOeahOe6r+aWh+acrOWGheWuue+8jOS9huS8muS/neeVmeauteiQveagvOW8j1xuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRQbGFpblR4dFxuICAgICAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOe8lui+keWZqOW4puauteiQveagvOW8j+eahOe6r+aWh+acrOWGheWuueWtl+espuS4slxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIC8v57yW6L6R5ZmoaHRtbOWGheWuuTo8cD48c3Ryb25nPjE8L3N0cm9uZz48L3A+PHA+PHN0cm9uZz4yPC9zdHJvbmc+PC9wPlxuICAgICAgICAgICAgICogY29uc29sZS5sb2coZWRpdG9yLmdldFBsYWluVHh0KCkpOyAvL+i+k+WHujpcIjFcXG4yXFxuXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0UGxhaW5UeHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKSxcbiAgICAgICAgICAgICAgICAgICAgaHRtbCA9IHRoaXMuYm9keS5pbm5lckhUTUwucmVwbGFjZSgvW1xcblxccl0vZywgJycpOyAvL2ll6KaB5YWI5Y675LqGXFxu5Zyo5aSE55CGXG4gICAgICAgICAgICAgICAgaHRtbCA9IGh0bWxcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLzwocHxkaXYpW14+XSo+KDxiclxcLz8+fCZuYnNwOyk8XFwvXFwxPi9naSwgJ1xcbicpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC88YnJcXC8/Pi9naSwgJ1xcbicpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC88W14+L10rPi9nLCAnJylcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyhcXG4pPzxcXC8oW14+XSspPi9nLCBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGR0ZC4kYmxvY2tbY10gPyAnXFxuJyA6IGIgPyBiIDogJyc7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8v5Y+W5Ye65p2l55qE56m65qC85Lya5pyJYzJhMOS8muWPmOaIkOS5seegge+8jOWkhOeQhui/meenjeaDheWGtVxcdTAwYTBcbiAgICAgICAgICAgICAgICByZXR1cm4gaHRtbFxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZShyZWcsICcnKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFx1MDBhMC9nLCAnICcpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8mbmJzcDsvZywgJyAnKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W57yW6L6R5Zmo5Lit55qE57qv5paH5pys5YaF5a65LOayoeacieauteiQveagvOW8j1xuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRDb250ZW50VHh0XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g57yW6L6R5Zmo5LiN5bim5q616JC95qC85byP55qE57qv5paH5pys5YaF5a655a2X56ym5LiyXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogLy/nvJbovpHlmahodG1s5YaF5a65OjxwPjxzdHJvbmc+MTwvc3Ryb25nPjwvcD48cD48c3Ryb25nPjI8L3N0cm9uZz48L3A+XG4gICAgICAgICAgICAgKiBjb25zb2xlLmxvZyhlZGl0b3IuZ2V0UGxhaW5UeHQoKSk7IC8v6L6T5Ye6OlwiMTJcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDb250ZW50VHh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlZyA9IG5ldyBSZWdFeHAoZG9tVXRpbHMuZmlsbENoYXIsICdnJyk7XG4gICAgICAgICAgICAgICAgLy/lj5blh7rmnaXnmoTnqbrmoLzkvJrmnIljMmEw5Lya5Y+Y5oiQ5Lmx56CB77yM5aSE55CG6L+Z56eN5oOF5Ya1XFx1MDBhMFxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmJvZHlbYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J10ucmVwbGFjZShyZWcsICcnKS5yZXBsYWNlKC9cXHUwMGEwL2csICcgJyk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuvue9rue8lui+keWZqOeahOWGheWuue+8jOWPr+S/ruaUuee8lui+keWZqOW9k+WJjeeahGh0bWzlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0Q29udGVudFxuICAgICAgICAgICAgICogQHdhcm5pbmcg6YCa6L+H6K+l5pa55rOV5o+S5YWl55qE5YaF5a6577yM5piv57uP6L+H57yW6L6R5Zmo5YaF572u55qE6L+H5ruk6KeE5YiZ6L+b6KGM6L+H5ruk5ZCO5b6X5Yiw55qE5YaF5a65XG4gICAgICAgICAgICAgKiBAd2FybmluZyDor6Xmlrnms5XkvJrop6blj5FzZWxlY3Rpb25jaGFuZ2Xkuovku7ZcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGh0bWwg6KaB5o+S5YWl55qEaHRtbOWGheWuuVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRDb250ZW50KCc8cD50ZXN0PC9wPicpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva7nvJbovpHlmajnmoTlhoXlrrnvvIzlj6/kv67mlLnnvJbovpHlmajlvZPliY3nmoRodG1s5YaF5a65XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNldENvbnRlbnRcbiAgICAgICAgICAgICAqIEB3YXJuaW5nIOmAmui/h+ivpeaWueazleaPkuWFpeeahOWGheWuue+8jOaYr+e7j+i/h+e8lui+keWZqOWGhee9rueahOi/h+a7pOinhOWImei/m+ihjOi/h+a7pOWQjuW+l+WIsOeahOWGheWuuVxuICAgICAgICAgICAgICogQHdhcm5pbmcg6K+l5pa55rOV5Lya6Kem5Y+Rc2VsZWN0aW9uY2hhbmdl5LqL5Lu2XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBodG1sIOimgeaPkuWFpeeahGh0bWzlhoXlrrlcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSBpc0FwcGVuZFRvIOiLpeS8oOWFpXRydWXvvIzkuI3muIXnqbrljp/mnaXnmoTlhoXlrrnvvIzlnKjmnIDlkI7mj5LlhaXlhoXlrrnvvIzlkKbliJnvvIzmuIXnqbrlhoXlrrnlho3mj5LlhaVcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiAvL+WBh+iuvuiuvue9ruWJjeeahOe8lui+keWZqOWGheWuueaYryA8cD5vbGQgdGV4dDwvcD5cbiAgICAgICAgICAgICAqIGVkaXRvci5zZXRDb250ZW50KCc8cD5uZXcgdGV4dDwvcD4nLCB0cnVlKTsgLy/mj5LlhaXnmoTnu5PmnpzmmK88cD5vbGQgdGV4dDwvcD48cD5uZXcgdGV4dDwvcD5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRDb250ZW50OiBmdW5jdGlvbiAoaHRtbCwgaXNBcHBlbmRUbywgbm90RmlyZVNlbGVjdGlvbmNoYW5nZSkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2JlZm9yZXNldGNvbnRlbnQnLCBodG1sKTtcbiAgICAgICAgICAgICAgICB2YXIgcm9vdCA9IFVFLmh0bWxwYXJzZXIoaHRtbCk7XG4gICAgICAgICAgICAgICAgbWUuZmlsdGVySW5wdXRSdWxlKHJvb3QpO1xuICAgICAgICAgICAgICAgIGh0bWwgPSByb290LnRvSHRtbCgpO1xuXG4gICAgICAgICAgICAgICAgbWUuYm9keS5pbm5lckhUTUwgPSAoaXNBcHBlbmRUbyA/IG1lLmJvZHkuaW5uZXJIVE1MIDogJycpICsgaHRtbDtcblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGlzQ2RhdGFEaXYobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS50YWdOYW1lID09ICdESVYnICYmIG5vZGUuZ2V0QXR0cmlidXRlKCdjZGF0YV90YWcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/nu5nmlofmnKzmiJbogIVpbmxpbmXoioLngrnlpZdw5qCH562+XG4gICAgICAgICAgICAgICAgaWYgKG1lLm9wdGlvbnMuZW50ZXJUYWcgPT0gJ3AnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IHRoaXMuYm9keS5maXJzdENoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgIWNoaWxkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoY2hpbGQubm9kZVR5cGUgPT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkdGQuJGNkYXRhW2NoaWxkLnRhZ05hbWVdIHx8IGlzQ2RhdGFEaXYoY2hpbGQpIHx8IGRvbVV0aWxzLmlzQ3VzdG9tZU5vZGUoY2hpbGQpKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkID09PSB0aGlzLmJvZHkubGFzdENoaWxkKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYm9keS5pbm5lckhUTUwgPSAnPHA+JyArIChicm93c2VyLmllID8gJyZuYnNwOycgOiAnPGJyLz4nKSArICc8L3A+JyArIHRoaXMuYm9keS5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNoaWxkLm5vZGVUeXBlID09IDMgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaGlsZC5ub2RlVHlwZSA9PSAxICYmIGR0ZC5wW2NoaWxkLnRhZ05hbWVdICYmICFkdGQuJGNkYXRhW2NoaWxkLnRhZ05hbWVdKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSB0bXBOb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocC5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHAsIGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2FmdGVyc2V0Y29udGVudCcpO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY29udGVudGNoYW5nZScpO1xuXG4gICAgICAgICAgICAgICAgIW5vdEZpcmVTZWxlY3Rpb25jaGFuZ2UgJiYgbWUuX3NlbGVjdGlvbkNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIC8v5riF6Zmk5L+d5a2Y55qE6YCJ5Yy6XG4gICAgICAgICAgICAgICAgbWUuX2Jha1JhbmdlID0gbWUuX2Jha0lFUmFuZ2UgPSBtZS5fYmFrTmF0aXZlUmFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIC8vdHJhY2U6MTc0MiBzZXRDb250ZW505ZCOZ2Vja2/og73lvpfliLDnhKbngrnpl67pophcbiAgICAgICAgICAgICAgICB2YXIgZ2Vja29TZWw7XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuZ2Vja28gJiYgKGdlY2tvU2VsID0gdGhpcy5zZWxlY3Rpb24uZ2V0TmF0aXZlKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGdlY2tvU2VsLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWUub3B0aW9ucy5hdXRvU3luY0RhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuZm9ybSAmJiBzZXRWYWx1ZShtZS5mb3JtLCBtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorqnnvJbovpHlmajojrflvpfnhKbngrnvvIzpu5jorqRmb2N1c+WIsOe8lui+keWZqOWktOmDqFxuICAgICAgICAgICAgICogQG1ldGhvZCBmb2N1c1xuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5mb2N1cygpXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuqee8lui+keWZqOiOt+W+l+eEpueCue+8jHRvRW5k56Gu5a6aZm9jdXPkvY3nva5cbiAgICAgICAgICAgICAqIEBtZXRob2QgZm9jdXNcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEJvb2xlYW4gfSB0b0VuZCDpu5jorqRmb2N1c+WIsOe8lui+keWZqOWktOmDqO+8jHRvRW5k5Li6dHJ1ZeaXtmZvY3Vz5Yiw5YaF5a655bC+6YOoXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmZvY3VzKHRydWUpXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZm9jdXM6IGZ1bmN0aW9uICh0b0VuZCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IG1lLmJvZHkubGFzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PSAxICYmICFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eUJsb2NrKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEF0Rmlyc3Qobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QXRMYXN0KG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0Q3Vyc29yKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFybmcuY29sbGFwc2VkICYmIGRvbVV0aWxzLmlzQm9keShybmcuc3RhcnRDb250YWluZXIpICYmIHJuZy5zdGFydE9mZnNldCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGUgPSBtZS5ib2R5LmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PSAxICYmICFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QXRGaXJzdChub2RlKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2ZvY3VzIHNlbGVjdGlvbmNoYW5nZScpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNGb2N1czogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbi5pc0ZvY3VzKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYmx1cjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzZWwgPSB0aGlzLnNlbGVjdGlvbi5nZXROYXRpdmUoKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsLmVtcHR5ICYmIGJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5hdGl2ZVJuZyA9IGRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIG5hdGl2ZVJuZy5tb3ZlVG9FbGVtZW50VGV4dChkb2N1bWVudC5ib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgbmF0aXZlUm5nLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBuYXRpdmVSbmcuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIHNlbC5lbXB0eSgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbC5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL3RoaXMuZmlyZUV2ZW50KCdibHVyIHNlbGVjdGlvbmNoYW5nZScpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Yid5aeL5YyWVUXkuovku7blj4rpg6jliIbkuovku7bku6PnkIZcbiAgICAgICAgICAgICAqIEBtZXRob2QgX2luaXRFdmVudHNcbiAgICAgICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIF9pbml0RXZlbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgZG9jID0gbWUuZG9jdW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIHdpbiA9IG1lLndpbmRvdztcbiAgICAgICAgICAgICAgICBtZS5fcHJveHlEb21FdmVudCA9IHV0aWxzLmJpbmQobWUuX3Byb3h5RG9tRXZlbnQsIG1lKTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbihcbiAgICAgICAgICAgICAgICAgICAgZG9jLFxuICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAnY2xpY2snLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbnRleHRtZW51JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdtb3VzZWRvd24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2tleWRvd24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2tleXVwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdrZXlwcmVzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAnbW91c2V1cCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnbW91c2VvdmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdtb3VzZW91dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnc2VsZWN0c3RhcnQnXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIG1lLl9wcm94eURvbUV2ZW50XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbih3aW4sIFsnZm9jdXMnLCAnYmx1ciddLCBtZS5fcHJveHlEb21FdmVudCk7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUuYm9keSwgJ2Ryb3AnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAvL+mYu+atomZm5LiL6buY6K6k55qE5by55Ye65paw6aG16Z2i5omT5byA5Zu+54mHXG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmdlY2tvICYmIGUuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY29udGVudGNoYW5nZScpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKGRvYywgWydtb3VzZXVwJywgJ2tleWRvd24nXSwgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgICAgICAgICAvL+eJueauiumUruS4jeinpuWPkXNlbGVjdGlvbmNoYW5nZVxuICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0LnR5cGUgPT0gJ2tleWRvd24nICYmIChldnQuY3RybEtleSB8fCBldnQubWV0YUtleSB8fCBldnQuc2hpZnRLZXkgfHwgZXZ0LmFsdEtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0LmJ1dHRvbiA9PSAyKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIG1lLl9zZWxlY3Rpb25DaGFuZ2UoMjUwLCBldnQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6Kem5Y+R5LqL5Lu25Luj55CGXG4gICAgICAgICAgICAgKiBAbWV0aG9kIF9wcm94eURvbUV2ZW50XG4gICAgICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgICAgICogQHJldHVybiB7ICogfSBmaXJlRXZlbnTnmoTov5Tlm57lgLxcbiAgICAgICAgICAgICAqIEBzZWUgVUUuRXZlbnRCYXNlOmZpcmVFdmVudChTdHJpbmcpXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIF9wcm94eURvbUV2ZW50OiBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlyZUV2ZW50KCdiZWZvcmUnICsgZXZ0LnR5cGUucmVwbGFjZSgvXm9uLywgJycpLnRvTG93ZXJDYXNlKCkpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpcmVFdmVudChldnQudHlwZS5yZXBsYWNlKC9eb24vLCAnJyksIGV2dCkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmlyZUV2ZW50KCdhZnRlcicgKyBldnQudHlwZS5yZXBsYWNlKC9eb24vLCAnJykudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlj5jljJbpgInljLpcbiAgICAgICAgICAgICAqIEBtZXRob2QgX3NlbGVjdGlvbkNoYW5nZVxuICAgICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgX3NlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gKGRlbGF5LCBldnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIC8v5pyJ5YWJ5qCH5omN5YGac2VsZWN0aW9uY2hhbmdlIOS4uuS6huino+WGs+acqmZvY3Vz5pe254K55Ye7c291cmNl5LiN6IO96Kem5Y+R5pu05pS55bel5YW35qCP54q25oCB55qE6Zeu6aKY77yIc291cmNl5ZG95Lukbm90TmVlZFVuZG89Me+8iVxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgaWYgKCAhbWUuc2VsZWN0aW9uLmlzRm9jdXMoKSApe1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBoYWNrRm9yTW91c2VVcCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhciBtb3VzZVgsIG1vdXNlWTtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPCA5ICYmIGV2dCAmJiBldnQudHlwZSA9PSAnbW91c2V1cCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhY2tGb3JNb3VzZVVwID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vdXNlWCA9IGV2dC5jbGllbnRYO1xuICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VZID0gZXZ0LmNsaWVudFk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KF9zZWxlY3Rpb25DaGFuZ2VUaW1lcik7XG4gICAgICAgICAgICAgICAgX3NlbGVjdGlvbkNoYW5nZVRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWUuc2VsZWN0aW9uIHx8ICFtZS5zZWxlY3Rpb24uZ2V0TmF0aXZlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL+S/ruWkjeS4gOS4qklF5LiL55qEYnVnOiDpvKDmoIfngrnlh7vkuIDmrrXlt7LpgInmi6nnmoTmlofmnKzkuK3pl7Tml7bvvIzlj6/og73lnKhtb3VzZXVw5ZCO55qE5LiA5q615pe26Ze05YaF5Y+W5Yiw55qEcmFuZ2XmmK/lnKhzZWxlY3Rpb27nmoR0eXBl5Li6Tm9uZeS4i+eahOmUmeivr+WAvC5cbiAgICAgICAgICAgICAgICAgICAgLy9JReS4i+WmguaenOeUqOaIt+aYr+aLluaLveS4gOauteW3sumAieaLqeaWh+acrO+8jOWImeS4jeS8muinpuWPkW1vdXNldXDkuovku7bvvIzmiYDku6Xov5nph4znmoTnibnmrorlpITnkIbkuI3kvJrlr7nlhbbmnInlvbHlk41cbiAgICAgICAgICAgICAgICAgICAgdmFyIGllUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGlmIChoYWNrRm9yTW91c2VVcCAmJiBtZS5zZWxlY3Rpb24uZ2V0TmF0aXZlKCkudHlwZSA9PSAnTm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGllUmFuZ2UgPSBtZS5kb2N1bWVudC5ib2R5LmNyZWF0ZVRleHRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZVJhbmdlLm1vdmVUb1BvaW50KG1vdXNlWCwgbW91c2VZKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWVSYW5nZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGJha0dldElFUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpZVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWtHZXRJRVJhbmdlID0gbWUuc2VsZWN0aW9uLmdldElFUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0SUVSYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWVSYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmNhY2hlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChiYWtHZXRJRVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0SUVSYW5nZSA9IGJha0dldElFUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLnNlbGVjdGlvbi5fY2FjaGVkUmFuZ2UgJiYgbWUuc2VsZWN0aW9uLl9jYWNoZWRTdGFydEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYmVmb3Jlc2VsZWN0aW9uY2hhbmdlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDnrKzkuozkuKrlj4LmlbBjYXVzZUJ5VWnkuLp0cnVl5Luj6KGo55Sx55So5oi35Lqk5LqS6YCg5oiQ55qEc2VsZWN0aW9uY2hhbmdlLlxuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzZWxlY3Rpb25jaGFuZ2UnLCAhIWV2dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2FmdGVyc2VsZWN0aW9uY2hhbmdlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uY2xlYXIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIGRlbGF5IHx8IDUwKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5omn6KGM57yW6L6R5ZG95LukXG4gICAgICAgICAgICAgKiBAbWV0aG9kIF9jYWxsQ21kRm5cbiAgICAgICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBmbk5hbWUg5Ye95pWw5ZCN56ewXG4gICAgICAgICAgICAgKiBAcGFyYW0geyAqIH0gYXJncyDkvKDnu5nlkb3ku6Tlh73mlbDnmoTlj4LmlbBcbiAgICAgICAgICAgICAqIEByZXR1cm4geyAqIH0g6L+U5Zue5ZG95Luk5Ye95pWw6L+Q6KGM55qE6L+U5Zue5YC8XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIF9jYWxsQ21kRm46IGZ1bmN0aW9uIChmbk5hbWUsIGFyZ3MpIHtcbiAgICAgICAgICAgICAgICB2YXIgY21kTmFtZSA9IGFyZ3NbMF0udG9Mb3dlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgY21kLFxuICAgICAgICAgICAgICAgICAgICBjbWRGbjtcbiAgICAgICAgICAgICAgICBjbWQgPSB0aGlzLmNvbW1hbmRzW2NtZE5hbWVdIHx8IFVFLmNvbW1hbmRzW2NtZE5hbWVdO1xuICAgICAgICAgICAgICAgIGNtZEZuID0gY21kICYmIGNtZFtmbk5hbWVdO1xuICAgICAgICAgICAgICAgIC8v5rKh5pyJcXVlcnljb21tYW5kc3RhdGXmiJbogIXmsqHmnIljb21tYW5k55qE6YO96buY6K6k6L+U5ZueMFxuICAgICAgICAgICAgICAgIGlmICgoIWNtZCB8fCAhY21kRm4pICYmIGZuTmFtZSA9PSAncXVlcnlDb21tYW5kU3RhdGUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY21kRm4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNtZEZuLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5omn6KGM57yW6L6R5ZG95LukY21kTmFtZe+8jOWujOaIkOWvjOaWh+acrOe8lui+keaViOaenFxuICAgICAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kTmFtZSDpnIDopoHmiafooYznmoTlkb3ku6RcbiAgICAgICAgICAgICAqIEByZW1pbmQg5YW35L2T5ZG95Luk55qE5L2/55So6K+35Y+C6ICDPGEgaHJlZj1cIiNDT01NQU5ELkxJU1RcIj7lkb3ku6TliJfooag8L2E+XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgKiB9IOi/lOWbnuWRveS7pOWHveaVsOi/kOihjOeahOi/lOWbnuWAvFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZChjbWROYW1lKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZE5hbWUpIHtcbiAgICAgICAgICAgICAgICBjbWROYW1lID0gY21kTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgY21kID0gbWUuY29tbWFuZHNbY21kTmFtZV0gfHwgVUUuY29tbWFuZHNbY21kTmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKCFjbWQgfHwgIWNtZC5leGVjQ29tbWFuZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFjbWQubm90TmVlZFVuZG8gJiYgIW1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5fX2hhc0VudGVyRXhlY0NvbW1hbmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWUucXVlcnlDb21tYW5kU3RhdGUuYXBwbHkobWUsIGFyZ3VtZW50cykgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQuYXBwbHkobWUsIFsnYmVmb3JlZXhlY2NvbW1hbmQnLCBjbWROYW1lXS5jb25jYXQoYXJndW1lbnRzKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSB0aGlzLl9jYWxsQ21kRm4oJ2V4ZWNDb21tYW5kJywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5L+d5a2Y5Zy65pmv5pe277yM5YGa5LqG5YaF5a655a+55q+U77yM5YaN55yL5piv5ZCm6L+b6KGMY29udGVudGNoYW5nZeinpuWPke+8jOi/memHjOWkmuinpuWPkeS6huS4gOasoe+8jOWOu+aOiVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICghY21kLmlnbm9yZUNvbnRlbnRDaGFuZ2UgJiYgIW1lLl9pZ25vcmVDb250ZW50Q2hhbmdlKSAmJiBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudC5hcHBseShtZSwgWydhZnRlcmV4ZWNjb21tYW5kJywgY21kTmFtZV0uY29uY2F0KGFyZ3VtZW50cykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBtZS5fX2hhc0VudGVyRXhlY0NvbW1hbmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSB0aGlzLl9jYWxsQ21kRm4oJ2V4ZWNDb21tYW5kJywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgIW1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIWNtZC5pZ25vcmVDb250ZW50Q2hhbmdlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAhbWUuX2lnbm9yZUNvbnRlbnRDaGFuZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY29udGVudGNoYW5nZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAhbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kICYmXG4gICAgICAgICAgICAgICAgICAgICFjbWQuaWdub3JlQ29udGVudENoYW5nZSAmJlxuICAgICAgICAgICAgICAgICAgICAhbWUuX2lnbm9yZUNvbnRlbnRDaGFuZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgbWUuX3NlbGVjdGlvbkNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOagueaNruS8oOWFpeeahGNvbW1hbmTlkb3ku6TvvIzmn6XpgInnvJbovpHlmajlvZPliY3nmoTpgInljLrvvIzov5Tlm57lkb3ku6TnmoTnirbmgIFcbiAgICAgICAgICAgICAqIEBtZXRob2QgIHF1ZXJ5Q29tbWFuZFN0YXRlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWROYW1lIOmcgOimgeafpeivoueahOWRveS7pOWQjeensFxuICAgICAgICAgICAgICogQHJlbWluZCDlhbfkvZPlkb3ku6TnmoTkvb/nlKjor7flj4LogIM8YSBocmVmPVwiI0NPTU1BTkQuTElTVFwiPuWRveS7pOWIl+ihqDwvYT5cbiAgICAgICAgICAgICAqIEByZXR1cm4geyBOdW1iZXIgfSBudW1iZXIg6L+U5Zue5pS+5YmN5ZG95Luk55qE54q25oCB77yM6L+U5Zue5YC85LiJ56eN5oOF5Ya177yaKC0xfDB8MSlcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoY21kTmFtZSkgID0+ICgtMXwwfDEpXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqIEBzZWUgQ09NTUFORC5MSVNUXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWxsQ21kRm4oJ3F1ZXJ5Q29tbWFuZFN0YXRlJywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5qC55o2u5Lyg5YWl55qEY29tbWFuZOWRveS7pO+8jOafpemAiee8lui+keWZqOW9k+WJjeeahOmAieWMuu+8jOagueaNruWRveS7pOi/lOWbnuebuOWFs+eahOWAvFxuICAgICAgICAgICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kTmFtZSDpnIDopoHmn6Xor6LnmoTlkb3ku6TlkI3np7BcbiAgICAgICAgICAgICAqIEByZW1pbmQg5YW35L2T5ZG95Luk55qE5L2/55So6K+35Y+C6ICDPGEgaHJlZj1cIiNDT01NQU5ELkxJU1RcIj7lkb3ku6TliJfooag8L2E+XG4gICAgICAgICAgICAgKiBAcmVtaW5kIOWPquaciemDqOWIhuaPkuS7tuacieatpOaWueazlVxuICAgICAgICAgICAgICogQHJldHVybiB7ICogfSDov5Tlm57mr4/kuKrlkb3ku6TnibnlrprnmoTlvZPliY3nirbmgIHlgLxcbiAgICAgICAgICAgICAqIEBncmFtbWFyIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZShjbWROYW1lKSAgPT4gIHsqfVxuICAgICAgICAgICAgICogQHNlZSBDT01NQU5ELkxJU1RcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kVmFsdWU6IGZ1bmN0aW9uIChjbWROYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhbGxDbWRGbigncXVlcnlDb21tYW5kVmFsdWUnLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmo4Dmn6XnvJbovpHljLrln5/kuK3mmK/lkKbmnInlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGhhc0NvbnRlbnRzXG4gICAgICAgICAgICAgKiBAcmVtaW5kIOm7mOiupOacieaWh+acrOWGheWuue+8jOaIluiAheacieS7peS4i+iKgueCuemDveS4jeiupOS4uuaYr+epulxuICAgICAgICAgICAgICogdGFibGUsdWwsb2wsZGwsaWZyYW1lLGFyZWEsYmFzZSxjb2wsaHIsaW1nLGVtYmVkLGlucHV0LGxpbmssbWV0YSxwYXJhbVxuICAgICAgICAgICAgICogQHJldHVybiB7IEJvb2xlYW4gfSDmo4Dmn6XmnInlhoXlrrnov5Tlm550cnVl77yM5ZCm5YiZ6L+U5ZueZmFsc2VcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IuaGFzQ29udGVudHMoKVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmo4Dmn6XnvJbovpHljLrln5/kuK3mmK/lkKbmnInlhoXlrrnvvIzoi6XljIXlkKvlj4LmlbB0YWdz5Lit55qE6IqC54K557G75Z6L77yM55u05o6l6L+U5ZuedHJ1ZVxuICAgICAgICAgICAgICogQG1ldGhvZCAgaGFzQ29udGVudHNcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gdGFncyDkvKDlhaXmlbDnu4TliKTmlq3ml7bnlKjliLDnmoToioLngrnnsbvlnotcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBCb29sZWFuIH0g6Iul5paH5qGj5Lit5YyF5ZCrdGFnc+aVsOe7hOmHjOWvueW6lOeahHRhZ++8jOi/lOWbnnRydWXvvIzlkKbliJnov5Tlm55mYWxzZVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5oYXNDb250ZW50cyhbJ3NwYW4nXSk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaGFzQ29udGVudHM6IGZ1bmN0aW9uICh0YWdzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRhZ3MpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0YWdzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKGNpKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFkb21VdGlscy5pc0VtcHR5QmxvY2sodGhpcy5ib2R5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/pmo/ml7bmt7vliqAs5a6a5LmJ55qE54m55q6K5qCH562+5aaC5p6c5a2Y5Zyo77yM5LiN6IO96K6k5Li65piv56m6XG4gICAgICAgICAgICAgICAgdGFncyA9IFsnZGl2J107XG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgKGNpID0gdGFnc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBub2RlcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRoaXMuZG9jdW1lbnQsIGNpKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbiA9IDAsIGNuOyAoY24gPSBub2Rlc1tuKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNDdXN0b21lTm9kZShjbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOmHjee9rue8lui+keWZqO+8jOWPr+eUqOadpeWBmuWkmuS4qnRhYuS9v+eUqOWQjOS4gOS4que8lui+keWZqOWunuS+i1xuICAgICAgICAgICAgICogQG1ldGhvZCAgcmVzZXRcbiAgICAgICAgICAgICAqIEByZW1pbmQg5q2k5pa55rOV5Lya5riF56m657yW6L6R5Zmo5YaF5a6577yM5riF56m65Zue6YCA5YiX6KGo77yM5Lya6Kem5Y+RcmVzZXTkuovku7ZcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IucmVzZXQoKVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ3Jlc2V0Jyk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuvue9ruW9k+WJjee8lui+keWMuuWfn+WPr+S7pee8lui+kVxuICAgICAgICAgICAgICogQG1ldGhvZCBzZXRFbmFibGVkXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNldEVuYWJsZWQoKVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldEVuYWJsZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICByYW5nZTtcbiAgICAgICAgICAgICAgICBpZiAobWUuYm9keS5jb250ZW50RWRpdGFibGUgPT0gJ2ZhbHNlJykge1xuICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIC8v5pyJ5Y+v6IO95YaF5a655Lii5aSx5LqGXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhtZS5sYXN0QmspO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIG1lLmxhc3RCaztcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBdEZpcnN0KG1lLmJvZHkpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmJrcXVlcnlDb21tYW5kU3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLnF1ZXJ5Q29tbWFuZFN0YXRlID0gbWUuYmtxdWVyeUNvbW1hbmRTdGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZS5ia3F1ZXJ5Q29tbWFuZFN0YXRlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZS5ia3F1ZXJ5Q29tbWFuZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5xdWVyeUNvbW1hbmRWYWx1ZSA9IG1lLmJrcXVlcnlDb21tYW5kVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgbWUuYmtxdWVyeUNvbW1hbmRWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NlbGVjdGlvbmNoYW5nZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbmFibGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXRFbmFibGVkKCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKiog6K6+572u5b2T5YmN57yW6L6R5Yy65Z+f5LiN5Y+v57yW6L6RXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNldERpc2FibGVkXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqIOiuvue9ruW9k+WJjee8lui+keWMuuWfn+S4jeWPr+e8lui+kSxleGNlcHTkuK3nmoTlkb3ku6TpmaTlpJZcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0RGlzYWJsZWRcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGV4Y2VwdCDkvovlpJblkb3ku6TnmoTlrZfnrKbkuLJcbiAgICAgICAgICAgICAqIEByZW1pbmQg5Y2z5L2/6K6+572u5LqGZGlzYWJsZe+8jOatpOWkhOmFjee9rueahOS+i+WkluWRveS7pOS7jeeEtuWPr+S7peaJp+ihjFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5zZXREaXNhYmxlZCgnYm9sZCcpOyAvL+emgeeUqOW3peWFt+agj+S4remZpOWKoOeyl+S5i+WklueahOaJgOacieWKn+iDvVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqIOiuvue9ruW9k+WJjee8lui+keWMuuWfn+S4jeWPr+e8lui+kSxleGNlcHTkuK3nmoTlkb3ku6TpmaTlpJZcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0RGlzYWJsZWRcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IEFycmF5IH0gZXhjZXB0IOS+i+WkluWRveS7pOeahOWtl+espuS4suaVsOe7hO+8jOaVsOe7hOS4reeahOWRveS7pOS7jeeEtuWPr+S7peaJp+ihjFxuICAgICAgICAgICAgICogQHJlbWluZCDljbPkvb/orr7nva7kuoZkaXNhYmxl77yM5q2k5aSE6YWN572u55qE5L6L5aSW5ZG95Luk5LuN54S25Y+v5Lul5omn6KGMXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLnNldERpc2FibGVkKFsnYm9sZCcsJ2luc2VydGltYWdlJ10pOyAvL+emgeeUqOW3peWFt+agj+S4remZpOWKoOeyl+WSjOaPkuWFpeWbvueJh+S5i+WklueahOaJgOacieWKn+iDvVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldERpc2FibGVkOiBmdW5jdGlvbiAoZXhjZXB0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBleGNlcHQgPSBleGNlcHQgPyAodXRpbHMuaXNBcnJheShleGNlcHQpID8gZXhjZXB0IDogW2V4Y2VwdF0pIDogW107XG4gICAgICAgICAgICAgICAgaWYgKG1lLmJvZHkuY29udGVudEVkaXRhYmxlID09ICd0cnVlJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW1lLmxhc3RCaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUubGFzdEJrID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWUuYm9keS5jb250ZW50RWRpdGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgbWUuYmtxdWVyeUNvbW1hbmRTdGF0ZSA9IG1lLnF1ZXJ5Q29tbWFuZFN0YXRlO1xuICAgICAgICAgICAgICAgICAgICBtZS5ia3F1ZXJ5Q29tbWFuZFZhbHVlID0gbWUucXVlcnlDb21tYW5kVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIG1lLnF1ZXJ5Q29tbWFuZFN0YXRlID0gZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1dGlscy5pbmRleE9mKGV4Y2VwdCwgdHlwZSkgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWUuYmtxdWVyeUNvbW1hbmRTdGF0ZS5hcHBseShtZSwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgbWUucXVlcnlDb21tYW5kVmFsdWUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHV0aWxzLmluZGV4T2YoZXhjZXB0LCB0eXBlKSAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtZS5ia3F1ZXJ5Q29tbWFuZFZhbHVlLmFwcGx5KG1lLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2VsZWN0aW9uY2hhbmdlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc2FibGU6IGZ1bmN0aW9uIChleGNlcHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXREaXNhYmxlZChleGNlcHQpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva7pu5jorqTlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgX3NldERlZmF1bHRDb250ZW50XG4gICAgICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgICAgICogQHBhcmFtICB7IFN0cmluZyB9IGNvbnQg6KaB5a2Y5YWl55qE5YaF5a65XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIF9zZXREZWZhdWx0Q29udGVudDogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbml0Q29udGVudCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmlubmVySFRNTCA9ICc8cD4nICsgKGllID8gJycgOiAnPGJyLz4nKSArICc8L3A+JztcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdmaXJzdEJlZm9yZUV4ZWNDb21tYW5kIGZvY3VzJywgY2xlYXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5fc2VsZWN0aW9uQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoY29udCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmlubmVySFRNTCA9ICc8cCBpZD1cImluaXRDb250ZW50XCI+JyArIGNvbnQgKyAnPC9wPic7XG5cbiAgICAgICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2ZpcnN0QmVmb3JlRXhlY0NvbW1hbmQgZm9jdXMnLCBjbGVhcik7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pKCksXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5pi+56S657yW6L6R5ZmoXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNldFNob3dcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3Iuc2V0U2hvdygpXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0U2hvdzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgaWYgKG1lLmNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID09ICdub25lJykge1xuICAgICAgICAgICAgICAgICAgICAvL+acieWPr+iDveWGheWuueS4ouWkseS6hlxuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsobWUubGFzdEJrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZS5sYXN0Qms7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QXRGaXJzdChtZS5ib2R5KS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL2ll5LiLZm9jdXPlrp7mlYjvvIzmiYDku6XlgZrkuobkuKrlu7bov59cbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXRTaG93KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDpmpDol4/nvJbovpHlmahcbiAgICAgICAgICAgICAqIEBtZXRob2Qgc2V0SGlkZVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5zZXRIaWRlKClcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRIaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoIW1lLmxhc3RCaykge1xuICAgICAgICAgICAgICAgICAgICBtZS5sYXN0QmsgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5jcmVhdGVCb29rbWFyayh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWUuY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaGlkZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNldEhpZGUoKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5qC55o2u5oyH5a6a55qE6Lev5b6E77yM6I635Y+W5a+55bqU55qE6K+t6KiA6LWE5rqQXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldExhbmdcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHBhdGgg6Lev5b6E5qC55o2u55qE5pivbGFuZ+ebruW9leS4i+eahOivreiogOaWh+S7tueahOi3r+W+hOe7k+aehFxuICAgICAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB8IFN0cmluZyB9IOagueaNrui3r+W+hOi/lOWbnuivreiogOi1hOa6kOeahEpzb27moLzlvI/lr7nosaHmiJbogIXor63oqIDlrZfnrKbkuLJcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBlZGl0b3IuZ2V0TGFuZygnY29udGV4dE1lbnUuZGVsZXRlJyk7IC8v5aaC5p6c5b2T5YmN5piv5Lit5paH77yM6YKj6L+U5Zue5piv55qE5pivJ+WIoOmZpCdcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRMYW5nOiBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgICAgICAgICAgIHZhciBsYW5nID0gVUUuSTE4Tlt0aGlzLm9wdGlvbnMubGFuZ107XG4gICAgICAgICAgICAgICAgaWYgKCFsYW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IEVycm9yKCdub3QgaW1wb3J0IGxhbmd1YWdlIGZpbGUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcGF0aCA9IChwYXRoIHx8ICcnKS5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gcGF0aFtpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGxhbmcgPSBsYW5nW2NpXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFsYW5nKSBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhbmc7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuoeeul+e8lui+keWZqGh0bWzlhoXlrrnlrZfnrKbkuLLnmoTplb/luqZcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGdldENvbnRlbnRMZW5ndGhcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBOdW1iZXIgfSDov5Tlm57orqHnrpfnmoTplb/luqZcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiAvL+e8lui+keWZqGh0bWzlhoXlrrk8cD48c3Ryb25nPjEzMjwvc3Ryb25nPjwvcD5cbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRDb250ZW50TGVuZ3RoKCkgLy/ov5Tlm54yN1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6K6h566X57yW6L6R5Zmo5b2T5YmN57qv5paH5pys5YaF5a6555qE6ZW/5bqmXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBnZXRDb250ZW50TGVuZ3RoXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gaW5nb25lSHRtbCDkvKDlhaV0cnVl5pe277yM5Y+q5oyJ54Wn57qv5paH5pys5p2l6K6h566XXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgTnVtYmVyIH0g6L+U5Zue6K6h566X55qE6ZW/5bqm77yM5YaF5a655Lit5pyJaHIvaW1nL2lmcmFtZeagh+etvu+8jOmVv+W6puWKoDFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiAvL+e8lui+keWZqGh0bWzlhoXlrrk8cD48c3Ryb25nPjEzMjwvc3Ryb25nPjwvcD5cbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRDb250ZW50TGVuZ3RoKCkgLy/ov5Tlm54zXG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0Q29udGVudExlbmd0aDogZnVuY3Rpb24gKGluZ29uZUh0bWwsIHRhZ05hbWVzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvdW50ID0gdGhpcy5nZXRDb250ZW50KGZhbHNlLCBmYWxzZSwgdHJ1ZSkubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGlmIChpbmdvbmVIdG1sKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhZ05hbWVzID0gKHRhZ05hbWVzIHx8IFtdKS5jb25jYXQoWydocicsICdpbWcnLCAnaWZyYW1lJ10pO1xuICAgICAgICAgICAgICAgICAgICBjb3VudCA9IHRoaXMuZ2V0Q29udGVudFR4dCgpLnJlcGxhY2UoL1tcXHRcXHJcXG5dKy9nLCAnJykubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHRhZ05hbWVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ICs9IHRoaXMuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoY2kpLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY291bnQ7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOazqOWGjOi+k+WFpei/h+a7pOinhOWImVxuICAgICAgICAgICAgICogQG1ldGhvZCAgYWRkSW5wdXRSdWxlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IHJ1bGUg6KaB5re75Yqg55qE6L+H5ruk6KeE5YiZXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmFkZElucHV0UnVsZShmdW5jdGlvbihyb290KXtcbiAgICAgICAgICAgICAqICAgJC5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2RpdicpLGZ1bmN0aW9uKGksbm9kZSl7XG4gICAgICAgICAgICAgKiAgICAgICBub2RlLnRhZ05hbWU9XCJwXCI7XG4gICAgICAgICAgICAgKiAgIH0pO1xuICAgICAgICAgICAgICogfSk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYWRkSW5wdXRSdWxlOiBmdW5jdGlvbiAocnVsZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRSdWxlcy5wdXNoKHJ1bGUpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmiafooYzms6jlhoznmoTov4fmu6Top4TliJlcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGZpbHRlcklucHV0UnVsZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgVUUudU5vZGUgfSByb290IOimgei/h+a7pOeahHVOb2Rl6IqC54K5XG4gICAgICAgICAgICAgKiBAcmVtaW5kIOaJp+ihjGVkaXRvci5zZXRDb250ZW505pa55rOV5ZKM5omn6KGMJ2luc2VydGh0bWwn5ZG95Luk5ZCO77yM5Lya6L+Q6KGM6K+l6L+H5ruk5Ye95pWwXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmZpbHRlcklucHV0UnVsZShlZGl0b3IuYm9keSk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqIEBzZWUgVUUuRWRpdG9yOmFkZElucHV0UnVsZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmaWx0ZXJJbnB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0aGlzLmlucHV0UnVsZXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBjaS5jYWxsKHRoaXMsIHJvb3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5rOo5YaM6L6T5Ye66L+H5ruk6KeE5YiZXG4gICAgICAgICAgICAgKiBAbWV0aG9kICBhZGRPdXRwdXRSdWxlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBGdW5jdGlvbiB9IHJ1bGUg6KaB5re75Yqg55qE6L+H5ruk6KeE5YiZXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmFkZE91dHB1dFJ1bGUoZnVuY3Rpb24ocm9vdCl7XG4gICAgICAgICAgICAgKiAgICQuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdwJyksZnVuY3Rpb24oaSxub2RlKXtcbiAgICAgICAgICAgICAqICAgICAgIG5vZGUudGFnTmFtZT1cImRpdlwiO1xuICAgICAgICAgICAgICogICB9KTtcbiAgICAgICAgICAgICAqIH0pO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGFkZE91dHB1dFJ1bGU6IGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vdXRwdXRSdWxlcy5wdXNoKHJ1bGUpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja7ovpPlh7rov4fmu6Top4TliJnvvIzov4fmu6TnvJbovpHlmajlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGZpbHRlck91dHB1dFJ1bGVcbiAgICAgICAgICAgICAqIEByZW1pbmQg5omn6KGMZWRpdG9yLmdldENvbnRlbnTmlrnms5XnmoTml7blgJnvvIzkvJrlhYjov5DooYzor6Xov4fmu6Tlh73mlbBcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVFLnVOb2RlIH0gcm9vdCDopoHov4fmu6TnmoR1Tm9kZeiKgueCuVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIGVkaXRvci5maWx0ZXJPdXRwdXRSdWxlKGVkaXRvci5ib2R5KTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICogQHNlZSBVRS5FZGl0b3I6YWRkT3V0cHV0UnVsZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBmaWx0ZXJPdXRwdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5vdXRwdXRSdWxlc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNpLmNhbGwodGhpcywgcm9vdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja5hY3Rpb27lkI3np7Dojrflj5bor7fmsYLnmoTot6/lvoRcbiAgICAgICAgICAgICAqIEBtZXRob2QgIGdldEFjdGlvblVybFxuICAgICAgICAgICAgICogQHJlbWluZCDlgYflpoLmsqHmnInorr7nva5zZXJ2ZXJVcmws5Lya5qC55o2uaW1hZ2VVcmzorr7nva7pu5jorqTnmoRjb250cm9sbGVy6Lev5b6EXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBhY3Rpb24gYWN0aW9u5ZCN56ewXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogZWRpdG9yLmdldEFjdGlvblVybCgnY29uZmlnJyk7IC8v6L+U5ZueIFwiL3VlZGl0b3IvcGhwL2NvbnRyb2xsZXIucGhwP2FjdGlvbj1jb25maWdcIlxuICAgICAgICAgICAgICogZWRpdG9yLmdldEFjdGlvblVybCgnaW1hZ2UnKTsgLy/ov5Tlm54gXCIvdWVkaXRvci9waHAvY29udHJvbGxlci5waHA/YWN0aW9uPXVwbGFvZGltYWdlXCJcbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRBY3Rpb25VcmwoJ3NjcmF3bCcpOyAvL+i/lOWbniBcIi91ZWRpdG9yL3BocC9jb250cm9sbGVyLnBocD9hY3Rpb249dXBsYW9kc2NyYXdsXCJcbiAgICAgICAgICAgICAqIGVkaXRvci5nZXRBY3Rpb25VcmwoJ2ltYWdlTWFuYWdlcicpOyAvL+i/lOWbniBcIi91ZWRpdG9yL3BocC9jb250cm9sbGVyLnBocD9hY3Rpb249bGlzdGltYWdlXCJcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRBY3Rpb25Vcmw6IGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB2YXIgYWN0aW9uTmFtZSA9IHRoaXMuZ2V0T3B0KGFjdGlvbikgfHwgYWN0aW9uLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVVybCA9IHRoaXMuZ2V0T3B0KCdpbWFnZVVybCcpLFxuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJVcmwgPSB0aGlzLmdldE9wdCgnc2VydmVyVXJsJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXNlcnZlclVybCAmJiBpbWFnZVVybCkge1xuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJVcmwgPSBpbWFnZVVybC5yZXBsYWNlKC9eKC4qW1xcL10pLisoW1xcLl0uKykkLywgJyQxY29udHJvbGxlciQyJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHNlcnZlclVybCkge1xuICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJVcmwgPSBzZXJ2ZXJVcmwgKyAoc2VydmVyVXJsLmluZGV4T2YoJz8nKSA9PSAtMSA/ICc/JyA6ICcmJykgKyAnYWN0aW9uPScgKyAoYWN0aW9uTmFtZSB8fCAnJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB1dGlscy5mb3JtYXRVcmwoc2VydmVyVXJsKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhFZGl0b3IsIEV2ZW50QmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIGNvcmUvRWRpdG9yLmRlZmF1bHRvcHRpb25zLmpzXG4gICAgLy/nu7TmiqTnvJbovpHlmajkuIDkuIvpu5jorqTnmoTkuI3lnKjmj5Lku7bkuK3nmoTphY3nva7poblcbiAgICBVRS5FZGl0b3IuZGVmYXVsdE9wdGlvbnMgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgIHZhciBfdXJsID0gZWRpdG9yLm9wdGlvbnMuVUVESVRPUl9IT01FX1VSTDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlzU2hvdzogdHJ1ZSxcbiAgICAgICAgICAgIGluaXRpYWxDb250ZW50OiAnJyxcbiAgICAgICAgICAgIGluaXRpYWxTdHlsZTogJycsXG4gICAgICAgICAgICBhdXRvQ2xlYXJpbml0aWFsQ29udGVudDogZmFsc2UsXG4gICAgICAgICAgICBpZnJhbWVDc3NVcmw6IF91cmwgKyAndGhlbWVzL2lmcmFtZS5jc3MnLFxuICAgICAgICAgICAgdGV4dGFyZWE6ICdlZGl0b3JWYWx1ZScsXG4gICAgICAgICAgICBmb2N1czogZmFsc2UsXG4gICAgICAgICAgICBmb2N1c0luRW5kOiB0cnVlLFxuICAgICAgICAgICAgYXV0b0NsZWFyRW1wdHlOb2RlOiB0cnVlLFxuICAgICAgICAgICAgZnVsbHNjcmVlbjogZmFsc2UsXG4gICAgICAgICAgICByZWFkb25seTogZmFsc2UsXG4gICAgICAgICAgICB6SW5kZXg6IDk5OSxcbiAgICAgICAgICAgIGltYWdlUG9wdXA6IHRydWUsXG4gICAgICAgICAgICBlbnRlclRhZzogJ3AnLFxuICAgICAgICAgICAgY3VzdG9tRG9tYWluOiBmYWxzZSxcbiAgICAgICAgICAgIGxhbmc6ICdjbicsXG4gICAgICAgICAgICBsYW5nUGF0aDogX3VybCArICdsYW5nLycsXG4gICAgICAgICAgICB0aGVtZTogJ2RlZmF1bHQnLFxuICAgICAgICAgICAgdGhlbWVQYXRoOiBfdXJsICsgJ3RoZW1lcy8nLFxuICAgICAgICAgICAgYWxsSHRtbEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgc2NhbGVFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHRhYmxlTmF0aXZlRWRpdEluRkY6IGZhbHNlLFxuICAgICAgICAgICAgYXV0b1N5bmNEYXRhOiB0cnVlLFxuICAgICAgICAgICAgZmlsZU5hbWVGb3JtYXQ6ICd7dGltZX17cmFuZDo2fSdcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLy8gY29yZS9sb2FkY29uZmlnLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgVUUuRWRpdG9yLnByb3RvdHlwZS5sb2FkU2VydmVyQ29uZmlnID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vdHJ5e1xuICAgICAgICAgICAgICAgIC8qbWUub3B0aW9ucy5pbWFnZVVybCAmJiBtZS5zZXRPcHQoJ3NlcnZlclVybCcsIG1lLm9wdGlvbnMuaW1hZ2VVcmwucmVwbGFjZSgvXiguKltcXC9dKS4rKFtcXC5dLispJC8sICckMWNvbnRyb2xsZXIkMicpKTsqL1xuXG4gICAgICAgICAgICAgICAgLy92YXIgY29uZmlnVXJsID0gbWUuZ2V0QWN0aW9uVXJsKCdjb25maWcnKSxcbiAgICAgICAgICAgICAgICAvL2lzSnNvbnAgPSB1dGlscy5pc0Nyb3NzRG9tYWluVXJsKGNvbmZpZ1VybCk7XG5cbiAgICAgICAgICAgICAgICAvL1s+IOWPkeWHumFqYXjor7fmsYIgPF1cbiAgICAgICAgICAgICAgICAvL21lLl9zZXJ2ZXJDb25maWdMb2FkZWQgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIC8vY29uZmlnVXJsICYmIFVFLmFqYXgucmVxdWVzdChjb25maWdVcmwse1xuICAgICAgICAgICAgICAgIC8vJ21ldGhvZCc6ICdHRVQnLFxuICAgICAgICAgICAgICAgIC8vJ2RhdGFUeXBlJzogaXNKc29ucCA/ICdqc29ucCc6JycsXG4gICAgICAgICAgICAgICAgLy8nb25zdWNjZXNzJzpmdW5jdGlvbihyKXtcbiAgICAgICAgICAgICAgICAvKnRyeSB7Ki9cbiAgICAgICAgICAgICAgICAvL3ZhciBjb25maWcgPSBpc0pzb25wID8gcjpldmFsKFwiKFwiK3IucmVzcG9uc2VUZXh0K1wiKVwiKTtcbiAgICAgICAgICAgICAgICB1dGlscy5leHRlbmQobWUub3B0aW9ucywge30pO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2VydmVyQ29uZmlnTG9hZGVkJyk7XG4gICAgICAgICAgICAgICAgbWUuX3NlcnZlckNvbmZpZ0xvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgLyogICB9IGNhdGNoIChlKSB7Ki9cbiAgICAgICAgICAgICAgICAvL3Nob3dFcnJvck1zZyhtZS5nZXRMYW5nKCdsb2FkY29uZmlnRm9ybWF0RXJyb3InKSk7XG4gICAgICAgICAgICAgICAgLy99XG4gICAgICAgICAgICAgICAgLy99LFxuICAgICAgICAgICAgICAgIC8vJ29uZXJyb3InOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgLy9zaG93RXJyb3JNc2cobWUuZ2V0TGFuZygnbG9hZGNvbmZpZ0h0dHBFcnJvcicpKTtcbiAgICAgICAgICAgICAgICAvL31cbiAgICAgICAgICAgICAgICAvKn0pOyovXG4gICAgICAgICAgICAgICAgLyp9IGNhdGNoKGUpeyovXG4gICAgICAgICAgICAgICAgLypzaG93RXJyb3JNc2cobWUuZ2V0TGFuZygnbG9hZGNvbmZpZ0Vycm9yJykpOyovXG4gICAgICAgICAgICAgICAgLy99XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gc2hvd0Vycm9yTXNnKG1zZykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUgJiYgY29uc29sZS5lcnJvcihtc2cpO1xuICAgICAgICAgICAgICAgIC8vbWUuZmlyZUV2ZW50KCdzaG93TWVzc2FnZScsIHtcbiAgICAgICAgICAgICAgICAvLyAgICAndGl0bGUnOiBtc2csXG4gICAgICAgICAgICAgICAgLy8gICAgJ3R5cGUnOiAnZXJyb3InXG4gICAgICAgICAgICAgICAgLy99KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBVRS5FZGl0b3IucHJvdG90eXBlLmlzU2VydmVyQ29uZmlnTG9hZGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBtZS5fc2VydmVyQ29uZmlnTG9hZGVkIHx8IGZhbHNlO1xuICAgICAgICB9O1xuXG4gICAgICAgIFVFLkVkaXRvci5wcm90b3R5cGUuYWZ0ZXJDb25maWdSZWFkeSA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgICAgICBpZiAoIWhhbmRsZXIgfHwgIXV0aWxzLmlzRnVuY3Rpb24oaGFuZGxlcikpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgcmVhZHlIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGhhbmRsZXIuYXBwbHkobWUsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgbWUucmVtb3ZlTGlzdGVuZXIoJ3NlcnZlckNvbmZpZ0xvYWRlZCcsIHJlYWR5SGFuZGxlcik7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpZiAobWUuaXNTZXJ2ZXJDb25maWdMb2FkZWQoKSkge1xuICAgICAgICAgICAgICAgIGhhbmRsZXIuY2FsbChtZSwgJ3NlcnZlckNvbmZpZ0xvYWRlZCcpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignc2VydmVyQ29uZmlnTG9hZGVkJywgcmVhZHlIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KSgpO1xuXG4gICAgLy8gY29yZS9hamF4LmpzXG4gICAgLyoqXG4gICAgICogQGZpbGVcbiAgICAgKiBAbW9kdWxlIFVFLmFqYXhcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5o+Q5L6b5a+5YWpheOivt+axgueahOaUr+aMgVxuICAgICAqIEBtb2R1bGUgVUUuYWpheFxuICAgICAqL1xuICAgIFVFLmFqYXggPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAvL+WIm+W7uuS4gOS4qmFqYXhSZXF1ZXN05a+56LGhXG4gICAgICAgIHZhciBmblN0ciA9ICdYTUxIdHRwUmVxdWVzdCgpJztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ldyBBY3RpdmVYT2JqZWN0KCdNc3htbDIuWE1MSFRUUCcpO1xuICAgICAgICAgICAgZm5TdHIgPSBcIkFjdGl2ZVhPYmplY3QoJ01zeG1sMi5YTUxIVFRQJylcIjtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBuZXcgQWN0aXZlWE9iamVjdCgnTWljcm9zb2Z0LlhNTEhUVFAnKTtcbiAgICAgICAgICAgICAgICBmblN0ciA9IFwiQWN0aXZlWE9iamVjdCgnTWljcm9zb2Z0LlhNTEhUVFAnKVwiO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgfVxuICAgICAgICB2YXIgY3JlYXRBamF4UmVxdWVzdCA9IG5ldyBGdW5jdGlvbigncmV0dXJuIG5ldyAnICsgZm5TdHIpO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlsIZqc29u5Y+C5pWw6L2s5YyW5oiQ6YCC5ZCIYWpheOaPkOS6pOeahOWPguaVsOWIl+ihqFxuICAgICAgICAgKiBAcGFyYW0ganNvblxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24ganNvbjJzdHIoanNvbikge1xuICAgICAgICAgICAgdmFyIHN0ckFyciA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBqc29uKSB7XG4gICAgICAgICAgICAgICAgLy/lv73nlaXpu5jorqTnmoTlh6DkuKrlj4LmlbBcbiAgICAgICAgICAgICAgICBpZiAoaSA9PSAnbWV0aG9kJyB8fCBpID09ICd0aW1lb3V0JyB8fCBpID09ICdhc3luYycgfHwgaSA9PSAnZGF0YVR5cGUnIHx8IGkgPT0gJ2NhbGxiYWNrJykgY29udGludWU7XG4gICAgICAgICAgICAgICAgLy/lv73nlaXmjqfliLZcbiAgICAgICAgICAgICAgICBpZiAoanNvbltpXSA9PSB1bmRlZmluZWQgfHwganNvbltpXSA9PSBudWxsKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAvL+S8oOmAkui/h+adpeeahOWvueixoeWSjOWHveaVsOS4jeWcqOaPkOS6pOS5i+WIl1xuICAgICAgICAgICAgICAgIGlmICghKCh0eXBlb2YganNvbltpXSkudG9Mb3dlckNhc2UoKSA9PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YganNvbltpXSkudG9Mb3dlckNhc2UoKSA9PSAnb2JqZWN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RyQXJyLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGpzb25baV0pKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoanNvbltpXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/mlK/mjIHkvKDmlbDnu4TlhoXlrrlcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBqc29uW2ldLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJBcnIucHVzaChlbmNvZGVVUklDb21wb25lbnQoaSkgKyAnW109JyArIGVuY29kZVVSSUNvbXBvbmVudChqc29uW2ldW2pdKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RyQXJyLmpvaW4oJyYnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRvQWpheCh1cmwsIGFqYXhPcHRpb25zKSB7XG4gICAgICAgICAgICB2YXIgeGhyID0gY3JlYXRBamF4UmVxdWVzdCgpLFxuICAgICAgICAgICAgICAgIC8v5piv5ZCm6LaF5pe2XG4gICAgICAgICAgICAgICAgdGltZUlzT3V0ID0gZmFsc2UsXG4gICAgICAgICAgICAgICAgLy/pu5jorqTlj4LmlbBcbiAgICAgICAgICAgICAgICBkZWZhdWx0QWpheE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiA1MDAwLFxuICAgICAgICAgICAgICAgICAgICBhc3luYzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YToge30sIC8v6ZyA6KaB5Lyg6YCS5a+56LGh55qE6K+d5Y+q6IO96KaG55uWXG4gICAgICAgICAgICAgICAgICAgIG9uc3VjY2VzczogZnVuY3Rpb24gKCkge30sXG4gICAgICAgICAgICAgICAgICAgIG9uZXJyb3I6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgYWpheE9wdGlvbnMgPSB1cmw7XG4gICAgICAgICAgICAgICAgdXJsID0gYWpheE9wdGlvbnMudXJsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCF4aHIgfHwgIXVybCkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGFqYXhPcHRzID0gYWpheE9wdGlvbnMgPyB1dGlscy5leHRlbmQoZGVmYXVsdEFqYXhPcHRpb25zLCBhamF4T3B0aW9ucykgOiBkZWZhdWx0QWpheE9wdGlvbnM7XG5cbiAgICAgICAgICAgIHZhciBzdWJtaXRTdHIgPSBqc29uMnN0cihhamF4T3B0cyk7IC8vIHsgbmFtZTpcIkppbVwiLGNpdHk6XCJCZWlqaW5nXCIgfSAtLT4gXCJuYW1lPUppbSZjaXR5PUJlaWppbmdcIlxuICAgICAgICAgICAgLy/lpoLmnpznlKjmiLfnm7TmjqXpgJrov4dkYXRh5Y+C5pWw5Lyg6YCSanNvbuWvueixoei/h+adpe+8jOWImeS5n+imgeWwhuatpGpzb27lr7nosaHovazljJbkuLrlrZfnrKbkuLJcbiAgICAgICAgICAgIGlmICghdXRpbHMuaXNFbXB0eU9iamVjdChhamF4T3B0cy5kYXRhKSkge1xuICAgICAgICAgICAgICAgIHN1Ym1pdFN0ciArPSAoc3VibWl0U3RyID8gJyYnIDogJycpICsganNvbjJzdHIoYWpheE9wdHMuZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL+i2heaXtuajgOa1i1xuICAgICAgICAgICAgdmFyIHRpbWVySUQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgIT0gNCkge1xuICAgICAgICAgICAgICAgICAgICB0aW1lSXNPdXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB4aHIuYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVySUQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGFqYXhPcHRzLnRpbWVvdXQpO1xuXG4gICAgICAgICAgICB2YXIgbWV0aG9kID0gYWpheE9wdHMubWV0aG9kLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICB2YXIgc3RyID1cbiAgICAgICAgICAgICAgICB1cmwgK1xuICAgICAgICAgICAgICAgICh1cmwuaW5kZXhPZignPycpID09IC0xID8gJz8nIDogJyYnKSArXG4gICAgICAgICAgICAgICAgKG1ldGhvZCA9PSAnUE9TVCcgPyAnJyA6IHN1Ym1pdFN0ciArICcmbm9DYWNoZT0nICsgK25ldyBEYXRlKCkpO1xuICAgICAgICAgICAgeGhyLm9wZW4obWV0aG9kLCBzdHIsIGFqYXhPcHRzLmFzeW5jKTtcbiAgICAgICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09IDQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aW1lSXNPdXQgJiYgeGhyLnN0YXR1cyA9PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFqYXhPcHRzLm9uc3VjY2Vzcyh4aHIpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWpheE9wdHMub25lcnJvcih4aHIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmIChtZXRob2QgPT0gJ1BPU1QnKSB7XG4gICAgICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnKTtcbiAgICAgICAgICAgICAgICB4aHIuc2VuZChzdWJtaXRTdHIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB4aHIuc2VuZChudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGRvSnNvbnAodXJsLCBvcHRzKSB7XG4gICAgICAgICAgICB2YXIgc3VjY2Vzc2hhbmRsZXIgPSBvcHRzLm9uc3VjY2VzcyB8fCBmdW5jdGlvbiAoKSB7fSxcbiAgICAgICAgICAgICAgICBzY3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdTQ1JJUFQnKSxcbiAgICAgICAgICAgICAgICBvcHRpb25zID0gb3B0cyB8fCB7fSxcbiAgICAgICAgICAgICAgICBjaGFyc2V0ID0gb3B0aW9uc1snY2hhcnNldCddLFxuICAgICAgICAgICAgICAgIGNhbGxiYWNrRmllbGQgPSBvcHRpb25zWydqc29ucCddIHx8ICdjYWxsYmFjaycsXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tGbk5hbWUsXG4gICAgICAgICAgICAgICAgdGltZU91dCA9IG9wdGlvbnNbJ3RpbWVPdXQnXSB8fCAwLFxuICAgICAgICAgICAgICAgIHRpbWVyLFxuICAgICAgICAgICAgICAgIHJlZyA9IG5ldyBSZWdFeHAoJyhcXFxcP3wmKScgKyBjYWxsYmFja0ZpZWxkICsgJz0oW14mXSopJyksXG4gICAgICAgICAgICAgICAgbWF0Y2hlcztcblxuICAgICAgICAgICAgaWYgKHV0aWxzLmlzRnVuY3Rpb24oc3VjY2Vzc2hhbmRsZXIpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tGbk5hbWUgPSAnYmRfX2VkaXRvcl9fJyArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIxNDc0ODM2NDgpLnRvU3RyaW5nKDM2KTtcbiAgICAgICAgICAgICAgICB3aW5kb3dbY2FsbGJhY2tGbk5hbWVdID0gZ2V0Q2FsbEJhY2soMCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzU3RyaW5nKHN1Y2Nlc3NoYW5kbGVyKSkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrRm5OYW1lID0gc3VjY2Vzc2hhbmRsZXI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICgobWF0Y2hlcyA9IHJlZy5leGVjKHVybCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrRm5OYW1lID0gbWF0Y2hlc1syXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHVybCA9IHVybC5yZXBsYWNlKHJlZywgJ1xceDI0MScgKyBjYWxsYmFja0ZpZWxkICsgJz0nICsgY2FsbGJhY2tGbk5hbWUpO1xuXG4gICAgICAgICAgICBpZiAodXJsLnNlYXJjaChyZWcpIDwgMCkge1xuICAgICAgICAgICAgICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA8IDAgPyAnPycgOiAnJicpICsgY2FsbGJhY2tGaWVsZCArICc9JyArIGNhbGxiYWNrRm5OYW1lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcXVlcnlTdHIgPSBqc29uMnN0cihvcHRzKTsgLy8geyBuYW1lOlwiSmltXCIsY2l0eTpcIkJlaWppbmdcIiB9IC0tPiBcIm5hbWU9SmltJmNpdHk9QmVpamluZ1wiXG4gICAgICAgICAgICAvL+WmguaenOeUqOaIt+ebtOaOpemAmui/h2RhdGHlj4LmlbDkvKDpgJJqc29u5a+56LGh6L+H5p2l77yM5YiZ5Lmf6KaB5bCG5q2kanNvbuWvueixoei9rOWMluS4uuWtl+espuS4slxuICAgICAgICAgICAgaWYgKCF1dGlscy5pc0VtcHR5T2JqZWN0KG9wdHMuZGF0YSkpIHtcbiAgICAgICAgICAgICAgICBxdWVyeVN0ciArPSAocXVlcnlTdHIgPyAnJicgOiAnJykgKyBqc29uMnN0cihvcHRzLmRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHF1ZXJ5U3RyKSB7XG4gICAgICAgICAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UoL1xcPy8sICc/JyArIHF1ZXJ5U3RyICsgJyYnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2NyLm9uZXJyb3IgPSBnZXRDYWxsQmFjaygxKTtcbiAgICAgICAgICAgIGlmICh0aW1lT3V0KSB7XG4gICAgICAgICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGdldENhbGxCYWNrKDEpLCB0aW1lT3V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNyZWF0ZVNjcmlwdFRhZyhzY3IsIHVybCwgY2hhcnNldCk7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVNjcmlwdFRhZyhzY3IsIHVybCwgY2hhcnNldCkge1xuICAgICAgICAgICAgICAgIHNjci5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9qYXZhc2NyaXB0Jyk7XG4gICAgICAgICAgICAgICAgc2NyLnNldEF0dHJpYnV0ZSgnZGVmZXInLCAnZGVmZXInKTtcbiAgICAgICAgICAgICAgICBjaGFyc2V0ICYmIHNjci5zZXRBdHRyaWJ1dGUoJ2NoYXJzZXQnLCBjaGFyc2V0KTtcbiAgICAgICAgICAgICAgICBzY3Iuc2V0QXR0cmlidXRlKCdzcmMnLCB1cmwpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0uYXBwZW5kQ2hpbGQoc2NyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0Q2FsbEJhY2sob25UaW1lT3V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvblRpbWVPdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm9uZXJyb3IgJiYgb3B0aW9ucy5vbmVycm9yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NoYW5kbGVyLmFwcGx5KHdpbmRvdywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMub25lcnJvciAmJiBvcHRpb25zLm9uZXJyb3IuY2FsbCh3aW5kb3csIGV4Y2VwdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm9uY29tcGxldGUgJiYgb3B0aW9ucy5vbmNvbXBsZXRlLmFwcGx5KHdpbmRvdywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjci5wYXJlbnROb2RlICYmIHNjci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3dbY2FsbGJhY2tGbk5hbWVdID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHdpbmRvd1tjYWxsYmFja0ZuTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOagueaNrue7meWumueahOWPguaVsOmhue+8jOWQkeaMh+WumueahHVybOWPkei1t+S4gOS4qmFqYXjor7fmsYLjgIIgYWpheOivt+axguWujOaIkOWQju+8jOS8muagueaNruivt+axgue7k+aenOiwg+eUqOebuOW6lOWbnuiwg++8miDlpoLmnpzor7fmsYJcbiAgICAgICAgICAgICAqIOaIkOWKn++8jCDliJnosIPnlKhvbnN1Y2Nlc3Plm57osIPvvIwg5aSx6LSl5YiZ6LCD55SoIG9uZXJyb3Ig5Zue6LCDXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlcXVlc3RcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVSTFN0cmluZyB9IHVybCBhamF46K+35rGC55qEdXJs5Zyw5Z2AXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhamF4T3B0aW9ucyBhamF46K+35rGC6YCJ6aG555qE6ZSu5YC85a+577yM5pSv5oyB55qE6YCJ6aG55aaC5LiL77yaXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogLy/lkJFzYXloZWxsby5waHDlj5HotbfkuIDkuKrlvILmraXnmoRBamF4IEdFVOivt+axgiwg6K+35rGC6LaF5pe25pe26Ze05Li6MTBz77yMIOivt+axguWujOaIkOWQjuaJp+ihjOebuOW6lOeahOWbnuiwg+OAglxuICAgICAgICAgICAgICogVUUuYWpheC5yZXF1ZXNldCggJ3NheWhlbGxvLnBocCcsIHtcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/or7fmsYLmlrnms5XjgILlj6/pgInlgLzvvJogJ0dFVCcsICdQT1NUJ++8jOm7mOiupOWAvOaYrydQT1NUJ1xuICAgICAgICAgICAgICogICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v6LaF5pe25pe26Ze044CCIOm7mOiupOS4ujUwMDDvvIwg5Y2V5L2N5pivbXNcbiAgICAgICAgICAgICAqICAgICB0aW1lb3V0OiAxMDAwMCxcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/mmK/lkKbmmK/lvILmraXor7fmsYLjgIIgdHJ1ZeS4uuW8guatpeivt+axgu+8jCBmYWxzZeS4uuWQjOatpeivt+axglxuICAgICAgICAgICAgICogICAgIGFzeW5jOiB0cnVlLFxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+ivt+axguaQuuW4pueahOaVsOaNruOAguWmguaenOivt+axguS4ukdFVOivt+axgu+8jCBkYXRh5Lya57uP6L+Hc3RyaW5naWZ55ZCO6ZmE5Yqg5Yiw6K+35rGCdXJs5LmL5ZCO44CCXG4gICAgICAgICAgICAgKiAgICAgZGF0YToge1xuICAgICAgICAgICAgICogICAgICAgICBuYW1lOiAndWVkaXRvcidcbiAgICAgICAgICAgICAqICAgICB9LFxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqICAgICAvL+ivt+axguaIkOWKn+WQjueahOWbnuiwg++8jCDor6Xlm57osIPmjqXlj5flvZPliY3nmoRYTUxIdHRwUmVxdWVzdOWvueixoeS9nOS4uuWPguaVsOOAglxuICAgICAgICAgICAgICogICAgIG9uc3VjY2VzczogZnVuY3Rpb24gKCB4aHIgKSB7XG4gICAgICAgICAgICAgKiAgICAgICAgIGNvbnNvbGUubG9nKCB4aHIucmVzcG9uc2VUZXh0ICk7XG4gICAgICAgICAgICAgKiAgICAgfSxcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiAgICAgLy/or7fmsYLlpLHotKXmiJbogIXotoXml7blkI7nmoTlm57osIPjgIJcbiAgICAgICAgICAgICAqICAgICBvbmVycm9yOiBmdW5jdGlvbiAoIHhociApIHtcbiAgICAgICAgICAgICAqICAgICAgICAgIGFsZXJ0KCAnQWpheOivt+axguWksei0pScgKTtcbiAgICAgICAgICAgICAqICAgICB9XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogfSApO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja7nu5nlrprnmoTlj4LmlbDpobnlj5HotbfkuIDkuKphamF46K+35rGC77yMIOWPguaVsOmhuemHjOW/hemhu+WMheWQq+S4gOS4qnVybOWcsOWdgOOAgiBhamF46K+35rGC5a6M5oiQ5ZCO77yM5Lya5qC55o2u6K+35rGC57uT5p6c6LCD55So55u45bqU5Zue6LCD77yaIOWmguaenOivt+axglxuICAgICAgICAgICAgICog5oiQ5Yqf77yMIOWImeiwg+eUqG9uc3VjY2Vzc+Wbnuiwg++8jCDlpLHotKXliJnosIPnlKggb25lcnJvciDlm57osIPjgIJcbiAgICAgICAgICAgICAqIEBtZXRob2QgcmVxdWVzdFxuICAgICAgICAgICAgICogQHdhcm5pbmcg5aaC5p6c5Zyo5Y+C5pWw6aG56YeM5pyq5o+Q5L6b5LiA5Liqa2V55Li64oCcdXJs4oCd55qE5Zyw5Z2A5YC877yM5YiZ6K+l6K+35rGC5bCG55u05o6l6YCA5Ye644CCXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhamF4T3B0aW9ucyBhamF46K+35rGC6YCJ6aG555qE6ZSu5YC85a+577yM5pSv5oyB55qE6YCJ6aG55aaC5LiL77yaXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIC8v5ZCRc2F5aGVsbG8ucGhw5Y+R6LW35LiA5Liq5byC5q2l55qEQWpheCBQT1NU6K+35rGCLCDor7fmsYLotoXml7bml7bpl7TkuLo1c++8jCDor7fmsYLlrozmiJDlkI7kuI3miafooYzku7vkvZXlm57osIPjgIJcbiAgICAgICAgICAgICAqIFVFLmFqYXgucmVxdWVzZXQoICdzYXloZWxsby5waHAnLCB7XG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgIC8v6K+35rGC55qE5Zyw5Z2A77yMIOivpemhueaYr+W/hemhu+eahOOAglxuICAgICAgICAgICAgICogICAgIHVybDogJ3NheWhlbGxvLnBocCdcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiB9ICk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmVxdWVzdDogZnVuY3Rpb24gKHVybCwgb3B0cykge1xuICAgICAgICAgICAgICAgIGlmIChvcHRzICYmIG9wdHMuZGF0YVR5cGUgPT0gJ2pzb25wJykge1xuICAgICAgICAgICAgICAgICAgICBkb0pzb25wKHVybCwgb3B0cyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9BamF4KHVybCwgb3B0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEpTT05QOiBmdW5jdGlvbiAodXJsLCBkYXRhLCBmbikge1xuICAgICAgICAgICAgICAgIHZhciBvcHRzID0ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBvbmNvbXBsZXRlOiBmblxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZG9Kc29ucCh1cmwsIG9wdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICAvLyBjb3JlL2ZpbHRlcndvcmQuanNcbiAgICAvKipcbiAgICAgKiBVRei/h+a7pHdvcmTnmoTpnZnmgIHmlrnms5VcbiAgICAgKiBAZmlsZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVUVkaXRvcuWFrOeUqOepuumXtO+8jFVFZGl0b3LmiYDmnInnmoTlip/og73pg73mjILovb3lnKjor6Xnqbrpl7TkuItcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmoLnmja7kvKDlhaVodG1s5a2X56ym5Liy6L+H5rukd29yZFxuICAgICAqIEBtb2R1bGUgVUVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqIEBtZXRob2QgZmlsdGVyV29yZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGh0bWwgaHRtbOWtl+espuS4slxuICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDlt7Lov4fmu6TlkI7nmoTnu5PmnpzlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBVRS5maWx0ZXJXb3JkKGh0bWwpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHZhciBmaWx0ZXJXb3JkID0gKFVFLmZpbHRlcldvcmQgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAvL+aYr+WQpuaYr3dvcmTov4fmnaXnmoTlhoXlrrlcbiAgICAgICAgZnVuY3Rpb24gaXNXb3JkRG9jdW1lbnQoc3RyKSB7XG4gICAgICAgICAgICByZXR1cm4gLyhjbGFzcz1cIj9Nc298c3R5bGU9XCJbXlwiXSpcXGJtc29cXC18dzpXb3JkRG9jdW1lbnR8PCh2fG8pOnxsYW5nPSkvZ2kudGVzdChzdHIpO1xuICAgICAgICB9XG4gICAgICAgIC8v5Y675o6J5bCP5pWwXG4gICAgICAgIGZ1bmN0aW9uIHRyYW5zVW5pdCh2KSB7XG4gICAgICAgICAgICB2ID0gdi5yZXBsYWNlKC9bXFxkLl0rXFx3Ky9nLCBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1dGlscy50cmFuc1VuaXRUb1B4KG0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGZpbHRlckludmFsaWRhdGVBdHJycyhzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvbGluZS1oZWlnaHQ6XFxzKj8wW147XSo7Py9naSwgJycpOyAvLyDljrvmjolsaW5lLWhlaWdodDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGZpbHRlclBhc3RlV29yZChzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgZmlsdGVySW52YWxpZGF0ZUF0cnJzKHN0cilcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1tcXHRcXHJcXG5dKy9nLCAnICcpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC88IS0tW1xcc1xcU10qPy0tPi9naSwgJycpXG4gICAgICAgICAgICAgICAgICAgIC8v6L2s5o2i5Zu+54mHXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC88djpzaGFwZSBbXj5dKj5bXFxzXFxTXSo/LjxcXC92OnNoYXBlPi9naSwgZnVuY3Rpb24gKHN0cikge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9vcGVyYeiDveiHquW3seino+aekOWHumltYWdl5omA6L+Z6YeM55u05o6l6L+U5Zue56m6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5vcGVyYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mnInlj6/og73mmK9iaXRtYXDljaDkuLrlm77vvIzml6DnlKjvvIznm7TmjqXov4fmu6TmjonvvIzkuLvopoHkvZPnjrDlnKjnspjotLRleGNlbOihqOagvOS4rVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgvQml0bWFwL2kudGVzdChzdHIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHdpZHRoID0gc3RyLm1hdGNoKC93aWR0aDooWyBcXGQuXSpwW3R4XSkvaSlbMV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodCA9IHN0ci5tYXRjaCgvaGVpZ2h0OihbIFxcZC5dKnBbdHhdKS9pKVsxXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjID0gc3RyLm1hdGNoKC9zcmM9XFxzKlwiKFteXCJdKilcIi9pKVsxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGltZyB3aWR0aD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc1VuaXQod2lkdGgpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIGhlaWdodD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc1VuaXQoaGVpZ2h0KSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiBzcmM9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIC8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAvL+mSiOWvuXdwc+a3u+WKoOeahOWkmuS9meagh+etvuWkhOeQhlxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvPFxcLz9kaXZbXj5dKj4vZywgJycpXG4gICAgICAgICAgICAgICAgICAgIC8v5Y675o6J5aSa5L2Z55qE5bGe5oCnXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC92Olxcdys9KFtcIiddPylbXidcIl0rXFwxL2csICcnKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgICAgIC88KCF8c2NyaXB0W14+XSo+Lio/PFxcL3NjcmlwdCg/PVs+XFxzXSl8XFwvPyhcXD94bWwoOlxcdyspP3x4bWx8bWV0YXxsaW5rfHN0eWxlfFxcdys6XFx3KykoPz1bXFxzXFwvPl0pKVtePl0qPi9naSxcbiAgICAgICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLzxwIFtePl0qY2xhc3M9XCI/TXNvSGVhZGluZ1wiP1tePl0qPiguKj8pPFxcL3A+L2dpLCAnPHA+PHN0cm9uZz4kMTwvc3Ryb25nPjwvcD4nKVxuICAgICAgICAgICAgICAgICAgICAvL+WOu+aOieWkmuS9meeahOWxnuaAp1xuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxzKyhjbGFzc3xsYW5nfGFsaWduKVxccyo9XFxzKihbJ1wiXT8pKFtcXHctXSspXFwyL2dpLCBmdW5jdGlvbiAoc3RyLCBuYW1lLCBtYXJrcywgdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+S/neeVmWxpc3TnmoTmoIfnpLpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuYW1lID09ICdjbGFzcycgJiYgdmFsID09ICdNc29MaXN0UGFyYWdyYXBoJyA/IHN0ciA6ICcnO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAvL+a4hemZpOWkmuS9meeahGZvbnQvc3BhbuS4jeiDveWMuemFjSZuYnNwO+acieWPr+iDveaYr+epuuagvFxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvPChmb250fHNwYW4pW14+XSo+KFxccyopPFxcL1xcMT4vZ2ksIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYy5yZXBsYWNlKC9bXFx0XFxyXFxuIF0rL2csICcgJyk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC8v5aSE55CGc3R5bGXnmoTpl67pophcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyg8W2Etel1bXj5dKilcXHNzdHlsZT0oW1wiJ10pKFteXFwyXSo/KVxcMi9naSwgZnVuY3Rpb24gKHN0ciwgdGFnLCB0bXAsIHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbiA9IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHMgPSBzdHlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXlxccyt8XFxzKyQvLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyYjMzk7L2csIFwiJ1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvJnF1b3Q7L2dpLCBcIidcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1tcXGQuXSsoY218cHQpL2csIGZ1bmN0aW9uIChzdHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1dGlscy50cmFuc1VuaXRUb1B4KHN0cik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdCgvO1xccyovZyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCB2OyAodiA9IHNbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRzID0gdi5zcGxpdCgnOicpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSBwYXJ0c1swXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHBhcnRzWzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgvXihiYWNrZ3JvdW5kKVxcdyovLnRlc3QobmFtZSkgJiYgdmFsdWUucmVwbGFjZSgvKGluaXRpYWx8XFxzKS9nLCAnJykubGVuZ3RoID09IDApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoL14obWFyZ2luKVxcdyovLnRlc3QobmFtZSkgJiYgL14wXFx3KyQvLnRlc3QodmFsdWUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtc28tcGFkZGluZy1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLXBhZGRpbmctdG9wLWFsdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtc28tcGFkZGluZy1yaWdodC1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLXBhZGRpbmctYm90dG9tLWFsdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtc28tcGFkZGluZy1sZWZ0LWFsdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtc28tbWFyZ2luLWFsdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtc28tbWFyZ2luLXRvcC1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLW1hcmdpbi1yaWdodC1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLW1hcmdpbi1ib3R0b20tYWx0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21zby1tYXJnaW4tbGVmdC1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pZeS4i+S8muWHuueOsOaMpOWIsOS4gOi1t+eahOaDheWGtVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jYXNlIFwibXNvLXRhYmxlLWxheW91dC1hbHRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21zby1oZWlnaHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLXdpZHRoJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21zby12ZXJ0aWNhbC1hbGlnbi1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTgxOSBmZuS4i+S8muino+aekOWHunBhZGRpbmflnKh0YWJsZeS4ilxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghLzx0YWJsZS8udGVzdCh0YWcpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuW2ldID0gbmFtZS5yZXBsYWNlKC9ebXNvLXwtYWx0JC9nLCAnJykgKyAnOicgKyB0cmFuc1VuaXQodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaG9yaXotYWxpZ24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5baV0gPSAndGV4dC1hbGlnbjonICsgdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3ZlcnQtYWxpZ24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5baV0gPSAndmVydGljYWwtYWxpZ246JyArIHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdmb250LWNvbG9yJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21zby1mb3JlZ3JvdW5kJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuW2ldID0gJ2NvbG9yOicgKyB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLWJhY2tncm91bmQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLWhpZ2hsaWdodCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbltpXSA9ICdiYWNrZ3JvdW5kOicgKyB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLWRlZmF1bHQtaGVpZ2h0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuW2ldID0gJ21pbi1oZWlnaHQ6JyArIHRyYW5zVW5pdCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21zby1kZWZhdWx0LXdpZHRoJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuW2ldID0gJ21pbi13aWR0aDonICsgdHJhbnNVbml0KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLXBhZGRpbmctYmV0d2Vlbi1hbHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5baV0gPSAnYm9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlO2JvcmRlci1zcGFjaW5nOicgKyB0cmFuc1VuaXQodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICd0ZXh0LWxpbmUtdGhyb3VnaCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09ICdzaW5nbGUnIHx8IHZhbHVlID09ICdkb3VibGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5baV0gPSAndGV4dC1kZWNvcmF0aW9uOmxpbmUtdGhyb3VnaCc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbXNvLXplcm8taGVpZ2h0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gJ3llcycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbltpXSA9ICdkaXNwbGF5Om5vbmUnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdiYWNrZ3JvdW5kJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtYXJnaW4nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghL1sxLTldLy50ZXN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXihtc298Y29sdW1ufGZvbnQtZW1waHxsYW5nfGxheW91dHxsaW5lLWJyZWFrfGxpc3QtaW1hZ2V8bmF2fHBhbm9zZXxwdW5jdHxyb3d8cnVieXxzZXB8c2l6ZXxzcmN8dGFiLXx0YWJsZS1ib3JkZXJ8dGV4dC0oPzpkZWNvcnx0cmFucyl8dG9wLWJhcnx2ZXJzaW9ufHZuZHx3b3JkLWJyZWFrKS8udGVzdChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoL3RleHRcXC1pbmRlbnR8cGFkZGluZ3xtYXJnaW4vLnRlc3QobmFtZSkgJiYgL1xcLVtcXGQuXSsvLnRlc3QodmFsdWUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbltpXSA9IG5hbWUgKyAnOicgKyBwYXJ0c1sxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFnICsgKG4ubGVuZ3RoID8gJyBzdHlsZT1cIicgKyBuLmpvaW4oJzsnKS5yZXBsYWNlKC87ezIsfS9nLCAnOycpICsgJ1wiJyA6ICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGh0bWwpIHtcbiAgICAgICAgICAgIHJldHVybiBpc1dvcmREb2N1bWVudChodG1sKSA/IGZpbHRlclBhc3RlV29yZChodG1sKSA6IGZpbHRlckludmFsaWRhdGVBdHJycyhodG1sKTtcbiAgICAgICAgfTtcbiAgICB9KSgpKTtcblxuICAgIC8vIGNvcmUvbm9kZS5qc1xuICAgIC8qKlxuICAgICAqIOe8lui+keWZqOaooeaLn+eahOiKgueCueexu1xuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRVxuICAgICAqIEBjbGFzcyB1Tm9kZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVRWRpdG9y5YWs55So56m66Ze077yMVUVkaXRvcuaJgOacieeahOWKn+iDvemDveaMgui9veWcqOivpeepuumXtOS4i1xuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICovXG5cbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICog57yW6L6R5Zmo5qih5ouf55qE6IqC54K557G7XG4gICAgICAgICAqIEB1bmZpbGVcbiAgICAgICAgICogQG1vZHVsZSBVRVxuICAgICAgICAgKiBAY2xhc3MgdU5vZGVcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOmAmui/h+S4gOS4qumUruWAvOWvue+8jOWIm+W7uuS4gOS4qnVOb2Rl5a+56LGhXG4gICAgICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhdHRyIOS8oOWFpeimgeWIm+W7uueahHVOb2Rl55qE5Yid5aeL5bGe5oCnXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogdmFyIG5vZGUgPSBuZXcgdU5vZGUoe1xuICAgICAgICAgKiAgICAgdHlwZTonZWxlbWVudCcsXG4gICAgICAgICAqICAgICB0YWdOYW1lOidzcGFuJyxcbiAgICAgICAgICogICAgIGF0dHJzOntzdHlsZTonZm9udC1zaXplOjE0cHg7J31cbiAgICAgICAgICogfVxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIHZhciB1Tm9kZSA9IChVRS51Tm9kZSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMudHlwZSA9IG9iai50eXBlO1xuICAgICAgICAgICAgdGhpcy5kYXRhID0gb2JqLmRhdGE7XG4gICAgICAgICAgICB0aGlzLnRhZ05hbWUgPSBvYmoudGFnTmFtZTtcbiAgICAgICAgICAgIHRoaXMucGFyZW50Tm9kZSA9IG9iai5wYXJlbnROb2RlO1xuICAgICAgICAgICAgdGhpcy5hdHRycyA9IG9iai5hdHRycyB8fCB7fTtcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBvYmouY2hpbGRyZW47XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBub3RUcmFuc0F0dHJzID0ge1xuICAgICAgICAgICAgaHJlZjogMSxcbiAgICAgICAgICAgIHNyYzogMSxcbiAgICAgICAgICAgIF9zcmM6IDEsXG4gICAgICAgICAgICBfaHJlZjogMSxcbiAgICAgICAgICAgIGNkYXRhX2RhdGE6IDFcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgbm90VHJhbnNUYWdOYW1lID0ge1xuICAgICAgICAgICAgc3R5bGU6IDEsXG4gICAgICAgICAgICBzY3JpcHQ6IDFcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgaW5kZW50Q2hhciA9ICcgICAgJyxcbiAgICAgICAgICAgIGJyZWFrQ2hhciA9ICdcXG4nO1xuXG4gICAgICAgIGZ1bmN0aW9uIGluc2VydExpbmUoYXJyLCBjdXJyZW50LCBiZWdpbikge1xuICAgICAgICAgICAgYXJyLnB1c2goYnJlYWtDaGFyKTtcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50ICsgKGJlZ2luID8gMSA6IC0xKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGluc2VydEluZGVudChhcnIsIGN1cnJlbnQpIHtcbiAgICAgICAgICAgIC8v5o+S5YWl57yp6L+bXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJlbnQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGFyci5wdXNoKGluZGVudENoYXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy/liJvlu7p1Tm9kZeeahOmdmeaAgeaWueazlVxuICAgICAgICAvL+aUr+aMgeagh+etvuWSjGh0bWxcbiAgICAgICAgdU5vZGUuY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uIChodG1sKSB7XG4gICAgICAgICAgICBpZiAoL1s8Pl0vLnRlc3QoaHRtbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gVUUuaHRtbHBhcnNlcihodG1sKS5jaGlsZHJlblswXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB1Tm9kZSh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtdLFxuICAgICAgICAgICAgICAgICAgICB0YWdOYW1lOiBodG1sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHVOb2RlLmNyZWF0ZVRleHQgPSBmdW5jdGlvbiAoZGF0YSwgbm9UcmFucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBVRS51Tm9kZSh7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgIGRhdGE6IG5vVHJhbnMgPyBkYXRhIDogdXRpbHMudW5odG1sKGRhdGEgfHwgJycpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgZnVuY3Rpb24gbm9kZVRvSHRtbChub2RlLCBhcnIsIGZvcm1hdHRlciwgY3VycmVudCkge1xuICAgICAgICAgICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdyb290JzpcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBub2RlLmNoaWxkcmVuW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5o+S5YWl5paw6KGMXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm9ybWF0dGVyICYmIGNpLnR5cGUgPT0gJ2VsZW1lbnQnICYmICFkdGQuJGlubGluZVdpdGhBW2NpLnRhZ05hbWVdICYmIGkgPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0TGluZShhcnIsIGN1cnJlbnQsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc2VydEluZGVudChhcnIsIGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVRvSHRtbChjaSwgYXJyLCBmb3JtYXR0ZXIsIGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgICAgICAgICBpc1RleHQobm9kZSwgYXJyKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZWxlbWVudCc6XG4gICAgICAgICAgICAgICAgICAgIGlzRWxlbWVudChub2RlLCBhcnIsIGZvcm1hdHRlciwgY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2NvbW1lbnQnOlxuICAgICAgICAgICAgICAgICAgICBpc0NvbW1lbnQobm9kZSwgYXJyLCBmb3JtYXR0ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGFycjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGlzVGV4dChub2RlLCBhcnIpIHtcbiAgICAgICAgICAgIGlmIChub2RlLnBhcmVudE5vZGUudGFnTmFtZSA9PSAncHJlJykge1xuICAgICAgICAgICAgICAgIC8v5rqQ56CB5qih5byP5LiL6L6T5YWlaHRtbOagh+etvu+8jOS4jeiDveWBmui9rOaNouWkhOeQhu+8jOebtOaOpei+k+WHulxuICAgICAgICAgICAgICAgIGFyci5wdXNoKG5vZGUuZGF0YSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFyci5wdXNoKFxuICAgICAgICAgICAgICAgICAgICBub3RUcmFuc1RhZ05hbWVbbm9kZS5wYXJlbnROb2RlLnRhZ05hbWVdXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHV0aWxzLmh0bWwobm9kZS5kYXRhKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBub2RlLmRhdGEucmVwbGFjZSgvWyBdezJ9L2csICcgJm5ic3A7JylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXNFbGVtZW50KG5vZGUsIGFyciwgZm9ybWF0dGVyLCBjdXJyZW50KSB7XG4gICAgICAgICAgICB2YXIgYXR0cmh0bWwgPSAnJztcbiAgICAgICAgICAgIGlmIChub2RlLmF0dHJzKSB7XG4gICAgICAgICAgICAgICAgYXR0cmh0bWwgPSBbXTtcbiAgICAgICAgICAgICAgICB2YXIgYXR0cnMgPSBub2RlLmF0dHJzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGEgaW4gYXR0cnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/ov5nph4zlsLHpkojlr7lcbiAgICAgICAgICAgICAgICAgICAgLy88cD4nPGltZyBzcmM9J2h0dHA6Ly9uc2NsaWNrLmJhaWR1LmNvbS91LmdpZj8mYXNkZj1cXFwic2RmJmFzZGZhc2Rmczthc2RmJz48L3A+XG4gICAgICAgICAgICAgICAgICAgIC8v6L+Z6YeM6L6555qEXFxcIuWBmui9rOaNou+8jOimgeS4jeeUqGlubmVySFRNTOebtOaOpeiiq+aIquaWreS6hu+8jOWxnuaAp3NyY1xuICAgICAgICAgICAgICAgICAgICAvL+acieWPr+iDveWBmueahOS4jeWkn1xuICAgICAgICAgICAgICAgICAgICBhdHRyaHRtbC5wdXNoKFxuICAgICAgICAgICAgICAgICAgICAgICAgYSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGF0dHJzW2FdICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5vdFRyYW5zQXR0cnNbYV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB1dGlscy5odG1sKGF0dHJzW2FdKS5yZXBsYWNlKC9bXCJdL2csIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJnF1b3Q7JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHV0aWxzLnVuaHRtbChhdHRyc1thXSkpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJycpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGF0dHJodG1sID0gYXR0cmh0bWwuam9pbignICcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXJyLnB1c2goXG4gICAgICAgICAgICAgICAgJzwnICsgbm9kZS50YWdOYW1lICsgKGF0dHJodG1sID8gJyAnICsgYXR0cmh0bWwgOiAnJykgKyAoZHRkLiRlbXB0eVtub2RlLnRhZ05hbWVdID8gJy8nIDogJycpICsgJz4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgLy/mj5LlhaXmlrDooYxcbiAgICAgICAgICAgIGlmIChmb3JtYXR0ZXIgJiYgIWR0ZC4kaW5saW5lV2l0aEFbbm9kZS50YWdOYW1lXSAmJiBub2RlLnRhZ05hbWUgIT0gJ3ByZScpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gaW5zZXJ0TGluZShhcnIsIGN1cnJlbnQsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpbnNlcnRJbmRlbnQoYXJyLCBjdXJyZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbm9kZS5jaGlsZHJlbltpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmb3JtYXR0ZXIgJiYgY2kudHlwZSA9PSAnZWxlbWVudCcgJiYgIWR0ZC4kaW5saW5lV2l0aEFbY2kudGFnTmFtZV0gJiYgaSA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluc2VydExpbmUoYXJyLCBjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluc2VydEluZGVudChhcnIsIGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5vZGVUb0h0bWwoY2ksIGFyciwgZm9ybWF0dGVyLCBjdXJyZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWR0ZC4kZW1wdHlbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgIGlmIChmb3JtYXR0ZXIgJiYgIWR0ZC4kaW5saW5lV2l0aEFbbm9kZS50YWdOYW1lXSAmJiBub2RlLnRhZ05hbWUgIT0gJ3ByZScpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW4gJiYgbm9kZS5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBpbnNlcnRMaW5lKGFyciwgY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnNlcnRJbmRlbnQoYXJyLCBjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhcnIucHVzaCgnPC8nICsgbm9kZS50YWdOYW1lICsgJz4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGlzQ29tbWVudChub2RlLCBhcnIpIHtcbiAgICAgICAgICAgIGFyci5wdXNoKCc8IS0tJyArIG5vZGUuZGF0YSArICctLT4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldE5vZGVCeUlkKHJvb3QsIGlkKSB7XG4gICAgICAgICAgICB2YXIgbm9kZTtcbiAgICAgICAgICAgIGlmIChyb290LnR5cGUgPT0gJ2VsZW1lbnQnICYmIHJvb3QuZ2V0QXR0cignaWQnKSA9PSBpZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByb290O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJvb3QuY2hpbGRyZW4gJiYgcm9vdC5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHJvb3QuY2hpbGRyZW5baSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoKG5vZGUgPSBnZXROb2RlQnlJZChjaSwgaWQpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXROb2Rlc0J5VGFnTmFtZShub2RlLCB0YWdOYW1lLCBhcnIpIHtcbiAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT0gJ2VsZW1lbnQnICYmIG5vZGUudGFnTmFtZSA9PSB0YWdOYW1lKSB7XG4gICAgICAgICAgICAgICAgYXJyLnB1c2gobm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbm9kZS5jaGlsZHJlbltpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGdldE5vZGVzQnlUYWdOYW1lKGNpLCB0YWdOYW1lLCBhcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBub2RlVHJhdmVyc2FsKHJvb3QsIGZuKSB7XG4gICAgICAgICAgICBpZiAocm9vdC5jaGlsZHJlbiAmJiByb290LmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gcm9vdC5jaGlsZHJlbltpXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBub2RlVHJhdmVyc2FsKGNpLCBmbik7XG4gICAgICAgICAgICAgICAgICAgIC8vY2nooqvmm7/mjaLnmoTmg4XlhrXvvIzov5nph4zlsLHkuI3lho3otbAgZm7kuoZcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaS5jaGlsZHJlbiAmJiBjaS5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbihjaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2kucGFyZW50Tm9kZSkgaSsrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmbihyb290KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB1Tm9kZS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOW9k+WJjeiKgueCueWvueixoe+8jOi9rOaNouaIkGh0bWzmlofmnKxcbiAgICAgICAgICAgICAqIEBtZXRob2QgdG9IdG1sXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L+U5Zue6L2s5o2i5ZCO55qEaHRtbOWtl+espuS4slxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUudG9IdG1sKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOW9k+WJjeiKgueCueWvueixoe+8jOi9rOaNouaIkGh0bWzmlofmnKxcbiAgICAgICAgICAgICAqIEBtZXRob2QgdG9IdG1sXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gZm9ybWF0dGVyIOaYr+WQpuagvOW8j+WMlui/lOWbnuWAvFxuICAgICAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnui9rOaNouWQjueahGh0bWzlrZfnrKbkuLJcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLnRvSHRtbCggdHJ1ZSApO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHRvSHRtbDogZnVuY3Rpb24gKGZvcm1hdHRlcikge1xuICAgICAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcbiAgICAgICAgICAgICAgICBub2RlVG9IdG1sKHRoaXMsIGFyciwgZm9ybWF0dGVyLCAwKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJyLmpvaW4oJycpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5boioLngrnnmoRodG1s5YaF5a65XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGlubmVySFRNTFxuICAgICAgICAgICAgICogQHdhcm5pbmcg5YGH5aaC6IqC54K555qEdHlwZeS4jeaYrydlbGVtZW50J++8jOaIluiKgueCueeahOagh+etvuWQjeensOS4jeWcqGR0ZOWIl+ihqOmHjO+8jOebtOaOpei/lOWbnuW9k+WJjeiKgueCuVxuICAgICAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnuiKgueCueeahGh0bWzlhoXlrrlcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiB2YXIgaHRtbHN0ciA9IG5vZGUuaW5uZXJIVE1MKCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuvue9ruiKgueCueeahGh0bWzlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5uZXJIVE1MXG4gICAgICAgICAgICAgKiBAd2FybmluZyDlgYflpoLoioLngrnnmoR0eXBl5LiN5pivJ2VsZW1lbnQn77yM5oiW6IqC54K555qE5qCH562+5ZCN56ew5LiN5ZyoZHRk5YiX6KGo6YeM77yM55u05o6l6L+U5Zue5b2T5YmN6IqC54K5XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBodG1sc3RyIOS8oOWFpeimgeiuvue9rueahGh0bWzlhoXlrrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS51Tm9kZSB9IOi/lOWbnuiKgueCueacrOi6q1xuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuaW5uZXJIVE1MKCc8c3Bhbj50ZXh0PC9zcGFuPicpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGlubmVySFRNTDogZnVuY3Rpb24gKGh0bWxzdHIpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50eXBlICE9ICdlbGVtZW50JyB8fCBkdGQuJGVtcHR5W3RoaXMudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhodG1sc3RyKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0aGlzLmNoaWxkcmVuW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaS5wYXJlbnROb2RlID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgICAgICAgICAgICAgICAgIHZhciB0bXBSb290ID0gVUUuaHRtbHBhcnNlcihodG1sc3RyKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0bXBSb290LmNoaWxkcmVuW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaS5wYXJlbnROb2RlID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG1wUm9vdCA9IG5ldyBVRS51Tm9kZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncm9vdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogdGhpcy5jaGlsZHJlblxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRtcFJvb3QudG9IdG1sKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5boioLngrnnmoTnuq/mlofmnKzlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5uZXJUZXh0XG4gICAgICAgICAgICAgKiBAd2FybmluZyDlgYflpoLoioLngrnnmoR0eXBl5LiN5pivJ2VsZW1lbnQn77yM5oiW6IqC54K555qE5qCH562+5ZCN56ew5LiN5ZyoZHRk5YiX6KGo6YeM77yM55u05o6l6L+U5Zue5b2T5YmN6IqC54K5XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L+U5Zue6IqC54K555qE5a2Y5paH5pys5YaF5a65XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogdmFyIHRleHRTdHIgPSBub2RlLmlubmVyVGV4dCgpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDorr7nva7oioLngrnnmoTnuq/mlofmnKzlhoXlrrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5uZXJUZXh0XG4gICAgICAgICAgICAgKiBAd2FybmluZyDlgYflpoLoioLngrnnmoR0eXBl5LiN5pivJ2VsZW1lbnQn77yM5oiW6IqC54K555qE5qCH562+5ZCN56ew5LiN5ZyoZHRk5YiX6KGo6YeM77yM55u05o6l6L+U5Zue5b2T5YmN6IqC54K5XG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0ZXh0U3RyIOS8oOWFpeimgeiuvue9rueahOaWh+acrOWGheWuuVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLnVOb2RlIH0g6L+U5Zue6IqC54K55pys6LqrXG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5pbm5lclRleHQoJzxzcGFuPnRleHQ8L3NwYW4+Jyk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaW5uZXJUZXh0OiBmdW5jdGlvbiAodGV4dFN0ciwgbm9UcmFucykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnR5cGUgIT0gJ2VsZW1lbnQnIHx8IGR0ZC4kZW1wdHlbdGhpcy50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRleHRTdHIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5jaGlsZHJlbltpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2kucGFyZW50Tm9kZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHVOb2RlLmNyZWF0ZVRleHQodGV4dFN0ciwgbm9UcmFucykpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b0h0bWwoKS5yZXBsYWNlKC88W14+XSs+L2csICcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluW9k+WJjeWvueixoeeahGRhdGHlsZ7mgKdcbiAgICAgICAgICAgICAqIEBtZXRob2QgZ2V0RGF0YVxuICAgICAgICAgICAgICogQHJldHVybiB7IE9iamVjdCB9IOiLpeiKgueCueeahHR5cGXlgLzmmK9lbGVtZW5ldO+8jOi/lOWbnuepuuWtl+espuS4su+8jOWQpuWImei/lOWbnuiKgueCueeahGRhdGHlsZ7mgKdcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLmdldERhdGEoKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXREYXRhOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PSAnZWxlbWVudCcpIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRhO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5blvZPliY3oioLngrnkuIvnmoTnrKzkuIDkuKrlrZDoioLngrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgZmlyc3RDaGlsZFxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLnVOb2RlIH0g6L+U5Zue56ys5LiA5Liq5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5maXJzdENoaWxkKCk7IC8v6L+U5Zue56ys5LiA5Liq5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZmlyc3RDaGlsZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgaWYgKHRoaXMudHlwZSAhPSAnZWxlbWVudCcgfHwgZHRkLiRlbXB0eVt0aGlzLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4gPyB0aGlzLmNoaWxkcmVuWzBdIDogbnVsbDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmN6IqC54K55LiL55qE5pyA5ZCO5LiA5Liq5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIGxhc3RDaGlsZFxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLnVOb2RlIH0g6L+U5Zue5pyA5ZCO5LiA5Liq5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5sYXN0Q2hpbGQoKTsgLy/ov5Tlm57mnIDlkI7kuIDkuKrlrZDoioLngrlcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBsYXN0Q2hpbGQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIGlmICh0aGlzLnR5cGUgIT0gJ2VsZW1lbnQnIHx8IGR0ZC4kZW1wdHlbdGhpcy50YWdOYW1lXSApIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbiA/IHRoaXMuY2hpbGRyZW5bdGhpcy5jaGlsZHJlbi5sZW5ndGggLSAxXSA6IG51bGw7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluWSjOW9k+WJjeiKgueCueacieebuOWQjOeItuS6suiKgueCueeahOWJjeS4gOS4quiKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCBwcmV2aW91c1NpYmxpbmdcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS51Tm9kZSB9IOi/lOWbnuWJjeS4gOS4quiKgueCuVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuY2hpbGRyZW5bMl0ucHJldmlvdXNTaWJsaW5nKCk7IC8v6L+U5Zue5a2Q6IqC54K5bm9kZS5jaGlsZHJlblsxXVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHByZXZpb3VzU2libGluZzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBwYXJlbnQuY2hpbGRyZW5baV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpID09PSB0aGlzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaSA9PSAwID8gbnVsbCA6IHBhcmVudC5jaGlsZHJlbltpIC0gMV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluWSjOW9k+WJjeiKgueCueacieebuOWQjOeItuS6suiKgueCueeahOWQjuS4gOS4quiKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCBuZXh0U2libGluZ1xuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLnVOb2RlIH0g6L+U5Zue5ZCO5LiA5Liq6IqC54K5LOaJvuS4jeWIsOi/lOWbnm51bGxcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLmNoaWxkcmVuWzJdLm5leHRTaWJsaW5nKCk7IC8v5aaC5p6c5pyJ77yM6L+U5Zue5a2Q6IqC54K5bm9kZS5jaGlsZHJlblszXVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIG5leHRTaWJsaW5nOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHBhcmVudC5jaGlsZHJlbltpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaSA9PT0gdGhpcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5jaGlsZHJlbltpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog55So5paw55qE6IqC54K55pu/5o2i5b2T5YmN6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlcGxhY2VDaGlsZFxuICAgICAgICAgICAgICogQHBhcmFtIHsgVUUudU5vZGUgfSB0YXJnZXQg6KaB5pu/5o2i5oiQ6K+l6IqC54K55Y+C5pWwXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBVRS51Tm9kZSB9IHNvdXJjZSDopoHooqvmm7/mjaLmjonnmoToioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS51Tm9kZSB9IOi/lOWbnuabv+aNouS5i+WQjueahOiKgueCueWvueixoVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUucmVwbGFjZUNoaWxkKG5ld05vZGUsIGNoaWxkTm9kZSk7IC8v55SobmV3Tm9kZeabv+aNomNoaWxkTm9kZSxjaGlsZE5vZGXmmK9ub2Rl55qE5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmVwbGFjZUNoaWxkOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0LnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0aGlzLmNoaWxkcmVuW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2kgPT09IHNvdXJjZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKGksIDEsIHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlLnBhcmVudE5vZGUgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5wYXJlbnROb2RlID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlnKjoioLngrnnmoTlrZDoioLngrnliJfooajmnIDlkI7kvY3nva7mj5LlhaXkuIDkuKroioLngrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgYXBwZW5kQ2hpbGRcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVFLnVOb2RlIH0gbm9kZSDopoHmj5LlhaXnmoToioLngrlcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS51Tm9kZSB9IOi/lOWbnuWImuaPkuWFpeeahOWtkOiKgueCuVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuYXBwZW5kQ2hpbGQoIG5ld05vZGUgKTsgLy/lnKhub2Rl5YaF5o+S5YWl5a2Q6IqC54K5bmV3Tm9kZVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGFwcGVuZENoaWxkOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnR5cGUgPT0gJ3Jvb3QnIHx8ICh0aGlzLnR5cGUgPT0gJ2VsZW1lbnQnICYmICFkdGQuJGVtcHR5W3RoaXMudGFnTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHRoaXMuY2hpbGRyZW5baV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaSA9PT0gbm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlnKjkvKDlhaXoioLngrnnmoTliY3pnaLmj5LlhaXkuIDkuKroioLngrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5zZXJ0QmVmb3JlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBVRS51Tm9kZSB9IHRhcmdldCDopoHmj5LlhaXnmoToioLngrlcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVFLnVOb2RlIH0gc291cmNlIOWcqOivpeWPguaVsOiKgueCueWJjemdouaPkuWFpVxuICAgICAgICAgICAgICogQHJldHVybiB7IFVFLnVOb2RlIH0g6L+U5Zue5Yia5o+S5YWl55qE5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXdOb2RlLCBub2RlKTsgLy/lnKhub2Rl6IqC54K55ZCO6Z2i5o+S5YWlbmV3Tm9kZVxuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGluc2VydEJlZm9yZTogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldC5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5jaGlsZHJlbltpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpID09PSBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnNwbGljZShpLCAwLCB0YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldC5wYXJlbnROb2RlID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlnKjkvKDlhaXoioLngrnnmoTlkI7pnaLmj5LlhaXkuIDkuKroioLngrlcbiAgICAgICAgICAgICAqIEBtZXRob2QgaW5zZXJ0QWZ0ZXJcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFVFLnVOb2RlIH0gdGFyZ2V0IOimgeaPkuWFpeeahOiKgueCuVxuICAgICAgICAgICAgICogQHBhcmFtIHsgVUUudU5vZGUgfSBzb3VyY2Ug5Zyo6K+l5Y+C5pWw6IqC54K55ZCO6Z2i5o+S5YWlXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgVUUudU5vZGUgfSDov5Tlm57liJrmj5LlhaXnmoTlrZDoioLngrlcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QWZ0ZXIobmV3Tm9kZSwgbm9kZSk7IC8v5Zyobm9kZeiKgueCueWQjumdouaPkuWFpW5ld05vZGVcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBpbnNlcnRBZnRlcjogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldC5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5jaGlsZHJlbltpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpID09PSBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoaWxkcmVuLnNwbGljZShpICsgMSwgMCwgdGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQucGFyZW50Tm9kZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5LuO5b2T5YmN6IqC54K555qE5a2Q6IqC54K55YiX6KGo5Lit77yM56e76Zmk6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHJlbW92ZUNoaWxkXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBVRS51Tm9kZSB9IG5vZGUg6KaB56e76Zmk55qE6IqC54K55byV55SoXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0ga2VlcENoaWxkcmVuIOaYr+WQpuS/neeVmeenu+mZpOiKgueCueeahOWtkOiKgueCue+8jOiLpeS8oOWFpXRydWXvvIzoh6rliqjmiornp7vpmaToioLngrnnmoTlrZDoioLngrnmj5LlhaXliLDnp7vpmaTnmoTkvY3nva5cbiAgICAgICAgICAgICAqIEByZXR1cm4geyAqIH0g6L+U5Zue5Yia56e76Zmk55qE5a2Q6IqC54K5XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5yZW1vdmVDaGlsZChjaGlsZE5vZGUsdHJ1ZSk7IC8v5Zyobm9kZeeahOWtkOiKgueCueWIl+ihqOS4reenu+mZpGNoaWxk6IqC54K577yM5bm25LiU5ZCnY2hpbGTnmoTlrZDoioLngrnmj5LlhaXliLDnp7vpmaTnmoTkvY3nva5cbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZW1vdmVDaGlsZDogZnVuY3Rpb24gKG5vZGUsIGtlZXBDaGlsZHJlbikge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5jaGlsZHJlbltpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpID09PSBub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2kucGFyZW50Tm9kZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtlZXBDaGlsZHJlbiAmJiBjaS5jaGlsZHJlbiAmJiBjaS5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDAsIGNqOyAoY2ogPSBjaS5jaGlsZHJlbltqXSk7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5zcGxpY2UoaSArIGosIDAsIGNqKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNqLnBhcmVudE5vZGUgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmN6IqC54K55omA5Luj6KGo55qE5YWD57Sg5bGe5oCn77yM5Y2z6I635Y+WYXR0cnPlr7nosaHkuIvnmoTlsZ7mgKflgLxcbiAgICAgICAgICAgICAqIEBtZXRob2QgZ2V0QXR0clxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gYXR0ck5hbWUg6KaB6I635Y+W55qE5bGe5oCn5ZCN56ewXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgKiB9IOi/lOWbnmF0dHJz5a+56LGh5LiL55qE5bGe5oCn5YC8XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5nZXRBdHRyKCd0aXRsZScpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldEF0dHI6IGZ1bmN0aW9uIChhdHRyTmFtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmF0dHJzICYmIHRoaXMuYXR0cnNbYXR0ck5hbWUudG9Mb3dlckNhc2UoKV07XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiuvue9ruW9k+WJjeiKgueCueaJgOS7o+ihqOeahOWFg+e0oOWxnuaAp++8jOWNs+iuvue9rmF0dHJz5a+56LGh5LiL55qE5bGe5oCn5YC8XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNldEF0dHJcbiAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGF0dHJOYW1lIOimgeiuvue9rueahOWxnuaAp+WQjeensFxuICAgICAgICAgICAgICogQHBhcmFtIHsgKiB9IGF0dHJWYWwg6KaB6K6+572u55qE5bGe5oCn5YC877yM57G75Z6L6KeG6K6+572u55qE5bGe5oCn6ICM5a6aXG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgKiB9IOi/lOWbnmF0dHJz5a+56LGh5LiL55qE5bGe5oCn5YC8XG4gICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICogbm9kZS5zZXRBdHRyKCd0aXRsZScsJ+agh+mimCcpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHNldEF0dHI6IGZ1bmN0aW9uIChhdHRyTmFtZSwgYXR0clZhbCkge1xuICAgICAgICAgICAgICAgIGlmICghYXR0ck5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuYXR0cnM7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmF0dHJzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXR0cnMgPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzT2JqZWN0KGF0dHJOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBhIGluIGF0dHJOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWF0dHJOYW1lW2FdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuYXR0cnNbYV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYXR0cnNbYS50b0xvd2VyQ2FzZSgpXSA9IGF0dHJOYW1lW2FdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhdHRyVmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5hdHRyc1thdHRyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dHJzW2F0dHJOYW1lLnRvTG93ZXJDYXNlKCldID0gYXR0clZhbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmN6IqC54K55Zyo54i26IqC54K55LiL55qE5L2N572u57Si5byVXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldEluZGV4XG4gICAgICAgICAgICAgKiBAcmV0dXJuIHsgTnVtYmVyIH0g6L+U5Zue57Si5byV5pWw5YC877yM5aaC5p6c5rKh5pyJ54i26IqC54K577yM6L+U5ZueLTFcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLmdldEluZGV4KCk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0SW5kZXg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gcGFyZW50LmNoaWxkcmVuW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaSA9PT0gdGhpcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlnKjlvZPliY3oioLngrnkuIvvvIzmoLnmja5pZOafpeaJvuiKgueCuVxuICAgICAgICAgICAgICogQG1ldGhvZCBnZXROb2RlQnlJZFxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gaWQg6KaB5p+l5om+55qEaWRcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBVRS51Tm9kZSB9IOi/lOWbnuaJvuWIsOeahOiKgueCuVxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuZ2V0Tm9kZUJ5SWQoJ3RleHRJZCcpO1xuICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldE5vZGVCeUlkOiBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9kZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGlsZHJlbiAmJiB0aGlzLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHRoaXMuY2hpbGRyZW5baSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChub2RlID0gZ2V0Tm9kZUJ5SWQoY2ksIGlkKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Zyo5b2T5YmN6IqC54K55LiL77yM5qC55o2u5YWD57Sg5ZCN56ew5p+l5om+6IqC54K55YiX6KGoXG4gICAgICAgICAgICAgKiBAbWV0aG9kIGdldE5vZGVzQnlUYWdOYW1lXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB0YWdOYW1lcyDopoHmn6Xmib7nmoTlhYPntKDlkI3np7BcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBBcnJheSB9IOi/lOWbnuaJvuWIsOeahOiKgueCueWIl+ihqFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuZ2V0Tm9kZXNCeVRhZ05hbWUoJ3NwYW4nKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXROb2Rlc0J5VGFnTmFtZTogZnVuY3Rpb24gKHRhZ05hbWVzKSB7XG4gICAgICAgICAgICAgICAgdGFnTmFtZXMgPSB1dGlsc1xuICAgICAgICAgICAgICAgICAgICAudHJpbSh0YWdOYW1lcylcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1sgXXsyLH0vZywgJyAnKVxuICAgICAgICAgICAgICAgICAgICAuc3BsaXQoJyAnKTtcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0gW10sXG4gICAgICAgICAgICAgICAgICAgIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHRhZ05hbWVzLCBmdW5jdGlvbiAodGFnTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWUuY2hpbGRyZW4gJiYgbWUuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IG1lLmNoaWxkcmVuW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXROb2Rlc0J5VGFnTmFtZShjaSwgdGFnTmFtZSwgYXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBhcnI7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOagueaNruagt+W8j+WQjeensO+8jOiOt+WPluiKgueCueeahOagt+W8j+WAvFxuICAgICAgICAgICAgICogQG1ldGhvZCBnZXRTdHlsZVxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gbmFtZSDopoHojrflj5bnmoTmoLflvI/lkI3np7BcbiAgICAgICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDov5Tlm57moLflvI/lgLxcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiBub2RlLmdldFN0eWxlKCdmb250LXNpemUnKTtcbiAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRTdHlsZTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgY3NzU3R5bGUgPSB0aGlzLmdldEF0dHIoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgICAgaWYgKCFjc3NTdHlsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKCcoXnw7KVxcXFxzKicgKyBuYW1lICsgJzooW147XSspJywgJ2knKTtcbiAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBjc3NTdHlsZS5tYXRjaChyZWcpO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFswXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hbMl07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog57uZ6IqC54K56K6+572u5qC35byPXG4gICAgICAgICAgICAgKiBAbWV0aG9kIHNldFN0eWxlXG4gICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBuYW1lIOimgeiuvue9rueahOeahOagt+W8j+WQjeensFxuICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gdmFsIOimgeiuvue9rueahOeahOagt+WAvFxuICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAqIG5vZGUuc2V0U3R5bGUoJ2ZvbnQtc2l6ZScsICcxMnB4Jyk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgc2V0U3R5bGU6IGZ1bmN0aW9uIChuYW1lLCB2YWwpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBleGVjKG5hbWUsIHZhbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cCgnKF58OylcXFxccyonICsgbmFtZSArICc6KFteO10rOz8pJywgJ2dpJyk7XG4gICAgICAgICAgICAgICAgICAgIGNzc1N0eWxlID0gY3NzU3R5bGUucmVwbGFjZShyZWcsICckMScpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3NTdHlsZSA9IG5hbWUgKyAnOicgKyB1dGlscy51bmh0bWwodmFsKSArICc7JyArIGNzc1N0eWxlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIGNzc1N0eWxlID0gdGhpcy5nZXRBdHRyKCdzdHlsZScpO1xuICAgICAgICAgICAgICAgIGlmICghY3NzU3R5bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3NzU3R5bGUgPSAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzT2JqZWN0KG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGEgaW4gbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhlYyhhLCBuYW1lW2FdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWMobmFtZSwgdmFsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRBdHRyKCdzdHlsZScsIHV0aWxzLnRyaW0oY3NzU3R5bGUpKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5Lyg5YWl5LiA5Liq5Ye95pWw77yM6YCS5b2S6YGN5Y6G5b2T5YmN6IqC54K55LiL55qE5omA5pyJ6IqC54K5XG4gICAgICAgICAgICAgKiBAbWV0aG9kIHRyYXZlcnNhbFxuICAgICAgICAgICAgICogQHBhcmFtIHsgRnVuY3Rpb24gfSBmbiDpgY3ljobliLDoioLngrnnmoTml7bvvIzkvKDlhaXoioLngrnkvZzkuLrlj4LmlbDvvIzov5DooYzmraTlh73mlbBcbiAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgKiB0cmF2ZXJzYWwobm9kZSwgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAqICAgICBjb25zb2xlLmxvZyhub2RlLnR5cGUpO1xuICAgICAgICAgICAgICogfSk7XG4gICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdHJhdmVyc2FsOiBmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGlsZHJlbiAmJiB0aGlzLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBub2RlVHJhdmVyc2FsKHRoaXMsIGZuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIC8vIGNvcmUvaHRtbHBhcnNlci5qc1xuICAgIC8qKlxuICAgICAqIGh0bWzlrZfnrKbkuLLovazmjaLmiJB1Tm9kZeiKgueCuVxuICAgICAqIEBmaWxlXG4gICAgICogQG1vZHVsZSBVRVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBVRWRpdG9y5YWs55So56m66Ze077yMVUVkaXRvcuaJgOacieeahOWKn+iDvemDveaMgui9veWcqOivpeepuumXtOS4i1xuICAgICAqIEB1bmZpbGVcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBodG1s5a2X56ym5Liy6L2s5o2i5oiQdU5vZGXoioLngrnnmoTpnZnmgIHmlrnms5VcbiAgICAgKiBAbWV0aG9kIGh0bWxwYXJzZXJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBodG1sc3RyIOimgei9rOaNoueahGh0bWzku6PnoIFcbiAgICAgKiBAcGFyYW0geyBCb29sZWFuIH0gaWdub3JlQmxhbmsg6Iul6K6+572u5Li6dHJ1Ze+8jOi9rOaNoueahOaXtuWAmeW/veeVpVxcblxcclxcdOetieepuueZveWtl+esplxuICAgICAqIEByZXR1cm4geyB1Tm9kZSB9IOe7meWumueahGh0bWzniYfmrrXovazmjaLlvaLmiJDnmoR1Tm9kZeWvueixoVxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIHZhciByb290ID0gVUUuaHRtbHBhcnNlcignPHA+PGI+aHRtbHBhcnNlcjwvYj48L3A+JywgdHJ1ZSk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICB2YXIgaHRtbHBhcnNlciA9IChVRS5odG1scGFyc2VyID0gZnVuY3Rpb24gKGh0bWxzdHIsIGlnbm9yZUJsYW5rKSB7XG4gICAgICAgIC8vdG9kbyDljp/mnaXnmoTmlrnlvI8gIFteXCInPD5cXC9dIOaciVxcL+WwseS4jeiDvemFjeWvueS4iiA8VEQgdkFsaWduPXRvcCBiYWNrZ3JvdW5kPS4uL0FBQS5KUEc+IOi/meagt+eahOagh+etvuS6hlxuICAgICAgICAvL+WFiOWOu+aOieS6hu+8jOWKoOS4iueahOWOn+WboOW/mOS6hu+8jOi/memHjOWFiOiusOW9lVxuICAgICAgICB2YXIgcmVfdGFnID1cbiAgICAgICAgICAgICAgICAvPCg/Oig/OlxcLyhbXj5dKyk+KXwoPzohLS0oW1xcU3xcXHNdKj8pLS0+KXwoPzooW15cXHNcXC88Pl0rKVxccyooKD86KD86XCJbXlwiXSpcIil8KD86J1teJ10qJyl8W15cIic8Pl0pKilcXC8/PikpL2csXG4gICAgICAgICAgICByZV9hdHRyID0gLyhbXFx3XFwtOi5dKykoPzooPzpcXHMqPVxccyooPzooPzpcIihbXlwiXSopXCIpfCg/OicoW14nXSopJyl8KFteXFxzPl0rKSkpfCg/PVxcc3wkKSkvZztcblxuICAgICAgICAvL2ll5LiL5Y+W5b6X55qEaHRtbOWPr+iDveS8muaciVxcbuWtmOWcqO+8jOimgeWOu+aOie+8jOWcqOWkhOeQhnJlcGxhY2UoL1tcXHRcXHJcXG5dKi9nLCcnKTvku6PnoIHpq5jph4/nmoRcXG7kuI3og73ljrvpmaRcbiAgICAgICAgdmFyIGFsbG93RW1wdHlUYWdzID0ge1xuICAgICAgICAgICAgYjogMSxcbiAgICAgICAgICAgIGNvZGU6IDEsXG4gICAgICAgICAgICBpOiAxLFxuICAgICAgICAgICAgdTogMSxcbiAgICAgICAgICAgIHN0cmlrZTogMSxcbiAgICAgICAgICAgIHM6IDEsXG4gICAgICAgICAgICB0dDogMSxcbiAgICAgICAgICAgIHN0cm9uZzogMSxcbiAgICAgICAgICAgIHE6IDEsXG4gICAgICAgICAgICBzYW1wOiAxLFxuICAgICAgICAgICAgZW06IDEsXG4gICAgICAgICAgICBzcGFuOiAxLFxuICAgICAgICAgICAgc3ViOiAxLFxuICAgICAgICAgICAgaW1nOiAxLFxuICAgICAgICAgICAgc3VwOiAxLFxuICAgICAgICAgICAgZm9udDogMSxcbiAgICAgICAgICAgIGJpZzogMSxcbiAgICAgICAgICAgIHNtYWxsOiAxLFxuICAgICAgICAgICAgaWZyYW1lOiAxLFxuICAgICAgICAgICAgYTogMSxcbiAgICAgICAgICAgIGJyOiAxLFxuICAgICAgICAgICAgcHJlOiAxXG4gICAgICAgIH07XG4gICAgICAgIGh0bWxzdHIgPSBodG1sc3RyLnJlcGxhY2UobmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKSwgJycpO1xuICAgICAgICBpZiAoIWlnbm9yZUJsYW5rKSB7XG4gICAgICAgICAgICBodG1sc3RyID0gaHRtbHN0ci5yZXBsYWNlKFxuICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoXG4gICAgICAgICAgICAgICAgICAgICdbXFxcXHJcXFxcdFxcXFxuJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAoaWdub3JlQmxhbmsgPyAnJyA6ICcgJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ10qPC8/KFxcXFx3KylcXFxccyooPzpbXj5dKik+W1xcXFxyXFxcXHRcXFxcbicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGlnbm9yZUJsYW5rID8gJycgOiAnICcpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICddKicsXG4gICAgICAgICAgICAgICAgICAgICdnJ1xuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9icuaaguaXtuWNleeLrOWkhOeQhlxuICAgICAgICAgICAgICAgICAgICBpZiAoYiAmJiBhbGxvd0VtcHR5VGFnc1tiLnRvTG93ZXJDYXNlKCldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5yZXBsYWNlKC8oXltcXG5cXHJdKyl8KFtcXG5cXHJdKyQpL2csICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYVxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UobmV3IFJlZ0V4cCgnXltcXFxcclxcXFxuJyArIChpZ25vcmVCbGFuayA/ICcnIDogJyAnKSArICddKycpLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1tcXFxcclxcXFxuJyArIChpZ25vcmVCbGFuayA/ICcnIDogJyAnKSArICddKyQnKSwgJycpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbm90VHJhbnNBdHRycyA9IHtcbiAgICAgICAgICAgIGhyZWY6IDEsXG4gICAgICAgICAgICBzcmM6IDFcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgdU5vZGUgPSBVRS51Tm9kZSxcbiAgICAgICAgICAgIG5lZWRQYXJlbnROb2RlID0ge1xuICAgICAgICAgICAgICAgIHRkOiAndHInLFxuICAgICAgICAgICAgICAgIHRyOiBbJ3Rib2R5JywgJ3RoZWFkJywgJ3Rmb290J10sXG4gICAgICAgICAgICAgICAgdGJvZHk6ICd0YWJsZScsXG4gICAgICAgICAgICAgICAgdGg6ICd0cicsXG4gICAgICAgICAgICAgICAgdGhlYWQ6ICd0YWJsZScsXG4gICAgICAgICAgICAgICAgdGZvb3Q6ICd0YWJsZScsXG4gICAgICAgICAgICAgICAgY2FwdGlvbjogJ3RhYmxlJyxcbiAgICAgICAgICAgICAgICBsaTogWyd1bCcsICdvbCddLFxuICAgICAgICAgICAgICAgIGR0OiAnZGwnLFxuICAgICAgICAgICAgICAgIGRkOiAnZGwnLFxuICAgICAgICAgICAgICAgIG9wdGlvbjogJ3NlbGVjdCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBuZWVkQ2hpbGQgPSB7XG4gICAgICAgICAgICAgICAgb2w6ICdsaScsXG4gICAgICAgICAgICAgICAgdWw6ICdsaSdcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gdGV4dChwYXJlbnQsIGRhdGEpIHtcbiAgICAgICAgICAgIGlmIChuZWVkQ2hpbGRbcGFyZW50LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSB1Tm9kZS5jcmVhdGVFbGVtZW50KG5lZWRDaGlsZFtwYXJlbnQudGFnTmFtZV0pO1xuICAgICAgICAgICAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICB0bXBOb2RlLmFwcGVuZENoaWxkKHVOb2RlLmNyZWF0ZVRleHQoZGF0YSkpO1xuICAgICAgICAgICAgICAgIHBhcmVudCA9IHRtcE5vZGU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh1Tm9kZS5jcmVhdGVUZXh0KGRhdGEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGVsZW1lbnQocGFyZW50LCB0YWdOYW1lLCBodG1sYXR0cikge1xuICAgICAgICAgICAgdmFyIG5lZWRQYXJlbnRUYWc7XG4gICAgICAgICAgICBpZiAoKG5lZWRQYXJlbnRUYWcgPSBuZWVkUGFyZW50Tm9kZVt0YWdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgdG1wUGFyZW50ID0gcGFyZW50LFxuICAgICAgICAgICAgICAgICAgICBoYXNQYXJlbnQ7XG4gICAgICAgICAgICAgICAgd2hpbGUgKHRtcFBhcmVudC50eXBlICE9ICdyb290Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5pc0FycmF5KG5lZWRQYXJlbnRUYWcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB1dGlscy5pbmRleE9mKG5lZWRQYXJlbnRUYWcsIHRtcFBhcmVudC50YWdOYW1lKSAhPSAtMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbmVlZFBhcmVudFRhZyA9PSB0bXBQYXJlbnQudGFnTmFtZVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudCA9IHRtcFBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1BhcmVudCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0bXBQYXJlbnQgPSB0bXBQYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFoYXNQYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50ID0gZWxlbWVudChwYXJlbnQsIHV0aWxzLmlzQXJyYXkobmVlZFBhcmVudFRhZykgPyBuZWVkUGFyZW50VGFnWzBdIDogbmVlZFBhcmVudFRhZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/mjIlkdGTlpITnkIbltYzlpZdcbiAgICAgICAgICAgIC8vICAgICAgICBpZihwYXJlbnQudHlwZSAhPSAncm9vdCcgJiYgIWR0ZFtwYXJlbnQudGFnTmFtZV1bdGFnTmFtZV0pXG4gICAgICAgICAgICAvLyAgICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgdmFyIGVsbSA9IG5ldyB1Tm9kZSh7XG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZTogcGFyZW50LFxuICAgICAgICAgICAgICAgIHR5cGU6ICdlbGVtZW50JyxcbiAgICAgICAgICAgICAgICB0YWdOYW1lOiB0YWdOYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgLy/mmK/oh6rpl63lkIjnmoTlpITnkIbkuIDkuItcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogZHRkLiRlbXB0eVt0YWdOYW1lXSA/IG51bGwgOiBbXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvL+WmguaenOWxnuaAp+WtmOWcqO+8jOWkhOeQhuWxnuaAp1xuICAgICAgICAgICAgaWYgKGh0bWxhdHRyKSB7XG4gICAgICAgICAgICAgICAgdmFyIGF0dHJzID0ge30sXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoO1xuICAgICAgICAgICAgICAgIHdoaWxlICgobWF0Y2ggPSByZV9hdHRyLmV4ZWMoaHRtbGF0dHIpKSkge1xuICAgICAgICAgICAgICAgICAgICBhdHRyc1ttYXRjaFsxXS50b0xvd2VyQ2FzZSgpXSA9IG5vdFRyYW5zQXR0cnNbbWF0Y2hbMV0udG9Mb3dlckNhc2UoKV1cbiAgICAgICAgICAgICAgICAgICAgICAgID8gbWF0Y2hbMl0gfHwgbWF0Y2hbM10gfHwgbWF0Y2hbNF1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogdXRpbHMudW5odG1sKG1hdGNoWzJdIHx8IG1hdGNoWzNdIHx8IG1hdGNoWzRdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxtLmF0dHJzID0gYXR0cnM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL3RyYWNlOjM5NzBcbiAgICAgICAgICAgIC8vICAgICAgICAvL+WmguaenHBhcmVudOS4i+S4jeiDveaUvmVsbVxuICAgICAgICAgICAgLy8gICAgICAgIGlmKGR0ZC4kaW5saW5lW3BhcmVudC50YWdOYW1lXSAmJiBkdGQuJGJsb2NrW2VsbS50YWdOYW1lXSAmJiAhZHRkW3BhcmVudC50YWdOYW1lXVtlbG0udGFnTmFtZV0pe1xuICAgICAgICAgICAgLy8gICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgZWxtLnBhcmVudE5vZGUgPSBwYXJlbnQ7XG4gICAgICAgICAgICAvLyAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50LmNoaWxkcmVuLnB1c2goZWxtKTtcbiAgICAgICAgICAgIC8v5aaC5p6c5piv6Ieq6Zet5ZCI6IqC54K56L+U5Zue54i25Lqy6IqC54K5XG4gICAgICAgICAgICByZXR1cm4gZHRkLiRlbXB0eVt0YWdOYW1lXSA/IHBhcmVudCA6IGVsbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNvbW1lbnQocGFyZW50LCBkYXRhKSB7XG4gICAgICAgICAgICBwYXJlbnQuY2hpbGRyZW4ucHVzaChcbiAgICAgICAgICAgICAgICBuZXcgdU5vZGUoe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY29tbWVudCcsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGU6IHBhcmVudFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG1hdGNoLFxuICAgICAgICAgICAgY3VycmVudEluZGV4ID0gMCxcbiAgICAgICAgICAgIG5leHRJbmRleCA9IDA7XG4gICAgICAgIC8v6K6+572u5qC56IqC54K5XG4gICAgICAgIHZhciByb290ID0gbmV3IHVOb2RlKHtcbiAgICAgICAgICAgIHR5cGU6ICdyb290JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGN1cnJlbnRQYXJlbnQgPSByb290O1xuXG4gICAgICAgIHdoaWxlICgobWF0Y2ggPSByZV90YWcuZXhlYyhodG1sc3RyKSkpIHtcbiAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IG1hdGNoLmluZGV4O1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEluZGV4ID4gbmV4dEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdGV4dCBub2RlXG4gICAgICAgICAgICAgICAgICAgIHRleHQoY3VycmVudFBhcmVudCwgaHRtbHN0ci5zbGljZShuZXh0SW5kZXgsIGN1cnJlbnRJbmRleCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWF0Y2hbM10pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kY2RhdGFbY3VycmVudFBhcmVudC50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dChjdXJyZW50UGFyZW50LCBtYXRjaFswXSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3N0YXJ0IHRhZ1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFBhcmVudCA9IGVsZW1lbnQoY3VycmVudFBhcmVudCwgbWF0Y2hbM10udG9Mb3dlckNhc2UoKSwgbWF0Y2hbNF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtYXRjaFsxXSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFBhcmVudC50eXBlICE9ICdyb290Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kY2RhdGFbY3VycmVudFBhcmVudC50YWdOYW1lXSAmJiAhZHRkLiRjZGF0YVttYXRjaFsxXV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0KGN1cnJlbnRQYXJlbnQsIG1hdGNoWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcFBhcmVudCA9IGN1cnJlbnRQYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnRQYXJlbnQudHlwZSA9PSAnZWxlbWVudCcgJiYgY3VycmVudFBhcmVudC50YWdOYW1lICE9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFBhcmVudCA9IGN1cnJlbnRQYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRQYXJlbnQudHlwZSA9PSAncm9vdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYXJlbnQgPSB0bXBQYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyAnYnJlYWsnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZW5kIHRhZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYXJlbnQgPSBjdXJyZW50UGFyZW50LnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1hdGNoWzJdKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vY29tbWVudFxuICAgICAgICAgICAgICAgICAgICBjb21tZW50KGN1cnJlbnRQYXJlbnQsIG1hdGNoWzJdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgICAgICAgICBuZXh0SW5kZXggPSByZV90YWcubGFzdEluZGV4O1xuICAgICAgICB9XG4gICAgICAgIC8v5aaC5p6c57uT5p2f5piv5paH5pys77yM5bCx5pyJ5Y+v6IO95Lii5o6J77yM5omA5Lul6L+Z6YeM5omL5Yqo5Yik5pat5LiA5LiLXG4gICAgICAgIC8v5L6L5aaCIDxsaT5zZGZzZGZzZGY8bGk+c2Rmc2Rmc2Rmc2RmXG4gICAgICAgIGlmIChuZXh0SW5kZXggPCBodG1sc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgdGV4dChjdXJyZW50UGFyZW50LCBodG1sc3RyLnNsaWNlKG5leHRJbmRleCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByb290O1xuICAgIH0pO1xuXG4gICAgLy8gY29yZS9maWx0ZXJub2RlLmpzXG4gICAgLyoqXG4gICAgICogVUXov4fmu6ToioLngrnnmoTpnZnmgIHmlrnms5VcbiAgICAgKiBAZmlsZVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogVUVkaXRvcuWFrOeUqOepuumXtO+8jFVFZGl0b3LmiYDmnInnmoTlip/og73pg73mjILovb3lnKjor6Xnqbrpl7TkuItcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmoLnmja7kvKDlhaXoioLngrnlkozov4fmu6Top4TliJnov4fmu6Tnm7jlupToioLngrlcbiAgICAgKiBAbW9kdWxlIFVFXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKiBAbWV0aG9kIGZpbHRlck5vZGVcbiAgICAgKiBAcGFyYW0geyBPYmplY3QgfSByb290IOaMh+WumnJvb3ToioLngrlcbiAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBydWxlcyDov4fmu6Top4TliJlqc29u5a+56LGhXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogVUUuZmlsdGVyTm9kZShyb290LGVkaXRvci5vcHRpb25zLmZpbHRlclJ1bGVzKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB2YXIgZmlsdGVyTm9kZSA9IChVRS5maWx0ZXJOb2RlID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gZmlsdGVyTm9kZShub2RlLCBydWxlcykge1xuICAgICAgICAgICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZWxlbWVudCc6XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWw7XG4gICAgICAgICAgICAgICAgICAgIGlmICgodmFsID0gcnVsZXNbbm9kZS50YWdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWwgPT09ICctJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNGdW5jdGlvbih2YWwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBub2RlLnBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gbm9kZS5nZXRJbmRleCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IG5vZGUuY2hpbGRyZW5baV0pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJOb2RlKGNpLCBydWxlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBpbmRleCwgY2k7IChjaSA9IHBhcmVudE5vZGUuY2hpbGRyZW5baV0pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlck5vZGUoY2ksIHJ1bGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXR0cnMgPSB2YWxbJyQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cnMgJiYgbm9kZS5hdHRycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wQXR0cnMgPSB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYSBpbiBhdHRycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wVmFsID0gbm9kZS5nZXRBdHRyKGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy90b2RvIOWPquWFiOWvuXN0eWxl5Y2V54us5aSE55CGXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYSA9PSAnc3R5bGUnICYmIHV0aWxzLmlzQXJyYXkoYXR0cnNbYV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcENzc1N0eWxlID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChhdHRyc1thXSwgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh0bXAgPSBub2RlLmdldFN0eWxlKHYpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wQ3NzU3R5bGUucHVzaCh2ICsgJzonICsgdG1wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFZhbCA9IHRtcENzc1N0eWxlLmpvaW4oJzsnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBWYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBBdHRyc1thXSA9IHRtcFZhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmF0dHJzID0gdG1wQXR0cnM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbm9kZS5jaGlsZHJlbltpXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyTm9kZShjaSwgcnVsZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WmguaenOS4jeWcqOWQjeWNlemHjOaJo+WHuuWtkOiKgueCueW5tuWIoOmZpOivpeiKgueCuSxjZGF0YemZpOWkllxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kY2RhdGFbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBub2RlLnBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gbm9kZS5nZXRJbmRleCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gaW5kZXgsIGNpOyAoY2kgPSBwYXJlbnROb2RlLmNoaWxkcmVuW2ldKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlck5vZGUoY2ksIHJ1bGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdjb21tZW50JzpcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAocm9vdCwgcnVsZXMpIHtcbiAgICAgICAgICAgIGlmICh1dGlscy5pc0VtcHR5T2JqZWN0KHJ1bGVzKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByb290O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgIGlmICgodmFsID0gcnVsZXNbJy0nXSkpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHZhbC5zcGxpdCgnICcpLCBmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgICAgICAgICBydWxlc1trXSA9ICctJztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gcm9vdC5jaGlsZHJlbltpXSk7ICkge1xuICAgICAgICAgICAgICAgIGZpbHRlck5vZGUoY2ksIHJ1bGVzKTtcbiAgICAgICAgICAgICAgICBpZiAoY2kucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJvb3Q7XG4gICAgICAgIH07XG4gICAgfSkoKSk7XG5cbiAgICAvLyBjb3JlL3BsdWdpbi5qc1xuICAgIC8qKlxuICAgICAqIENyZWF0ZWQgd2l0aCBKZXRCcmFpbnMgUGhwU3Rvcm0uXG4gICAgICogVXNlcjogY2FtcGFpZ25cbiAgICAgKiBEYXRlOiAxMC84LzEzXG4gICAgICogVGltZTogNjoxNSBQTVxuICAgICAqIFRvIGNoYW5nZSB0aGlzIHRlbXBsYXRlIHVzZSBGaWxlIHwgU2V0dGluZ3MgfCBGaWxlIFRlbXBsYXRlcy5cbiAgICAgKi9cbiAgICBVRS5wbHVnaW4gPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3BsdWdpbnMgPSB7fTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiAocGx1Z2luTmFtZSwgZm4sIG9sZE9wdGlvbk5hbWUsIGFmdGVyRGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAob2xkT3B0aW9uTmFtZSAmJiB1dGlscy5pc0Z1bmN0aW9uKG9sZE9wdGlvbk5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFmdGVyRGlzYWJsZWQgPSBvbGRPcHRpb25OYW1lO1xuICAgICAgICAgICAgICAgICAgICBvbGRPcHRpb25OYW1lID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX3BsdWdpbnNbcGx1Z2luTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbk5hbWU6IG9sZE9wdGlvbk5hbWUgfHwgcGx1Z2luTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZXhlY0ZuOiBmbixcbiAgICAgICAgICAgICAgICAgICAgLy/lvZPmj5Lku7booqvnpoHnlKjml7bmiafooYxcbiAgICAgICAgICAgICAgICAgICAgYWZ0ZXJEaXNhYmxlZDogYWZ0ZXJEaXNhYmxlZFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9hZDogZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goX3BsdWdpbnMsIGZ1bmN0aW9uIChwbHVnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIF9leHBvcnQgPSBwbHVnaW4uZXhlY0ZuLmNhbGwoZWRpdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5vcHRpb25zW3BsdWdpbi5vcHRpb25OYW1lXSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfZXhwb3J0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lkI7ovrnpnIDopoHlho3lgZrmianlsZVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKF9leHBvcnQsIGZ1bmN0aW9uICh2LCBrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoay50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzaG9ydGN1dGtleSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmFkZHNob3J0Y3V0a2V5KHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYmluZGV2ZW50cyc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh2LCBmdW5jdGlvbiAoZm4sIGV2ZW50TmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoZXZlbnROYW1lLCBmbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdiaW5kbXVsdGlldmVudHMnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2godXRpbHMuaXNBcnJheSh2KSA/IHYgOiBbdl0sIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZXMgPSB1dGlscy50cmltKGV2ZW50LnR5cGUpLnNwbGl0KC9cXHMrLyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2godHlwZXMsIGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcihldmVudE5hbWUsIGV2ZW50LmhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2NvbW1hbmRzJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHYsIGZ1bmN0aW9uIChleGVjRm4sIGV4ZWNOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5jb21tYW5kc1tleGVjTmFtZV0gPSBleGVjRm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdvdXRwdXRydWxlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuYWRkT3V0cHV0UnVsZSh2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2lucHV0cnVsZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmFkZElucHV0UnVsZSh2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2RlZmF1bHRvcHRpb25zJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3Iuc2V0T3B0KHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGx1Z2luLmFmdGVyRGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsdWdpbi5hZnRlckRpc2FibGVkLmNhbGwoZWRpdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8v5ZCR5LiL5YW85a65XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChVRS5wbHVnaW5zLCBmdW5jdGlvbiAocGx1Z2luKSB7XG4gICAgICAgICAgICAgICAgICAgIHBsdWdpbi5jYWxsKGVkaXRvcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcnVuOiBmdW5jdGlvbiAocGx1Z2luTmFtZSwgZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBsdWdpbiA9IF9wbHVnaW5zW3BsdWdpbk5hbWVdO1xuICAgICAgICAgICAgICAgIGlmIChwbHVnaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcGx1Z2luLmV4ZUZuLmNhbGwoZWRpdG9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIC8vIGNvcmUva2V5bWFwLmpzXG4gICAgdmFyIGtleW1hcCA9IChVRS5rZXltYXAgPSB7XG4gICAgICAgIEJhY2tzcGFjZTogOCxcbiAgICAgICAgVGFiOiA5LFxuICAgICAgICBFbnRlcjogMTMsXG5cbiAgICAgICAgU2hpZnQ6IDE2LFxuICAgICAgICBDb250cm9sOiAxNyxcbiAgICAgICAgQWx0OiAxOCxcbiAgICAgICAgQ2Fwc0xvY2s6IDIwLFxuXG4gICAgICAgIEVzYzogMjcsXG5cbiAgICAgICAgU3BhY2ViYXI6IDMyLFxuXG4gICAgICAgIFBhZ2VVcDogMzMsXG4gICAgICAgIFBhZ2VEb3duOiAzNCxcbiAgICAgICAgRW5kOiAzNSxcbiAgICAgICAgSG9tZTogMzYsXG5cbiAgICAgICAgTGVmdDogMzcsXG4gICAgICAgIFVwOiAzOCxcbiAgICAgICAgUmlnaHQ6IDM5LFxuICAgICAgICBEb3duOiA0MCxcblxuICAgICAgICBJbnNlcnQ6IDQ1LFxuXG4gICAgICAgIERlbDogNDYsXG5cbiAgICAgICAgTnVtTG9jazogMTQ0LFxuXG4gICAgICAgIENtZDogOTEsXG5cbiAgICAgICAgJz0nOiAxODcsXG4gICAgICAgICctJzogMTg5LFxuXG4gICAgICAgIGI6IDY2LFxuICAgICAgICBpOiA3MyxcbiAgICAgICAgLy/lm57pgIBcbiAgICAgICAgejogOTAsXG4gICAgICAgIHk6IDg5LFxuICAgICAgICAvL+eymOi0tFxuICAgICAgICB2OiA4NixcbiAgICAgICAgeDogODgsXG5cbiAgICAgICAgczogODMsXG5cbiAgICAgICAgbjogNzhcbiAgICB9KTtcblxuICAgIC8vIGNvcmUvbG9jYWxzdG9yYWdlLmpzXG4gICAgLy/lrZjlgqjlqpLku4vlsIHoo4VcbiAgICB2YXIgTG9jYWxTdG9yYWdlID0gKFVFLkxvY2FsU3RvcmFnZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZSB8fCBnZXRVc2VyRGF0YSgpIHx8IG51bGwsXG4gICAgICAgICAgICBMT0NBTF9GSUxFID0gJ2xvY2FsU3RvcmFnZSc7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNhdmVMb2NhbERhdGE6IGZ1bmN0aW9uIChrZXksIGRhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3RvcmFnZSAmJiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0b3JhZ2Uuc2V0SXRlbShrZXksIGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBnZXRMb2NhbERhdGE6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgICAgICBpZiAoc3RvcmFnZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICByZW1vdmVJdGVtOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICAgICAgc3RvcmFnZSAmJiBzdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBmdW5jdGlvbiBnZXRVc2VyRGF0YSgpIHtcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gICAgICAgICAgICBpZiAoIWNvbnRhaW5lci5hZGRCZWhhdmlvcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb250YWluZXIuYWRkQmVoYXZpb3IoJyNkZWZhdWx0I3VzZXJkYXRhJyk7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZ2V0SXRlbTogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gbnVsbDtcblxuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmxvYWQoTE9DQUxfRklMRSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBjb250YWluZXIuZ2V0QXR0cmlidXRlKGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgc2V0SXRlbTogZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuc2F2ZShMT0NBTF9GSUxFKTtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChjb250YWluZXIpO1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAvLy8vIOaaguaXtuayoeacieeUqOWIsFxuICAgICAgICAgICAgICAgIC8vY2xlYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vICAgIHZhciBleHBpcmVzVGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgICAgLy8gICAgZXhwaXJlc1RpbWUuc2V0RnVsbFllYXIoZXhwaXJlc1RpbWUuZ2V0RnVsbFllYXIoKSAtIDEpO1xuICAgICAgICAgICAgICAgIC8vICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAvLyAgICBjb250YWluZXIuZXhwaXJlcyA9IGV4cGlyZXNUaW1lLnRvVVRDU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgLy8gICAgY29udGFpbmVyLnNhdmUoTE9DQUxfRklMRSk7XG4gICAgICAgICAgICAgICAgLy8gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChjb250YWluZXIpO1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy99LFxuXG4gICAgICAgICAgICAgICAgcmVtb3ZlSXRlbTogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5yZW1vdmVBdHRyaWJ1dGUoa2V5KTtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLnNhdmUoTE9DQUxfRklMRSk7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfSkoKSk7XG5cbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgUk9PVEtFWSA9ICd1ZWRpdG9yX3ByZWZlcmVuY2UnO1xuXG4gICAgICAgIFVFLkVkaXRvci5wcm90b3R5cGUuc2V0UHJlZmVyZW5jZXMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIG9iaiA9IHt9O1xuICAgICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGtleSkpIHtcbiAgICAgICAgICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvYmogPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgZGF0YSA9IExvY2FsU3RvcmFnZS5nZXRMb2NhbERhdGEoUk9PVEtFWSk7XG4gICAgICAgICAgICBpZiAoZGF0YSAmJiAoZGF0YSA9IHV0aWxzLnN0cjJqc29uKGRhdGEpKSkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmV4dGVuZChkYXRhLCBvYmopO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gb2JqO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0YSAmJiBMb2NhbFN0b3JhZ2Uuc2F2ZUxvY2FsRGF0YShST09US0VZLCB1dGlscy5qc29uMnN0cihkYXRhKSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgVUUuRWRpdG9yLnByb3RvdHlwZS5nZXRQcmVmZXJlbmNlcyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gTG9jYWxTdG9yYWdlLmdldExvY2FsRGF0YShST09US0VZKTtcbiAgICAgICAgICAgIGlmIChkYXRhICYmIChkYXRhID0gdXRpbHMuc3RyMmpzb24oZGF0YSkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleSA/IGRhdGFba2V5XSA6IGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfTtcblxuICAgICAgICBVRS5FZGl0b3IucHJvdG90eXBlLnJlbW92ZVByZWZlcmVuY2VzID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBMb2NhbFN0b3JhZ2UuZ2V0TG9jYWxEYXRhKFJPT1RLRVkpO1xuICAgICAgICAgICAgaWYgKGRhdGEgJiYgKGRhdGEgPSB1dGlscy5zdHIyanNvbihkYXRhKSkpIHtcbiAgICAgICAgICAgICAgICBkYXRhW2tleV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGRhdGFba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGEgJiYgTG9jYWxTdG9yYWdlLnNhdmVMb2NhbERhdGEoUk9PVEtFWSwgdXRpbHMuanNvbjJzdHIoZGF0YSkpO1xuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICAvLyBwbHVnaW5zL2RlZmF1bHRmaWx0ZXIuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL3BsdWdpbiDnvJbovpHlmajpu5jorqTnmoTov4fmu6TovazmjaLmnLrliLZcblxuICAgIFVFLnBsdWdpbnNbJ2RlZmF1bHRmaWx0ZXInXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgbWUuc2V0T3B0KHtcbiAgICAgICAgICAgIGFsbG93RGl2VHJhbnNUb1A6IHRydWUsXG4gICAgICAgICAgICBkaXNhYmxlZFRhYmxlSW5UYWJsZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgLy/pu5jorqTnmoTov4fmu6TlpITnkIZcbiAgICAgICAgLy/ov5vlhaXnvJbovpHlmajnmoTlhoXlrrnlpITnkIZcbiAgICAgICAgbWUuYWRkSW5wdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICB2YXIgYWxsb3dEaXZUcmFuc1RvUCA9IHRoaXMub3B0aW9ucy5hbGxvd0RpdlRyYW5zVG9QO1xuICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHRkUGFyZW50KG5vZGUpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAobm9kZSAmJiBub2RlLnR5cGUgPT0gJ2VsZW1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnRhZ05hbWUgPT0gJ3RkJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/ov5vooYzpu5jorqTnmoTlpITnkIZcbiAgICAgICAgICAgIHJvb3QudHJhdmVyc2FsKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUudHlwZSA9PSAnZWxlbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgIWR0ZC4kY2RhdGFbbm9kZS50YWdOYW1lXSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgbWUub3B0aW9ucy5hdXRvQ2xlYXJFbXB0eU5vZGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGR0ZC4kaW5saW5lW25vZGUudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICghbm9kZS5hdHRycyB8fCB1dGlscy5pc0VtcHR5T2JqZWN0KG5vZGUuYXR0cnMpKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbm9kZS5maXJzdENoaWxkKCkpIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5vZGUudGFnTmFtZSA9PSAnc3BhbicgJiYgKCFub2RlLmF0dHJzIHx8IHV0aWxzLmlzRW1wdHlPYmplY3Qobm9kZS5hdHRycykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAobm9kZS50YWdOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzY3JpcHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0QXR0cih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNkYXRhX3RhZzogbm9kZS50YWdOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZGF0YV9kYXRhOiBub2RlLmlubmVySFRNTCgpIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdWVfY3VzdG9tX25vZGVfOiAndHJ1ZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnRhZ05hbWUgPSAnZGl2JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmlubmVySFRNTCgnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdhJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHZhbCA9IG5vZGUuZ2V0QXR0cignaHJlZicpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ19ocmVmJywgdmFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdpbWcnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdG9kbyBiYXNlNjTmmoLml7bljrvmjonvvIzlkI7ovrnlgZrov5znqIvlm77niYfkuIrkvKDlkI7vvIzlubLmjonov5nkuKpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHZhbCA9IG5vZGUuZ2V0QXR0cignc3JjJykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgvXmRhdGE6Ly50ZXN0KHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0QXR0cignX3NyYycsIG5vZGUuZ2V0QXR0cignc3JjJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnc3Bhbic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIud2Via2l0ICYmICh2YWwgPSBub2RlLmdldFN0eWxlKCd3aGl0ZS1zcGFjZScpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoL25vd3JhcHxub3JtYWwvLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRTdHlsZSgnd2hpdGUtc3BhY2UnLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUub3B0aW9ucy5hdXRvQ2xlYXJFbXB0eU5vZGUgJiYgdXRpbHMuaXNFbXB0eU9iamVjdChub2RlLmF0dHJzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWwgPSBub2RlLmdldEF0dHIoJ2lkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbCAmJiAvXl9iYWlkdV9ib29rbWFya18vaS50ZXN0KHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3AnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgodmFsID0gbm9kZS5nZXRBdHRyKCdhbGlnbicpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ2FsaWduJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0U3R5bGUoJ3RleHQtYWxpZ24nLCB2YWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjM0MzFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjc3NTdHlsZSA9IG5vZGUuZ2V0QXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjc3NTdHlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc1N0eWxlID0gY3NzU3R5bGUucmVwbGFjZSgvKG1hcmdpbnxwYWRkaW5nKVteO10rL2csICcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ3N0eWxlJywgY3NzU3R5bGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3DmoIfnrb7kuI3lhYHorrjltYzlpZdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKG5vZGUuY2hpbGRyZW4sIGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuLnR5cGUgPT0gJ2VsZW1lbnQnICYmIG4udGFnTmFtZSA9PSAncCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXh0ID0gbi5uZXh0U2libGluZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEFmdGVyKG4sIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3QgPSBuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG5leHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0gbmV4dC5uZXh0U2libGluZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRBZnRlcihuZXh0LCBsYXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gbmV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ID0gdG1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlLmZpcnN0Q2hpbGQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmlubmVySFRNTChicm93c2VyLmllID8gJyZuYnNwOycgOiAnPGJyLz4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkaXYnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmdldEF0dHIoJ2NkYXRhX3RhZycpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+mSiOWvueS7o+eggei/memHjOS4jeWkhOeQhuaPkuWFpeS7o+eggeeahGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbCA9IG5vZGUuZ2V0QXR0cignY2xhc3MnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsICYmIC9ebGluZSBudW1iZXJcXGQrLy50ZXN0KHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYWxsb3dEaXZUcmFuc1RvUCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgPSBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKCh0bXBOb2RlID0gbm9kZS5maXJzdENoaWxkKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBOb2RlLnR5cGUgPT0gJ3RleHQnIHx8ICFVRS5kb20uZHRkLiRibG9ja1t0bXBOb2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHAuZmlyc3RDaGlsZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwID0gVUUudU5vZGUuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRtcE5vZGUsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwLmZpcnN0Q2hpbGQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHAsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkbCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS50YWdOYW1lID0gJ3VsJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2R0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2RkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnRhZ05hbWUgPSAnbGknO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbGknOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbGFzc05hbWUgPSBub2RlLmdldEF0dHIoJ2NsYXNzJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjbGFzc05hbWUgfHwgIS9saXN0XFwtLy50ZXN0KGNsYXNzTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g57KY6LS0d29yZOWQju+8jGxp5qCH562+5qC35byP5Lya5Lii77yM5omA5Lul5bmy5o6JIGh0dHBzOi8vYXBwLmFzYW5hLmNvbS8wLzM1NzMxMzE5NjQ1NDg4MC8xMjA1MjQ3MzcxNjI2MjI2L2ZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbm9kZS5zZXRBdHRyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlcyA9IG5vZGUuZ2V0Tm9kZXNCeVRhZ05hbWUoJ29sIHVsJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVUUudXRpbHMuZWFjaCh0bXBOb2RlcywgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEFmdGVyKG4sIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndGQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndGgnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY2FwdGlvbic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlLmNoaWxkcmVuIHx8ICFub2RlLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJvd3Nlci5pZTExYmVsb3cgPyBVRS51Tm9kZS5jcmVhdGVUZXh0KCcgJykgOiBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KCdicicpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndGFibGUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5vcHRpb25zLmRpc2FibGVkVGFibGVJblRhYmxlICYmIHRkUGFyZW50KG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoVUUudU5vZGUuY3JlYXRlVGV4dChub2RlLmlubmVyVGV4dCgpKSwgbm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBpZihub2RlLnR5cGUgPT0gJ2NvbW1lbnQnKXtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy/ku47nvJbovpHlmajlh7rljrvnmoTlhoXlrrnlpITnkIZcbiAgICAgICAgbWUuYWRkT3V0cHV0UnVsZShmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgIHJvb3QudHJhdmVyc2FsKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUudHlwZSA9PSAnZWxlbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgbWUub3B0aW9ucy5hdXRvQ2xlYXJFbXB0eU5vZGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGR0ZC4kaW5saW5lW25vZGUudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICghbm9kZS5hdHRycyB8fCB1dGlscy5pc0VtcHR5T2JqZWN0KG5vZGUuYXR0cnMpKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbm9kZS5maXJzdENoaWxkKCkpIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG5vZGUudGFnTmFtZSA9PSAnc3BhbicgJiYgKCFub2RlLmF0dHJzIHx8IHV0aWxzLmlzRW1wdHlPYmplY3Qobm9kZS5hdHRycykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAobm9kZS50YWdOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdkaXYnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgodmFsID0gbm9kZS5nZXRBdHRyKCdjZGF0YV90YWcnKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS50YWdOYW1lID0gdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKFVFLnVOb2RlLmNyZWF0ZVRleHQobm9kZS5nZXRBdHRyKCdjZGF0YV9kYXRhJykpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyKHsgY2RhdGFfdGFnOiAnJywgY2RhdGFfZGF0YTogJycsIF91ZV9jdXN0b21fbm9kZV86ICcnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2EnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgodmFsID0gbm9kZS5nZXRBdHRyKCdfaHJlZicpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogdXRpbHMuaHRtbCh2YWwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2hyZWY6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3NwYW4nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbCA9IG5vZGUuZ2V0QXR0cignaWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsICYmIC9eX2JhaWR1X2Jvb2ttYXJrXy9pLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaW1nJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHZhbCA9IG5vZGUuZ2V0QXR0cignX3NyYycpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBub2RlLmdldEF0dHIoJ19zcmMnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9zcmM6ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9pbnNlcnRodG1sLmpzXG4gICAgLyoqXG4gICAgICog5o+S5YWlaHRtbOWtl+espuS4suaPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOaPkuWFpWh0bWzku6PnoIFcbiAgICAgKiBAY29tbWFuZCBpbnNlcnRodG1sXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBodG1sIOaPkuWFpeeahGh0bWzlrZfnrKbkuLJcbiAgICAgKiBAcmVtYWluZCDmj5LlhaXnmoTmoIfnrb7lhoXlrrnmmK/lnKjlvZPliY3nmoTpgInljLrkvY3nva7kuIrmj5LlhaXvvIzlpoLmnpzlvZPliY3mmK/pl63lkIjnirbmgIHvvIzpgqPnm7TmjqXmj5LlhaXlhoXlrrnvvIwg5aaC5p6c5b2T5YmN5piv6YCJ5Lit54q25oCB77yM5bCG5YWI5riF6Zmk5b2T5YmN6YCJ5Lit5YaF5a655ZCO77yM5YaN5YGa5o+S5YWlXG4gICAgICogQHdhcm5pbmcg5rOo5oSPOuivpeWRveS7pOS8muWvueW9k+WJjemAieWMuueahOS9jee9ru+8jOWvueaPkuWFpeeahOWGheWuuei/m+ihjOi/h+a7pOi9rOaNouWkhOeQhuOAgiDov4fmu6TnmoTop4TliJnpgbXlvqpodG1s6K+t5oSP5YyW55qE5Y6f5YiZ44CCXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogLy94eHhbQkJdeHh4IOW9k+WJjemAieWMuuS4uumdnumXreWQiOmAieWMuu+8jOmAieS4rUJC6L+Z5Lik5Liq5paH5pysXG4gICAgICogLy/miafooYzlkb3ku6TvvIzmj5LlhaU8Yj5DQzwvYj5cbiAgICAgKiAvL+aPkuWFpeWQjueahOaViOaenCB4eHg8Yj5DQzwvYj54eHhcbiAgICAgKiAvLzxwPnh4fHh4eDwvcD4g5b2T5YmN6YCJ5Yy65Li66Zet5ZCI54q25oCBXG4gICAgICogLy/mj5LlhaU8cD5DQzwvcD5cbiAgICAgKiAvL+e7k+aenCA8cD54eDwvcD48cD5DQzwvcD48cD54eHg8L3A+XG4gICAgICogLy88cD54eHh4PC9wPnw8L3A+eHh4PC9wPiDlvZPliY3pgInljLrlnKjkuKTkuKpw5qCH562+5LmL6Ze0XG4gICAgICogLy/mj5LlhaUgeHh4eFxuICAgICAqIC8v57uT5p6cIDxwPnh4eHg8L3A+PHA+eHh4eDwvcD48L3A+eHh4PC9wPlxuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUuY29tbWFuZHNbJ2luc2VydGh0bWwnXSA9IHtcbiAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjb21tYW5kLCBodG1sLCBub3ROZWVkRmlsdGVyKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICAgIGRpdjtcbiAgICAgICAgICAgIGlmICghaHRtbCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtZS5maXJlRXZlbnQoJ2JlZm9yZWluc2VydGh0bWwnLCBodG1sKSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICBkaXYgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGRpdi5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSc7XG5cbiAgICAgICAgICAgIGlmICghbm90TmVlZEZpbHRlcikge1xuICAgICAgICAgICAgICAgIHZhciByb290ID0gVUUuaHRtbHBhcnNlcihodG1sKTtcbiAgICAgICAgICAgICAgICAvL+WmguaenOe7meS6hui/h+a7pOinhOWImeWwseWFiOi/m+ihjOi/h+a7pFxuICAgICAgICAgICAgICAgIGlmIChtZS5vcHRpb25zLmZpbHRlclJ1bGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIFVFLmZpbHRlck5vZGUocm9vdCwgbWUub3B0aW9ucy5maWx0ZXJSdWxlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v5omn6KGM6buY6K6k55qE5aSE55CGXG4gICAgICAgICAgICAgICAgbWUuZmlsdGVySW5wdXRSdWxlKHJvb3QpO1xuICAgICAgICAgICAgICAgIGh0bWwgPSByb290LnRvSHRtbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGl2LmlubmVySFRNTCA9IHV0aWxzLnRyaW0oaHRtbCk7XG5cbiAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNGaWxsQ2hhcih0bXBOb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdG1wTm9kZSA9IHJhbmdlLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNGaWxsQ2hhcih0bXBOb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmRBZnRlcih0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmFuZ2UudHh0VG9FbG1Cb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgIC8v57uT5p2f6L6555WM5Y+v6IO95pS+5Yiw5LqGYnLnmoTliY3ovrnvvIzopoHmiopicuWMheWQq+i/m+adpVxuICAgICAgICAgICAgICAgIC8vIHhbeHh4XTxici8+XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmVuZENvbnRhaW5lciAmJiByYW5nZS5lbmRDb250YWluZXIubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gcmFuZ2UuZW5kQ29udGFpbmVyLmNoaWxkTm9kZXNbcmFuZ2UuZW5kT2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRtcE5vZGUgJiYgZG9tVXRpbHMuaXNCcih0bXBOb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0T2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCb3VuZGFyeU5vZGUodG1wTm9kZSwgJ2ZpcnN0Q2hpbGQnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IHJhbmdlLmVuZENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5lbmRPZmZzZXQgPT1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRtcE5vZGUubm9kZVR5cGUgPT0gMyA/IHRtcE5vZGUubm9kZVZhbHVlLmxlbmd0aCA6IHRtcE5vZGUuY2hpbGROb2Rlcy5sZW5ndGgpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNCb3VuZGFyeU5vZGUodG1wTm9kZSwgJ2xhc3RDaGlsZCcpXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmlubmVySFRNTCA9ICc8cD4nICsgKGJyb3dzZXIuaWUgPyAnJyA6ICc8YnIvPicpICsgJzwvcD4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KG1lLmJvZHkuZmlyc3RDaGlsZCwgMCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgIXJhbmdlLmNvbGxhcHNlZCAmJiByYW5nZS5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICAgIGlmIChyYW5nZS5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNCbG9ja0VsbShjaGlsZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChwcmUgPSBjaGlsZC5wcmV2aW91c1NpYmxpbmcpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pc0Jsb2NrRWxtKHByZSlcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQocHJlLCBwcmUuY2hpbGROb2Rlcy5sZW5ndGgpLmNvbGxhcHNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChjaGlsZC5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBjaGlsZCxcbiAgICAgICAgICAgICAgICBwYXJlbnQsXG4gICAgICAgICAgICAgICAgcHJlLFxuICAgICAgICAgICAgICAgIHRtcCxcbiAgICAgICAgICAgICAgICBoYWRCcmVhayA9IDAsXG4gICAgICAgICAgICAgICAgbmV4dE5vZGU7XG4gICAgICAgICAgICAvL+WmguaenOW9k+WJjeS9jee9rumAieS4reS6hmZpbGxjaGFy6KaB5bmy5o6J77yM6KaB5LiN5Lya5Lqn55Sf56m66KGMXG4gICAgICAgICAgICBpZiAocmFuZ2UuaW5GaWxsQ2hhcigpKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNGaWxsQ2hhcihjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY2hpbGQpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2hpbGQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZG9tVXRpbHMuaXNGaWxsQ2hhcihjaGlsZCwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQubm9kZVZhbHVlID0gY2hpbGQubm9kZVZhbHVlLnJlcGxhY2UoZmlsbENoYXJSZWcsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnRPZmZzZXQtLTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2VkICYmIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5YiX6KGo5Y2V54us5aSE55CGXG4gICAgICAgICAgICB2YXIgbGkgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCAnbGknLCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChsaSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXh0LCBsYXN0O1xuICAgICAgICAgICAgICAgIHdoaWxlICgoY2hpbGQgPSBkaXYuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/pkojlr7locuWNleeLrOWkhOeQhuS4gOS4i+WFiFxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQgJiYgKGNoaWxkLm5vZGVUeXBlID09IDMgfHwgIWRvbVV0aWxzLmlzQmxvY2tFbG0oY2hpbGQpIHx8IGNoaWxkLnRhZ05hbWUgPT0gJ0hSJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBjaGlsZC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoY2hpbGQpLmNvbGxhcHNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZCA9IG5leHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoL14ob2x8dWwpJC9pLnRlc3QoY2hpbGQudGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2hpbGQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gY2hpbGQuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaW5zZXJ0QWZ0ZXIobGksIGNoaWxkLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaSA9IGxpLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTGk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcExpID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pbnNlcnRBZnRlcihsaSwgdG1wTGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcExpLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0ID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBuZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpID0gdG1wTGk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGkgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCAnbGknLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eUJsb2NrKGxpKSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobGkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobGFzdCkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEFmdGVyKGxhc3QpLmNvbGxhcHNlKHRydWUpLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdoaWxlICgoY2hpbGQgPSBkaXYuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhhZEJyZWFrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjaGlsZCAmJiAoY2hpbGQubm9kZVR5cGUgPT0gMyB8fCAhZHRkLiRibG9ja1tjaGlsZC50YWdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZSA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkID0gbmV4dE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocC5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZSA9IGNoaWxkLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWhhZEJyZWFrICYmIGNoaWxkLm5vZGVUeXBlID09IGRvbVV0aWxzLk5PREVfRUxFTUVOVCAmJiBkb21VdGlscy5pc0Jsb2NrRWxtKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50ID0gZG9tVXRpbHMuZmluZFBhcmVudChjaGlsZCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuaXNCbG9ja0VsbShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT0gJ2JvZHknICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIShkdGRbcGFyZW50LnRhZ05hbWVdW2NoaWxkLm5vZGVOYW1lXSAmJiBjaGlsZC5wYXJlbnROb2RlID09PSBwYXJlbnQpXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWR0ZFtwYXJlbnQudGFnTmFtZV1bY2hpbGQubm9kZU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IHBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXAgPSBjaGlsZC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodG1wICE9PSBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IHRtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IHRtcC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYnJlYWtQYXJlbnQoY2hpbGQsIHByZSB8fCB0bXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Y675o6JYnJlYWvlkI7liY3kuIDkuKrlpJrkvZnnmoToioLngrkgIDxwPnw8W3A+ID09PiA8cD48L3A+PGRpdj48L2Rpdj48cD58PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmUgPSBjaGlsZC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMudHJpbVdoaXRlVGV4dE5vZGUocHJlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXByZS5jaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUocHJlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZToyMDEyLOWcqOmdnmll55qE5oOF5Ya177yM5YiH5byA5ZCO5Ymp5LiL55qE6IqC54K55pyJ5Y+v6IO95LiN6IO954K55YWl5YWJ5qCH5re75YqgYnLljaDkvY1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIWJyb3dzZXIuaWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5leHQgPSBjaGlsZC5uZXh0U2libGluZykgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNCbG9ja0VsbShuZXh0KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Lmxhc3RDaGlsZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCcihuZXh0Lmxhc3RDaGlsZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dC5hcHBlbmRDaGlsZChtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFkQnJlYWsgPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXh0ID0gY2hpbGQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZGl2LmZpcnN0Q2hpbGQgJiYgbmV4dCAmJiBkb21VdGlscy5pc0Jsb2NrRWxtKG5leHQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChuZXh0LCAwKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEFmdGVyKGNoaWxkKS5jb2xsYXBzZSgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNoaWxkID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG5cbiAgICAgICAgICAgICAgICBpZiAobmV4dE5vZGUgJiYgZG9tVXRpbHMuaXNCcihuZXh0Tm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHROb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/nlKhjaHJvbWXlj6/og73mnInnqbrnmb3lsZXkvY3nrKZcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShjaGlsZCkgJiYgZG9tVXRpbHMuaXNFbXB0eU5vZGUoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgobmV4dE5vZGUgPSBjaGlsZC5uZXh0U2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dE5vZGUubm9kZVR5cGUgPT0gMSAmJiBkdGQuJGJsb2NrW25leHROb2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQobmV4dE5vZGUsIDApLmNvbGxhcHNlKHRydWUpLnNocmlua0JvdW5kYXJ5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLmlubmVySFRNTCA9IGJyb3dzZXIuaWUgPyBkb21VdGlscy5maWxsQ2hhciA6ICc8YnIvPic7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/liqDkuIp0cnVl5Zug5Li65Zyo5Yig6Zmk6KGo5oOF562J5pe25Lya5Yig5Lik5qyh77yM56ys5LiA5qyh5piv5Yig55qEZmlsbERhdGFcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICByYW5nZS5zY3JvbGxUb1ZpZXcobWUuYXV0b0hlaWdodEVuYWJsZWQsIG1lLmF1dG9IZWlnaHRFbmFibGVkID8gZG9tVXRpbHMuZ2V0WFkobWUuaWZyYW1lKS55IDogMCk7XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcmluc2VydGh0bWwnLCBodG1sKTtcbiAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9hdXRvdHlwZXNldC5qc1xuICAgIC8qKlxuICAgICAqIOiHquWKqOaOkueJiFxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWvueW9k+WJjee8lui+keWZqOeahOWGheWuueaJp+ihjOiHquWKqOaOkueJiO+8jCDmjpLniYjnmoTooYzkuLrmoLnmja5jb25maWfphY3nva7mlofku7bph4znmoTigJxhdXRvdHlwZXNldOKAnemAiemhuei/m+ihjOaOp+WItuOAglxuICAgICAqIEBjb21tYW5kIGF1dG90eXBlc2V0XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdhdXRvdHlwZXNldCcgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbnNbJ2F1dG90eXBlc2V0J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc2V0T3B0KHtcbiAgICAgICAgICAgIGF1dG90eXBlc2V0OiB7XG4gICAgICAgICAgICAgICAgbWVyZ2VFbXB0eWxpbmU6IHRydWUsIC8v5ZCI5bm256m66KGMXG4gICAgICAgICAgICAgICAgcmVtb3ZlQ2xhc3M6IHRydWUsIC8v5Y675o6J5YaX5L2Z55qEY2xhc3NcbiAgICAgICAgICAgICAgICByZW1vdmVFbXB0eWxpbmU6IGZhbHNlLCAvL+WOu+aOieepuuihjFxuICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ2xlZnQnLCAvL+auteiQveeahOaOkueJiOaWueW8j++8jOWPr+S7peaYryBsZWZ0LHJpZ2h0LGNlbnRlcixqdXN0aWZ5IOWOu+aOiei/meS4quWxnuaAp+ihqOekuuS4jeaJp+ihjOaOkueJiFxuICAgICAgICAgICAgICAgIGltYWdlQmxvY2tMaW5lOiAnY2VudGVyJywgLy/lm77niYfnmoTmta7liqjmlrnlvI/vvIzni6zljaDkuIDooYzliafkuK0s5bem5Y+z5rWu5Yqo77yM6buY6K6kOiBjZW50ZXIsbGVmdCxyaWdodCxub25lIOWOu+aOiei/meS4quWxnuaAp+ihqOekuuS4jeaJp+ihjOaOkueJiFxuICAgICAgICAgICAgICAgIHBhc3RlRmlsdGVyOiBmYWxzZSwgLy/moLnmja7op4TliJnov4fmu6TmsqHkuovnspjotLTov5vmnaXnmoTlhoXlrrlcbiAgICAgICAgICAgICAgICBjbGVhckZvbnRTaXplOiBmYWxzZSwgLy/ljrvmjonmiYDmnInnmoTlhoXltYzlrZflj7fvvIzkvb/nlKjnvJbovpHlmajpu5jorqTnmoTlrZflj7dcbiAgICAgICAgICAgICAgICBjbGVhckZvbnRGYW1pbHk6IGZhbHNlLCAvL+WOu+aOieaJgOacieeahOWGheW1jOWtl+S9k++8jOS9v+eUqOe8lui+keWZqOm7mOiupOeahOWtl+S9k1xuICAgICAgICAgICAgICAgIHJlbW92ZUVtcHR5Tm9kZTogZmFsc2UsIC8vIOWOu+aOieepuuiKgueCuVxuICAgICAgICAgICAgICAgIC8v5Y+v5Lul5Y675o6J55qE5qCH562+XG4gICAgICAgICAgICAgICAgcmVtb3ZlVGFnTmFtZXM6IHV0aWxzLmV4dGVuZCh7IGRpdjogMSB9LCBkdGQuJHJlbW92ZUVtcHR5KSxcbiAgICAgICAgICAgICAgICBpbmRlbnQ6IGZhbHNlLCAvLyDooYzpppbnvKnov5tcbiAgICAgICAgICAgICAgICBpbmRlbnRWYWx1ZTogJzJlbScsIC8v6KGM6aaW57yp6L+b55qE5aSn5bCPXG4gICAgICAgICAgICAgICAgYmRjMnNiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB0b2JkYzogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIG9wdCA9IG1lLm9wdGlvbnMuYXV0b3R5cGVzZXQsXG4gICAgICAgICAgICByZW1haW5DbGFzcyA9IHtcbiAgICAgICAgICAgICAgICBzZWxlY3RUZENsYXNzOiAxLFxuICAgICAgICAgICAgICAgIHBhZ2VicmVhazogMSxcbiAgICAgICAgICAgICAgICBhbmNob3JjbGFzczogMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbWFpblRhZyA9IHtcbiAgICAgICAgICAgICAgICBsaTogMVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRhZ3MgPSB7XG4gICAgICAgICAgICAgICAgZGl2OiAxLFxuICAgICAgICAgICAgICAgIHA6IDEsXG4gICAgICAgICAgICAgICAgLy90cmFjZToyMTgzIOi/meS6m+S5n+iupOS4uuaYr+ihjFxuICAgICAgICAgICAgICAgIGJsb2NrcXVvdGU6IDEsXG4gICAgICAgICAgICAgICAgY2VudGVyOiAxLFxuICAgICAgICAgICAgICAgIGgxOiAxLFxuICAgICAgICAgICAgICAgIGgyOiAxLFxuICAgICAgICAgICAgICAgIGgzOiAxLFxuICAgICAgICAgICAgICAgIGg0OiAxLFxuICAgICAgICAgICAgICAgIGg1OiAxLFxuICAgICAgICAgICAgICAgIGg2OiAxLFxuICAgICAgICAgICAgICAgIHNwYW46IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWdobGlnaHRDb250O1xuICAgICAgICAvL+WNh+e6p+S6hueJiOacrO+8jOS9humFjee9rumhueebrumHjOayoeaciWF1dG90eXBlc2V0XG4gICAgICAgIGlmICghb3B0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZWFkTG9jYWxPcHRzKCk7XG5cbiAgICAgICAgZnVuY3Rpb24gaXNMaW5lKG5vZGUsIG5vdEVtcHR5KSB7XG4gICAgICAgICAgICBpZiAoIW5vZGUgfHwgbm9kZS5ub2RlVHlwZSA9PSAzKSByZXR1cm4gMDtcbiAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0JyKG5vZGUpKSByZXR1cm4gMTtcbiAgICAgICAgICAgIGlmIChub2RlICYmIG5vZGUucGFyZW50Tm9kZSAmJiB0YWdzW25vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpXSkge1xuICAgICAgICAgICAgICAgIGlmICgoaGlnaGxpZ2h0Q29udCAmJiBoaWdobGlnaHRDb250LmNvbnRhaW5zKG5vZGUpKSB8fCBub2RlLmdldEF0dHJpYnV0ZSgncGFnZWJyZWFrJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vdEVtcHR5XG4gICAgICAgICAgICAgICAgICAgID8gIWRvbVV0aWxzLmlzRW1wdHlCbG9jayhub2RlKVxuICAgICAgICAgICAgICAgICAgICA6IGRvbVV0aWxzLmlzRW1wdHlCbG9jayhub2RlLCBuZXcgUmVnRXhwKCdbXFxcXHMnICsgZG9tVXRpbHMuZmlsbENoYXIgKyAnXScsICdnJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlTm90QXR0cmlidXRlU3Bhbihub2RlKSB7XG4gICAgICAgICAgICBpZiAoIW5vZGUuc3R5bGUuY3NzVGV4dCkge1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMobm9kZSwgWydzdHlsZSddKTtcbiAgICAgICAgICAgICAgICBpZiAobm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ3NwYW4nICYmIGRvbVV0aWxzLmhhc05vQXR0cmlidXRlcyhub2RlKSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobm9kZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGF1dG90eXBlKHR5cGUsIGh0bWwpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgY29udDtcbiAgICAgICAgICAgIGlmIChodG1sKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFvcHQucGFzdGVGaWx0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb250ID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgY29udC5pbm5lckhUTUwgPSBodG1sLmh0bWw7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnQgPSBtZS5kb2N1bWVudC5ib2R5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIG5vZGVzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoY29udCwgJyonKTtcblxuICAgICAgICAgICAgLy8g6KGM6aaW57yp6L+b77yM5q616JC95pa55ZCR77yM5q616Ze06Led77yM5q615YaF6Ze06LedXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IG5vZGVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCdleGNsdWRlTm9kZWluYXV0b3R5cGUnLCBjaSkgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vZm9udC1zaXplXG4gICAgICAgICAgICAgICAgaWYgKG9wdC5jbGVhckZvbnRTaXplICYmIGNpLnN0eWxlLmZvbnRTaXplKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZVN0eWxlKGNpLCAnZm9udC1zaXplJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlTm90QXR0cmlidXRlU3BhbihjaSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vZm9udC1mYW1pbHlcbiAgICAgICAgICAgICAgICBpZiAob3B0LmNsZWFyRm9udEZhbWlseSAmJiBjaS5zdHlsZS5mb250RmFtaWx5KSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZVN0eWxlKGNpLCAnZm9udC1mYW1pbHknKTtcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlTm90QXR0cmlidXRlU3BhbihjaSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGlzTGluZShjaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/lkIjlubbnqbrooYxcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdC5tZXJnZUVtcHR5bGluZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5leHQgPSBjaS5uZXh0U2libGluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQnIgPSBkb21VdGlscy5pc0JyKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChpc0xpbmUobmV4dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gbmV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ID0gdG1wTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNCciAmJiAoIW5leHQgfHwgKG5leHQgJiYgIWRvbVV0aWxzLmlzQnIobmV4dCkpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8v5Y675o6J56m66KGM77yM5L+d55WZ5Y2g5L2N55qE56m66KGMXG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdC5yZW1vdmVFbXB0eWxpbmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmluRG9jKGNpLCBjb250KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIXJlbWFpblRhZ1tjaS5wYXJlbnROb2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKV1cbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCcihjaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ID0gY2kubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQgJiYgIWRvbVV0aWxzLmlzQnIobmV4dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc0xpbmUoY2ksIHRydWUpICYmIGNpLnRhZ05hbWUgIT0gJ1NQQU4nKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHQuaW5kZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaS5zdHlsZS50ZXh0SW5kZW50ID0gb3B0LmluZGVudFZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHQudGV4dEFsaWduKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaS5zdHlsZS50ZXh0QWxpZ24gPSBvcHQudGV4dEFsaWduO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmKG9wdC5saW5lSGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY2kuc3R5bGUubGluZUhlaWdodCA9IG9wdC5saW5lSGVpZ2h0ICsgJ2NtJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+WOu+aOiWNsYXNzLOS/neeVmeeahGNsYXNz5LiN5Y675o6JXG4gICAgICAgICAgICAgICAgaWYgKG9wdC5yZW1vdmVDbGFzcyAmJiBjaS5jbGFzc05hbWUgJiYgIXJlbWFpbkNsYXNzW2NpLmNsYXNzTmFtZS50b0xvd2VyQ2FzZSgpXSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGlnaGxpZ2h0Q29udCAmJiBoaWdobGlnaHRDb250LmNvbnRhaW5zKGNpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhjaSwgWydjbGFzcyddKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+ihqOaDheS4jeWkhOeQhlxuICAgICAgICAgICAgICAgIGlmIChvcHQuaW1hZ2VCbG9ja0xpbmUgJiYgY2kudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09ICdpbWcnICYmICFjaS5nZXRBdHRyaWJ1dGUoJ2Vtb3Rpb24nKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaHRtbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGltZyA9IGNpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChvcHQuaW1hZ2VCbG9ja0xpbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdsZWZ0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwTiA9IGltZy5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChkdGQuJGlubGluZVtwTi50YWdOYW1lXSB8fCBwTi50YWdOYW1lID09ICdBJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE4gPSBwTi5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBwTjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRtcE5vZGUudGFnTmFtZSA9PSAnUCcgJiYgZG9tVXRpbHMuZ2V0U3R5bGUodG1wTm9kZSwgJ3RleHQtYWxpZ24nKSA9PSAnY2VudGVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFkb21VdGlscy5pc0JvZHkodG1wTm9kZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRDaGlsZENvdW50KHRtcE5vZGUsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZG9tVXRpbHMuaXNCcihub2RlKSAmJiAhZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pID09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IHRtcE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSB0bXBOb2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLm5vZGVUeXBlID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dC5ub2RlVHlwZSA9PSAxICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS50YWdOYW1lID09IG5leHQudGFnTmFtZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pc0Jsb2NrRWxtKHByZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmFwcGVuZENoaWxkKHRtcE5vZGUuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChuZXh0LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChuZXh0LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldFN0eWxlKHRtcE5vZGUsICd0ZXh0LWFsaWduJywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZShpbWcsICdmbG9hdCcsIG9wdC5pbWFnZUJsb2NrTGluZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2NlbnRlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5xdWVyeUNvbW1hbmRWYWx1ZSgnaW1hZ2VmbG9hdCcpICE9ICdjZW50ZXInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiA9IGltZy5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0U3R5bGUoaW1nLCAnZmxvYXQnLCAnbm9uZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IGltZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldENoaWxkQ291bnQocE4sIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZG9tVXRpbHMuaXNCcihub2RlKSAmJiAhZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZHRkLiRpbmxpbmVbcE4udGFnTmFtZV0gfHwgcE4udGFnTmFtZSA9PSAnQScpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gcE47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE4gPSBwTi5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBOb2RlID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhwTm9kZSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjpjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocE5vZGUsIHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE5vZGUuYXBwZW5kQ2hpbGQodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZSh0bXBOb2RlLCAnZmxvYXQnLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZShjaSkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW1hZ2VmbG9hdCcsIG9wdC5pbWFnZUJsb2NrTGluZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+WOu+aOieWGl+S9meeahOagh+etvlxuICAgICAgICAgICAgICAgIGlmIChvcHQucmVtb3ZlRW1wdHlOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdC5yZW1vdmVUYWdOYW1lc1tjaS50YWdOYW1lLnRvTG93ZXJDYXNlKCldICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5oYXNOb0F0dHJpYnV0ZXMoY2kpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pc0VtcHR5QmxvY2soY2kpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvcHQudG9iZGMpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm9vdCA9IFVFLmh0bWxwYXJzZXIoY29udC5pbm5lckhUTUwpO1xuICAgICAgICAgICAgICAgIHJvb3QudHJhdmVyc2FsKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT0gJ3RleHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLmRhdGEgPSBUb0RCQyhub2RlLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29udC5pbm5lckhUTUwgPSByb290LnRvSHRtbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wdC5iZGMyc2IpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm9vdCA9IFVFLmh0bWxwYXJzZXIoY29udC5pbm5lckhUTUwpO1xuICAgICAgICAgICAgICAgIHJvb3QudHJhdmVyc2FsKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT0gJ3RleHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLmRhdGEgPSBEQkMyU0Iobm9kZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnQuaW5uZXJIVE1MID0gcm9vdC50b0h0bWwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChodG1sKSB7XG4gICAgICAgICAgICAgICAgaHRtbC5odG1sID0gY29udC5pbm5lckhUTUw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdC5wYXN0ZUZpbHRlcikge1xuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2JlZm9yZXBhc3RlJywgYXV0b3R5cGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gREJDMlNCKHN0cikge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgY29kZSA9IHN0ci5jaGFyQ29kZUF0KGkpOyAvL+iOt+WPluW9k+WJjeWtl+espueahHVuaWNvZGXnvJbnoIFcbiAgICAgICAgICAgICAgICBpZiAoY29kZSA+PSA2NTI4MSAmJiBjb2RlIDw9IDY1MzczKSB7XG4gICAgICAgICAgICAgICAgICAgIC8v5Zyo6L+Z5LiqdW5pY29kZee8lueggeiMg+WbtOS4reeahOaYr+aJgOacieeahOiLseaWh+Wtl+avjeW3sue7j+WQhOenjeWtl+esplxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShzdHIuY2hhckNvZGVBdChpKSAtIDY1MjQ4KTsgLy/miorlhajop5LlrZfnrKbnmoR1bmljb2Rl57yW56CB6L2s5o2i5Li65a+55bqU5Y2K6KeS5a2X56ym55qEdW5pY29kZeeggVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29kZSA9PSAxMjI4OCkge1xuICAgICAgICAgICAgICAgICAgICAvL+epuuagvFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShzdHIuY2hhckNvZGVBdChpKSAtIDEyMjg4ICsgMzIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCArPSBzdHIuY2hhckF0KGkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gVG9EQkModHh0c3RyaW5nKSB7XG4gICAgICAgICAgICB0eHRzdHJpbmcgPSB1dGlscy5odG1sKHR4dHN0cmluZyk7XG4gICAgICAgICAgICB2YXIgdG1wID0gJyc7XG4gICAgICAgICAgICB2YXIgbWFyayA9ICcnOyAvKueUqOS6juWIpOaWrSzlpoLmnpzmmK9odG1s5bCW5ous6YeM55qE5qCH6K6wLOWImeS4jei/m+ihjOWFqOinkueahOi9rOaNoiovXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR4dHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmICh0eHRzdHJpbmcuY2hhckNvZGVBdChpKSA9PSAzMikge1xuICAgICAgICAgICAgICAgICAgICB0bXAgPSB0bXAgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKDEyMjg4KTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR4dHN0cmluZy5jaGFyQ29kZUF0KGkpIDwgMTI3KSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcCA9IHRtcCArIFN0cmluZy5mcm9tQ2hhckNvZGUodHh0c3RyaW5nLmNoYXJDb2RlQXQoaSkgKyA2NTI0OCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wICs9IHR4dHN0cmluZy5jaGFyQXQoaSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRtcDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHJlYWRMb2NhbE9wdHMoKSB7XG4gICAgICAgICAgICB2YXIgY29va2llT3B0ID0gbWUuZ2V0UHJlZmVyZW5jZXMoJ2F1dG90eXBlc2V0Jyk7XG4gICAgICAgICAgICB1dGlscy5leHRlbmQobWUub3B0aW9ucy5hdXRvdHlwZXNldCwgY29va2llT3B0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIG1lLmNvbW1hbmRzWydhdXRvdHlwZXNldCddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBtZS5yZW1vdmVMaXN0ZW5lcignYmVmb3JlcGFzdGUnLCBhdXRvdHlwZSk7XG4gICAgICAgICAgICAgICAgaWYgKG9wdC5wYXN0ZUZpbHRlcikge1xuICAgICAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignYmVmb3JlcGFzdGUnLCBhdXRvdHlwZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGF1dG90eXBlLmNhbGwobWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2F1dG9zdWJtaXQuanNcbiAgICAvKipcbiAgICAgKiDlv6vmjbfplK7mj5DkuqRcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmj5DkuqTooajljZVcbiAgICAgKiBAY29tbWFuZCBhdXRvc3VibWl0XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdhdXRvc3VibWl0JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luLnJlZ2lzdGVyKCdhdXRvc3VibWl0JywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2hvcnRjdXRrZXk6IHtcbiAgICAgICAgICAgICAgICBhdXRvc3VibWl0OiAnY3RybCsxMycgLy/miYvliqjmj5DkuqRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb21tYW5kczoge1xuICAgICAgICAgICAgICAgIGF1dG9zdWJtaXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUobWUuaWZyYW1lLCAnZm9ybScsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3JtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmZpcmVFdmVudCgnYmVmb3Jlc3VibWl0JykgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc3luYygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm0uc3VibWl0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL2JhY2tncm91bmQuanNcbiAgICAvKipcbiAgICAgKiDog4zmma/mj5Lku7bvvIzkuLpVRWRpdG9y5o+Q5L6b6K6+572u6IOM5pmv5Yqf6IO9XG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuICAgIFVFLnBsdWdpbi5yZWdpc3RlcignYmFja2dyb3VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIGNzc1J1bGVJZCA9ICdlZGl0b3JfYmFja2dyb3VuZCcsXG4gICAgICAgICAgICBpc1NldENvbG9yZWQsXG4gICAgICAgICAgICByZWcgPSBuZXcgUmVnRXhwKCdib2R5W1xcXFxzXSpcXFxceyguKylcXFxcfScsICdpJyk7XG5cbiAgICAgICAgZnVuY3Rpb24gc3RyaW5nVG9PYmooc3RyKSB7XG4gICAgICAgICAgICB2YXIgb2JqID0ge30sXG4gICAgICAgICAgICAgICAgc3R5bGVzID0gc3RyLnNwbGl0KCc7Jyk7XG4gICAgICAgICAgICB1dGlscy5lYWNoKHN0eWxlcywgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSB2LmluZGV4T2YoJzonKSxcbiAgICAgICAgICAgICAgICAgICAga2V5ID0gdXRpbHMudHJpbSh2LnN1YnN0cigwLCBpbmRleCkpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAga2V5ICYmIChvYmpba2V5XSA9IHV0aWxzLnRyaW0odi5zdWJzdHIoaW5kZXggKyAxKSB8fCAnJykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0QmFja2dyb3VuZChvYmopIHtcbiAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgICB2YXIgc3R5bGVzID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgbmFtZSBpbiBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVzLnB1c2gobmFtZSArICc6JyArIG9ialtuYW1lXSArICc7ICcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoY3NzUnVsZUlkLCBzdHlsZXMubGVuZ3RoID8gJ2JvZHl7JyArIHN0eWxlcy5qb2luKCcnKSArICd9JyA6ICcnLCBtZS5kb2N1bWVudCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoY3NzUnVsZUlkLCAnJywgbWUuZG9jdW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8v6YeN5YaZZWRpdG9yLmhhc0NvbnRlbnTmlrnms5VcblxuICAgICAgICB2YXIgb3JnRm4gPSBtZS5oYXNDb250ZW50cztcbiAgICAgICAgbWUuaGFzQ29udGVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobWUucXVlcnlDb21tYW5kVmFsdWUoJ2JhY2tncm91bmQnKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG9yZ0ZuLmFwcGx5KG1lLCBhcmd1bWVudHMpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYmluZEV2ZW50czoge1xuICAgICAgICAgICAgICAgIGdldEFsbEh0bWw6IGZ1bmN0aW9uICh0eXBlLCBoZWFkSHRtbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYm9keSA9IHRoaXMuYm9keSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1ID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShib2R5LCAnYmFja2dyb3VuZC1pbWFnZScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdS5pbmRleE9mKG1lLm9wdGlvbnMuaW1hZ2VQYXRoKSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9IHN1LnN1YnN0cmluZyhzdS5pbmRleE9mKG1lLm9wdGlvbnMuaW1hZ2VQYXRoKSwgc3UubGVuZ3RoIC0gMSkucmVwbGFjZSgvXCJ8XFwofFxcKS9naSwgJycpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gc3UgIT0gJ25vbmUnID8gc3UucmVwbGFjZSgvdXJsXFwoXCI/fFwiP1xcKS9naSwgJycpIDogJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSAnPHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPmJvZHl7JztcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJnT2JqID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGJvZHksICdiYWNrZ3JvdW5kLWNvbG9yJykgfHwgJyNmZmZmZmYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2JhY2tncm91bmQtaW1hZ2UnOiB1cmwgPyAndXJsKCcgKyB1cmwgKyAnKScgOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdiYWNrZ3JvdW5kLXJlcGVhdCc6IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUoYm9keSwgJ2JhY2tncm91bmQtcmVwZWF0JykgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAnYmFja2dyb3VuZC1wb3NpdGlvbic6IGJyb3dzZXIuaWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUoYm9keSwgJ2JhY2tncm91bmQtcG9zaXRpb24teCcpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGJvZHksICdiYWNrZ3JvdW5kLXBvc2l0aW9uLXknKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShib2R5LCAnYmFja2dyb3VuZC1wb3NpdGlvbicpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGJvZHksICdoZWlnaHQnKVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBuYW1lIGluIGJnT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmdPYmouaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sICs9IG5hbWUgKyAnOicgKyBiZ09ialtuYW1lXSArICc7ICc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnfTwvc3R5bGU+ICc7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRIdG1sLnB1c2goaHRtbCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhZnRlcnNldGNvbnRlbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU2V0Q29sb3JlZCA9PSBmYWxzZSkgc2V0QmFja2dyb3VuZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgaXNTZXRDb2xvcmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdwJyksIGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdHlsZXMgPSBwLmdldEF0dHIoJ2RhdGEtYmFja2dyb3VuZCcpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3R5bGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NldENvbG9yZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0QmFja2dyb3VuZChzdHJpbmdUb09iaihzdHlsZXMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG91dHB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVzID0gKHV0aWxzLmNzc1J1bGUoY3NzUnVsZUlkLCBtZS5kb2N1bWVudCkgfHwgJycpLnJlcGxhY2UoL1tcXG5cXHJdKy9nLCAnJykubWF0Y2gocmVnKTtcbiAgICAgICAgICAgICAgICBpZiAoc3R5bGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJvb3QuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICAgICAgICAgICAgICBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cCBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIiBkYXRhLWJhY2tncm91bmQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMudHJpbShzdHlsZXNbMV0ucmVwbGFjZSgvXCIvZywgJycpLnJlcGxhY2UoL1tcXHNdKy9nLCAnICcpKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIj48YnIvPjwvcD4nXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDoge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgb2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRCYWNrZ3JvdW5kKG9iaik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcyA9ICh1dGlscy5jc3NSdWxlKGNzc1J1bGVJZCwgbWUuZG9jdW1lbnQpIHx8ICcnKS5yZXBsYWNlKC9bXFxuXFxyXSsvZywgJycpLm1hdGNoKHJlZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGVzID8gc3RyaW5nVG9PYmooc3R5bGVzWzFdKSA6IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG5vdE5lZWRVbmRvOiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gcGx1Z2lucy9pbWFnZS5qc1xuICAgIC8qKlxuICAgICAqIOWbvueJh+aPkuWFpeOAgeaOkueJiOaPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWbvueJh+Wvuem9kOaWueW8j1xuICAgICAqIEBjb21tYW5kIGltYWdlZmxvYXRcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHJlbWluZCDlgLxjZW50ZXLkuLrni6zljaDkuIDooYzlsYXkuK1cbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gYWxpZ24g5a+56b2Q5pa55byP77yM5Y+v5LygbGVmdOOAgXJpZ2h044CBbm9uZeOAgWNlbnRlclxuICAgICAqIEByZW1haW5kIGNlbnRlcuihqOekuuWbvueJh+eLrOWNoOS4gOihjFxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2ltYWdlZmxvYXQnLCAnY2VudGVyJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5aaC5p6c6YCJ5Yy65omA5Zyo5L2N572u5piv5Zu+54mH5Yy65Z+fXG4gICAgICogQGNvbW1hbmQgaW1hZ2VmbG9hdFxuICAgICAqIEBtZXRob2QgcXVlcnlDb21tYW5kVmFsdWVcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnuWbvueJh+Wvuem9kOaWueW8j1xuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSggJ2ltYWdlZmxvYXQnICk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICBVRS5jb21tYW5kc1snaW1hZ2VmbG9hdCddID0ge1xuICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgYWxpZ24pIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGltZyA9IHJhbmdlLmdldENsb3NlZE5vZGUoKTtcbiAgICAgICAgICAgICAgICBpZiAoaW1nICYmIGltZy50YWdOYW1lID09ICdJTUcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoYWxpZ24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAncmlnaHQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBOID0gaW1nLnBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoZHRkLiRpbmxpbmVbcE4udGFnTmFtZV0gfHwgcE4udGFnTmFtZSA9PSAnQScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE4gPSBwTi5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gcE47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRtcE5vZGUudGFnTmFtZSA9PSAnUCcgJiYgZG9tVXRpbHMuZ2V0U3R5bGUodG1wTm9kZSwgJ3RleHQtYWxpZ24nKSA9PSAnY2VudGVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCb2R5KHRtcE5vZGUpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRDaGlsZENvdW50KHRtcE5vZGUsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFkb21VdGlscy5pc0JyKG5vZGUpICYmICFkb21VdGlscy5pc1doaXRlc3BhY2Uobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSA9PSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gdG1wTm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ID0gdG1wTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLm5vZGVUeXBlID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Lm5vZGVUeXBlID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUudGFnTmFtZSA9PSBuZXh0LnRhZ05hbWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pc0Jsb2NrRWxtKHByZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZCh0bXBOb2RlLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChuZXh0LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmFwcGVuZENoaWxkKG5leHQuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobmV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldFN0eWxlKHRtcE5vZGUsICd0ZXh0LWFsaWduJywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZShpbWcpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZShpbWcsICdmbG9hdCcsIGFsaWduID09ICdub25lJyA/ICcnIDogYWxpZ24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbGlnbiA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhpbWcsICdhbGlnbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY2VudGVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUucXVlcnlDb21tYW5kVmFsdWUoJ2ltYWdlZmxvYXQnKSAhPSAnY2VudGVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiA9IGltZy5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZShpbWcsICdmbG9hdCcsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhpbWcsICdhbGlnbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gaW1nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0Q2hpbGRDb3VudChwTiwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWRvbVV0aWxzLmlzQnIobm9kZSkgJiYgIWRvbVV0aWxzLmlzV2hpdGVzcGFjZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChkdGQuJGlubGluZVtwTi50YWdOYW1lXSB8fCBwTi50YWdOYW1lID09ICdBJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gcE47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiA9IHBOLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wTm9kZSkuc2V0Q3Vyc29yKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE4gPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcE4uYXBwZW5kQ2hpbGQodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldFN0eWxlKHRtcE5vZGUsICdmbG9hdCcsICcnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbnNlcnRIdG1sJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cCBpZD1cIl9pbWdfcGFyZW50X3RtcFwiIHN0eWxlPVwidGV4dC1hbGlnbjpjZW50ZXJcIj4nICsgcE4uaW5uZXJIVE1MICsgJzwvcD4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IG1lLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdfaW1nX3BhcmVudF90bXAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZS5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSB0bXBOb2RlLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGUodG1wTm9kZSkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Y675o6J5ZCO6L655aSa5L2Z55qE5YWD57SgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSB0bXBOb2RlLnBhcmVudE5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0ICYmIGRvbVV0aWxzLmlzRW1wdHlOb2RlKG5leHQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobmV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnlDb21tYW5kVmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgc3RhcnROb2RlLFxuICAgICAgICAgICAgICAgIGZsb2F0U3R5bGU7XG4gICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN0YXJ0Tm9kZSA9IHJhbmdlLmdldENsb3NlZE5vZGUoKTtcbiAgICAgICAgICAgIGlmIChzdGFydE5vZGUgJiYgc3RhcnROb2RlLm5vZGVUeXBlID09IDEgJiYgc3RhcnROb2RlLnRhZ05hbWUgPT0gJ0lNRycpIHtcbiAgICAgICAgICAgICAgICBmbG9hdFN0eWxlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShzdGFydE5vZGUsICdmbG9hdCcpIHx8IHN0YXJ0Tm9kZS5nZXRBdHRyaWJ1dGUoJ2FsaWduJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoZmxvYXRTdHlsZSA9PSAnbm9uZScpIHtcbiAgICAgICAgICAgICAgICAgICAgZmxvYXRTdHlsZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHN0YXJ0Tm9kZS5wYXJlbnROb2RlLCAndGV4dC1hbGlnbicpID09ICdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogZmxvYXRTdHlsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMSxcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDEsXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogMVxuICAgICAgICAgICAgICAgIH1bZmxvYXRTdHlsZV1cbiAgICAgICAgICAgICAgICAgICAgPyBmbG9hdFN0eWxlXG4gICAgICAgICAgICAgICAgICAgIDogJ25vbmUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgc3RhcnROb2RlO1xuXG4gICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSByZXR1cm4gLTE7XG5cbiAgICAgICAgICAgIHN0YXJ0Tm9kZSA9IHJhbmdlLmdldENsb3NlZE5vZGUoKTtcbiAgICAgICAgICAgIGlmIChzdGFydE5vZGUgJiYgc3RhcnROb2RlLm5vZGVUeXBlID09IDEgJiYgc3RhcnROb2RlLnRhZ05hbWUgPT0gJ0lNRycpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiDmj5LlhaXlm77niYdcbiAgICAgKiBAY29tbWFuZCBpbnNlcnRpbWFnZVxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQHBhcmFtIHsgT2JqZWN0IH0gb3B0IOWxnuaAp+mUruWAvOWvue+8jOi/meS6m+WxnuaAp+mDveWwhuiiq+WkjeWItuWIsOW9k+WJjeaPkuWFpeWbvueJh1xuICAgICAqIEByZW1pbmQg6K+l5ZG95Luk56ys5LqM5Liq5Y+C5pWw5Y+v5o6l5Y+X5LiA5Liq5Zu+54mH6YWN572u6aG55a+56LGh55qE5pWw57uE77yM5Y+v5Lul5o+S5YWl5aSa5byg5Zu+54mH77yMXG4gICAgICog5q2k5pe25pWw57uE55qE5q+P5LiA5Liq5YWD57Sg6YO95piv5LiA5LiqT2JqZWN057G75Z6L55qE5Zu+54mH5bGe5oCn6ZuG5ZCI44CCXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnaW5zZXJ0aW1hZ2UnLCB7XG4gICAgICogICAgIHNyYzonYS9iL2MuanBnJyxcbiAgICAgKiAgICAgd2lkdGg6JzEwMCcsXG4gICAgICogICAgIGhlaWdodDonMTAwJ1xuICAgICAqIH0gKTtcbiAgICAgKiBgYGBcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdpbnNlcnRpbWFnZScsIFt7XG4gICAgICogICAgIHNyYzonYS9iL2MuanBnJyxcbiAgICAgKiAgICAgd2lkdGg6JzEwMCcsXG4gICAgICogICAgIGhlaWdodDonMTAwJ1xuICAgICAqIH0se1xuICAgICAqICAgICBzcmM6J2EvYi9kLmpwZycsXG4gICAgICogICAgIHdpZHRoOicxMDAnLFxuICAgICAqICAgICBoZWlnaHQ6JzEwMCdcbiAgICAgKiB9XSApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUuY29tbWFuZHNbJ2luc2VydGltYWdlJ10gPSB7XG4gICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBvcHQpIHtcbiAgICAgICAgICAgIG9wdCA9IHV0aWxzLmlzQXJyYXkob3B0KSA/IG9wdCA6IFtvcHRdO1xuICAgICAgICAgICAgaWYgKCFvcHQubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgIGltZyA9IHJhbmdlLmdldENsb3NlZE5vZGUoKTtcblxuICAgICAgICAgICAgaWYgKG1lLmZpcmVFdmVudCgnYmVmb3JlaW5zZXJ0aW1hZ2UnLCBvcHQpID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiB1bmh0bWxEYXRhKGltZ0NpKSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaCgnd2lkdGgsaGVpZ2h0LGJvcmRlcixoc3BhY2UsdnNwYWNlJy5zcGxpdCgnLCcpLCBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW1nQ2lbaXRlbV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZ0NpW2l0ZW1dID0gcGFyc2VJbnQoaW1nQ2lbaXRlbV0sIDEwKSB8fCAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKCdzcmMsX3NyYycuc3BsaXQoJywnKSwgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGltZ0NpW2l0ZW1dKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWdDaVtpdGVtXSA9IHV0aWxzLnVuaHRtbEZvclVybChpbWdDaVtpdGVtXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKCd0aXRsZSxhbHQnLnNwbGl0KCcsJyksIGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbWdDaVtpdGVtXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1nQ2lbaXRlbV0gPSB1dGlscy51bmh0bWwoaW1nQ2lbaXRlbV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBpbWcgJiZcbiAgICAgICAgICAgICAgICAvaW1nL2kudGVzdChpbWcudGFnTmFtZSkgJiZcbiAgICAgICAgICAgICAgICAoaW1nLmNsYXNzTmFtZSAhPSAnZWR1aS1mYWtlZC12aWRlbycgfHwgaW1nLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLXVwbG9hZC12aWRlbycpICE9IC0xKSAmJlxuICAgICAgICAgICAgICAgICFpbWcuZ2V0QXR0cmlidXRlKCd3b3JkX2ltZycpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSBvcHQuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB2YXIgZmxvYXRTdHlsZSA9IGZpcnN0WydmbG9hdFN0eWxlJ107XG4gICAgICAgICAgICAgICAgZGVsZXRlIGZpcnN0WydmbG9hdFN0eWxlJ107XG4gICAgICAgICAgICAgICAgLy8vLyAgICAgICAgICAgICAgICBpbWcuc3R5bGUuYm9yZGVyID0gKGZpcnN0LmJvcmRlcnx8MCkgK1wicHggc29saWQgIzAwMFwiO1xuICAgICAgICAgICAgICAgIC8vLy8gICAgICAgICAgICAgICAgaW1nLnN0eWxlLm1hcmdpbiA9IChmaXJzdC5tYXJnaW58fDApICtcInB4XCI7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgaW1nLnN0eWxlLmNzc1RleHQgKz0gJzttYXJnaW46JyArIChmaXJzdC5tYXJnaW58fDApICtcInB4O1wiICsgJ2JvcmRlcjonICsgKGZpcnN0LmJvcmRlcnx8MCkgK1wicHggc29saWQgIzAwMFwiO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMoaW1nLCBmaXJzdCk7XG4gICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ2ltYWdlZmxvYXQnLCBmbG9hdFN0eWxlKTtcbiAgICAgICAgICAgICAgICBpZiAob3B0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcihpbWcpLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRpbWFnZScsIG9wdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IFtdLFxuICAgICAgICAgICAgICAgICAgICBzdHIgPSAnJyxcbiAgICAgICAgICAgICAgICAgICAgY2k7XG4gICAgICAgICAgICAgICAgY2kgPSBvcHRbMF07XG4gICAgICAgICAgICAgICAgaWYgKG9wdC5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICB1bmh0bWxEYXRhKGNpKTtcblxuICAgICAgICAgICAgICAgICAgICBzdHIgPVxuICAgICAgICAgICAgICAgICAgICAgICAgJzxpbWcgc3JjPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICBjaS5zcmMgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ1wiICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGNpLl9zcmMgPyAnIF9zcmM9XCInICsgY2kuX3NyYyArICdcIiAnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjaS53aWR0aCA/ICd3aWR0aD1cIicgKyBjaS53aWR0aCArICdcIiAnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjaS5oZWlnaHQgPyAnIGhlaWdodD1cIicgKyBjaS5oZWlnaHQgKyAnXCIgJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoY2lbJ2Zsb2F0U3R5bGUnXSA9PSAnbGVmdCcgfHwgY2lbJ2Zsb2F0U3R5bGUnXSA9PSAncmlnaHQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnIHN0eWxlPVwiZmxvYXQ6JyArIGNpWydmbG9hdFN0eWxlJ10gKyAnO1wiJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjaS50aXRsZSAmJiBjaS50aXRsZSAhPSAnJyA/ICcgdGl0bGU9XCInICsgY2kudGl0bGUgKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjaS5ib3JkZXIgJiYgY2kuYm9yZGVyICE9ICcwJyA/ICcgYm9yZGVyPVwiJyArIGNpLmJvcmRlciArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKGNpLmFsdCAmJiBjaS5hbHQgIT0gJycgPyAnIGFsdD1cIicgKyBjaS5hbHQgKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjaS5oc3BhY2UgJiYgY2kuaHNwYWNlICE9ICcwJyA/ICcgaHNwYWNlID0gXCInICsgY2kuaHNwYWNlICsgJ1wiJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoY2kudnNwYWNlICYmIGNpLnZzcGFjZSAhPSAnMCcgPyAnIHZzcGFjZSA9IFwiJyArIGNpLnZzcGFjZSArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJy8+JztcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpWydmbG9hdFN0eWxlJ10gPT0gJ2NlbnRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9ICc8cCBzdHlsZT1cInRleHQtYWxpZ246IGNlbnRlclwiPicgKyBzdHIgKyAnPC9wPic7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaHRtbC5wdXNoKHN0cik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IChjaSA9IG9wdFtpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1bmh0bWxEYXRhKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxwICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaVsnZmxvYXRTdHlsZSddID09ICdjZW50ZXInID8gJ3N0eWxlPVwidGV4dC1hbGlnbjogY2VudGVyXCIgJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJz48aW1nIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpLnNyYyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaS53aWR0aCA/ICd3aWR0aD1cIicgKyBjaS53aWR0aCArICdcIiAnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2kuX3NyYyA/ICcgX3NyYz1cIicgKyBjaS5fc3JjICsgJ1wiICcgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaS5oZWlnaHQgPyAnIGhlaWdodD1cIicgKyBjaS5oZWlnaHQgKyAnXCIgJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyBzdHlsZT1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaVsnZmxvYXRTdHlsZSddICYmIGNpWydmbG9hdFN0eWxlJ10gIT0gJ2NlbnRlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnZmxvYXQ6JyArIGNpWydmbG9hdFN0eWxlJ10gKyAnOydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaS5ib3JkZXIgfHwgJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCIgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNpLnRpdGxlID8gJyB0aXRsZT1cIicgKyBjaS50aXRsZSArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgLz48L3A+JztcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwucHVzaChzdHIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ2luc2VydEh0bWwnLCBodG1sLmpvaW4oJycpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcmluc2VydGltYWdlJywgb3B0KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2p1c3RpZnkuanNcbiAgICAvKipcbiAgICAgKiDmrrXokL3moLzlvI9cbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmrrXokL3lr7npvZDmlrnlvI9cbiAgICAgKiBAY29tbWFuZCBqdXN0aWZ5XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBhbGlnbiDlr7npvZDmlrnlvI/vvJpsZWZ0ID0+IOWxheW3pu+8jHJpZ2h0ID0+IOWxheWPs++8jGNlbnRlciA9PiDlsYXkuK3vvIxqdXN0aWZ5ID0+IOS4pOerr+Wvuem9kFxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2p1c3RpZnknLCAnY2VudGVyJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIOWmguaenOmAieWMuuaJgOWcqOS9jee9ruaYr+auteiQveWMuuWfn++8jOi/lOWbnuW9k+WJjeauteiQveWvuem9kOaWueW8j1xuICAgICAqIEBjb21tYW5kIGp1c3RpZnlcbiAgICAgKiBAbWV0aG9kIHF1ZXJ5Q29tbWFuZFZhbHVlXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDov5Tlm57mrrXokL3lr7npvZDmlrnlvI9cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoICdqdXN0aWZ5JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1snanVzdGlmeSddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgYmxvY2sgPSBkb21VdGlscy5pc0Jsb2NrRWxtLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlID0ge1xuICAgICAgICAgICAgICAgIGxlZnQ6IDEsXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDEsXG4gICAgICAgICAgICAgICAgY2VudGVyOiAxLFxuICAgICAgICAgICAgICAgIGp1c3RpZnk6IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkb0p1c3RpZnkgPSBmdW5jdGlvbiAocmFuZ2UsIHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJvb2ttYXJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKSxcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyRm4gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT0gJ2JyJyAmJiAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUobm9kZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICFkb21VdGlscy5pc1doaXRlc3BhY2Uobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICByYW5nZS5lbmxhcmdlKHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBib29rbWFyazIgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoYm9va21hcmsyLnN0YXJ0LCBmYWxzZSwgZmlsdGVyRm4pLFxuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiAhKGRvbVV0aWxzLmdldFBvc2l0aW9uKGN1cnJlbnQsIGJvb2ttYXJrMi5lbmQpICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5ub2RlVHlwZSA9PSAzIHx8ICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiBjdXJyZW50ICE9PSBib29rbWFyazIuZW5kICYmICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgbnVsbCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFibG9jayhub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNldEVuZEFmdGVyKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbW1vbiA9IHRtcFJhbmdlLmdldENvbW1vbkFuY2VzdG9yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRvbVV0aWxzLmlzQm9keShjb21tb24pICYmIGJsb2NrKGNvbW1vbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZXMoY29tbW9uLCB1dGlscy5pc1N0cmluZyhzdHlsZSkgPyB7ICd0ZXh0LWFsaWduJzogc3R5bGUgfSA6IHN0eWxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gY29tbW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IHJhbmdlLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZXMocCwgdXRpbHMuaXNTdHJpbmcoc3R5bGUpID8geyAndGV4dC1hbGlnbic6IHN0eWxlIH0gOiBzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZyYWcgPSB0bXBSYW5nZS5leHRyYWN0Q29udGVudHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKGZyYWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLmluc2VydE5vZGUocCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IHA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgZmFsc2UsIGZpbHRlckZuKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCB0cnVlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJhbmdlLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrMikubW92ZVRvQm9va21hcmsoYm9va21hcmspO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICBVRS5jb21tYW5kc1snanVzdGlmeSddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCBhbGlnbikge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHR4dDtcblxuICAgICAgICAgICAgICAgIC8v6Zet5ZCI5pe25Y2V54us5aSE55CGXG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB0eHQgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdwJyk7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodHh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZG9KdXN0aWZ5KHJhbmdlLCBhbGlnbik7XG4gICAgICAgICAgICAgICAgaWYgKHR4dCkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZSh0eHQpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodHh0KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0Tm9kZSA9IHRoaXMuc2VsZWN0aW9uLmdldFN0YXJ0KCksXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShzdGFydE5vZGUsICd0ZXh0LWFsaWduJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVt2YWx1ZV0gPyB2YWx1ZSA6ICdsZWZ0JztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHRoaXMuc2VsZWN0aW9uLmdldFN0YXJ0KCksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSBzdGFydCAmJiBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCBbJ3RkJywgJ3RoJywgJ2NhcHRpb24nXSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gY2VsbCA/IC0xIDogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9mb250LmpzXG4gICAgLyoqXG4gICAgICog5a2X5L2T6aKc6ImyLOiDjOaZr+iJsizlrZflj7cs5a2X5L2TLOS4i+WIkue6vyzliKDpmaTnur9cbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDlrZfkvZPpopzoibJcbiAgICAgKiBAY29tbWFuZCBmb3JlY29sb3JcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHZhbHVlIOiJsuWAvCjlv4XpobvljYHlha3ov5vliLYpXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnZm9yZWNvbG9yJywgJyMwMDAnICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgLyoqXG4gICAgICog6L+U5Zue6YCJ5Yy65a2X5L2T6aKc6ImyXG4gICAgICogQGNvbW1hbmQgZm9yZWNvbG9yXG4gICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L+U5Zue5a2X5L2T6aKc6ImyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnZm9yZWNvbG9yJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5a2X5L2T6IOM5pmv6aKc6ImyXG4gICAgICogQGNvbW1hbmQgYmFja2NvbG9yXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB2YWx1ZSDoibLlgLwo5b+F6aG75Y2B5YWt6L+b5Yi2KVxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2JhY2tjb2xvcicsICcjMDAwJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIOi/lOWbnumAieWMuuWtl+S9k+minOiJslxuICAgICAqIEBjb21tYW5kIGJhY2tjb2xvclxuICAgICAqIEBtZXRob2QgcXVlcnlDb21tYW5kVmFsdWVcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnuWtl+S9k+iDjOaZr+minOiJslxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSggJ2JhY2tjb2xvcicgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWtl+S9k+Wkp+Wwj1xuICAgICAqIEBjb21tYW5kIGZvbnRzaXplXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB2YWx1ZSDlrZfkvZPlpKflsI9cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdmb250c2l6ZScsICcxNHB4JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIOi/lOWbnumAieWMuuWtl+S9k+Wkp+Wwj1xuICAgICAqIEBjb21tYW5kIGZvbnRzaXplXG4gICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L+U5Zue5a2X5L2T5aSn5bCPXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnZm9udHNpemUnICk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDlrZfkvZPmoLflvI9cbiAgICAgKiBAY29tbWFuZCBmb250ZmFtaWx5XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSB2YWx1ZSDlrZfkvZPmoLflvI9cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdmb250ZmFtaWx5JywgJ+W+rui9r+mbhem7kScgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICAvKipcbiAgICAgKiDov5Tlm57pgInljLrlrZfkvZPmoLflvI9cbiAgICAgKiBAY29tbWFuZCBmb250ZmFtaWx5XG4gICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6L+U5Zue5a2X5L2T5qC35byPXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnZm9udGZhbWlseScgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWtl+S9k+S4i+WIkue6vyzkuI7liKDpmaTnur/kupLmlqVcbiAgICAgKiBAY29tbWFuZCB1bmRlcmxpbmVcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3VuZGVybGluZScgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWtl+S9k+WIoOmZpOe6vyzkuI7kuIvliJLnur/kupLmlqVcbiAgICAgKiBAY29tbWFuZCBzdHJpa2V0aHJvdWdoXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdzdHJpa2V0aHJvdWdoJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5a2X5L2T6L655qGGXG4gICAgICogQGNvbW1hbmQgZm9udGJvcmRlclxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnZm9udGJvcmRlcicgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbnNbJ2ZvbnQnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIGZvbnRzID0ge1xuICAgICAgICAgICAgICAgIGZvcmVjb2xvcjogJ2NvbG9yJyxcbiAgICAgICAgICAgICAgICBiYWNrY29sb3I6ICdiYWNrZ3JvdW5kLWNvbG9yJyxcbiAgICAgICAgICAgICAgICBmb250c2l6ZTogJ2ZvbnQtc2l6ZScsXG4gICAgICAgICAgICAgICAgZm9udGZhbWlseTogJ2ZvbnQtZmFtaWx5JyxcbiAgICAgICAgICAgICAgICB1bmRlcmxpbmU6ICd0ZXh0LWRlY29yYXRpb24nLFxuICAgICAgICAgICAgICAgIHN0cmlrZXRocm91Z2g6ICd0ZXh0LWRlY29yYXRpb24nLFxuICAgICAgICAgICAgICAgIGZvbnRib3JkZXI6ICdib3JkZXInXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbmVlZENtZCA9IHsgdW5kZXJsaW5lOiAxLCBzdHJpa2V0aHJvdWdoOiAxLCBmb250Ym9yZGVyOiAxIH0sXG4gICAgICAgICAgICBuZWVkU2V0Q2hpbGQgPSB7XG4gICAgICAgICAgICAgICAgZm9yZWNvbG9yOiAnY29sb3InLFxuICAgICAgICAgICAgICAgIGJhY2tjb2xvcjogJ2JhY2tncm91bmQtY29sb3InLFxuICAgICAgICAgICAgICAgIGZvbnRzaXplOiAnZm9udC1zaXplJyxcbiAgICAgICAgICAgICAgICBmb250ZmFtaWx5OiAnZm9udC1mYW1pbHknXG4gICAgICAgICAgICB9O1xuICAgICAgICBtZS5zZXRPcHQoe1xuICAgICAgICAgICAgZm9udGZhbWlseTogW1xuICAgICAgICAgICAgICAgIHsgbmFtZTogJ3Nvbmd0aScsIHZhbDogJ+Wui+S9kyxTaW1TdW4nIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAneWFoZWknLCB2YWw6ICflvq7ova/pm4Xpu5EsTWljcm9zb2Z0IFlhSGVpJyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ2thaXRpJywgdmFsOiAn5qW35L2TLOalt+S9k19HQjIzMTIsIFNpbUthaScgfSxcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdoZWl0aScsIHZhbDogJ+m7keS9kywgU2ltSGVpJyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ2xpc2h1JywgdmFsOiAn6Zq25LmmLCBTaW1MaScgfSxcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdhbmRhbGVNb25vJywgdmFsOiAnYW5kYWxlIG1vbm8nIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnYXJpYWwnLCB2YWw6ICdhcmlhbCwgaGVsdmV0aWNhLHNhbnMtc2VyaWYnIH0sXG4gICAgICAgICAgICAgICAgeyBuYW1lOiAnYXJpYWxCbGFjaycsIHZhbDogJ2FyaWFsIGJsYWNrLGF2YW50IGdhcmRlJyB9LFxuICAgICAgICAgICAgICAgIHsgbmFtZTogJ2NvbWljU2Fuc01zJywgdmFsOiAnY29taWMgc2FucyBtcycgfSxcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICdpbXBhY3QnLCB2YWw6ICdpbXBhY3QsY2hpY2FnbycgfSxcbiAgICAgICAgICAgICAgICB7IG5hbWU6ICd0aW1lc05ld1JvbWFuJywgdmFsOiAndGltZXMgbmV3IHJvbWFuJyB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZm9udHNpemU6IFsxMCwgMTEsIDEyLCAxNCwgMTYsIDE4LCAyMCwgMjQsIDM2XVxuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBtZXJnZVdpdGhQYXJlbnQobm9kZSkge1xuICAgICAgICAgICAgdmFyIHBhcmVudDtcbiAgICAgICAgICAgIHdoaWxlICgocGFyZW50ID0gbm9kZS5wYXJlbnROb2RlKSkge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50LnRhZ05hbWUgPT0gJ1NQQU4nICYmXG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldENoaWxkQ291bnQocGFyZW50LCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUoY2hpbGQpICYmICFkb21VdGlscy5pc0JyKGNoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfSkgPT0gMVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQuc3R5bGUuY3NzVGV4dCArPSBub2RlLnN0eWxlLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWVyZ2VDaGlsZChybmcsIGNtZE5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAobmVlZFNldENoaWxkW2NtZE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgcm5nLmFkanVzdG1lbnRCb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgIGlmICghcm5nLmNvbGxhcHNlZCAmJiBybmcuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBybmcuc3RhcnRDb250YWluZXIuY2hpbGROb2Rlc1tybmcuc3RhcnRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgJiYgZG9tVXRpbHMuaXNUYWdOb2RlKHN0YXJ0LCAnc3BhbicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYmsgPSBybmcuY3JlYXRlQm9va21hcmsoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoc3RhcnQsICdzcGFuJyksIGZ1bmN0aW9uIChzcGFuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzcGFuLnBhcmVudE5vZGUgfHwgZG9tVXRpbHMuaXNCb29rbWFya05vZGUoc3BhbikpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWUgPT0gJ2JhY2tjb2xvcicgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShzcGFuLCAnYmFja2dyb3VuZC1jb2xvcicpLnRvTG93ZXJDYXNlKCkgPT09IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlU3R5bGUoc3BhbiwgbmVlZFNldENoaWxkW2NtZE5hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3Bhbi5zdHlsZS5jc3NUZXh0LnJlcGxhY2UoL15cXHMrJC8sICcnKS5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoc3BhbiwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcubW92ZVRvQm9va21hcmsoYmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1lcmdlc2libGluZyhybmcsIGNtZE5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgY29sbGFwc2VkID0gcm5nLmNvbGxhcHNlZCxcbiAgICAgICAgICAgICAgICBiayA9IHJuZy5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgIGNvbW1vbjtcbiAgICAgICAgICAgIGlmIChjb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICBjb21tb24gPSBiay5zdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIHdoaWxlIChkdGQuJGlubGluZVtjb21tb24udGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgY29tbW9uID0gY29tbW9uLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb21tb24gPSBkb21VdGlscy5nZXRDb21tb25BbmNlc3Rvcihiay5zdGFydCwgYmsuZW5kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoY29tbW9uLCAnc3BhbicpLCBmdW5jdGlvbiAoc3Bhbikge1xuICAgICAgICAgICAgICAgIGlmICghc3Bhbi5wYXJlbnROb2RlIHx8IGRvbVV0aWxzLmlzQm9va21hcmtOb2RlKHNwYW4pKSByZXR1cm47XG4gICAgICAgICAgICAgICAgaWYgKC9cXHMqYm9yZGVyXFxzKjpcXHMqbm9uZTs/XFxzKi9pLnRlc3Qoc3Bhbi5zdHlsZS5jc3NUZXh0KSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoL15cXHMqYm9yZGVyXFxzKjpcXHMqbm9uZTs/XFxzKiQvLnRlc3Qoc3Bhbi5zdHlsZS5jc3NUZXh0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHNwYW4sIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlU3R5bGUoc3BhbiwgJ2JvcmRlcicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAvYm9yZGVyL2kudGVzdChzcGFuLnN0eWxlLmNzc1RleHQpICYmXG4gICAgICAgICAgICAgICAgICAgIHNwYW4ucGFyZW50Tm9kZS50YWdOYW1lID09ICdTUEFOJyAmJlxuICAgICAgICAgICAgICAgICAgICAvYm9yZGVyL2kudGVzdChzcGFuLnBhcmVudE5vZGUuc3R5bGUuY3NzVGV4dClcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zdHlsZS5jc3NUZXh0ID0gc3Bhbi5zdHlsZS5jc3NUZXh0LnJlcGxhY2UoL2JvcmRlclteOl0qOlteO10rOz8vZ2ksICcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCEoY21kTmFtZSA9PSAnZm9udGJvcmRlcicgJiYgdmFsdWUgPT0gJ25vbmUnKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IHNwYW4ubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChuZXh0ICYmIG5leHQubm9kZVR5cGUgPT0gMSAmJiBuZXh0LnRhZ05hbWUgPT0gJ1NQQU4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCb29rbWFya05vZGUobmV4dCkgJiYgY21kTmFtZSA9PSAnZm9udGJvcmRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuLmFwcGVuZENoaWxkKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBzcGFuLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQuc3R5bGUuY3NzVGV4dCA9PSBzcGFuLnN0eWxlLmNzc1RleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5tb3ZlQ2hpbGQobmV4dCwgc3Bhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwYW4ubmV4dFNpYmxpbmcgPT09IG5leHQpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dCA9IHNwYW4ubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtZXJnZVdpdGhQYXJlbnQoc3Bhbik7XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uID4gOCkge1xuICAgICAgICAgICAgICAgICAgICAvL+aLt+i0neeItuS6suS7rOeahOeJueWIq+eahOWxnuaApyzov5nph4zlj6rlgZrog4zmma/popzoibLnmoTlpITnkIZcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudCA9IGRvbVV0aWxzLmZpbmRQYXJlbnQoc3BhbiwgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuLnRhZ05hbWUgPT0gJ1NQQU4nICYmIC9iYWNrZ3JvdW5kLWNvbG9yLy50ZXN0KG4uc3R5bGUuY3NzVGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50ICYmICEvYmFja2dyb3VuZC1jb2xvci8udGVzdChzcGFuLnN0eWxlLmNzc1RleHQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHBhcmVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiayk7XG4gICAgICAgICAgICBtZXJnZUNoaWxkKHJuZywgY21kTmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgbWUuYWRkSW5wdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ3UgcyBkZWwgZm9udCBzdHJpa2UnKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZS50YWdOYW1lID09ICdmb250Jykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY3NzU3R5bGUgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBub2RlLmF0dHJzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzaXplJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzU3R5bGUucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmb250LXNpemU6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTogJzEwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjogJzEyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMzogJzE2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDogJzE4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNTogJzI0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNjogJzMyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNzogJzQ4J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1bbm9kZS5hdHRyc1twXV0gfHwgbm9kZS5hdHRyc1twXSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdweCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY29sb3InOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NTdHlsZS5wdXNoKCdjb2xvcjonICsgbm9kZS5hdHRyc1twXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2ZhY2UnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NTdHlsZS5wdXNoKCdmb250LWZhbWlseTonICsgbm9kZS5hdHRyc1twXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3N0eWxlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzU3R5bGUucHVzaChub2RlLmF0dHJzW3BdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBub2RlLmF0dHJzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IGNzc1N0eWxlLmpvaW4oJzsnKVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBub2RlLnRhZ05hbWUgPT0gJ3UnID8gJ3VuZGVybGluZScgOiAnbGluZS10aHJvdWdoJztcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5hdHRycyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAobm9kZS5nZXRBdHRyKCdzdHlsZScpIHx8ICcnKSArICd0ZXh0LWRlY29yYXRpb246JyArIHZhbCArICc7J1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBub2RlLnRhZ05hbWUgPSAnc3Bhbic7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ3NwYW4nKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgaWYodmFsID0gbm9kZS5nZXRBdHRyKCdjbGFzcycpKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIGlmKC9mb250c3RyaWtldGhyb3VnaC8udGVzdCh2YWwpKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBub2RlLnNldFN0eWxlKCd0ZXh0LWRlY29yYXRpb24nLCdsaW5lLXRocm91Z2gnKTtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBpZihub2RlLmF0dHJzWydjbGFzcyddKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5hdHRyc1snY2xhc3MnXSA9IG5vZGUuYXR0cnNbJ2NsYXNzJ10ucmVwbGFjZSgvZm9udHN0cmlrZXRocm91Z2gvLCcnKTtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyKCdjbGFzcycpXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgaWYoL2ZvbnRib3JkZXIvLnRlc3QodmFsKSl7XG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRTdHlsZSgnYm9yZGVyJywnMXB4IHNvbGlkICMwMDAnKTtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBpZihub2RlLmF0dHJzWydjbGFzcyddKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5hdHRyc1snY2xhc3MnXSA9IG5vZGUuYXR0cnNbJ2NsYXNzJ10ucmVwbGFjZSgvZm9udGJvcmRlci8sJycpO1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ2NsYXNzJylcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vICAgIG1lLmFkZE91dHB1dFJ1bGUoZnVuY3Rpb24ocm9vdCl7XG4gICAgICAgIC8vICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ3NwYW4nKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgLy8gICAgICAgICAgICB2YXIgdmFsO1xuICAgICAgICAvLyAgICAgICAgICAgIGlmKHZhbCA9IG5vZGUuZ2V0U3R5bGUoJ3RleHQtZGVjb3JhdGlvbicpKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgaWYoL2xpbmUtdGhyb3VnaC8udGVzdCh2YWwpKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIGlmKG5vZGUuYXR0cnNbJ2NsYXNzJ10pe1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuYXR0cnNbJ2NsYXNzJ10gKz0gJyBmb250c3RyaWtldGhyb3VnaCc7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ2NsYXNzJywnZm9udHN0cmlrZXRocm91Z2gnKVxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgICAgICAgICB9XG4gICAgICAgIC8vXG4gICAgICAgIC8vICAgICAgICAgICAgICAgIG5vZGUuc2V0U3R5bGUoJ3RleHQtZGVjb3JhdGlvbicpXG4gICAgICAgIC8vICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgICAgIGlmKHZhbCA9IG5vZGUuZ2V0U3R5bGUoJ2JvcmRlcicpKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgaWYoLzFweC8udGVzdCh2YWwpICYmIC9zb2xpZC8udGVzdCh2YWwpKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIGlmKG5vZGUuYXR0cnNbJ2NsYXNzJ10pe1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuYXR0cnNbJ2NsYXNzJ10gKz0gJyBmb250Ym9yZGVyJztcbiAgICAgICAgLy9cbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0QXR0cignY2xhc3MnLCdmb250Ym9yZGVyJylcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgICAgICAgICBub2RlLnNldFN0eWxlKCdib3JkZXInKVxuICAgICAgICAvL1xuICAgICAgICAvLyAgICAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgIH0pO1xuICAgICAgICAvLyAgICB9KTtcbiAgICAgICAgZm9yICh2YXIgcCBpbiBmb250cykge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIChjbWQsIHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgVUUuY29tbWFuZHNbY21kXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMucXVlcnlDb21tYW5kU3RhdGUoY21kTmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnbm9uZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjbWROYW1lID09ICd1bmRlcmxpbmUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ3VuZGVybGluZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjbWROYW1lID09ICdmb250Ym9yZGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICcxcHggc29saWQgIzAwMCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnbGluZS10aHJvdWdoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ2ZvbnQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZSh0ZXh0KS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ3JlbW92ZUZvcm1hdCcsICdzcGFuLGEnLCBzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUodGV4dCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VzaWJsaW5nKHJhbmdlLCBjbWROYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZWVkQ21kW2NtZF0gJiYgbWUucXVlcnlDb21tYW5kVmFsdWUoY21kKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ3JlbW92ZUZvcm1hdCcsICdzcGFuLGEnLCBzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5hcHBseUlubGluZVN0eWxlKCdzcGFuJywgeyBzdHlsZTogc3R5bGUgKyAnOicgKyB2YWx1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VzaWJsaW5nKHJhbmdlLCBjbWROYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzcGFuID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ3NwYW4nLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCA9IG1lLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdmb250Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFzcGFuLmNoaWxkcmVuLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIXNwYW5bYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J10ucmVwbGFjZShmaWxsQ2hhclJlZywgJycpLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZm9yIGllIGhhY2sgd2hlbiBlbnRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZWVkQ21kW2NtZF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKHRleHQpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdyZW1vdmVGb3JtYXQnLCAnc3BhbixhJywgc3R5bGUsIG51bGwpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BhbiA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUodGV4dCwgJ3NwYW4nLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4gJiYgKHNwYW4uc3R5bGUuY3NzVGV4dCArPSAnOycgKyBzdHlsZSArICc6JyArIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGUodGV4dCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuID0gcmFuZ2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmVlZENtZFtjbWRdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9h5qCH562+5YaF55qE5LiN5aSE55CG6Lez6L+HXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUodGV4dCwgJ2EnLCB0cnVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZSh0ZXh0KS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdyZW1vdmVGb3JtYXQnLCAnc3BhbixhJywgc3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnN0eWxlLmNzc1RleHQgPSBzdHlsZSArICc6JyArIHZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNwYW4sIHRleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/kv67lpI3vvIxzcGFu5aWXc3BhbiDkvYbmoLflvI/kuI3nu6fmib/nmoTpl67pophcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYnJvd3Nlci5pZSB8fCAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPT0gOSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3BhblBhcmVudCA9IHNwYW4ucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoIWRvbVV0aWxzLmlzQmxvY2tFbG0oc3BhblBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwYW5QYXJlbnQudGFnTmFtZSA9PSAnU1BBTicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vb3BlcmHlkIjlubZzdHlsZeS4jeS8muWKoOWFpVwiO1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuLnN0eWxlLmNzc1RleHQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW5QYXJlbnQuc3R5bGUuY3NzVGV4dCArICc7JyArIHNwYW4uc3R5bGUuY3NzVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGFuUGFyZW50ID0gc3BhblBhcmVudC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wZXJhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHNwYW4sIDApLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZXNpYmxpbmcocmFuZ2UsIGNtZE5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHNwYW4sIDApLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlc2libGluZyhyYW5nZSwgY21kTmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjk4MVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9kb21VdGlscy5tZXJnZVRvUGFyZW50KHNwYW4pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBxdWVyeUNvbW1hbmRWYWx1ZTogZnVuY3Rpb24gKGNtZE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydE5vZGUgPSB0aGlzLnNlbGVjdGlvbi5nZXRTdGFydCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjk0NlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNtZE5hbWUgPT0gJ3VuZGVybGluZScgfHwgY21kTmFtZSA9PSAnc3RyaWtldGhyb3VnaCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IHN0YXJ0Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHRtcE5vZGUgJiYgIWRvbVV0aWxzLmlzQmxvY2tFbG0odG1wTm9kZSkgJiYgIWRvbVV0aWxzLmlzQm9keSh0bXBOb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG1wTm9kZS5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUodG1wTm9kZSwgc3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9ICdub25lJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSB0bXBOb2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY21kTmFtZSA9PSAnZm9udGJvcmRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0gc3RhcnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHRtcCAmJiBkdGQuJGlubGluZVt0bXAudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh2YWwgPSBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHRtcCwgJ2JvcmRlcicpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC8xcHgvLnRlc3QodmFsKSAmJiAvc29saWQvLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gdG1wLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNtZE5hbWUgPT0gJ0ZvbnRTaXplJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdHlsZVZhbCA9IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUoc3RhcnROb2RlLCBzdHlsZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IC9eKFtcXGRcXC5dKykoXFx3KykkLy5leGVjKHN0eWxlVmFsKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IodG1wWzFdKSArIHRtcFsyXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGVWYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHN0YXJ0Tm9kZSwgc3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKGNtZE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbmVlZENtZFtjbWROYW1lXSkgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsID0gdGhpcy5xdWVyeUNvbW1hbmRWYWx1ZShjbWROYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbWROYW1lID09ICdmb250Ym9yZGVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAvMXB4Ly50ZXN0KHZhbCkgJiYgL3NvbGlkLy50ZXN0KHZhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjbWROYW1lID09ICd1bmRlcmxpbmUnID8gL3VuZGVybGluZS8udGVzdCh2YWwpIDogL2xpbmVcXC10aHJvdWdoLy50ZXN0KHZhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSkocCwgZm9udHNbcF0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvbGluay5qc1xuICAgIC8qKlxuICAgICAqIOi2hemTvuaOpVxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOaPkuWFpei2hemTvuaOpVxuICAgICAqIEBjb21tYW5kIGxpbmtcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IG9wdGlvbnMgICDorr7nva7oh6rlrprkuYnlsZ7mgKfvvIzkvovlpoLvvJp1cmzjgIF0aXRsZeOAgXRhcmdldFxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2xpbmsnLCAne1xuICAgICAqICAgICB1cmw6J3VlZGl0b3IuYmFpZHUuY29tJyxcbiAgICAgKiAgICAgdGl0bGU6J3VlZGl0b3InLFxuICAgICAqICAgICB0YXJnZXQ6J19ibGFuaydcbiAgICAgKiB9JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIOi/lOWbnuW9k+WJjemAieS4reeahOesrOS4gOS4qui2hemTvuaOpeiKgueCuVxuICAgICAqIEBjb21tYW5kIGxpbmtcbiAgICAgKiBAbWV0aG9kIHF1ZXJ5Q29tbWFuZFZhbHVlXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEByZXR1cm4geyBFbGVtZW50IH0g6LaF6ZO+5o6l6IqC54K5XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnbGluaycgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOWPlua2iOi2hemTvuaOpVxuICAgICAqIEBjb21tYW5kIHVubGlua1xuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAndW5saW5rJyk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydsaW5rJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIG9wdGltaXplKHJhbmdlKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBlbmQgPSByYW5nZS5lbmRDb250YWluZXI7XG5cbiAgICAgICAgICAgIGlmICgoc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCAnYScsIHRydWUpKSkge1xuICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKHN0YXJ0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoZW5kID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShlbmQsICdhJywgdHJ1ZSkpKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIoZW5kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIFVFLmNvbW1hbmRzWyd1bmxpbmsnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYm9va21hcms7XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCAmJiAhZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ2EnLCB0cnVlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJvb2ttYXJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKTtcbiAgICAgICAgICAgICAgICBvcHRpbWl6ZShyYW5nZSk7XG4gICAgICAgICAgICAgICAgcmFuZ2UucmVtb3ZlSW5saW5lU3R5bGUoJ2EnKS5tb3ZlVG9Cb29rbWFyayhib29rbWFyaykuc2VsZWN0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gIXRoaXMuaGlnaGxpZ2h0ICYmIHRoaXMucXVlcnlDb21tYW5kVmFsdWUoJ2xpbmsnKSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgZnVuY3Rpb24gZG9MaW5rKHJhbmdlLCBvcHQsIG1lKSB7XG4gICAgICAgICAgICB2YXIgcm5nQ2xvbmUgPSByYW5nZS5jbG9uZVJhbmdlKCksXG4gICAgICAgICAgICAgICAgbGluayA9IG1lLnF1ZXJ5Q29tbWFuZFZhbHVlKCdsaW5rJyk7XG4gICAgICAgICAgICBvcHRpbWl6ZSgocmFuZ2UgPSByYW5nZS5hZGp1c3RtZW50Qm91bmRhcnkoKSkpO1xuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSAmJiBsaW5rKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5jaGlsZE5vZGVzW3JhbmdlLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ICYmXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0Lm5vZGVUeXBlID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQudGFnTmFtZSA9PSAnQScgJiZcbiAgICAgICAgICAgICAgICAgICAgL14oPzpodHRwcz98ZnRwfGZpbGUpXFxzKjpcXHMqXFwvXFwvLy50ZXN0KHN0YXJ0W2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBzdGFydFticm93c2VyLmllID8gJ2lubmVyVGV4dCcgOiAndGV4dENvbnRlbnQnXSA9IHV0aWxzLmh0bWwob3B0LnRleHRWYWx1ZSB8fCBvcHQuaHJlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFybmdDbG9uZS5jb2xsYXBzZWQgfHwgbGluaykge1xuICAgICAgICAgICAgICAgIHJhbmdlLnJlbW92ZUlubGluZVN0eWxlKCdhJyk7XG4gICAgICAgICAgICAgICAgcm5nQ2xvbmUgPSByYW5nZS5jbG9uZVJhbmdlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChybmdDbG9uZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgYSA9IHJhbmdlLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dCA9ICcnO1xuICAgICAgICAgICAgICAgIGlmIChvcHQudGV4dFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQgPSB1dGlscy5odG1sKG9wdC50ZXh0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgb3B0LnRleHRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gdXRpbHMuaHRtbChvcHQuaHJlZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMoYSwgb3B0KTtcbiAgICAgICAgICAgICAgICBzdGFydCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nQ2xvbmUuc3RhcnRDb250YWluZXIsICdhJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0ICYmIGRvbVV0aWxzLmlzSW5Ob2RlRW5kQm91bmRhcnkocm5nQ2xvbmUsIHN0YXJ0KSkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEFmdGVyKHN0YXJ0KS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYVticm93c2VyLmllID8gJ2lubmVyVGV4dCcgOiAndGV4dENvbnRlbnQnXSA9IHRleHQ7XG4gICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShhKS5zZWxlY3ROb2RlKGEpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByYW5nZS5hcHBseUlubGluZVN0eWxlKCdhJywgb3B0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBVRS5jb21tYW5kc1snbGluayddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCBvcHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2U7XG4gICAgICAgICAgICAgICAgb3B0Ll9ocmVmICYmIChvcHQuX2hyZWYgPSB1dGlscy51bmh0bWwob3B0Ll9ocmVmLCAvWzxcIj5dL2cpKTtcbiAgICAgICAgICAgICAgICBvcHQuaHJlZiAmJiAob3B0LmhyZWYgPSB1dGlscy51bmh0bWwob3B0LmhyZWYsIC9bPFwiPl0vZykpO1xuICAgICAgICAgICAgICAgIG9wdC50ZXh0VmFsdWUgJiYgKG9wdC50ZXh0VmFsdWUgPSB1dGlscy51bmh0bWwob3B0LnRleHRWYWx1ZSwgL1s8XCI+XS9nKSk7XG4gICAgICAgICAgICAgICAgZG9MaW5rKChyYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCkpLCBvcHQsIHRoaXMpO1xuICAgICAgICAgICAgICAgIC8v6Zet5ZCI6YO95LiN5Yqg5Y2g5L2N56ym77yM5aaC5p6c5Yqg5LqG5Lya5ZyoYeWQjui+ueWkmuS4quWNoOS9jeespuiKgueCue+8jOWvvOiHtGHmmK/lm77niYfog4zmma/nu4TmiJDnmoTliJfooajvvIzlh7rnjrDnqbrnmb3pl67pophcbiAgICAgICAgICAgICAgICByYW5nZS5jb2xsYXBzZSgpLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRWYWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIG5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHRoaXMuc2VsZWN0aW9uLmdldFN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgICAgIC8v5ZyoaWXkuItnZXRzdGFydCgp5Y+W5YC85YGP5LiK5LqGXG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUubm9kZVR5cGUgPT0gMSA/IG5vZGUgOiBub2RlLnBhcmVudE5vZGU7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKG5vZGUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKG5vZGUsICdhJywgdHJ1ZSkpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNJbk5vZGVFbmRCb3VuZGFyeShyYW5nZSwgbm9kZSlcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTExMSAg5aaC5p6c5pivPHA+PGE+eHg8L2E+PC9wPiBzdGFydENvbnRhaW5lcuaYr3DlsLHkvJrmib7kuI3liLBhXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNocmlua0JvdW5kYXJ5KCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT0gMyB8fCAhcmFuZ2Uuc3RhcnRDb250YWluZXIuY2hpbGROb2Rlc1tyYW5nZS5zdGFydE9mZnNldF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyByYW5nZS5zdGFydENvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHJhbmdlLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5lbmRDb250YWluZXIubm9kZVR5cGUgPT0gMyB8fCByYW5nZS5lbmRPZmZzZXQgPT0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHJhbmdlLmVuZENvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHJhbmdlLmVuZENvbnRhaW5lci5jaGlsZE5vZGVzW3JhbmdlLmVuZE9mZnNldCAtIDFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29tbW9uID0gcmFuZ2UuZ2V0Q29tbW9uQW5jZXN0b3IoKTtcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoY29tbW9uLCAnYScsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5vZGUgJiYgY29tbW9uLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhcyA9IGNvbW1vbi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGFzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAocHMgPSBkb21VdGlscy5nZXRQb3NpdGlvbihjaSwgc3RhcnQpKSwgKHBlID0gZG9tVXRpbHMuZ2V0UG9zaXRpb24oY2ksIGVuZCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHBzICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HIHx8IHBzICYgZG9tVXRpbHMuUE9TSVRJT05fQ09OVEFJTlMpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChwZSAmIGRvbVV0aWxzLlBPU0lUSU9OX1BSRUNFRElORyB8fCBwZSAmIGRvbVV0aWxzLlBPU0lUSU9OX0NPTlRBSU5TKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gY2k7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL+WIpOaWreWmguaenOaYr+inhumikeeahOivnei/nuaOpeS4jeWPr+eUqFxuICAgICAgICAgICAgICAgIC8vZml4IDg1M1xuICAgICAgICAgICAgICAgIHZhciBpbWcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLmdldENsb3NlZE5vZGUoKSxcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWcgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChpbWcuY2xhc3NOYW1lID09ICdlZHVpLWZha2VkLXZpZGVvJyB8fCBpbWcuY2xhc3NOYW1lLmluZGV4T2YoJ2VkdWktdXBsb2FkLXZpZGVvJykgIT0gLTEpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmbGFnID8gLTEgOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2lmcmFtZS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHBsdWdpbnNcXGluc2VydGh0bWwuanNcbiAgICAvLy9jb21tYW5kcyDmj5LlhaXmoYbmnrZcbiAgICAvLy9jb21tYW5kc05hbWUgIEluc2VydEZyYW1lXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5o+S5YWlSWZyYW1lXG4gICAgLy8vY29tbWFuZHNEaWFsb2cgIGRpYWxvZ3NcXGluc2VydGZyYW1lXG5cbiAgICBVRS5wbHVnaW5zWydpbnNlcnRmcmFtZSddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICBmdW5jdGlvbiBkZWxldGVJZnJhbWUoKSB7XG4gICAgICAgICAgICBtZS5faWZyYW1lICYmIGRlbGV0ZSBtZS5faWZyYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlbGV0ZUlmcmFtZSgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9zY3Jhd2wuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2NvbW1hbmRzIOa2gum4plxuICAgIC8vL2NvbW1hbmRzTmFtZSAgU2NyYXdsXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5raC6bimXG4gICAgLy8vY29tbWFuZHNEaWFsb2cgIGRpYWxvZ3NcXHNjcmF3bFxuICAgIFVFLmNvbW1hbmRzWydzY3Jhd2wnXSA9IHtcbiAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBicm93c2VyLmllICYmIGJyb3dzZXIudmVyc2lvbiA8PSA4ID8gLTEgOiAwO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvcmVtb3ZlZm9ybWF0LmpzXG4gICAgLyoqXG4gICAgICog5riF6Zmk5qC85byPXG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5riF6Zmk5paH5a2X5qC35byPXG4gICAgICogQGNvbW1hbmQgcmVtb3ZlZm9ybWF0XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0gICB7U3RyaW5nfSAgIHRhZ3MgICAgIOS7pemAl+WPt+malOW8gOeahOagh+etvuOAguWmgu+8mnN0cm9uZ1xuICAgICAqIEBwYXJhbSAgIHtTdHJpbmd9ICAgc3R5bGUgICAg5qC35byP5aaC77yaY29sb3JcbiAgICAgKiBAcGFyYW0gICB7U3RyaW5nfSAgIGF0dHJzICAgIOWxnuaAp+Wmgjp3aWR0aFxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3JlbW92ZWZvcm1hdCcsICdzdHJvbmcnLCdjb2xvcicsJ3dpZHRoJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1sncmVtb3ZlZm9ybWF0J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIG1lLnNldE9wdCh7XG4gICAgICAgICAgICByZW1vdmVGb3JtYXRUYWdzOiAnYixiaWcsY29kZSxkZWwsZGZuLGVtLGZvbnQsaSxpbnMsa2JkLHEsc2FtcCxzbWFsbCxzcGFuLHN0cmlrZSxzdHJvbmcsc3ViLHN1cCx0dCx1LHZhcicsXG4gICAgICAgICAgICByZW1vdmVGb3JtYXRBdHRyaWJ1dGVzOiAnY2xhc3Msc3R5bGUsbGFuZyx3aWR0aCxoZWlnaHQsYWxpZ24saHNwYWNlLHZhbGlnbidcbiAgICAgICAgfSk7XG4gICAgICAgIG1lLmNvbW1hbmRzWydyZW1vdmVmb3JtYXQnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSwgdGFncywgc3R5bGUsIGF0dHJzLCBub3RJbmNsdWRlQSkge1xuICAgICAgICAgICAgICAgIHZhciB0YWdSZWcgPSBuZXcgUmVnRXhwKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ14oPzonICsgKHRhZ3MgfHwgdGhpcy5vcHRpb25zLnJlbW92ZUZvcm1hdFRhZ3MpLnJlcGxhY2UoLywvZywgJ3wnKSArICcpJCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaSdcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlRm9ybWF0QXR0cmlidXRlcyA9IHN0eWxlID8gW10gOiAoYXR0cnMgfHwgdGhpcy5vcHRpb25zLnJlbW92ZUZvcm1hdEF0dHJpYnV0ZXMpLnNwbGl0KCcsJyksXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbmV3IGRvbS5SYW5nZSh0aGlzLmRvY3VtZW50KSxcbiAgICAgICAgICAgICAgICAgICAgYm9va21hcmssXG4gICAgICAgICAgICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudCxcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09IDE7XG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBpc1JlZHVuZGFudFNwYW4obm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PSAzIHx8IG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9ICdzcGFuJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWUg5LiL5Yik5pat5a6e5pWI77yM5omA5Lul5Y+q6IO9566A5Y2V55Soc3R5bGXmnaXliKTmlq1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vcmV0dXJuIG5vZGUuc3R5bGUuY3NzVGV4dCA9PSAnJyA/IDEgOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dHJzID0gbm9kZS5hdHRyaWJ1dGVzO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gYXR0cnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhdHRyc1tpXS5zcGVjaWZpZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhbm9kZS5hdHRyaWJ1dGVzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gZG9SZW1vdmUocmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJvb2ttYXJrMSA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmVubGFyZ2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL+S4jeiDveaKimHmoIfnrb7liIfkuoZcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFub3RJbmNsdWRlQSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFOb2RlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ2EnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKGFOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgYU5vZGUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLmVuZENvbnRhaW5lciwgJ2EnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEFmdGVyKGFOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGJvb2ttYXJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKTtcblxuICAgICAgICAgICAgICAgICAgICBub2RlID0gYm9va21hcmsuc3RhcnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/liIflvIDlp4tcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKChwYXJlbnQgPSBub2RlLnBhcmVudE5vZGUpICYmICFkb21VdGlscy5pc0Jsb2NrRWxtKHBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmJyZWFrUGFyZW50KG5vZGUsIHBhcmVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmNsZWFyRW1wdHlTaWJsaW5nKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChib29rbWFyay5lbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5YiH57uT5p2fXG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gYm9va21hcmsuZW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKChwYXJlbnQgPSBub2RlLnBhcmVudE5vZGUpICYmICFkb21VdGlscy5pc0Jsb2NrRWxtKHBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5icmVha1BhcmVudChub2RlLCBwYXJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmNsZWFyRW1wdHlTaWJsaW5nKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL+W8gOWni+WOu+mZpOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShib29rbWFyay5zdGFydCwgZmFsc2UsIGZpbHRlciksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnQgPT0gYm9va21hcmsuZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCB0cnVlLCBmaWx0ZXIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkdGQuJGVtcHR5W2N1cnJlbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpXSAmJiAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUoY3VycmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhZ1JlZy50ZXN0KGN1cnJlbnQudGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZVN0eWxlKGN1cnJlbnQsIHN0eWxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZWR1bmRhbnRTcGFuKGN1cnJlbnQpICYmIHN0eWxlICE9ICd0ZXh0LWRlY29yYXRpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6OTM5ICDkuI3og73miopsaXN05LiK55qE5qC35byP5Y675o6JXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWR0ZC4kdGFibGVDb250ZW50W2N1cnJlbnQudGFnTmFtZV0gJiYgIWR0ZC4kbGlzdFtjdXJyZW50LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhjdXJyZW50LCByZW1vdmVGb3JtYXRBdHRyaWJ1dGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZWR1bmRhbnRTcGFuKGN1cnJlbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IG5leHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy90cmFjZToxMDM1XG4gICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTA5NiDkuI3og73miop0ZOS4iueahOagt+W8j+WOu+aOie+8jOavlOWmgui+ueahhlxuICAgICAgICAgICAgICAgICAgICB2YXIgcE4gPSBib29rbWFyay5zdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShwTikgJiYgIWR0ZC4kdGFibGVDb250ZW50W3BOLnRhZ05hbWVdICYmICFkdGQuJGxpc3RbcE4udGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMocE4sIHJlbW92ZUZvcm1hdEF0dHJpYnV0ZXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHBOID0gYm9va21hcmsuZW5kLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvb2ttYXJrLmVuZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNCbG9ja0VsbShwTikgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICFkdGQuJHRhYmxlQ29udGVudFtwTi50YWdOYW1lXSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIWR0ZC4kbGlzdFtwTi50YWdOYW1lXVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMocE4sIHJlbW92ZUZvcm1hdEF0dHJpYnV0ZXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrKS5tb3ZlVG9Cb29rbWFyayhib29rbWFyazEpO1xuICAgICAgICAgICAgICAgICAgICAvL+a4hemZpOWGl+S9meeahOS7o+eggSA8Yj48Ym9va21hcms+PC9iPlxuICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGFwc2VkID0gcmFuZ2UuY29sbGFwc2VkO1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAobm9kZS5ub2RlVHlwZSA9PSAxICYmIGRvbVV0aWxzLmlzRW1wdHlOb2RlKG5vZGUpICYmIGR0ZC4kcmVtb3ZlRW1wdHlbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjkzN1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/mm7TmlrDnu5PmnZ/ovrnnlYxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZS5zdGFydENvbnRhaW5lciA9PT0gcmFuZ2UuZW5kQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuZW5kT2Zmc2V0LS07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gdG1wO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSByYW5nZS5lbmRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobm9kZS5ub2RlVHlwZSA9PSAxICYmIGRvbVV0aWxzLmlzRW1wdHlOb2RlKG5vZGUpICYmIGR0ZC4kcmVtb3ZlRW1wdHlbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmRCZWZvcmUobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5vZGUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHRtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBkb1JlbW92ZShyYW5nZSk7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvYmxvY2txdW90ZS5qc1xuICAgIC8qKlxuICAgICAqIOa3u+WKoOW8leeUqFxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOa3u+WKoOW8leeUqFxuICAgICAqIEBjb21tYW5kIGJsb2NrcXVvdGVcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2Jsb2NrcXVvdGUnICk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmt7vliqDlvJXnlKhcbiAgICAgKiBAY29tbWFuZCBibG9ja3F1b3RlXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhdHRycyDoioLngrnlsZ7mgKdcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdibG9ja3F1b3RlJyx7XG4gICAgICogICAgIHN0eWxlOiBcImNvbG9yOiByZWQ7XCJcbiAgICAgKiB9ICk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydibG9ja3F1b3RlJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIGZ1bmN0aW9uIGdldE9iaihlZGl0b3IpIHtcbiAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5maWx0ZXJOb2RlTGlzdChlZGl0b3Iuc2VsZWN0aW9uLmdldFN0YXJ0RWxlbWVudFBhdGgoKSwgJ2Jsb2NrcXVvdGUnKTtcbiAgICAgICAgfVxuICAgICAgICBtZS5jb21tYW5kc1snYmxvY2txdW90ZSddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCBhdHRycykge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIG9iaiA9IGdldE9iaih0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgYmxvY2txdW90ZSA9IGR0ZC5ibG9ja3F1b3RlLFxuICAgICAgICAgICAgICAgICAgICBib29rbWFyayA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRCbG9jayA9IGRvbVV0aWxzLmlzQmxvY2tFbG0oc3RhcnQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBzdGFydFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogZG9tVXRpbHMuZmluZFBhcmVudChzdGFydCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuaXNCbG9ja0VsbShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gcmFuZ2UuZW5kQ29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kQmxvY2sgPSBkb21VdGlscy5pc0Jsb2NrRWxtKGVuZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGVuZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogZG9tVXRpbHMuZmluZFBhcmVudChlbmQsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbVV0aWxzLmlzQmxvY2tFbG0obm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAvL+WkhOeQhuS4gOS4i2xpXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0QmxvY2sgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0QmxvY2ssICdsaScsIHRydWUpIHx8IHN0YXJ0QmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIGVuZEJsb2NrID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShlbmRCbG9jaywgJ2xpJywgdHJ1ZSkgfHwgZW5kQmxvY2s7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRCbG9jay50YWdOYW1lID09ICdMSScgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0QmxvY2sudGFnTmFtZSA9PSAnVEQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydEJsb2NrID09PSBvYmogfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmlzQm9keShzdGFydEJsb2NrKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShvYmosIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYnJlYWtQYXJlbnQoc3RhcnRCbG9jaywgb2JqKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFydEJsb2NrICE9PSBlbmRCbG9jaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JqID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShlbmRCbG9jaywgJ2Jsb2NrcXVvdGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW5kQmxvY2sudGFnTmFtZSA9PSAnTEknIHx8IGVuZEJsb2NrLnRhZ05hbWUgPT0gJ1REJyB8fCBkb21VdGlscy5pc0JvZHkoZW5kQmxvY2spKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iai5wYXJlbnROb2RlICYmIGRvbVV0aWxzLnJlbW92ZShvYmosIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmJyZWFrUGFyZW50KGVuZEJsb2NrLCBvYmopO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBibG9ja3F1b3RlcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRoaXMuZG9jdW1lbnQsICdibG9ja3F1b3RlJyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBiaTsgKGJpID0gYmxvY2txdW90ZXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFiaS5jaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShiaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldFBvc2l0aW9uKGJpLCBzdGFydEJsb2NrKSAmIGRvbVV0aWxzLlBPU0lUSU9OX0ZPTExPV0lORyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldFBvc2l0aW9uKGJpLCBlbmRCbG9jaykgJiBkb21VdGlscy5QT1NJVElPTl9QUkVDRURJTkdcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShiaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG1wUmFuZ2UgPSByYW5nZS5jbG9uZVJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdG1wUmFuZ2Uuc3RhcnRDb250YWluZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0bXBSYW5nZS5zdGFydENvbnRhaW5lci5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlTm9kZSA9IG5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBkb0VuZCA9IDE7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/osIPmlbTlvIDlp4tcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0JvZHkobm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlTm9kZSAhPT0gbm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZWxlY3ROb2RlKHByZU5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9FbmQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUocHJlTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRTdGFydChub2RlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYmxvY2txdW90ZVtub2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZWxlY3ROb2RlKHByZU5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNldFN0YXJ0QmVmb3JlKHByZU5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcHJlTm9kZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy/osIPmlbTnu5PmnZ9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVOb2RlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UuZW5kQ29udGFpbmVyLm5vZGVUeXBlID09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdG1wUmFuZ2UuZW5kQ29udGFpbmVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHRtcFJhbmdlLmVuZENvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCb2R5KG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmVOb2RlICE9PSBub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRFbmRBZnRlcihwcmVOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNldEVuZChub2RlLCBub2RlLmNoaWxkTm9kZXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWJsb2NrcXVvdGVbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5zZXRFbmRBZnRlcihwcmVOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlTm9kZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdibG9ja3F1b3RlJyk7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMobm9kZSwgYXR0cnMpO1xuICAgICAgICAgICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKHRtcFJhbmdlLmV4dHJhY3RDb250ZW50cygpKTtcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UuaW5zZXJ0Tm9kZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgLy/ljrvpmaTph43lpI3nmoRcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKG5vZGUsICdibG9ja3F1b3RlJyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gY2hpbGRzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhib29rbWFyaykuc2VsZWN0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0T2JqKHRoaXMpID8gMSA6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvY29udmVydGNhc2UuanNcbiAgICAvKipcbiAgICAgKiDlpKflsI/lhpnovazmjaJcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmiorpgInljLrlhoXmlofmnKzlj5jlpKflhpnvvIzkuI7igJx0b2xvd2VyY2FzZeKAneWRveS7pOS6kuaWpVxuICAgICAqIEBjb21tYW5kIHRvdXBwZXJjYXNlXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICd0b3VwcGVyY2FzZScgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOaKiumAieWMuuWGheaWh+acrOWPmOWwj+WGme+8jOS4juKAnHRvdXBwZXJjYXNl4oCd5ZG95Luk5LqS5palXG4gICAgICogQGNvbW1hbmQgdG9sb3dlcmNhc2VcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3RvbG93ZXJjYXNlJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIFVFLmNvbW1hbmRzWyd0b3VwcGVyY2FzZSddID0gVUUuY29tbWFuZHNbJ3RvbG93ZXJjYXNlJ10gPSB7XG4gICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgaWYgKHJuZy5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm5nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGJrID0gcm5nLmNyZWF0ZUJvb2ttYXJrKCksXG4gICAgICAgICAgICAgICAgYmtFbmQgPSBiay5lbmQsXG4gICAgICAgICAgICAgICAgZmlsdGVyRm4gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWRvbVV0aWxzLmlzQnIobm9kZSkgJiYgIWRvbVV0aWxzLmlzV2hpdGVzcGFjZShub2RlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGN1ck5vZGUgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShiay5zdGFydCwgZmFsc2UsIGZpbHRlckZuKTtcbiAgICAgICAgICAgIHdoaWxlIChjdXJOb2RlICYmIGRvbVV0aWxzLmdldFBvc2l0aW9uKGN1ck5vZGUsIGJrRW5kKSAmIGRvbVV0aWxzLlBPU0lUSU9OX1BSRUNFRElORykge1xuICAgICAgICAgICAgICAgIGlmIChjdXJOb2RlLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5ub2RlVmFsdWUgPSBjdXJOb2RlLm5vZGVWYWx1ZVtjbWQgPT0gJ3RvdXBwZXJjYXNlJyA/ICd0b1VwcGVyQ2FzZScgOiAndG9Mb3dlckNhc2UnXSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjdXJOb2RlID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VyTm9kZSwgdHJ1ZSwgZmlsdGVyRm4pO1xuICAgICAgICAgICAgICAgIGlmIChjdXJOb2RlID09PSBia0VuZCkge1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBybmcubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvaW5kZW50LmpzXG4gICAgLyoqXG4gICAgICog6aaW6KGM57yp6L+bXG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog57yp6L+bXG4gICAgICogQGNvbW1hbmQgaW5kZW50XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdpbmRlbnQnICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgVUUuY29tbWFuZHNbJ2luZGVudCddID0ge1xuICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IG1lLnF1ZXJ5Q29tbWFuZFN0YXRlKCdpbmRlbnQnKSA/ICcwZW0nIDogbWUub3B0aW9ucy5pbmRlbnRWYWx1ZSB8fCAnMmVtJztcbiAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdQYXJhZ3JhcGgnLCAncCcsIHsgc3R5bGU6ICd0ZXh0LWluZGVudDonICsgdmFsdWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcE4gPSBkb21VdGlscy5maWx0ZXJOb2RlTGlzdCh0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCksICdwIGgxIGgyIGgzIGg0IGg1IGg2Jyk7XG4gICAgICAgICAgICByZXR1cm4gcE4gJiYgcE4uc3R5bGUudGV4dEluZGVudCAmJiBwYXJzZUludChwTi5zdHlsZS50ZXh0SW5kZW50KSA/IDEgOiAwO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvcHJpbnQuanNcbiAgICAvKipcbiAgICAgKiDmiZPljbBcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmiZPljbBcbiAgICAgKiBAY29tbWFuZCBwcmludFxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAncHJpbnQnICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgVUUuY29tbWFuZHNbJ3ByaW50J10gPSB7XG4gICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLndpbmRvdy5wcmludCgpO1xuICAgICAgICB9LFxuICAgICAgICBub3ROZWVkVW5kbzogMVxuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3ByZXZpZXcuanNcbiAgICAvKipcbiAgICAgKiDpooTop4hcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDpooTop4hcbiAgICAgKiBAY29tbWFuZCBwcmV2aWV3XG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdwcmV2aWV3JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIFVFLmNvbW1hbmRzWydwcmV2aWV3J10gPSB7XG4gICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdyA9IHdpbmRvdy5vcGVuKCcnLCAnX2JsYW5rJywgJycpLFxuICAgICAgICAgICAgICAgIGQgPSB3LmRvY3VtZW50O1xuICAgICAgICAgICAgZC5vcGVuKCk7XG4gICAgICAgICAgICBkLndyaXRlKFxuICAgICAgICAgICAgICAgICc8IURPQ1RZUEUgaHRtbD48aHRtbD48aGVhZD48bWV0YSBjaGFyc2V0PVwidXRmLThcIi8+PHNjcmlwdCBzcmM9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLlVFRElUT1JfSE9NRV9VUkwgK1xuICAgICAgICAgICAgICAgICAgICAndWVkaXRvci5wYXJzZS5qc1wiPjwvc2NyaXB0PjxzY3JpcHQ+JyArXG4gICAgICAgICAgICAgICAgICAgIFwic2V0VGltZW91dChmdW5jdGlvbigpe3VQYXJzZSgnZGl2Jyx7cm9vdFBhdGg6ICdcIiArXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMICtcbiAgICAgICAgICAgICAgICAgICAgXCInfSl9LDMwMClcIiArXG4gICAgICAgICAgICAgICAgICAgICc8L3NjcmlwdD48L2hlYWQ+PGJvZHk+PGRpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRDb250ZW50KG51bGwsIG51bGwsIHRydWUpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PjwvYm9keT48L2h0bWw+J1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGQuY2xvc2UoKTtcbiAgICAgICAgfSxcbiAgICAgICAgbm90TmVlZFVuZG86IDFcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9zZWxlY3RhbGwuanNcbiAgICAvKipcbiAgICAgKiDlhajpgIlcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDpgInkuK3miYDmnInlhoXlrrlcbiAgICAgKiBAY29tbWFuZCBzZWxlY3RhbGxcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3NlbGVjdGFsbCcgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBVRS5wbHVnaW5zWydzZWxlY3RhbGwnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgbWUuY29tbWFuZHNbJ3NlbGVjdGFsbCddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL+WOu+aOieS6huWOn+eUn+eahHNlbGVjdEFsbCzlm6DkuLrkvJrlh7rnjrDmiqXplJnlkozlvZPlhoXlrrnkuLrnqbrml7bvvIzkuI3og73lh7rnjrDpl63lkIjnirbmgIHnmoTlhYnmoIdcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBib2R5ID0gbWUuYm9keSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlQ29udGVudHMoYm9keSk7XG4gICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayhib2R5KSkge1xuICAgICAgICAgICAgICAgICAgICAvL29wZXJh5LiN6IO96Ieq5Yqo5ZCI5bm25Yiw5YWD57Sg55qE6YeM6L6577yM6KaB5omL5Yqo5aSE55CG5LiA5LiLXG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLm9wZXJhICYmIGJvZHkuZmlyc3RDaGlsZCAmJiBib2R5LmZpcnN0Q2hpbGQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBdEZpcnN0KGJvZHkuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBub3ROZWVkVW5kbzogMVxuICAgICAgICB9O1xuXG4gICAgICAgIC8v5b+r5o236ZSuXG4gICAgICAgIG1lLmFkZHNob3J0Y3V0a2V5KHtcbiAgICAgICAgICAgIHNlbGVjdEFsbDogJ2N0cmwrNjUnXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3BhcmFncmFwaC5qc1xuICAgIC8qKlxuICAgICAqIOauteiQveagt+W8j1xuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOauteiQveagvOW8j1xuICAgICAqIEBjb21tYW5kIHBhcmFncmFwaFxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQHBhcmFtIHtTdHJpbmd9ICAgc3R5bGUgICAgICAgICAgICAgICDmoIfnrb7lgLzkuLrvvJoncCcsICdoMScsICdoMicsICdoMycsICdoNCcsICdoNScsICdoNidcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gICBhdHRycyAgICAgICAgICAgICAgIOagh+etvueahOWxnuaAp1xuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ1BhcmFncmFwaCcsJ2gxJywne1xuICAgICAqICAgICBjbGFzczondGVzdCdcbiAgICAgKiB9JyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog6L+U5Zue6YCJ5Yy65YaF6IqC54K55qCH562+5ZCNXG4gICAgICogQGNvbW1hbmQgcGFyYWdyYXBoXG4gICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcmV0dXJuIHsgU3RyaW5nIH0g6IqC54K55qCH562+5ZCNXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnUGFyYWdyYXBoJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1sncGFyYWdyYXBoJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICBibG9jayA9IGRvbVV0aWxzLmlzQmxvY2tFbG0sXG4gICAgICAgICAgICBub3RFeGNoYW5nZSA9IFsnVEQnLCAnTEknLCAnUFJFJ10sXG4gICAgICAgICAgICBkb1BhcmFncmFwaCA9IGZ1bmN0aW9uIChyYW5nZSwgc3R5bGUsIGF0dHJzLCBzb3VyY2VDbWROYW1lKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJvb2ttYXJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKSxcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyRm4gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT0gJ2JyJyAmJiAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUobm9kZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICFkb21VdGlscy5pc1doaXRlc3BhY2Uobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHBhcmE7XG5cbiAgICAgICAgICAgICAgICByYW5nZS5lbmxhcmdlKHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBib29rbWFyazIgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoYm9va21hcmsyLnN0YXJ0LCBmYWxzZSwgZmlsdGVyRm4pLFxuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiAhKGRvbVV0aWxzLmdldFBvc2l0aW9uKGN1cnJlbnQsIGJvb2ttYXJrMi5lbmQpICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5ub2RlVHlwZSA9PSAzIHx8ICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiBjdXJyZW50ICE9PSBib29rbWFyazIuZW5kICYmICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgbnVsbCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFibG9jayhub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNldEVuZEFmdGVyKHRtcE5vZGUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhID0gcmFuZ2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRBdHRyaWJ1dGVzKHBhcmEsIGF0dHJzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc291cmNlQ21kTmFtZSAmJiBzb3VyY2VDbWROYW1lID09ICdjdXN0b21zdHlsZScgJiYgYXR0cnMuc3R5bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYS5zdHlsZS5jc3NUZXh0ID0gYXR0cnMuc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYS5hcHBlbmRDaGlsZCh0bXBSYW5nZS5leHRyYWN0Q29udGVudHMoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+mcgOimgeWGheWuueWNoOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlOb2RlKHBhcmEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbENoYXIocmFuZ2UuZG9jdW1lbnQsIHBhcmEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZS5pbnNlcnROb2RlKHBhcmEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gcGFyYS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/lpoLmnpxwYXJh5LiK5LiA57qn5piv5LiA5LiqYmxvY2vlhYPntKDkuJTkuI3mmK9ib2R5LHRk5bCx5Yig6Zmk5a6DXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2socGFyZW50KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICFkb21VdGlscy5pc0JvZHkocGFyYS5wYXJlbnROb2RlKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmluZGV4T2Yobm90RXhjaGFuZ2UsIHBhcmVudC50YWdOYW1lKSA9PSAtMVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lrZjlgqhkaXIsc3R5bGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShzb3VyY2VDbWROYW1lICYmIHNvdXJjZUNtZE5hbWUgPT0gJ2N1c3RvbXN0eWxlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LmdldEF0dHJpYnV0ZSgnZGlyJykgJiYgcGFyYS5zZXRBdHRyaWJ1dGUoJ2RpcicsIHBhcmVudC5nZXRBdHRyaWJ1dGUoJ2RpcicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZToxMDcwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5zdHlsZS5jc3NUZXh0ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFyYS5zdHlsZS5jc3NUZXh0ID0gcGFyZW50LnN0eWxlLmNzc1RleHQgKyAnOycgKyBwYXJhLnN0eWxlLmNzc1RleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjEwMzBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LnN0eWxlLnRleHRBbGlnbiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIXBhcmEuc3R5bGUudGV4dEFsaWduICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFyYS5zdHlsZS50ZXh0QWxpZ24gPSBwYXJlbnQuc3R5bGUudGV4dEFsaWduKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LnN0eWxlLnRleHRJbmRlbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFwYXJhLnN0eWxlLnRleHRJbmRlbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChwYXJhLnN0eWxlLnRleHRJbmRlbnQgPSBwYXJlbnQuc3R5bGUudGV4dEluZGVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5zdHlsZS5wYWRkaW5nICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhcGFyYS5zdHlsZS5wYWRkaW5nICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFyYS5zdHlsZS5wYWRkaW5nID0gcGFyZW50LnN0eWxlLnBhZGRpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTcwNiDpgInmi6nnmoTlsLHmmK9oMS026KaB5Yig6ZmkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJzICYmIC9oXFxkL2kudGVzdChwYXJlbnQudGFnTmFtZSkgJiYgIS9oXFxkL2kudGVzdChwYXJhLnRhZ05hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMocGFyZW50LCBhdHRycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2VDbWROYW1lICYmIHNvdXJjZUNtZE5hbWUgPT0gJ2N1c3RvbXN0eWxlJyAmJiBhdHRycy5zdHlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LnN0eWxlLmNzc1RleHQgPSBhdHRycy5zdHlsZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUocGFyYSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmEgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHBhcmEucGFyZW50Tm9kZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHV0aWxzLmluZGV4T2Yobm90RXhjaGFuZ2UsIHBhcmVudC50YWdOYW1lKSAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBwYXJhO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgZmFsc2UsIGZpbHRlckZuKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCB0cnVlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJhbmdlLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrMikubW92ZVRvQm9va21hcmsoYm9va21hcmspO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgbWUuc2V0T3B0KCdwYXJhZ3JhcGgnLCB7IHA6ICcnLCBoMTogJycsIGgyOiAnJywgaDM6ICcnLCBoNDogJycsIGg1OiAnJywgaDY6ICcnIH0pO1xuICAgICAgICBtZS5jb21tYW5kc1sncGFyYWdyYXBoJ10gPSB7XG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZE5hbWUsIHN0eWxlLCBhdHRycywgc291cmNlQ21kTmFtZSkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgLy/pl63lkIjml7bljZXni6zlpITnkIZcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0eHQgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdwJyk7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodHh0KTtcbiAgICAgICAgICAgICAgICAgICAgLy/ljrvmjonlhpfkvZnnmoRmaWxsY2hhclxuICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGUgPSB0eHQucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHR4dC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlICYmIGRvbVV0aWxzLmlzV2hpdGVzcGFjZShub2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByYW5nZSA9IGRvUGFyYWdyYXBoKHJhbmdlLCBzdHlsZSwgYXR0cnMsIHNvdXJjZUNtZE5hbWUpO1xuICAgICAgICAgICAgICAgIGlmICh0eHQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUodHh0KS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgcE4gPSB0eHQucGFyZW50Tm9kZTtcblxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodHh0KTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShwTikgJiYgZG9tVXRpbHMuaXNFbXB0eU5vZGUocE4pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZSh0aGlzLmRvY3VtZW50LCBwTik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5nZWNrbyAmJiByYW5nZS5jb2xsYXBzZWQgJiYgcmFuZ2Uuc3RhcnRDb250YWluZXIubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSByYW5nZS5zdGFydENvbnRhaW5lci5jaGlsZE5vZGVzW3JhbmdlLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkICYmIGNoaWxkLm5vZGVUeXBlID09IDEgJiYgY2hpbGQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09IHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChjaGlsZCwgMCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy90cmFjZToxMDk3IOWOn+adpeaciXRydWXvvIzljp/lm6Dlv5jkuobvvIzkvYbljrvkuoblsLHkuI3og73muIXpmaTlpJrkvZnnmoTljaDkvY3nrKbkuoZcbiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5vZGUgPSBkb21VdGlscy5maWx0ZXJOb2RlTGlzdCh0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCksICdwIGgxIGgyIGgzIGg0IGg1IGg2Jyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUgPyBub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA6ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2RpcmVjdGlvbmFsaXR5LmpzXG4gICAgLyoqXG4gICAgICog6K6+572u5paH5a2X6L6T5YWl55qE5pa55ZCR55qE5o+S5Lu2XG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBibG9jayA9IGRvbVV0aWxzLmlzQmxvY2tFbG0sXG4gICAgICAgICAgICBnZXRPYmogPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB2YXIgc3RhcnROb2RlID0gZWRpdG9yLnNlbGVjdGlvbi5nZXRTdGFydCgpLFxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIHBhcmVudHM7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBpZiAoIHN0YXJ0Tm9kZSApIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAvL+afpeaJvuaJgOacieeahOaYr2Jsb2Nr55qE54i25Lqy6IqC54K5XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgcGFyZW50cyA9IGRvbVV0aWxzLmZpbmRQYXJlbnRzKCBzdGFydE5vZGUsIHRydWUsIGJsb2NrLCB0cnVlICk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgZm9yICggdmFyIGkgPSAwLGNpOyBjaSA9IHBhcmVudHNbaSsrXTsgKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIGlmICggY2kuZ2V0QXR0cmlidXRlKCAnZGlyJyApICkge1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5maWx0ZXJOb2RlTGlzdChlZGl0b3Iuc2VsZWN0aW9uLmdldFN0YXJ0RWxlbWVudFBhdGgoKSwgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG4gJiYgbi5ub2RlVHlwZSA9PSAxICYmIG4uZ2V0QXR0cmlidXRlKCdkaXInKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkb0RpcmVjdGlvbmFsaXR5ID0gZnVuY3Rpb24gKHJhbmdlLCBlZGl0b3IsIGZvcndhcmQpIHtcbiAgICAgICAgICAgICAgICB2YXIgYm9va21hcmssXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlckZuID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09IDEgPyAhZG9tVXRpbHMuaXNCb29rbWFya05vZGUobm9kZSkgOiAhZG9tVXRpbHMuaXNXaGl0ZXNwYWNlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvYmogPSBnZXRPYmooZWRpdG9yKTtcblxuICAgICAgICAgICAgICAgIGlmIChvYmogJiYgcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIG9iai5zZXRBdHRyaWJ1dGUoJ2RpcicsIGZvcndhcmQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJvb2ttYXJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKTtcbiAgICAgICAgICAgICAgICByYW5nZS5lbmxhcmdlKHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBib29rbWFyazIgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoYm9va21hcmsyLnN0YXJ0LCBmYWxzZSwgZmlsdGVyRm4pLFxuICAgICAgICAgICAgICAgICAgICB0bXBSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiAhKGRvbVV0aWxzLmdldFBvc2l0aW9uKGN1cnJlbnQsIGJvb2ttYXJrMi5lbmQpICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5ub2RlVHlwZSA9PSAzIHx8ICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudCAmJiBjdXJyZW50ICE9PSBib29rbWFyazIuZW5kICYmICFibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgbnVsbCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFibG9jayhub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNldEVuZEFmdGVyKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbW1vbiA9IHRtcFJhbmdlLmdldENvbW1vbkFuY2VzdG9yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRvbVV0aWxzLmlzQm9keShjb21tb24pICYmIGJsb2NrKGNvbW1vbikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+mBjeWOhuWIsOS6hmJsb2Nr6IqC54K5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbW9uLnNldEF0dHJpYnV0ZSgnZGlyJywgZm9yd2FyZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGNvbW1vbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/msqHmnInpgY3ljobliLDvvIzmt7vliqDkuIDkuKpibG9ja+iKgueCuVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gcmFuZ2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuc2V0QXR0cmlidXRlKCdkaXInLCBmb3J3YXJkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZnJhZyA9IHRtcFJhbmdlLmV4dHJhY3RDb250ZW50cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuYXBwZW5kQ2hpbGQoZnJhZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UuaW5zZXJ0Tm9kZShwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGN1cnJlbnQsIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgdHJ1ZSwgZmlsdGVyRm4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByYW5nZS5tb3ZlVG9Cb29rbWFyayhib29rbWFyazIpLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaWh+Wtl+i+k+WFpeaWueWQkVxuICAgICAgICAgKiBAY29tbWFuZCBkaXJlY3Rpb25hbGl0eVxuICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZE5hbWUg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGZvcndhcmQg5Lyg5YWlJ2x0cifooajnpLrku47lt6blkJHlj7PovpPlhaXvvIzkvKDlhaUncnRsJ+ihqOekuuS7juWPs+WQkeW3pui+k+WFpVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2RpcmVjdGlvbmFsaXR5JywgJ2x0cicpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOafpeivouW9k+WJjemAieWMuueahOaWh+Wtl+i+k+WFpeaWueWQkVxuICAgICAgICAgKiBAY29tbWFuZCBkaXJlY3Rpb25hbGl0eVxuICAgICAgICAgKiBAbWV0aG9kIHF1ZXJ5Q29tbWFuZFZhbHVlXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZE5hbWUg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDov5Tlm54nbHRyJ+ihqOekuuS7juW3puWQkeWPs+i+k+WFpe+8jOi/lOWbnidydGwn6KGo56S65LuO5Y+z5ZCR5bem6L6T5YWlXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCAnZGlyZWN0aW9uYWxpdHknKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuICAgICAgICBVRS5jb21tYW5kc1snZGlyZWN0aW9uYWxpdHknXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSwgZm9yd2FyZCkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgLy/pl63lkIjml7bljZXni6zlpITnkIZcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0eHQgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdkJyk7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodHh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZG9EaXJlY3Rpb25hbGl0eShyYW5nZSwgdGhpcywgZm9yd2FyZCk7XG4gICAgICAgICAgICAgICAgaWYgKHR4dCkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZSh0eHQpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodHh0KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRWYWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBub2RlID0gZ2V0T2JqKHRoaXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBub2RlID8gbm9kZS5nZXRBdHRyaWJ1dGUoJ2RpcicpIDogJ2x0cic7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIC8vIHBsdWdpbnMvaG9yaXpvbnRhbC5qc1xuICAgIC8qKlxuICAgICAqIOaPkuWFpeWIhuWJsue6v+aPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOaPkuWFpeWIhuWJsue6v1xuICAgICAqIEBjb21tYW5kIGhvcml6b250YWxcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kTmFtZSDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdob3Jpem9udGFsJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIFVFLnBsdWdpbnNbJ2hvcml6b250YWwnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgbWUuY29tbWFuZHNbJ2hvcml6b250YWwnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKG1lLnF1ZXJ5Q29tbWFuZFN0YXRlKGNtZE5hbWUpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0SHRtbCcsICc8aHI+Jyk7XG4gICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDEgJiYgIXN0YXJ0LmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh0bXAgPSBzdGFydC5jaGlsZE5vZGVzW3JhbmdlLnN0YXJ0T2Zmc2V0IC0gMV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRtcC5ub2RlVHlwZSA9PSAxICYmIHRtcC50YWdOYW1lID09ICdIUicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lLm9wdGlvbnMuZW50ZXJUYWcgPT0gJ3AnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHRtcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydCh0bXAsIDApLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodG1wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKHRtcCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8v6L6555WM5ZyodGFibGXph4zkuI3og73liqDliIbpmpTnur9cbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbVV0aWxzLmZpbHRlck5vZGVMaXN0KHRoaXMuc2VsZWN0aW9uLmdldFN0YXJ0RWxlbWVudFBhdGgoKSwgJ3RhYmxlJykgPyAtMSA6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8vICAgIG1lLmFkZExpc3RlbmVyKCdkZWxrZXl1cCcsZnVuY3Rpb24oKXtcbiAgICAgICAgLy8gICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAvLyAgICAgICAgaWYoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPiA4KXtcbiAgICAgICAgLy8gICAgICAgICAgICBybmcudHh0VG9FbG1Cb3VuZGFyeSh0cnVlKTtcbiAgICAgICAgLy8gICAgICAgICAgICBpZihkb21VdGlscy5pc1N0YXJ0SW5ibG9jayhybmcpKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBybmcuc3RhcnRDb250YWluZXI7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgIHZhciBwcmUgPSB0bXBOb2RlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgaWYocHJlICYmIGRvbVV0aWxzLmlzVGFnTm9kZShwcmUsJ2hyJykpe1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHByZSk7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0KCk7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgIC8vICAgICAgICAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgICAgICB9XG4gICAgICAgIC8vICAgICAgICB9XG4gICAgICAgIC8vICAgICAgICBpZihkb21VdGlscy5pc0JvZHkocm5nLnN0YXJ0Q29udGFpbmVyKSl7XG4gICAgICAgIC8vICAgICAgICAgICAgdmFyIGhyID0gcm5nLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcm5nLnN0YXJ0T2Zmc2V0IC0xXTtcbiAgICAgICAgLy8gICAgICAgICAgICBpZihociAmJiBoci5ub2RlTmFtZSA9PSAnSFInKXtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgdmFyIG5leHQgPSBoci5uZXh0U2libGluZztcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgaWYobmV4dCl7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnQobmV4dCwwKVxuICAgICAgICAvLyAgICAgICAgICAgICAgICB9ZWxzZSBpZihoci5wcmV2aW91c1NpYmxpbmcpe1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QXRMYXN0KGhyLnByZXZpb3VzU2libGluZylcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IHRoaXMuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgaHIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocCxocik7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZSh0aGlzLmRvY3VtZW50LHApO1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KHAsMCk7XG4gICAgICAgIC8vICAgICAgICAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGhyKTtcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgcm5nLnNldEN1cnNvcihmYWxzZSx0cnVlKTtcbiAgICAgICAgLy8gICAgICAgICAgICB9XG4gICAgICAgIC8vICAgICAgICB9XG4gICAgICAgIC8vICAgIH0pXG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdkZWxrZXlkb3duJywgZnVuY3Rpb24gKG5hbWUsIGV2dCkge1xuICAgICAgICAgICAgdmFyIHJuZyA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICBybmcudHh0VG9FbG1Cb3VuZGFyeSh0cnVlKTtcbiAgICAgICAgICAgIGlmIChkb21VdGlscy5pc1N0YXJ0SW5ibG9jayhybmcpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBybmcuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgdmFyIHByZSA9IHRtcE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgIGlmIChwcmUgJiYgZG9tVXRpbHMuaXNUYWdOb2RlKHByZSwgJ2hyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHByZSk7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucHJldmVudERlZmF1bHQoZXZ0KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy90aW1lLmpzXG4gICAgLyoqXG4gICAgICog5o+S5YWl5pe26Ze05ZKM5pel5pyfXG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5o+S5YWl5pe26Ze077yM6buY6K6k5qC85byP77yaMTI6NTk6NTlcbiAgICAgKiBAY29tbWFuZCB0aW1lXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICd0aW1lJyk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmj5LlhaXml6XmnJ/vvIzpu5jorqTmoLzlvI/vvJoyMDEzLTA4LTMwXG4gICAgICogQGNvbW1hbmQgZGF0ZVxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnZGF0ZScpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIFVFLmNvbW1hbmRzWyd0aW1lJ10gPSBVRS5jb21tYW5kc1snZGF0ZSddID0ge1xuICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgZm9ybWF0KSB7XG4gICAgICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGZvcm1hdFRpbWUoZGF0ZSwgZm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGhoID0gKCcwJyArIGRhdGUuZ2V0SG91cnMoKSkuc2xpY2UoLTIpLFxuICAgICAgICAgICAgICAgICAgICBpaSA9ICgnMCcgKyBkYXRlLmdldE1pbnV0ZXMoKSkuc2xpY2UoLTIpLFxuICAgICAgICAgICAgICAgICAgICBzcyA9ICgnMCcgKyBkYXRlLmdldFNlY29uZHMoKSkuc2xpY2UoLTIpO1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCAnaGg6aWk6c3MnO1xuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXQucmVwbGFjZSgvaGgvZ2ksIGhoKS5yZXBsYWNlKC9paS9naSwgaWkpLnJlcGxhY2UoL3NzL2dpLCBzcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUsIGZvcm1hdCkge1xuICAgICAgICAgICAgICAgIHZhciB5eXl5ID0gKCcwMDAnICsgZGF0ZS5nZXRGdWxsWWVhcigpKS5zbGljZSgtNCksXG4gICAgICAgICAgICAgICAgICAgIHl5ID0geXl5eS5zbGljZSgtMiksXG4gICAgICAgICAgICAgICAgICAgIG1tID0gKCcwJyArIChkYXRlLmdldE1vbnRoKCkgKyAxKSkuc2xpY2UoLTIpLFxuICAgICAgICAgICAgICAgICAgICBkZCA9ICgnMCcgKyBkYXRlLmdldERhdGUoKSkuc2xpY2UoLTIpO1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdCB8fCAneXl5eS1tbS1kZCc7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdC5yZXBsYWNlKC95eXl5L2dpLCB5eXl5KS5yZXBsYWNlKC95eS9naSwgeXkpLnJlcGxhY2UoL21tL2dpLCBtbSkucmVwbGFjZSgvZGQvZ2ksIGRkKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5leGVjQ29tbWFuZCgnaW5zZXJ0SHRtbCcsIGNtZCA9PSAndGltZScgPyBmb3JtYXRUaW1lKGRhdGUsIGZvcm1hdCkgOiBmb3JtYXREYXRlKGRhdGUsIGZvcm1hdCkpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvcm93c3BhY2luZy5qc1xuICAgIC8qKlxuICAgICAqIOauteWJjeauteWQjumXtOi3neaPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOiuvue9ruautemXtOi3nVxuICAgICAqIEBjb21tYW5kIHJvd3NwYWNpbmdcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHZhbHVlIOautemXtOi3neeahOWAvO+8jOS7pXB45Li65Y2V5L2NXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gZGlyIOmXtOi3neS9jee9ru+8jHRvcOaIlmJvdHRvbe+8jOWIhuWIq+ihqOekuuauteWJjeWSjOauteWQjlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3Jvd3NwYWNpbmcnLCAnMTAnLCAndG9wJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1sncm93c3BhY2luZyddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICBtZS5zZXRPcHQoe1xuICAgICAgICAgICAgcm93c3BhY2luZ3RvcDogWyc1JywgJzEwJywgJzE1JywgJzIwJywgJzI1J10sXG4gICAgICAgICAgICByb3dzcGFjaW5nYm90dG9tOiBbJzUnLCAnMTAnLCAnMTUnLCAnMjAnLCAnMjUnXVxuICAgICAgICB9KTtcbiAgICAgICAgbWUuY29tbWFuZHNbJ3Jvd3NwYWNpbmcnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSwgdmFsdWUsIGRpcikge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhlY0NvbW1hbmQoJ3BhcmFncmFwaCcsICdwJywgeyBzdHlsZTogJ21hcmdpbi0nICsgZGlyICsgJzonICsgdmFsdWUgKyAncHgnIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoY21kTmFtZSwgZGlyKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBOID0gZG9tVXRpbHMuZmlsdGVyTm9kZUxpc3QodGhpcy5zZWxlY3Rpb24uZ2V0U3RhcnRFbGVtZW50UGF0aCgpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbVV0aWxzLmlzQmxvY2tFbG0obm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTtcbiAgICAgICAgICAgICAgICAvL3RyYWNlOjEwMjZcbiAgICAgICAgICAgICAgICBpZiAocE4pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHBOLCAnbWFyZ2luLScgKyBkaXIpLnJlcGxhY2UoL1teXFxkXS9nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhdmFsdWUgPyAwIDogdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2xpbmVoZWlnaHQuanNcbiAgICAvKipcbiAgICAgKiDorr7nva7ooYzlhoXpl7Tot51cbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snbGluZWhlaWdodCddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICBtZS5zZXRPcHQoeyBsaW5laGVpZ2h0OiBbJzEnLCAnMS41JywgJzEuNzUnLCAnMicsICczJywgJzQnLCAnNSddIH0pO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDooYzot51cbiAgICAgICAgICogQGNvbW1hbmQgbGluZWhlaWdodFxuICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZE5hbWUg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHZhbHVlIOS8oOWFpeeahOihjOmrmOWAvO+8jCDor6XlgLzmmK/lvZPliY3lrZfkvZPnmoTlgI3mlbDvvIwg5L6L5aaC77yaIDEuNSwgMS43NVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2xpbmVoZWlnaHQnLCAxLjUpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmn6Xor6LlvZPliY3pgInljLrlhoXlrrnnmoTooYzpq5jlpKflsI9cbiAgICAgICAgICogQGNvbW1hbmQgbGluZWhlaWdodFxuICAgICAgICAgKiBAbWV0aG9kIHF1ZXJ5Q29tbWFuZFZhbHVlXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnuW9k+WJjeihjOmrmOWkp+Wwj1xuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSggJ2xpbmVoZWlnaHQnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICBtZS5jb21tYW5kc1snbGluZWhlaWdodCddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhlY0NvbW1hbmQoJ3BhcmFncmFwaCcsICdwJywge1xuICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2xpbmUtaGVpZ2h0OicgKyAodmFsdWUgPT0gJzEnID8gJ25vcm1hbCcgOiB2YWx1ZSArICdlbScpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kVmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcE4gPSBkb21VdGlscy5maWx0ZXJOb2RlTGlzdCh0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5pc0Jsb2NrRWxtKG5vZGUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmIChwTikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHBOLCAnbGluZS1oZWlnaHQnKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09ICdub3JtYWwnID8gMSA6IHZhbHVlLnJlcGxhY2UoL1teXFxkLl0qL2dpLCAnJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2luc2VydGNvZGUuanNcbiAgICAvKipcbiAgICAgKiDmj5LlhaXku6PnoIHmj5Lku7ZcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydpbnNlcnRjb2RlJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIG1lLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoXG4gICAgICAgICAgICAgICAgJ3ByZScsXG4gICAgICAgICAgICAgICAgJ3ByZXttYXJnaW46LjVlbSAwO3BhZGRpbmc6LjRlbSAuNmVtO2JvcmRlci1yYWRpdXM6OHB4O2JhY2tncm91bmQ6I2Y4ZjhmODt9JyxcbiAgICAgICAgICAgICAgICBtZS5kb2N1bWVudFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICAgIG1lLnNldE9wdCgnaW5zZXJ0Y29kZScsIHtcbiAgICAgICAgICAgIGFzMzogJ0FjdGlvblNjcmlwdDMnLFxuICAgICAgICAgICAgYmFzaDogJ0Jhc2gvU2hlbGwnLFxuICAgICAgICAgICAgY3BwOiAnQy9DKysnLFxuICAgICAgICAgICAgY3NzOiAnQ3NzJyxcbiAgICAgICAgICAgIGNmOiAnQ29kZUZ1bmN0aW9uJyxcbiAgICAgICAgICAgICdjIyc6ICdDIycsXG4gICAgICAgICAgICBkZWxwaGk6ICdEZWxwaGknLFxuICAgICAgICAgICAgZGlmZjogJ0RpZmYnLFxuICAgICAgICAgICAgZXJsYW5nOiAnRXJsYW5nJyxcbiAgICAgICAgICAgIGdyb292eTogJ0dyb292eScsXG4gICAgICAgICAgICBodG1sOiAnSHRtbCcsXG4gICAgICAgICAgICBqYXZhOiAnSmF2YScsXG4gICAgICAgICAgICBqZng6ICdKYXZhRngnLFxuICAgICAgICAgICAganM6ICdKYXZhc2NyaXB0JyxcbiAgICAgICAgICAgIHBsOiAnUGVybCcsXG4gICAgICAgICAgICBwaHA6ICdQaHAnLFxuICAgICAgICAgICAgcGxhaW46ICdQbGFpbiBUZXh0JyxcbiAgICAgICAgICAgIHBzOiAnUG93ZXJTaGVsbCcsXG4gICAgICAgICAgICBweXRob246ICdQeXRob24nLFxuICAgICAgICAgICAgcnVieTogJ1J1YnknLFxuICAgICAgICAgICAgc2NhbGE6ICdTY2FsYScsXG4gICAgICAgICAgICBzcWw6ICdTcWwnLFxuICAgICAgICAgICAgdmI6ICdWYicsXG4gICAgICAgICAgICB4bWw6ICdYbWwnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmj5LlhaXku6PnoIFcbiAgICAgICAgICogQGNvbW1hbmQgaW5zZXJ0Y29kZVxuICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gbGFuZyDmj5LlhaXku6PnoIHnmoTor63oqIBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdpbnNlcnRjb2RlJywgJ2phdmFzY3JpcHQnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5aaC5p6c6YCJ5Yy65omA5Zyo5L2N572u5piv5o+S5YWl5o+S5YWl5Luj56CB5Yy65Z+f77yM6L+U5Zue5Luj56CB55qE6K+t6KiAXG4gICAgICAgICAqIEBjb21tYW5kIGluc2VydGNvZGVcbiAgICAgICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDov5Tlm57ku6PnoIHnmoTor63oqIBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoICdpbnNlcnRjb2RlJyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgbWUuY29tbWFuZHNbJ2luc2VydGNvZGUnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBsYW5nKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHByZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCAncHJlJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHByZSkge1xuICAgICAgICAgICAgICAgICAgICBwcmUuY2xhc3NOYW1lID0gJ2JydXNoOicgKyBsYW5nICsgJzt0b29sYmFyOmZhbHNlOyc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvZGUgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJuZy5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgPSBicm93c2VyLmllICYmIGJyb3dzZXIuaWUxMWJlbG93ID8gKGJyb3dzZXIudmVyc2lvbiA8PSA4ID8gJyZuYnNwOycgOiAnJykgOiAnPGJyLz4nO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZyYWcgPSBybmcuZXh0cmFjdENvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGl2ID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXYuYXBwZW5kQ2hpbGQoZnJhZyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVUUuZmlsdGVyTm9kZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVUUuaHRtbHBhcnNlcihkaXYuaW5uZXJIVE1MLnJlcGxhY2UoL1tcXHJcXHRdL2csICcnKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMuZmlsdGVyVHh0UnVsZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLmNoaWxkcmVuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllICYmIGJyb3dzZXIuaWUxMWJlbG93ICYmIGJyb3dzZXIudmVyc2lvbiA+IDgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT0gJ2VsZW1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUudGFnTmFtZSA9PSAnYnInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gJ1xcbic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghZHRkLiRlbXB0eVtub2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gobm9kZS5jaGlsZHJlbiwgZnVuY3Rpb24gKGNuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY24udHlwZSA9PSAnZWxlbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY24udGFnTmFtZSA9PSAnYnInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gJ1xcbic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghZHRkLiRlbXB0eVtub2RlLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gY24uaW5uZXJUZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9IGNuLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIS9cXG4kLy50ZXN0KGNvZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9ICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9IG5vZGUuZGF0YSArICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlLm5leHRTaWJsaW5nKCkgJiYgL1xcbiQvLnRlc3QoY29kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlID0gY29kZS5yZXBsYWNlKC9cXG4kLywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci5pZTExYmVsb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50eXBlID09ICdlbGVtZW50Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50YWdOYW1lID09ICdicicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gJzxicj4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gobm9kZS5jaGlsZHJlbiwgZnVuY3Rpb24gKGNuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNuLnR5cGUgPT0gJ2VsZW1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbi50YWdOYW1lID09ICdicicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gJzxicj4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gY24uaW5uZXJUZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9IGNuLmRhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIS9icj4kLy50ZXN0KGNvZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZSArPSAnPGJyPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9IG5vZGUuZGF0YSArICc8YnI+JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlLm5leHRTaWJsaW5nKCkgJiYgLzxicj4kLy50ZXN0KGNvZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgPSBjb2RlLnJlcGxhY2UoLzxicj4kLywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZSArPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnR5cGUgPT0gJ2VsZW1lbnQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGR0ZC4kZW1wdHlbbm9kZS50YWdOYW1lXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG5vZGUuaW5uZXJUZXh0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbm9kZS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghL2JyXFwvP1xccyo+JC8udGVzdChjb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW5vZGUubmV4dFNpYmxpbmcoKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlICs9ICc8YnI+JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2luc2VydGh0bWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxwcmUgaWQ9XCJjb2RlclwiY2xhc3M9XCJicnVzaDonICsgbGFuZyArICc7dG9vbGJhcjpmYWxzZVwiPicgKyBjb2RlICsgJzwvcHJlPicsXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgcHJlID0gbWUuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvZGVyJyk7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMocHJlLCAnaWQnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBwcmUucHJldmlvdXNTaWJsaW5nO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICgodG1wTm9kZS5ub2RlVHlwZSA9PSAzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZS5ub2RlVmFsdWUubGVuZ3RoID09IDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicm93c2VyLmllICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJvd3Nlci52ZXJzaW9uID09IDYpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNFbXB0eUJsb2NrKHRtcE5vZGUpKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5QmxvY2socHJlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KHByZSwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3ROb2RlQ29udGVudHMocHJlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRWYWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBwYXRoID0gdGhpcy5zZWxlY3Rpb24uZ2V0U3RhcnRFbGVtZW50UGF0aCgpO1xuICAgICAgICAgICAgICAgIHZhciBsYW5nID0gJyc7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChwYXRoLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5ub2RlTmFtZSA9PSAnUFJFJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gbm9kZS5jbGFzc05hbWUubWF0Y2goL2JydXNoOihbXjtdKykvKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmcgPSBtYXRjaCAmJiBtYXRjaFsxXSA/IG1hdGNoWzFdIDogJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbGFuZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBtZS5hZGRJbnB1dFJ1bGUoZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgncHJlJyksIGZ1bmN0aW9uIChwcmUpIHtcbiAgICAgICAgICAgICAgICB2YXIgYnJzID0gcHJlLmdldE5vZGVzQnlUYWdOYW1lKCdicicpO1xuICAgICAgICAgICAgICAgIGlmIChicnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyb3dzZXIuaWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyb3dzZXIuaWUxMWJlbG93ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBicm93c2VyLnZlcnNpb24gPiA4ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGJycywgZnVuY3Rpb24gKGJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHR4dCA9IFVFLnVOb2RlLmNyZWF0ZVRleHQoJ1xcbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHR4dCwgYnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci5pZTExYmVsb3cgJiYgYnJvd3Nlci52ZXJzaW9uID4gOCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHZhciBjb2RlID0gcHJlLmlubmVyVGV4dCgpLnNwbGl0KC9cXG4vKTtcbiAgICAgICAgICAgICAgICBwcmUuaW5uZXJIVE1MKCcnKTtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNvZGUsIGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmFwcGVuZENoaWxkKFVFLnVOb2RlLmNyZWF0ZVRleHQoYykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChVRS51Tm9kZS5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgbWUuYWRkT3V0cHV0UnVsZShmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdwcmUnKSwgZnVuY3Rpb24gKHByZSkge1xuICAgICAgICAgICAgICAgIHZhciBjb2RlID0gJyc7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChwcmUuY2hpbGRyZW4sIGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuLnR5cGUgPT0gJ3RleHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WcqGll5LiL5paH5pys5YaF5a655pyJ5Y+v6IO95pyr5bC+5bim5pyJXFxu6KaB5Y675o6JXG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjMzOTZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gbi5kYXRhLnJlcGxhY2UoL1sgXS9nLCAnJm5ic3A7JykucmVwbGFjZSgvXFxuJC8sICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuLnRhZ05hbWUgPT0gJ2JyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gJ1xcbic7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgKz0gIWR0ZC4kZW1wdHlbbi50YWdOYW1lXSA/ICcnIDogbi5pbm5lclRleHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcHJlLmlubmVyVGV4dChjb2RlLnJlcGxhY2UoLygmbmJzcDt8XFxuKSskLywgJycpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgLy/kuI3pnIDopoHliKTmlq1oaWdobGlnaHTnmoRjb21tYW5k5YiX6KGoXG4gICAgICAgIG1lLm5vdE5lZWRDb2RlUXVlcnkgPSB7XG4gICAgICAgICAgICBoZWxwOiAxLFxuICAgICAgICAgICAgdW5kbzogMSxcbiAgICAgICAgICAgIHJlZG86IDEsXG4gICAgICAgICAgICBzb3VyY2U6IDEsXG4gICAgICAgICAgICBwcmludDogMSxcbiAgICAgICAgICAgIHNlYXJjaHJlcGxhY2U6IDEsXG4gICAgICAgICAgICBmdWxsc2NyZWVuOiAxLFxuICAgICAgICAgICAgcHJldmlldzogMSxcbiAgICAgICAgICAgIGluc2VydHBhcmFncmFwaDogMSxcbiAgICAgICAgICAgIGVsZW1lbnRwYXRoOiAxLFxuICAgICAgICAgICAgaW5zZXJ0Y29kZTogMSxcbiAgICAgICAgICAgIGluc2VydGh0bWw6IDEsXG4gICAgICAgICAgICBzZWxlY3RhbGw6IDFcbiAgICAgICAgfTtcbiAgICAgICAgLy/lsIZxdWV5Q29tbWFtbmRTdGF0ZemHjee9rlxuICAgICAgICB2YXIgb3JnUXVlcnkgPSBtZS5xdWVyeUNvbW1hbmRTdGF0ZTtcbiAgICAgICAgbWUucXVlcnlDb21tYW5kU3RhdGUgPSBmdW5jdGlvbiAoY21kKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgICAgICBpZiAoIW1lLm5vdE5lZWRDb2RlUXVlcnlbY21kLnRvTG93ZXJDYXNlKCldICYmIG1lLnNlbGVjdGlvbiAmJiBtZS5xdWVyeUNvbW1hbmRWYWx1ZSgnaW5zZXJ0Y29kZScpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFVFLkVkaXRvci5wcm90b3R5cGUucXVlcnlDb21tYW5kU3RhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2JlZm9yZWVudGVya2V5ZG93bicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgIHZhciBwcmUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ3ByZScsIHRydWUpO1xuICAgICAgICAgICAgaWYgKHByZSkge1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgaWYgKCFybmcuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWJyb3dzZXIuaWUgfHwgYnJvd3Nlci5pZTlhYm92ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmU7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKHRtcE5vZGUpLnNldFN0YXJ0QWZ0ZXIodG1wTm9kZSkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXh0ID0gdG1wTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFuZXh0ICYmICghYnJvd3Nlci5pZSB8fCBicm93c2VyLnZlcnNpb24gPiAxMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKHRtcE5vZGUuY2xvbmVOb2RlKGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnRBZnRlcih0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBwcmUgPSB0bXBOb2RlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcDtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHByZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gcHJlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gcHJlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcHJlIHx8IHByZS5ub2RlTmFtZSA9PSAnQlInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gdG1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdHIgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUubm9kZU5hbWUgIT0gJ0JSJyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoJ15bXFxcXHMnICsgZG9tVXRpbHMuZmlsbENoYXIgKyAnXSokJykudGVzdChwcmUubm9kZVZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyICs9IHByZS5ub2RlVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gcHJlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZS5ub2RlTmFtZSAhPSAnQlInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gcHJlLm5vZGVWYWx1ZS5tYXRjaChuZXcgUmVnRXhwKCdeKFtcXFxccycgKyBkb21VdGlscy5maWxsQ2hhciArICddKyknKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoICYmIG1hdGNoWzFdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciArPSBtYXRjaFsxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoc3RyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuaW5zZXJ0Tm9kZShzdHIpLnNldFN0YXJ0QWZ0ZXIoc3RyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBybmcuY29sbGFwc2UodHJ1ZSkuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLnZlcnNpb24gPiA4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHh0ID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ1xcbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcm5nLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJuZy5zdGFydE9mZnNldCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByZU5vZGUgPSBzdGFydC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZU5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLmluc2VydE5vZGUodHh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGxjaGFyID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QWZ0ZXIodHh0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluc2VydE5vZGUoZmlsbGNoYXIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2V0U3RhcnQoZmlsbGNoYXIsIDApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29sbGFwc2UodHJ1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuaW5zZXJ0Tm9kZSh0eHQpLnNldFN0YXJ0QWZ0ZXIodHh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsbGNoYXIgPSBtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnICcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcm5nLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcm5nLnN0YXJ0T2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgJiYgIS9eXFxuLy50ZXN0KHN0YXJ0Lm5vZGVWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QmVmb3JlKHR4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKGZpbGxjaGFyKS5zZXRTdGFydChmaWxsY2hhciwgMCkuY29sbGFwc2UodHJ1ZSkuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLmluc2VydE5vZGUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuaW5zZXJ0Tm9kZShtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkb21VdGlscy5maWxsQ2hhcikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QWZ0ZXIodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmUgPSB0bXBOb2RlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXA7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAocHJlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gcHJlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZSA9IHByZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFwcmUgfHwgcHJlLm5vZGVOYW1lID09ICdCUicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gdG1wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0ciA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5ub2RlTmFtZSAhPSAnQlInICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoJ15bICcgKyBkb21VdGlscy5maWxsQ2hhciArICddKiQnKS50ZXN0KHByZS5ub2RlVmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciArPSBwcmUubm9kZVZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgPSBwcmUubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmUubm9kZU5hbWUgIT0gJ0JSJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBwcmUubm9kZVZhbHVlLm1hdGNoKG5ldyBSZWdFeHAoJ14oWyAnICsgZG9tVXRpbHMuZmlsbENoYXIgKyAnXSspJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciArPSBtYXRjaFsxXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9IG1lLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0cik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLmluc2VydE5vZGUoc3RyKS5zZXRTdGFydEFmdGVyKHN0cik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuY29sbGFwc2UodHJ1ZSkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3RhYmtleWRvd24nLCBmdW5jdGlvbiAoY21kLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgIHZhciBwcmUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ3ByZScsIHRydWUpO1xuICAgICAgICAgICAgaWYgKHByZSkge1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgaWYgKGV2dC5zaGlmdEtleSkge1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcm5nLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJrID0gcm5nLmNyZWF0ZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBiay5zdGFydC5wcmV2aW91c1NpYmxpbmc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmUuZmlyc3RDaGlsZCA9PT0gc3RhcnQgJiYgIWRvbVV0aWxzLmlzQnIoc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5pbnNlcnRCZWZvcmUobWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyAgICAnKSwgc3RhcnQpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCcihzdGFydCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmluc2VydEJlZm9yZShtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnICAgICcpLCBzdGFydC5uZXh0U2libGluZyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnQucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVuZCA9IGJrLmVuZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gYmsuc3RhcnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlLmZpcnN0Q2hpbGQgPT09IGJrLnN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmluc2VydEJlZm9yZShtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnICAgICcpLCBzdGFydC5uZXh0U2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoc3RhcnQgJiYgc3RhcnQgIT09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0JyKHN0YXJ0KSAmJiBzdGFydC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQubmV4dFNpYmxpbmcgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmluc2VydEJlZm9yZShtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnICAgICcpLCBzdGFydC5uZXh0U2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IG1lLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcgICAgJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuaW5zZXJ0Tm9kZSh0bXBOb2RlKS5zZXRTdGFydEFmdGVyKHRtcE5vZGUpLmNvbGxhcHNlKHRydWUpLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdiZWZvcmVpbnNlcnRodG1sJywgZnVuY3Rpb24gKGV2dE5hbWUsIGh0bWwpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgcHJlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICdwcmUnLCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChwcmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJuZy5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcm5nLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBodG1sc3RyID0gJyc7XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uID4gOCkge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKFVFLmZpbHRlck5vZGUoVUUuaHRtbHBhcnNlcihodG1sKSwgbWUub3B0aW9ucy5maWx0ZXJUeHRSdWxlcykuY2hpbGRyZW4sIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50eXBlID09ICdlbGVtZW50Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnRhZ05hbWUgPT0gJ2JyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sc3RyICs9ICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWR0ZC4kZW1wdHlbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKG5vZGUuY2hpbGRyZW4sIGZ1bmN0aW9uIChjbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNuLnR5cGUgPT0gJ2VsZW1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNuLnRhZ05hbWUgPT0gJ2JyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sc3RyICs9ICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoIWR0ZC4kZW1wdHlbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sc3RyICs9IGNuLmlubmVyVGV4dCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbHN0ciArPSBjbi5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEvXFxuJC8udGVzdChodG1sc3RyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbHN0ciArPSAnXFxuJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbHN0ciArPSBub2RlLmRhdGEgKyAnXFxuJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbm9kZS5uZXh0U2libGluZygpICYmIC9cXG4kLy50ZXN0KGh0bWxzdHIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbHN0ciA9IGh0bWxzdHIucmVwbGFjZSgvXFxuJC8sICcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodXRpbHMuaHRtbChodG1sc3RyLnJlcGxhY2UoLyZuYnNwOy9nLCAnICcpKSk7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKHRtcE5vZGUpLnNlbGVjdE5vZGUodG1wTm9kZSkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZyYWcgPSBtZS5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChVRS5maWx0ZXJOb2RlKFVFLmh0bWxwYXJzZXIoaHRtbCksIG1lLm9wdGlvbnMuZmlsdGVyVHh0UnVsZXMpLmNoaWxkcmVuLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUudHlwZSA9PSAnZWxlbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50YWdOYW1lID09ICdicicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChub2RlLmNoaWxkcmVuLCBmdW5jdGlvbiAoY24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbi50eXBlID09ICdlbGVtZW50Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbi50YWdOYW1lID09ICdicicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFkdGQuJGVtcHR5W25vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmh0bWwoY24uaW5uZXJUZXh0KCkucmVwbGFjZSgvJm5ic3A7L2csICcgJykpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmFnLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh1dGlscy5odG1sKGNuLmRhdGEucmVwbGFjZSgvJm5ic3A7L2csICcgJykpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZnJhZy5sYXN0Q2hpbGQubm9kZU5hbWUgIT0gJ0JSJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh1dGlscy5odG1sKG5vZGUuZGF0YS5yZXBsYWNlKC8mbmJzcDsvZywgJyAnKSkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbm9kZS5uZXh0U2libGluZygpICYmIGZyYWcubGFzdENoaWxkLm5vZGVOYW1lID09ICdCUicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmFnLnJlbW92ZUNoaWxkKGZyYWcubGFzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKGZyYWcpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy/mlrnlkJHplK7nmoTlpITnkIZcbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoY21kLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaDtcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09IDQwKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBwcmUsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcm5nLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgcm5nLmNvbGxhcHNlZCAmJlxuICAgICAgICAgICAgICAgICAgICAocHJlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICdwcmUnLCB0cnVlKSkgJiZcbiAgICAgICAgICAgICAgICAgICAgIXByZS5uZXh0U2libGluZ1xuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdCA9IHByZS5sYXN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChsYXN0ICYmIGxhc3Qubm9kZU5hbWUgPT0gJ0JSJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdCA9IGxhc3QucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChsYXN0ID09PSBzdGFydCB8fCAocm5nLnN0YXJ0Q29udGFpbmVyID09PSBwcmUgJiYgcm5nLnN0YXJ0T2Zmc2V0ID09IHByZS5jaGlsZE5vZGVzLmxlbmd0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRwYXJhZ3JhcGgnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvL3RyYWNlOjMzOTVcbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2RlbGtleWRvd24nLCBmdW5jdGlvbiAodHlwZSwgZXZ0KSB7XG4gICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgIHJuZy50eHRUb0VsbUJvdW5kYXJ5KHRydWUpO1xuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcm5nLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzVGFnTm9kZShzdGFydCwgJ3ByZScpICYmIHJuZy5jb2xsYXBzZWQgJiYgZG9tVXRpbHMuaXNTdGFydEluYmxvY2socm5nKSkge1xuICAgICAgICAgICAgICAgIHZhciBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLmZpbGxOb2RlKG1lLmRvY3VtZW50LCBwKTtcbiAgICAgICAgICAgICAgICBzdGFydC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBzdGFydCk7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnQocCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9jbGVhcmRvYy5qc1xuICAgIC8qKlxuICAgICAqIOa4heepuuaWh+aho+aPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOa4heepuuaWh+aho1xuICAgICAqIEBjb21tYW5kIGNsZWFyZG9jXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiAvL2VkaXRvciDmmK/nvJbovpHlmajlrp7kvotcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoJ2NsZWFyZG9jJyk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICBVRS5jb21tYW5kc1snY2xlYXJkb2MnXSA9IHtcbiAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgIGVudGVyVGFnID0gbWUub3B0aW9ucy5lbnRlclRhZyxcbiAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgaWYgKGVudGVyVGFnID09ICdicicpIHtcbiAgICAgICAgICAgICAgICBtZS5ib2R5LmlubmVySFRNTCA9ICc8YnIvPic7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQobWUuYm9keSwgMCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1lLmJvZHkuaW5uZXJIVE1MID0gJzxwPicgKyAoaWUgPyAnJyA6ICc8YnIvPicpICsgJzwvcD4nO1xuICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KG1lLmJvZHkuZmlyc3RDaGlsZCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY2xlYXJEb2MnKTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvYW5jaG9yLmpzXG4gICAgLyoqXG4gICAgICog6ZSa54K55o+S5Lu277yM5Li6VUVkaXRvcuaPkOS+m+aPkuWFpemUmueCueaUr+aMgVxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cbiAgICBVRS5wbHVnaW4ucmVnaXN0ZXIoJ2FuY2hvcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJpbmRFdmVudHM6IHtcbiAgICAgICAgICAgICAgICByZWFkeTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5jc3NSdWxlKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2FuY2hvcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIi5hbmNob3JjbGFzc3tiYWNrZ3JvdW5kOiB1cmwoJ1wiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMudGhlbWVQYXRoICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMudGhlbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiL2ltYWdlcy9hbmNob3IuZ2lmJykgbm8tcmVwZWF0IHNjcm9sbCBsZWZ0IGNlbnRlciB0cmFuc3BhcmVudDtjdXJzb3I6IGF1dG87ZGlzcGxheTogaW5saW5lLWJsb2NrO2hlaWdodDogMTZweDt3aWR0aDogMTVweDt9XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG91dHB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdpbWcnKSwgZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCh2YWwgPSBhLmdldEF0dHIoJ2FuY2hvcm5hbWUnKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGEudGFnTmFtZSA9ICdhJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGEuc2V0QXR0cih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5jaG9ybmFtZTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbnB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdhJyksIGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWw7XG4gICAgICAgICAgICAgICAgICAgIGlmICgodmFsID0gYS5nZXRBdHRyKCduYW1lJykpICYmICFhLmdldEF0dHIoJ2hyZWYnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYS50YWdOYW1lID0gJ2ltZyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBhLnNldEF0dHIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuY2hvcm5hbWU6IGEuZ2V0QXR0cignbmFtZScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnYW5jaG9yY2xhc3MnXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGEuc2V0QXR0cignbmFtZScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tbWFuZHM6IHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiDmj5LlhaXplJrngrlcbiAgICAgICAgICAgICAgICAgKiBAY29tbWFuZCBhbmNob3JcbiAgICAgICAgICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IG5hbWUg6ZSa54K55ZCN56ew5a2X56ym5LiyXG4gICAgICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgICAgICogLy9lZGl0b3Ig5piv57yW6L6R5Zmo5a6e5L6LXG4gICAgICAgICAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCdhbmNob3InLCAnYW5jaG9yMScpO1xuICAgICAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGFuY2hvcjoge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWcgPSByYW5nZS5nZXRDbG9zZWROb2RlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nICYmIGltZy5nZXRBdHRyaWJ1dGUoJ2FuY2hvcm5hbWUnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZy5zZXRBdHRyaWJ1dGUoJ2FuY2hvcm5hbWUnLCBuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZShpbWcpLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoaW1nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Y+q5Zyo6YCJ5Yy655qE5byA5aeL5o+S5YWlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3IgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhhbmNob3IsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuY2hvcm5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ2FuY2hvcmNsYXNzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShhbmNob3IpLnNldFN0YXJ0QWZ0ZXIoYW5jaG9yKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KTtcblxuICAgIC8vIHBsdWdpbnMvd29yZGNvdW50LmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9jb21tYW5kcyDlrZfmlbDnu5/orqFcbiAgICAvLy9jb21tYW5kc05hbWUgIFdvcmRDb3VudCx3b3JkQ291bnRcbiAgICAvLy9jb21tYW5kc1RpdGxlICDlrZfmlbDnu5/orqFcbiAgICAvKlxuICAgICAqIENyZWF0ZWQgYnkgSmV0QnJhaW5zIFdlYlN0b3JtLlxuICAgICAqIFVzZXI6IHRhb3FpbGlcbiAgICAgKiBEYXRlOiAxMS05LTdcbiAgICAgKiBUaW1lOiDkuIvljYg4OjE4XG4gICAgICogVG8gY2hhbmdlIHRoaXMgdGVtcGxhdGUgdXNlIEZpbGUgfCBTZXR0aW5ncyB8IEZpbGUgVGVtcGxhdGVzLlxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1snd29yZGNvdW50J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIG1lLnNldE9wdCgnd29yZENvdW50JywgdHJ1ZSk7XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdjb250ZW50Y2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd3b3JkY291bnQnKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciB0aW1lcjtcbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3JlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgIGRvbVV0aWxzLm9uKG1lLmJvZHksICdrZXl1cCcsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaCxcbiAgICAgICAgICAgICAgICAgICAgLy/lv73nlaXnmoTmjInplK4sY3RyLGFsdCxzaGlmdCzmlrnlkJHplK5cbiAgICAgICAgICAgICAgICAgICAgaWdub3JlcyA9IHsgMTY6IDEsIDE4OiAxLCAyMDogMSwgMzc6IDEsIDM4OiAxLCAzOTogMSwgNDA6IDEgfTtcbiAgICAgICAgICAgICAgICBpZiAoY29kZSBpbiBpZ25vcmVzKSByZXR1cm47XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3dvcmRjb3VudCcpO1xuICAgICAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvcGFnZWJyZWFrLmpzXG4gICAgLyoqXG4gICAgICog5YiG6aG15Yqf6IO95o+S5Lu2XG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuICAgIFVFLnBsdWdpbnNbJ3BhZ2VicmVhayddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgbm90QnJlYWtUYWdzID0gWyd0ZCddO1xuICAgICAgICBtZS5zZXRPcHQoJ3BhZ2VCcmVha1RhZycsICdfdWVkaXRvcl9wYWdlX2JyZWFrX3RhZ18nKTtcblxuICAgICAgICBmdW5jdGlvbiBmaWxsTm9kZShub2RlKSB7XG4gICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eUJsb2NrKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZpcnN0Q2hpbGQgPSBub2RlLmZpcnN0Q2hpbGQsXG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGU7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoZmlyc3RDaGlsZCAmJiBmaXJzdENoaWxkLm5vZGVUeXBlID09IDEgJiYgZG9tVXRpbHMuaXNFbXB0eUJsb2NrKGZpcnN0Q2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBmaXJzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICBmaXJzdENoaWxkID0gZmlyc3RDaGlsZC5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAhdG1wTm9kZSAmJiAodG1wTm9kZSA9IG5vZGUpO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLmZpbGxOb2RlKG1lLmRvY3VtZW50LCB0bXBOb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvL+WIhumhteespuagt+W8j+a3u+WKoFxuXG4gICAgICAgIG1lLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoXG4gICAgICAgICAgICAgICAgJ3BhZ2VicmVhaycsXG4gICAgICAgICAgICAgICAgJy5wYWdlYnJlYWt7ZGlzcGxheTpibG9jaztjbGVhcjpib3RoICFpbXBvcnRhbnQ7Y3Vyc29yOmRlZmF1bHQgIWltcG9ydGFudDt3aWR0aDogMTAwJSAhaW1wb3J0YW50O21hcmdpbjowO30nLFxuICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50XG4gICAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gaXNIcihub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZSAmJiBub2RlLm5vZGVUeXBlID09IDEgJiYgbm9kZS50YWdOYW1lID09ICdIUicgJiYgbm9kZS5jbGFzc05hbWUgPT0gJ3BhZ2VicmVhayc7XG4gICAgICAgIH1cbiAgICAgICAgbWUuYWRkSW5wdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICByb290LnRyYXZlcnNhbChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChub2RlLnR5cGUgPT0gJ3RleHQnICYmIG5vZGUuZGF0YSA9PSBtZS5vcHRpb25zLnBhZ2VCcmVha1RhZykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHIgPSBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgJzxociBjbGFzcz1cInBhZ2VicmVha1wiIG5vc2hhZGU9XCJub3NoYWRlXCIgc2l6ZT1cIjVcIiBzdHlsZT1cIi13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XCI+J1xuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGhyLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgbWUuYWRkT3V0cHV0UnVsZShmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgdXRpbHMuZWFjaChub2RlLmdldE5vZGVzQnlUYWdOYW1lKCdocicpLCBmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgIGlmIChuLmdldEF0dHIoJ2NsYXNzJykgPT0gJ3BhZ2VicmVhaycpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR4dCA9IFVFLnVOb2RlLmNyZWF0ZVRleHQobWUub3B0aW9ucy5wYWdlQnJlYWtUYWcpO1xuICAgICAgICAgICAgICAgICAgICBuLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHR4dCwgbik7XG4gICAgICAgICAgICAgICAgICAgIG4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOaPkuWFpeWIhumhteesplxuICAgICAgICAgKiBAY29tbWFuZCBwYWdlYnJlYWtcbiAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZW1pbmQg5Zyo6KGo5qC85Lit5o+S5YWl5YiG6aG156ym5Lya5oqK6KGo5qC85YiH5YiG5oiQ5Lik6YOo5YiGXG4gICAgICAgICAqIEByZW1pbmQg6I635Y+W57yW6L6R5Zmo5YaF55qE5pWw5o2u5pe277yMIOe8lui+keWZqOS8muaKiuWIhumhteespui9rOaNouaIkOKAnF91ZWRpdG9yX3BhZ2VfYnJlYWtfdGFnX+KAneWtl+espuS4su+8jFxuICAgICAgICAgKiAgICAgICAgICDku6Xkvr/kuo7mj5DkuqTmlbDmja7liLDmnI3liqHlmajnq6/lkI7lpITnkIbliIbpobXjgIJcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdwYWdlYnJlYWsnKTsgLy/mj5LlhaXkuIDkuKpocuagh+etvu+8jOW4puacieagt+W8j+exu+WQjXBhZ2VicmVha1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgbWUuY29tbWFuZHNbJ3BhZ2VicmVhayddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgaHIgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdocicpO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMoaHIsIHtcbiAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdwYWdlYnJlYWsnLFxuICAgICAgICAgICAgICAgICAgICBub3NoYWRlOiAnbm9zaGFkZScsXG4gICAgICAgICAgICAgICAgICAgIHNpemU6ICc1J1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuU2VsZWN0YWJsZShocik7XG4gICAgICAgICAgICAgICAgLy90YWJsZeWNleeLrOWkhOeQhlxuICAgICAgICAgICAgICAgIHZhciBub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgbm90QnJlYWtUYWdzLCB0cnVlKSxcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50cyA9IFtdLFxuICAgICAgICAgICAgICAgICAgICBwTjtcbiAgICAgICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKG5vZGUudGFnTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnVEQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBOID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcE4ucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocE4sICd0YWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFibGVXcmFwRGl2ID0gdGFibGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGFibGVXcmFwRGl2ICYmIHRhYmxlV3JhcERpdi5ub2RlVHlwZSA9PSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiB0YWJsZVdyYXBEaXYudGFnTmFtZSA9PSAnRElWJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgdGFibGVXcmFwRGl2LmdldEF0dHJpYnV0ZSgnZHJvcGRyYWcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0YWJsZVdyYXBEaXYsdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaHIsIHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50cyA9IGRvbVV0aWxzLmZpbmRQYXJlbnRzKGhyLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShociwgcE4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRzID0gZG9tVXRpbHMuZmluZFBhcmVudHMoaHIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwTiA9IHBhcmVudHNbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhyICE9PSBwTikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5icmVha1BhcmVudChociwgcE4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RhYmxl6KaB6YeN5YaZ57uR5a6a5LiA5LiL5ouW5ou9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcmFkanVzdHRhYmxlJywgbWUuZG9jdW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICghZG9tVXRpbHMuaXNCb2R5KHN0YXJ0KSAmJiBkb21VdGlscy5pc0Jsb2NrRWxtKHN0YXJ0KSAmJiBkb21VdGlscy5pc0VtcHR5Tm9kZShzdGFydCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZShzdGFydCkuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoaHIpO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBwTiA9IGhyLnBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKCFkb21VdGlscy5pc0JvZHkocE4pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5icmVha1BhcmVudChociwgcE4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dE5vZGUgPSBoci5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0Tm9kZSAmJiBkb21VdGlscy5pc0VtcHR5QmxvY2sobmV4dE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHBOID0gaHIucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZSA9IGhyLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gaHIucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNIcihwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUocHJlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZSAmJiBmaWxsTm9kZShwcmUpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFuZXh0Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGhyLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChwLCAwKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0hyKG5leHROb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShuZXh0Tm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGxOb2RlKG5leHROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEFmdGVyKGhyKS5jb2xsYXBzZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3dvcmRpbWFnZS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vY29tbWFuZHMg5pys5Zyw5Zu+54mH5byV5a+85LiK5LygXG4gICAgLy8vY29tbWFuZHNOYW1lICBXb3JkSW1hZ2VcbiAgICAvLy9jb21tYW5kc1RpdGxlICDmnKzlnLDlm77niYflvJXlr7zkuIrkvKBcbiAgICAvLy9jb21tYW5kc0RpYWxvZyAgZGlhbG9nc1xcd29yZGltYWdlXG5cbiAgICBVRS5wbHVnaW4ucmVnaXN0ZXIoJ3dvcmRpbWFnZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIGltYWdlcyA9IFtdO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tbWFuZHM6IHtcbiAgICAgICAgICAgICAgICB3b3JkaW1hZ2U6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbWFnZXMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShtZS5ib2R5LCAnaW1nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsTGlzdCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBpbWFnZXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSBjaS5nZXRBdHRyaWJ1dGUoJ3dvcmRfaW1nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsICYmIHVybExpc3QucHVzaCh1cmwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVybExpc3Q7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZXMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShtZS5ib2R5LCAnaW1nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGltYWdlc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLmdldEF0dHJpYnV0ZSgnd29yZF9pbWcnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG5vdE5lZWRVbmRvOiB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlucHV0UnVsZTogZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2ltZycpLCBmdW5jdGlvbiAoaW1nKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhdHRycyA9IGltZy5hdHRycyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsYWcgPSBwYXJzZUludChhdHRycy53aWR0aCkgPCAxMjggfHwgcGFyc2VJbnQoYXR0cnMuaGVpZ2h0KSA8IDQzLFxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0ID0gbWUub3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYyA9IG9wdC50aGVtZUltYWdlLmRlZmF1bHQuc3BhY2VyO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXR0cnNbJ3NyYyddICYmIC9eKD86KGZpbGU6XFwvKykpLy50ZXN0KGF0dHJzWydzcmMnXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZy5zZXRBdHRyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogYXR0cnMud2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBhdHRycy5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiBhdHRycy5hbHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd29yZF9pbWc6IGF0dHJzLnNyYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHNyYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2JhY2tncm91bmQ6dXJsKCcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZmxhZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBvcHQudGhlbWVQYXRoICsgb3B0LnRoZW1lICsgJy9pbWFnZXMvd29yZC5naWYnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG9wdC5sYW5nUGF0aCArIG9wdC5sYW5nICsgJy9pbWFnZXMvbG9jYWxpbWFnZS5wbmcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO2JvcmRlcjoxcHggc29saWQgI2RkZCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL2RyYWdkcm9wLmpzXG4gICAgVUUucGx1Z2luc1snZHJhZ2Ryb3AnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgbWUucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZG9tVXRpbHMub24odGhpcy5ib2R5LCAnZHJhZ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgdmFyIG5vZGUgPSBybmcuZ2V0Q2xvc2VkTm9kZSgpIHx8IG1lLnNlbGVjdGlvbi5nZXRTdGFydCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS50YWdOYW1lID09ICdJTUcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcmUgPSBub2RlLnByZXZpb3VzU2libGluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQ7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgobmV4dCA9IG5vZGUubmV4dFNpYmxpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dC5ub2RlVHlwZSA9PSAxICYmIG5leHQudGFnTmFtZSA9PSAnU1BBTicgJiYgIW5leHQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoKHByZSAmJiBwcmUubm9kZVR5cGUgPT0gMSAmJiAhZG9tVXRpbHMuaXNFbXB0eUJsb2NrKHByZSkpIHx8ICFwcmUpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAoIW5leHQgfHwgKG5leHQgJiYgIWRvbVV0aWxzLmlzRW1wdHlCbG9jayhuZXh0KSkpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZSAmJiBwcmUudGFnTmFtZSA9PSAnUCcgJiYgIWRvbVV0aWxzLmlzRW1wdHlCbG9jayhwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmFwcGVuZENoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm1vdmVDaGlsZChuZXh0LCBwcmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShuZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobmV4dCAmJiBuZXh0LnRhZ05hbWUgPT0gJ1AnICYmICFkb21VdGlscy5pc0VtcHR5QmxvY2sobmV4dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Lmluc2VydEJlZm9yZShub2RlLCBuZXh0LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlICYmIHByZS50YWdOYW1lID09ICdQJyAmJiBkb21VdGlscy5pc0VtcHR5QmxvY2socHJlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwcmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQgJiYgbmV4dC50YWdOYW1lID09ICdQJyAmJiBkb21VdGlscy5pc0VtcHR5QmxvY2sobmV4dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobmV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0Tm9kZShub2RlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIG5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKChub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICdwJywgdHJ1ZSkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKG5vZGUsICd0ZXh0LWFsaWduJykgPT0gJ2NlbnRlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZVN0eWxlKG5vZGUsICd0ZXh0LWFsaWduJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3VuZG8uanNcbiAgICAvKipcbiAgICAgKiB1bmRvIHJlZG9cbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmkqTplIDkuIrkuIDmrKHmiafooYznmoTlkb3ku6RcbiAgICAgKiBAY29tbWFuZCB1bmRvXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICd1bmRvJyApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog6YeN5YGa5LiK5LiA5qyh5omn6KGM55qE5ZG95LukXG4gICAgICogQGNvbW1hbmQgcmVkb1xuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAncmVkbycgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbnNbJ3VuZG8nXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNhdmVTY2VuZVRpbWVyO1xuICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgbWF4VW5kb0NvdW50ID0gbWUub3B0aW9ucy5tYXhVbmRvQ291bnQgfHwgMjAsXG4gICAgICAgICAgICBtYXhJbnB1dENvdW50ID0gbWUub3B0aW9ucy5tYXhJbnB1dENvdW50IHx8IDIwLFxuICAgICAgICAgICAgZmlsbGNoYXIgPSBuZXcgUmVnRXhwKGRvbVV0aWxzLmZpbGxDaGFyICsgJ3w8L2hyPicsICdnaScpOyAvLyBpZeS8muS6p+eUn+WkmuS9meeahDwvaHI+XG4gICAgICAgIHZhciBub05lZWRGaWxsQ2hhclRhZ3MgPSB7XG4gICAgICAgICAgICBvbDogMSxcbiAgICAgICAgICAgIHVsOiAxLFxuICAgICAgICAgICAgdGFibGU6IDEsXG4gICAgICAgICAgICB0Ym9keTogMSxcbiAgICAgICAgICAgIHRyOiAxLFxuICAgICAgICAgICAgYm9keTogMVxuICAgICAgICB9O1xuICAgICAgICB2YXIgb3JnU3RhdGUgPSBtZS5vcHRpb25zLmF1dG9DbGVhckVtcHR5Tm9kZTtcbiAgICAgICAgZnVuY3Rpb24gY29tcGFyZUFkZHIoaW5kZXhBLCBpbmRleEIpIHtcbiAgICAgICAgICAgIGlmIChpbmRleEEubGVuZ3RoICE9IGluZGV4Qi5sZW5ndGgpIHJldHVybiAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBpbmRleEEubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGluZGV4QVtpXSAhPSBpbmRleEJbaV0pIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjb21wYXJlUmFuZ2VBZGRyZXNzKHJuZ0FkZHJBLCBybmdBZGRyQikge1xuICAgICAgICAgICAgaWYgKHJuZ0FkZHJBLmNvbGxhcHNlZCAhPSBybmdBZGRyQi5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAhY29tcGFyZUFkZHIocm5nQWRkckEuc3RhcnRBZGRyZXNzLCBybmdBZGRyQi5zdGFydEFkZHJlc3MpIHx8XG4gICAgICAgICAgICAgICAgIWNvbXBhcmVBZGRyKHJuZ0FkZHJBLmVuZEFkZHJlc3MsIHJuZ0FkZHJCLmVuZEFkZHJlc3MpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gVW5kb01hbmFnZXIoKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3QgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuaW5kZXggPSAwO1xuICAgICAgICAgICAgdGhpcy5oYXNVbmRvID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmhhc1JlZG8gPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMudW5kbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNVbmRvKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5saXN0W3RoaXMuaW5kZXggLSAxXSAmJiB0aGlzLmxpc3QubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy5saXN0W3RoaXMuaW5kZXhdLmNvbnRlbnQgPT0gdGhpcy5saXN0W3RoaXMuaW5kZXggLSAxXS5jb250ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4LS07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pbmRleCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVzdG9yZSgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3RvcmUoLS10aGlzLmluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5yZWRvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmhhc1JlZG8pIHtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHRoaXMubGlzdFt0aGlzLmluZGV4XS5jb250ZW50ID09IHRoaXMubGlzdFt0aGlzLmluZGV4ICsgMV0uY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaW5kZXggPT0gdGhpcy5saXN0Lmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXN0b3JlKHRoaXMuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdG9yZSgrK3RoaXMuaW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHRoaXMucmVzdG9yZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLmVkaXRvcjtcbiAgICAgICAgICAgICAgICB2YXIgc2NlbmUgPSB0aGlzLmxpc3RbdGhpcy5pbmRleF07XG4gICAgICAgICAgICAgICAgdmFyIHJvb3QgPSBVRS5odG1scGFyc2VyKHNjZW5lLmNvbnRlbnQucmVwbGFjZShmaWxsY2hhciwgJycpKTtcbiAgICAgICAgICAgICAgICBtZS5vcHRpb25zLmF1dG9DbGVhckVtcHR5Tm9kZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG1lLmZpbHRlcklucHV0UnVsZShyb290KTtcbiAgICAgICAgICAgICAgICBtZS5vcHRpb25zLmF1dG9DbGVhckVtcHR5Tm9kZSA9IG9yZ1N0YXRlO1xuICAgICAgICAgICAgICAgIC8vdHJhY2U6ODczXG4gICAgICAgICAgICAgICAgLy/ljrvmjonlsZXkvY3nrKZcbiAgICAgICAgICAgICAgICBtZS5kb2N1bWVudC5ib2R5LmlubmVySFRNTCA9IHJvb3QudG9IdG1sKCk7XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcnNjZW5jZXJlc3RvcmUnKTtcbiAgICAgICAgICAgICAgICAvL+WkhOeQhnVuZG/lkI7nqbrmoLzkuI3lsZXkvY3nmoTpl67pophcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKG1lLmRvY3VtZW50LCAndGQgdGggY2FwdGlvbiBwJyksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUobm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgbm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBuZXcgZG9tLlJhbmdlKG1lLmRvY3VtZW50KS5tb3ZlVG9BZGRyZXNzKHNjZW5lLmFkZHJlc3MpO1xuICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0KG5vTmVlZEZpbGxDaGFyVGFnc1tybmcuc3RhcnRDb250YWluZXIubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0pO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG5cbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJLZXkoKTtcbiAgICAgICAgICAgICAgICAvL+S4jeiDveaKiuiHquW3sXJlc2V05LqGXG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdyZXNldCcsIHRydWUpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdGhpcy5nZXRTY2VuZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLmVkaXRvcjtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHJuZ0FkZHJlc3MgPSBybmcuY3JlYXRlQWRkcmVzcyhmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdiZWZvcmVnZXRzY2VuZScpO1xuICAgICAgICAgICAgICAgIHZhciByb290ID0gVUUuaHRtbHBhcnNlcihtZS5ib2R5LmlubmVySFRNTCk7XG4gICAgICAgICAgICAgICAgbWUub3B0aW9ucy5hdXRvQ2xlYXJFbXB0eU5vZGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBtZS5maWx0ZXJPdXRwdXRSdWxlKHJvb3QpO1xuICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMuYXV0b0NsZWFyRW1wdHlOb2RlID0gb3JnU3RhdGU7XG4gICAgICAgICAgICAgICAgdmFyIGNvbnQgPSByb290LnRvSHRtbCgpO1xuICAgICAgICAgICAgICAgIC8vdHJhY2U6MzQ2MVxuICAgICAgICAgICAgICAgIC8v6L+Z5Liq5Lya5byV6LW35Zue6YCA5pe25a+86Ie056m65qC85Lii5aSx55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBicm93c2VyLmllICYmIChjb250ID0gY29udC5yZXBsYWNlKC8+Jm5ic3A7PC9nLCAnPjwnKS5yZXBsYWNlKC9cXHMqPC9nLCAnPCcpLnJlcGxhY2UoLz5cXHMqL2csICc+JykpO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYWZ0ZXJnZXRzY2VuZScpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogcm5nQWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5zYXZlID0gZnVuY3Rpb24gKG5vdENvbXBhcmVSYW5nZSwgbm90U2V0Q3Vyc29yKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHNhdmVTY2VuZVRpbWVyKTtcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFNjZW5lID0gdGhpcy5nZXRTY2VuZShub3RTZXRDdXJzb3IpLFxuICAgICAgICAgICAgICAgICAgICBsYXN0U2NlbmUgPSB0aGlzLmxpc3RbdGhpcy5pbmRleF07XG5cbiAgICAgICAgICAgICAgICBpZiAobGFzdFNjZW5lICYmIGxhc3RTY2VuZS5jb250ZW50ICE9IGN1cnJlbnRTY2VuZS5jb250ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLnRyaWdnZXIoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/lhoXlrrnnm7jlkIzkvY3nva7nm7jlkIzkuI3lrZhcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIGxhc3RTY2VuZSAmJlxuICAgICAgICAgICAgICAgICAgICBsYXN0U2NlbmUuY29udGVudCA9PSBjdXJyZW50U2NlbmUuY29udGVudCAmJlxuICAgICAgICAgICAgICAgICAgICAobm90Q29tcGFyZVJhbmdlID8gMSA6IGNvbXBhcmVSYW5nZUFkZHJlc3MobGFzdFNjZW5lLmFkZHJlc3MsIGN1cnJlbnRTY2VuZS5hZGRyZXNzKSlcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmxpc3QgPSB0aGlzLmxpc3Quc2xpY2UoMCwgdGhpcy5pbmRleCArIDEpO1xuICAgICAgICAgICAgICAgIHRoaXMubGlzdC5wdXNoKGN1cnJlbnRTY2VuZSk7XG4gICAgICAgICAgICAgICAgLy/lpoLmnpzlpKfkuo7mnIDlpKfmlbDph4/kuobvvIzlsLHmiormnIDliY3nmoTliZTpmaRcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5saXN0Lmxlbmd0aCA+IG1heFVuZG9Db3VudCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxpc3Quc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pbmRleCA9IHRoaXMubGlzdC5sZW5ndGggLSAxO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJLZXkoKTtcbiAgICAgICAgICAgICAgICAvL+i3n+aWsHVuZG8vcmVkb+eKtuaAgVxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5oYXNSZWRvID0gISF0aGlzLmxpc3RbdGhpcy5pbmRleCArIDFdO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFzVW5kbyA9ICEhdGhpcy5saXN0W3RoaXMuaW5kZXggLSAxXTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMubGlzdCA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFzVW5kbyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuaGFzUmVkbyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJLZXkoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLmNsZWFyS2V5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGtleWNvbnQgPSAwO1xuICAgICAgICAgICAgICAgIGxhc3RLZXlDb2RlID0gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBtZS51bmRvTWFuZ2VyID0gbmV3IFVuZG9NYW5hZ2VyKCk7XG4gICAgICAgIG1lLnVuZG9NYW5nZXIuZWRpdG9yID0gbWU7XG4gICAgICAgIGZ1bmN0aW9uIHNhdmVTY2VuZSgpIHtcbiAgICAgICAgICAgIHRoaXMudW5kb01hbmdlci5zYXZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcignc2F2ZVNjZW5lJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc3BsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgICAgICAgIHRoaXMudW5kb01hbmdlci5zYXZlLmFwcGx5KHRoaXMudW5kb01hbmdlciwgYXJncyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vICAgIG1lLmFkZExpc3RlbmVyKCdiZWZvcmVleGVjY29tbWFuZCcsIHNhdmVTY2VuZSk7XG4gICAgICAgIC8vICAgIG1lLmFkZExpc3RlbmVyKCdhZnRlcmV4ZWNjb21tYW5kJywgc2F2ZVNjZW5lKTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigncmVzZXQnLCBmdW5jdGlvbiAodHlwZSwgZXhjbHVkZSkge1xuICAgICAgICAgICAgaWYgKCFleGNsdWRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51bmRvTWFuZ2VyLnJlc2V0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBtZS5jb21tYW5kc1sncmVkbyddID0gbWUuY29tbWFuZHNbJ3VuZG8nXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgIHRoaXMudW5kb01hbmdlcltjbWROYW1lXSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnVuZG9NYW5nZXJbJ2hhcycgKyAoY21kTmFtZS50b0xvd2VyQ2FzZSgpID09ICd1bmRvJyA/ICdVbmRvJyA6ICdSZWRvJyldID8gMCA6IC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5vdE5lZWRVbmRvOiAxXG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGtleXMgPSB7XG4gICAgICAgICAgICAgICAgLy8gIC8qQmFja3NwYWNlKi8gODoxLCAvKkRlbGV0ZSovIDQ2OjEsXG4gICAgICAgICAgICAgICAgLypTaGlmdCovIDE2OiAxLFxuICAgICAgICAgICAgICAgIC8qQ3RybCovIDE3OiAxLFxuICAgICAgICAgICAgICAgIC8qQWx0Ki8gMTg6IDEsXG4gICAgICAgICAgICAgICAgMzc6IDEsXG4gICAgICAgICAgICAgICAgMzg6IDEsXG4gICAgICAgICAgICAgICAgMzk6IDEsXG4gICAgICAgICAgICAgICAgNDA6IDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBrZXljb250ID0gMCxcbiAgICAgICAgICAgIGxhc3RLZXlDb2RlO1xuICAgICAgICAvL+i+k+WFpeazleeKtuaAgeS4i+S4jeiuoeeul+Wtl+espuaVsFxuICAgICAgICB2YXIgaW5wdXRUeXBlID0gZmFsc2U7XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdyZWFkeScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRvbVV0aWxzLm9uKHRoaXMuYm9keSwgJ2NvbXBvc2l0aW9uc3RhcnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaW5wdXRUeXBlID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZG9tVXRpbHMub24odGhpcy5ib2R5LCAnY29tcG9zaXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaW5wdXRUeXBlID0gZmFsc2U7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8v5b+r5o236ZSuXG4gICAgICAgIG1lLmFkZHNob3J0Y3V0a2V5KHtcbiAgICAgICAgICAgIFVuZG86ICdjdHJsKzkwJywgLy91bmRvXG4gICAgICAgICAgICBSZWRvOiAnY3RybCs4OScgLy9yZWRvXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgaXNDb2xsYXBzZWQgPSB0cnVlO1xuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICB2YXIga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaDtcbiAgICAgICAgICAgIC8vICFldnQuc2hpZnRLZXkgJiYg5pqC5pe25oqKc2hpZnTljrvmjonkuobvvIzkvJrmnInkupvmg4XlhrXovpPlhaXlpKflhpnopoHop6blj5Hoh6rliqjkv53lrZggZHVhbmp1blxuICAgICAgICAgICAgaWYgKCFrZXlzW2tleUNvZGVdICYmICFldnQuY3RybEtleSAmJiAhZXZ0Lm1ldGFLZXkgJiYgIWV2dC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXRUeXBlKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICBpZiAoIW1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICBtZS51bmRvTWFuZ2VyLnNhdmUoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpc0NvbGxhcHNlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChtZS51bmRvTWFuZ2VyLmxpc3QubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgbWUudW5kb01hbmdlci5zYXZlKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc2F2ZVNjZW5lVGltZXIpO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNhdmUoY29udCkge1xuICAgICAgICAgICAgICAgICAgICBjb250LnVuZG9NYW5nZXIuc2F2ZShmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnQuZmlyZUV2ZW50KCdzZWxlY3Rpb25jaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2F2ZVNjZW5lVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0VHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGludGVyYWxUaW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlucHV0VHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXZlKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcmFsVGltZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2F2ZShtZSk7XG4gICAgICAgICAgICAgICAgfSwgMjAwKTtcblxuICAgICAgICAgICAgICAgIGxhc3RLZXlDb2RlID0ga2V5Q29kZTtcbiAgICAgICAgICAgICAgICBrZXljb250Kys7XG4gICAgICAgICAgICAgICAgaWYgKGtleWNvbnQgPj0gbWF4SW5wdXRDb3VudCkge1xuICAgICAgICAgICAgICAgICAgICBzYXZlKG1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyAhZXZ0LnNoaWZ0S2V5ICYmIOaaguaXtuaKinNoaWZ05Y675o6J5LqG77yM5Lya5pyJ5Lqb5oOF5Ya16L6T5YWl5aSn5YaZ6KaB6Kem5Y+R6Ieq5Yqo5L+d5a2YIGR1YW5qdW5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBldnQua2V5Q29kZSB8fCBldnQud2hpY2g7XG4gICAgICAgICAgICBpZiAoIWtleXNba2V5Q29kZV0gJiYgIWV2dC5jdHJsS2V5ICYmICFldnQubWV0YUtleSAmJiAhZXZ0LmFsdEtleSkge1xuICAgICAgICAgICAgICAgIGlmIChpbnB1dFR5cGUpIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoIWlzQ29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5kb01hbmdlci5zYXZlKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaXNDb2xsYXBzZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8v5omp5bGV5a6e5L6L77yM5re75Yqg5YWz6Zet5ZKM5byA5ZCv5ZG95LukdW5kb1xuICAgICAgICBtZS5zdG9wQ21kVW5kbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IHRydWU7XG4gICAgICAgIH07XG4gICAgICAgIG1lLnN0YXJ0Q21kVW5kbyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2NvcHkuanNcbiAgICAvKlVFLnBsdWdpbi5yZWdpc3RlcignY29weScsIGZ1bmN0aW9uICgpIHsqL1xuXG4gICAgLy92YXIgbWUgPSB0aGlzO1xuXG4gICAgLy9mdW5jdGlvbiBpbml0WmVyb0NsaXBib2FyZCgpIHtcblxuICAgIC8vWmVyb0NsaXBib2FyZC5jb25maWcoe1xuICAgIC8vZGVidWc6IGZhbHNlLFxuICAgIC8vc3dmUGF0aDogbWUub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMICsgJ3RoaXJkLXBhcnR5L3plcm9jbGlwYm9hcmQvWmVyb0NsaXBib2FyZC5zd2YnXG4gICAgLy99KTtcblxuICAgIC8vdmFyIGNsaWVudCA9IG1lLnplcm9jbGlwYm9hcmQgPSBuZXcgWmVyb0NsaXBib2FyZCgpO1xuXG4gICAgLy8vLyDlpI3liLblhoXlrrlcbiAgICAvL2NsaWVudC5vbignY29weScsIGZ1bmN0aW9uIChlKSB7XG4gICAgLy92YXIgY2xpZW50ID0gZS5jbGllbnQsXG4gICAgLy9ybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAvL2RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgLy9kaXYuYXBwZW5kQ2hpbGQocm5nLmNsb25lQ29udGVudHMoKSk7XG4gICAgLy9jbGllbnQuc2V0VGV4dChkaXYuaW5uZXJUZXh0IHx8IGRpdi50ZXh0Q29udGVudCk7XG4gICAgLy9jbGllbnQuc2V0SHRtbChkaXYuaW5uZXJIVE1MKTtcbiAgICAvL3JuZy5zZWxlY3QoKTtcbiAgICAvL30pO1xuICAgIC8vLy8gaG92ZXLkuovku7bkvKDpgJLliLB0YXJnZXRcbiAgICAvL2NsaWVudC5vbignbW91c2VvdmVyIG1vdXNlb3V0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAvL3ZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAvL2lmIChlLnR5cGUgPT0gJ21vdXNlb3ZlcicpIHtcbiAgICAvL2RvbVV0aWxzLmFkZENsYXNzKHRhcmdldCwgJ2VkdWktc3RhdGUtaG92ZXInKTtcbiAgICAvL30gZWxzZSBpZiAoZS50eXBlID09ICdtb3VzZW91dCcpIHtcbiAgICAvL2RvbVV0aWxzLnJlbW92ZUNsYXNzZXModGFyZ2V0LCAnZWR1aS1zdGF0ZS1ob3ZlcicpO1xuICAgIC8vfVxuICAgIC8vfSk7XG4gICAgLy8vLyBmbGFzaOWKoOi9veS4jeaIkOWKn1xuICAgIC8vY2xpZW50Lm9uKCd3cm9uZ2ZsYXNoIG5vZmxhc2gnLCBmdW5jdGlvbiAoKSB7XG4gICAgLy9aZXJvQ2xpcGJvYXJkLmRlc3Ryb3koKTtcbiAgICAvL30pO1xuICAgIC8vfVxuXG4gICAgLy9yZXR1cm4ge1xuICAgIC8vYmluZEV2ZW50czoge1xuICAgIC8vJ3JlYWR5JzogZnVuY3Rpb24gKCkge1xuICAgIC8vaWYgKCFicm93c2VyLmllKSB7XG4gICAgLy9pZiAod2luZG93Llplcm9DbGlwYm9hcmQpIHtcbiAgICAvL2luaXRaZXJvQ2xpcGJvYXJkKCk7XG4gICAgLy99IGVsc2Uge1xuICAgIC8vdXRpbHMubG9hZEZpbGUoZG9jdW1lbnQsIHtcbiAgICAvL3NyYzogbWUub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMICsgXCJ0aGlyZC1wYXJ0eS96ZXJvY2xpcGJvYXJkL1plcm9DbGlwYm9hcmQuanNcIixcbiAgICAvL3RhZzogXCJzY3JpcHRcIixcbiAgICAvL3R5cGU6IFwidGV4dC9qYXZhc2NyaXB0XCIsXG4gICAgLy9kZWZlcjogXCJkZWZlclwiXG4gICAgLy99LCBmdW5jdGlvbiAoKSB7XG4gICAgLy9pbml0WmVyb0NsaXBib2FyZCgpO1xuICAgIC8vfSk7XG4gICAgLy99XG4gICAgLy99XG4gICAgLy99XG4gICAgLy99LFxuICAgIC8vY29tbWFuZHM6IHtcbiAgICAvLydjb3B5Jzoge1xuICAgIC8vZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAvL2lmICghbWUuZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKSkge1xuICAgIC8vYWxlcnQobWUuZ2V0TGFuZygnY29weW1zZycpKTtcbiAgICAvL31cbiAgICAvL31cbiAgICAvL31cbiAgICAvL31cbiAgICAvL31cbiAgICAvKn0pOyovXG5cbiAgICAvLyBwbHVnaW5zL3Bhc3RlLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgcGx1Z2lucy9pbnNlcnRodG1sLmpzXG4gICAgLy8vaW1wb3J0IHBsdWdpbnMvdW5kby5qc1xuICAgIC8vL2ltcG9ydCBwbHVnaW5zL3NlcmlhbGl6ZS5qc1xuICAgIC8vL2NvbW1hbmRzIOeymOi0tFxuICAgIC8vL2NvbW1hbmRzTmFtZSAgUGFzdGVQbGFpblxuICAgIC8vL2NvbW1hbmRzVGl0bGUgIOe6r+aWh+acrOeymOi0tOaooeW8j1xuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiDnspjotLRcbiAgICAgKiBAYXV0aG9yIHpoYW55aVxuICAgICAqL1xuICAgIFVFLnBsdWdpbnNbJ3Bhc3RlJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIGdldENsaXBib2FyZERhdGEoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHZhciBkb2MgPSB0aGlzLmRvY3VtZW50O1xuICAgICAgICAgICAgaWYgKGRvYy5nZXRFbGVtZW50QnlJZCgnYmFpZHVfcGFzdGViaW4nKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgYmsgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpLFxuICAgICAgICAgICAgICAgIC8v5Yib5bu65Ymq6LS055qE5a655ZmoZGl2XG4gICAgICAgICAgICAgICAgcGFzdGViaW4gPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBwYXN0ZWJpbi5pZCA9ICdiYWlkdV9wYXN0ZWJpbic7XG4gICAgICAgICAgICAvLyBTYWZhcmkg6KaB5rGCZGl25b+F6aG75pyJ5YaF5a6577yM5omN6IO957KY6LS05YaF5a656L+b5p2lXG4gICAgICAgICAgICBicm93c2VyLndlYmtpdCAmJiBwYXN0ZWJpbi5hcHBlbmRDaGlsZChkb2MuY3JlYXRlVGV4dE5vZGUoZG9tVXRpbHMuZmlsbENoYXIgKyBkb21VdGlscy5maWxsQ2hhcikpO1xuICAgICAgICAgICAgZG9jLmJvZHkuYXBwZW5kQ2hpbGQocGFzdGViaW4pO1xuICAgICAgICAgICAgLy90cmFjZTo3MTcg6ZqQ6JeP55qEc3BhbuS4jeiDveW+l+WIsHRvcFxuICAgICAgICAgICAgLy9iay5zdGFydC5pbm5lckhUTUwgPSAnJm5ic3A7JztcbiAgICAgICAgICAgIGJrLnN0YXJ0LnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgIHBhc3RlYmluLnN0eWxlLmNzc1RleHQgPVxuICAgICAgICAgICAgICAgICdwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxcHg7aGVpZ2h0OjFweDtvdmVyZmxvdzpoaWRkZW47bGVmdDotMTAwMHB4O3doaXRlLXNwYWNlOm5vd3JhcDt0b3A6JyArXG4gICAgICAgICAgICAgICAgLy/opoHlnKjnjrDlnKjlhYnmoIflubPooYznmoTkvY3nva7liqDlhaXvvIzlkKbliJnkvJrlh7rnjrDot7PliqjnmoTpl67pophcbiAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRYWShiay5zdGFydCkueSArXG4gICAgICAgICAgICAgICAgJ3B4JztcblxuICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKHBhc3RlYmluKS5zZWxlY3QodHJ1ZSk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChicm93c2VyLndlYmtpdCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgcGFzdGViaW5zID0gZG9jLnF1ZXJ5U2VsZWN0b3JBbGwoJyNiYWlkdV9wYXN0ZWJpbicpLCBwaTsgKHBpID0gcGFzdGViaW5zW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5Tm9kZShwaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUocGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXN0ZWJpbiA9IHBpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHBhc3RlYmluLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocGFzdGViaW4pO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhwYXN0ZWJpbik7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgICAgbWUuc2V0T3B0KHtcbiAgICAgICAgICAgIHJldGFpbk9ubHlMYWJlbFBhc3RlZDogZmFsc2VcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIHR4dENvbnRlbnQsIGh0bWxDb250ZW50LCBhZGRyZXNzO1xuXG4gICAgICAgIGZ1bmN0aW9uIGdldFB1cmVIdG1sKGh0bWwpIHtcbiAgICAgICAgICAgIHJldHVybiBodG1sLnJlcGxhY2UoLzwoXFwvPykoW1xcd1xcLV0rKShbXj5dKik+L2dpLCBmdW5jdGlvbiAoYSwgYiwgdGFnTmFtZSwgYXR0cnMpIHtcbiAgICAgICAgICAgICAgICB0YWdOYW1lID0gdGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGlmICh7IGltZzogMSB9W3RhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhdHRycyA9IGF0dHJzLnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICAgIC8oW1xcd1xcLV0qPylcXHMqPVxccyooKFwiKFteXCJdKilcIil8KCcoW14nXSopJyl8KFteXFxzPl0rKSkvZ2ksXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChzdHIsIGF0ciwgdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9W2F0ci50b0xvd2VyQ2FzZSgpXVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF0ciArICc9JyArIHZhbCArICcgJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGFuOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGl2OiAxXG4gICAgICAgICAgICAgICAgICAgIH1bdGFnTmFtZV1cbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnPCcgKyBiICsgdGFnTmFtZSArICcgJyArIHV0aWxzLnRyaW0oYXR0cnMpICsgJz4nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZpbHRlcihkaXYpIHtcbiAgICAgICAgICAgIHZhciBodG1sO1xuICAgICAgICAgICAgaWYgKGRpdi5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgLy/ljrvmjoljdXTkuK3mt7vliqDnmoTovrnnlYzlgLxcbiAgICAgICAgICAgICAgICB2YXIgbm9kZXMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShkaXYsICdzcGFuJyk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG5pOyAobmkgPSBub2Rlc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuaS5pZCA9PSAnX2JhaWR1X2N1dF9zdGFydCcgfHwgbmkuaWQgPT0gJ19iYWlkdV9jdXRfZW5kJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChicm93c2VyLndlYmtpdCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnJzID0gZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdiBicicpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgYmk7IChiaSA9IGJyc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcE4gPSBiaS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBOLnRhZ05hbWUgPT0gJ0RJVicgJiYgcE4uY2hpbGROb2Rlcy5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBOLmlubmVySFRNTCA9ICc8cD48YnIvPjwvcD4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwTik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpdnMgPSBkaXYucXVlcnlTZWxlY3RvckFsbCgnI2JhaWR1X3Bhc3RlYmluJyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBkaTsgKGRpID0gZGl2c1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wUCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRtcFAsIGRpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChkaS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUC5hcHBlbmRDaGlsZChkaS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShkaSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgbWV0YXMgPSBkaXYucXVlcnlTZWxlY3RvckFsbCgnbWV0YScpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IG1ldGFzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjaSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgYnJzID0gZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoJ2JyJyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IChjaSA9IGJyc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoL15hcHBsZS0vaS50ZXN0KGNpLmNsYXNzTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2kpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmdlY2tvKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkaXJ0eU5vZGVzID0gZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tfbW96X2RpcnR5XScpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyAoY2kgPSBkaXJ0eU5vZGVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpLnJlbW92ZUF0dHJpYnV0ZSgnX21vel9kaXJ0eScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3BhbnMgPSBkaXYucXVlcnlTZWxlY3RvckFsbCgnc3Bhbi5BcHBsZS1zdHlsZS1zcGFuJyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gc3BhbnNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vaWXkuIvkvb/nlKhpbm5lckhUTUzkvJrkuqfnlJ/lpJrkvZnnmoRcXHJcXG7lrZfnrKbvvIzkuZ/kvJrkuqfnlJ8mbmJzcDvov5nph4zov4fmu6TmjolcbiAgICAgICAgICAgICAgICBodG1sID0gZGl2LmlubmVySFRNTDsgLy8ucmVwbGFjZSgvPig/OihcXHN8Jm5ic3A7KSo/KTwvZywnPjwnKTtcblxuICAgICAgICAgICAgICAgIC8v6L+H5rukd29yZOeymOi0tOi/h+adpeeahOWGl+S9meWxnuaAp1xuICAgICAgICAgICAgICAgIGh0bWwgPSBVRS5maWx0ZXJXb3JkKGh0bWwpO1xuICAgICAgICAgICAgICAgIC8v5Y+W5raI5LqG5b+955Wl56m655m955qE56ys5LqM5Liq5Y+C5pWw77yM57KY6LS06L+H5p2l55qE5pyJ5Lqb5piv5pyJ56m655m955qE77yM5Lya6KKr5aWX5LiK55u45YWz55qE5qCH562+XG4gICAgICAgICAgICAgICAgdmFyIHJvb3QgPSBVRS5odG1scGFyc2VyKGh0bWwpO1xuICAgICAgICAgICAgICAgIC8v5aaC5p6c57uZ5LqG6L+H5ruk6KeE5YiZ5bCx5YWI6L+b6KGM6L+H5rukXG4gICAgICAgICAgICAgICAgaWYgKG1lLm9wdGlvbnMuZmlsdGVyUnVsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgVUUuZmlsdGVyTm9kZShyb290LCBtZS5vcHRpb25zLmZpbHRlclJ1bGVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/miafooYzpu5jorqTnmoTlpITnkIZcbiAgICAgICAgICAgICAgICBtZS5maWx0ZXJJbnB1dFJ1bGUocm9vdCk7XG4gICAgICAgICAgICAgICAgLy/pkojlr7ljaHJvbWXnmoTlpITnkIZcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci53ZWJraXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJyID0gcm9vdC5sYXN0Q2hpbGQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJyICYmIGJyLnR5cGUgPT0gJ2VsZW1lbnQnICYmIGJyLnRhZ05hbWUgPT0gJ2JyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm9vdC5yZW1vdmVDaGlsZChicik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChtZS5ib2R5LnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayhub2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGh0bWwgPSB7IGh0bWw6IHJvb3QudG9IdG1sKCkgfTtcbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2JlZm9yZXBhc3RlJywgaHRtbCwgcm9vdCk7XG4gICAgICAgICAgICAgICAgLy/miqLkuobpu5jorqTnmoTnspjotLTvvIzpgqPlkI7ovrnnmoTlhoXlrrnlsLHkuI3miafooYzkuobvvIzmr5TlpoLooajmoLznspjotLRcbiAgICAgICAgICAgICAgICBpZiAoIWh0bWwuaHRtbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJvb3QgPSBVRS5odG1scGFyc2VyKGh0bWwuaHRtbCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgLy/lpoLmnpzlvIDlkK/kuobnuq/mlofmnKzmqKHlvI9cbiAgICAgICAgICAgICAgICBpZiAobWUucXVlcnlDb21tYW5kU3RhdGUoJ3Bhc3RlcGxhaW4nKSA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0SHRtbCcsIFVFLmZpbHRlck5vZGUocm9vdCwgbWUub3B0aW9ucy5maWx0ZXJUeHRSdWxlcykudG9IdG1sKCksIHRydWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8v5paH5pys5qih5byPXG4gICAgICAgICAgICAgICAgICAgIFVFLmZpbHRlck5vZGUocm9vdCwgbWUub3B0aW9ucy5maWx0ZXJUeHRSdWxlcyk7XG4gICAgICAgICAgICAgICAgICAgIHR4dENvbnRlbnQgPSByb290LnRvSHRtbCgpO1xuICAgICAgICAgICAgICAgICAgICAvL+WujOWFqOaooeW8j1xuICAgICAgICAgICAgICAgICAgICBodG1sQ29udGVudCA9IGh0bWwuaHRtbDtcblxuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuY3JlYXRlQWRkcmVzcyh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoXG4gICAgICAgICAgICAgICAgICAgICAgICAnaW5zZXJ0SHRtbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5nZXRPcHQoJ3JldGFpbk9ubHlMYWJlbFBhc3RlZCcpID09PSB0cnVlID8gZ2V0UHVyZUh0bWwoaHRtbENvbnRlbnQpIDogaHRtbENvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYWZ0ZXJwYXN0ZScsIGh0bWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3Bhc3RlVHJhbnNmZXInLCBmdW5jdGlvbiAoY21kLCBwbGFpblR5cGUpIHtcbiAgICAgICAgICAgIGlmIChhZGRyZXNzICYmIHR4dENvbnRlbnQgJiYgaHRtbENvbnRlbnQgJiYgdHh0Q29udGVudCAhPSBodG1sQ29udGVudCkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIHJhbmdlLm1vdmVUb0FkZHJlc3MoYWRkcmVzcywgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoIWRvbVV0aWxzLmlzQm9keShyYW5nZS5zdGFydENvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHN0YXJ0LmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUocmFuZ2Uuc3RhcnRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByZSA9IHN0YXJ0LnByZXZpb3VzU2libGluZztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5ub2RlVHlwZSA9PSAzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoJ15bXFxuXFxyXFx0ICcgKyBkb21VdGlscy5maWxsQ2hhciArICddKiQnKS50ZXN0KHByZS5ub2RlVmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKHByZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0T2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZShyYW5nZS5zdGFydENvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICghZG9tVXRpbHMuaXNCb2R5KHJhbmdlLmVuZENvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbmQgPSByYW5nZS5lbmRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW5kLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBlbmQuY2hpbGROb2Rlc1tyYW5nZS5lbmRPZmZzZXRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEFmdGVyKHJhbmdlLmVuZENvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IGVuZC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dC5ub2RlVHlwZSA9PSAzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBSZWdFeHAoJ15bXFxuXFxyXFx0JyArIGRvbVV0aWxzLmZpbGxDaGFyICsgJ10qJCcpLnRlc3QobmV4dC5ub2RlVmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEFmdGVyKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5lbmRPZmZzZXQgPT1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5lbmRDb250YWluZXJbcmFuZ2UuZW5kQ29udGFpbmVyLm5vZGVUeXBlID09IDMgPyAnbm9kZVZhbHVlJyA6ICdjaGlsZE5vZGVzJ10ubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmRBZnRlcihyYW5nZS5lbmRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdmFyIGh0bWwgPSBodG1sQ29udGVudDtcbiAgICAgICAgICAgICAgICBpZiAocGxhaW5UeXBlID09PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGh0bWwgPSBnZXRQdXJlSHRtbChodG1sKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBsYWluVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBodG1sID0gdHh0Q29udGVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ2luc2VydGh0bWwnLCBodG1sLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBtZS5fX2hhc0VudGVyRXhlY0NvbW1hbmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgd2hpbGUgKFxuICAgICAgICAgICAgICAgICAgICAhZG9tVXRpbHMuaXNCb2R5KHJuZy5zdGFydENvbnRhaW5lcikgJiZcbiAgICAgICAgICAgICAgICAgICAgIXJuZy5zdGFydE9mZnNldCAmJlxuICAgICAgICAgICAgICAgICAgICBybmcuc3RhcnRDb250YWluZXJbcm5nLnN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlID09IDMgPyAnbm9kZVZhbHVlJyA6ICdjaGlsZE5vZGVzJ10ubGVuZ3RoXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEJlZm9yZShybmcuc3RhcnRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdG1wQWRkcmVzcyA9IHJuZy5jcmVhdGVBZGRyZXNzKHRydWUpO1xuICAgICAgICAgICAgICAgIGFkZHJlc3MuZW5kQWRkcmVzcyA9IHRtcEFkZHJlc3Muc3RhcnRBZGRyZXNzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigncmVhZHknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkb21VdGlscy5vbihtZS5ib2R5LCAnY3V0JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkICYmIG1lLnVuZG9NYW5nZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUudW5kb01hbmdlci5zYXZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vaWXkuItiZWZvcmVwYXN0ZeWcqOeCueWHu+WPs+mUruaXtuS5n+S8muinpuWPke+8jOaJgOS7peeUqOebkeaOp+mUruebmOaJjeWkhOeQhlxuICAgICAgICAgICAgZG9tVXRpbHMub24obWUuYm9keSwgYnJvd3Nlci5pZSB8fCBicm93c2VyLm9wZXJhID8gJ2tleWRvd24nIDogJ3Bhc3RlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoKGJyb3dzZXIuaWUgfHwgYnJvd3Nlci5vcGVyYSkgJiYgKCghZS5jdHJsS2V5ICYmICFlLm1ldGFLZXkpIHx8IGUua2V5Q29kZSAhPSAnODYnKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGdldENsaXBib2FyZERhdGEuY2FsbChtZSwgZnVuY3Rpb24gKGRpdikge1xuICAgICAgICAgICAgICAgICAgICBmaWx0ZXIoZGl2KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBtZS5jb21tYW5kc1sncGFzdGUnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0Q2xpcGJvYXJkRGF0YS5jYWxsKG1lLCBmdW5jdGlvbiAoZGl2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXIoZGl2KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmV4ZWNDb21tYW5kKCdwYXN0ZScpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KG1lLmdldExhbmcoJ3Bhc3RlbXNnJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9wdXJldHh0cGFzdGUuanNcbiAgICAvKipcbiAgICAgKiDnuq/mlofmnKznspjotLTmj5Lku7ZcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydwYXN0ZXBsYWluJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIG1lLnNldE9wdCh7XG4gICAgICAgICAgICBwYXN0ZXBsYWluOiBmYWxzZSxcbiAgICAgICAgICAgIGZpbHRlclR4dFJ1bGVzOiAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHRyYW5zUChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUudGFnTmFtZSA9ICdwJztcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRTdHlsZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiByZW1vdmVOb2RlKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAvL+ebtOaOpeWIoOmZpOWPiuWFtuWtl+iKgueCueWGheWuuVxuICAgICAgICAgICAgICAgICAgICAnLSc6ICdzY3JpcHQgc3R5bGUgb2JqZWN0IGlmcmFtZSBlbWJlZCBpbnB1dCBzZWxlY3QnLFxuICAgICAgICAgICAgICAgICAgICBwOiB7ICQ6IHt9IH0sXG4gICAgICAgICAgICAgICAgICAgIGJyOiB7ICQ6IHt9IH0sXG4gICAgICAgICAgICAgICAgICAgIGRpdjogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgPSBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoKHRtcE5vZGUgPSBub2RlLmZpcnN0Q2hpbGQoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG1wTm9kZS50eXBlID09ICd0ZXh0JyB8fCAhVUUuZG9tLmR0ZC4kYmxvY2tbdG1wTm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwLmZpcnN0Q2hpbGQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgPSBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRtcE5vZGUsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHAuZmlyc3RDaGlsZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb2w6IHJlbW92ZU5vZGUsXG4gICAgICAgICAgICAgICAgICAgIHVsOiByZW1vdmVOb2RlLFxuICAgICAgICAgICAgICAgICAgICBkbDogcmVtb3ZlTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgZHQ6IHJlbW92ZU5vZGUsXG4gICAgICAgICAgICAgICAgICAgIGRkOiByZW1vdmVOb2RlLFxuICAgICAgICAgICAgICAgICAgICBsaTogcmVtb3ZlTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbjogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICB0aDogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICB0cjogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoMTogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoMjogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoMzogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoNDogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoNTogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICBoNjogdHJhbnNQLFxuICAgICAgICAgICAgICAgICAgICB0ZDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5rKh5pyJ5YaF5a6555qEdGTnm7TmjqXliKDmjolcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0eHQgPSAhIW5vZGUuaW5uZXJUZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEFmdGVyKFVFLnVOb2RlLmNyZWF0ZVRleHQoJyAmbmJzcDsgJm5ic3A7JyksIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUsIG5vZGUuaW5uZXJUZXh0KCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pKClcbiAgICAgICAgfSk7XG4gICAgICAgIC8v5pqC5pe26L+Z6YeM5pSv5oyB5LiA5LiL6ICB54mI5pys55qE5bGe5oCnXG4gICAgICAgIHZhciBwYXN0ZXBsYWluID0gbWUub3B0aW9ucy5wYXN0ZXBsYWluO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlkK/nlKjmiJblj5bmtojnuq/mlofmnKznspjotLTmqKHlvI9cbiAgICAgICAgICogQGNvbW1hbmQgcGFzdGVwbGFpblxuICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoICdwYXN0ZXBsYWluJyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOafpeivouW9k+WJjeaYr+WQpuWkhOS6jue6r+aWh+acrOeymOi0tOaooeW8j1xuICAgICAgICAgKiBAY29tbWFuZCBwYXN0ZXBsYWluXG4gICAgICAgICAqIEBtZXRob2QgcXVlcnlDb21tYW5kU3RhdGVcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgKiBAcmV0dXJuIHsgaW50IH0g5aaC5p6c5aSE5LqO57qv5paH5pys5qih5byP77yM6L+U5ZueMe+8jOWQpuWIme+8jOi/lOWbnjBcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoICdwYXN0ZXBsYWluJyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIG1lLmNvbW1hbmRzWydwYXN0ZXBsYWluJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXN0ZXBsYWluID8gMSA6IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBwYXN0ZXBsYWluID0gIXBhc3RlcGxhaW4gfCAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5vdE5lZWRVbmRvOiAxXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvbGlzdC5qc1xuICAgIC8qKlxuICAgICAqIOacieW6j+WIl+ihqCzml6Dluo/liJfooajmj5Lku7ZcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydsaXN0J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICBub3RFeGNoYW5nZSA9IHtcbiAgICAgICAgICAgICAgICBURDogMSxcbiAgICAgICAgICAgICAgICBQUkU6IDEsXG4gICAgICAgICAgICAgICAgQkxPQ0tRVU9URTogMVxuICAgICAgICAgICAgfTtcbiAgICAgICAgdmFyIGN1c3RvbVN0eWxlID0ge1xuICAgICAgICAgICAgY246ICdjbi0xLScsXG4gICAgICAgICAgICBjbjE6ICdjbi0yLScsXG4gICAgICAgICAgICBjbjI6ICdjbi0zLScsXG4gICAgICAgICAgICBudW06ICdudW0tMS0nLFxuICAgICAgICAgICAgbnVtMTogJ251bS0yLScsXG4gICAgICAgICAgICBudW0yOiAnbnVtLTMtJyxcbiAgICAgICAgICAgIGRhc2g6ICdkYXNoJyxcbiAgICAgICAgICAgIGRvdDogJ2RvdCdcbiAgICAgICAgfTtcblxuICAgICAgICBtZS5zZXRPcHQoe1xuICAgICAgICAgICAgYXV0b1RyYW5zV29yZFRvTGlzdDogZmFsc2UsXG4gICAgICAgICAgICBpbnNlcnRvcmRlcmVkbGlzdDoge1xuICAgICAgICAgICAgICAgIG51bTogJycsXG4gICAgICAgICAgICAgICAgbnVtMTogJycsXG4gICAgICAgICAgICAgICAgbnVtMjogJycsXG4gICAgICAgICAgICAgICAgY246ICcnLFxuICAgICAgICAgICAgICAgIGNuMTogJycsXG4gICAgICAgICAgICAgICAgY24yOiAnJyxcbiAgICAgICAgICAgICAgICBkZWNpbWFsOiAnJyxcbiAgICAgICAgICAgICAgICAnbG93ZXItYWxwaGEnOiAnJyxcbiAgICAgICAgICAgICAgICAnbG93ZXItcm9tYW4nOiAnJyxcbiAgICAgICAgICAgICAgICAndXBwZXItYWxwaGEnOiAnJyxcbiAgICAgICAgICAgICAgICAndXBwZXItcm9tYW4nOiAnJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluc2VydHVub3JkZXJlZGxpc3Q6IHtcbiAgICAgICAgICAgICAgICBjaXJjbGU6ICcnLFxuICAgICAgICAgICAgICAgIGRpc2M6ICcnLFxuICAgICAgICAgICAgICAgIHNxdWFyZTogJycsXG4gICAgICAgICAgICAgICAgZGFzaDogJycsXG4gICAgICAgICAgICAgICAgZG90OiAnJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxpc3REZWZhdWx0UGFkZGluZ0xlZnQ6ICczMCcsXG4gICAgICAgICAgICBsaXN0aWNvbnBhdGg6ICdodHRwOi8vYnMuYmFpZHUuY29tL2xpc3RpY29uLycsXG4gICAgICAgICAgICBtYXhMaXN0TGV2ZWw6IC0xLCAvLy0x5LiN6ZmQ5Yi2XG4gICAgICAgICAgICBkaXNhYmxlUEluTGlzdDogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIGxpc3RUb0FycmF5KGxpc3QpIHtcbiAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gbGlzdCkge1xuICAgICAgICAgICAgICAgIGFyci5wdXNoKHApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGFycjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGlzdFN0eWxlID0ge1xuICAgICAgICAgICAgT0w6IGxpc3RUb0FycmF5KG1lLm9wdGlvbnMuaW5zZXJ0b3JkZXJlZGxpc3QpLFxuICAgICAgICAgICAgVUw6IGxpc3RUb0FycmF5KG1lLm9wdGlvbnMuaW5zZXJ0dW5vcmRlcmVkbGlzdClcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGxpaWNvbnBhdGggPSBtZS5vcHRpb25zLmxpc3RpY29ucGF0aDtcblxuICAgICAgICAvL+agueaNrueUqOaIt+mFjee9ru+8jOiwg+aVtGN1c3RvbVN0eWxlXG4gICAgICAgIGZvciAodmFyIHMgaW4gY3VzdG9tU3R5bGUpIHtcbiAgICAgICAgICAgIGlmICghbWUub3B0aW9ucy5pbnNlcnRvcmRlcmVkbGlzdC5oYXNPd25Qcm9wZXJ0eShzKSAmJiAhbWUub3B0aW9ucy5pbnNlcnR1bm9yZGVyZWRsaXN0Lmhhc093blByb3BlcnR5KHMpKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGN1c3RvbVN0eWxlW3NdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbWUucmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGN1c3RvbUNzcyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBjdXN0b21TdHlsZSkge1xuICAgICAgICAgICAgICAgIGlmIChwID09ICdkYXNoJyB8fCBwID09ICdkb3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xpLmxpc3QtJyArIGN1c3RvbVN0eWxlW3BdICsgJ3tiYWNrZ3JvdW5kLWltYWdlOnVybCgnICsgbGlpY29ucGF0aCArIGN1c3RvbVN0eWxlW3BdICsgJy5naWYpfSdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICAndWwuY3VzdG9tXycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd7bGlzdC1zdHlsZTpub25lO311bC5jdXN0b21fJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJyBsaXtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgM3B4O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdH0nXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA5OTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGkubGlzdC0nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tU3R5bGVbcF0gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3tiYWNrZ3JvdW5kLWltYWdlOnVybCgnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlpY29ucGF0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsaXN0LScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21TdHlsZVtwXSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmdpZil9J1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgICdvbC5jdXN0b21fJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3tsaXN0LXN0eWxlOm5vbmU7fW9sLmN1c3RvbV8nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIGxpe2JhY2tncm91bmQtcG9zaXRpb246MCAzcHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0fSdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3dpdGNoIChwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2NuJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCdsaS5saXN0LScgKyBwICsgJy1wYWRkaW5nbGVmdC0xe3BhZGRpbmctbGVmdDoyNXB4fScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goJ2xpLmxpc3QtJyArIHAgKyAnLXBhZGRpbmdsZWZ0LTJ7cGFkZGluZy1sZWZ0OjQwcHh9Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnbGkubGlzdC0nICsgcCArICctcGFkZGluZ2xlZnQtM3twYWRkaW5nLWxlZnQ6NTVweH0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdjbjEnOlxuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goJ2xpLmxpc3QtJyArIHAgKyAnLXBhZGRpbmdsZWZ0LTF7cGFkZGluZy1sZWZ0OjMwcHh9Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnbGkubGlzdC0nICsgcCArICctcGFkZGluZ2xlZnQtMntwYWRkaW5nLWxlZnQ6NDBweH0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCdsaS5saXN0LScgKyBwICsgJy1wYWRkaW5nbGVmdC0ze3BhZGRpbmctbGVmdDo1NXB4fScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2NuMic6XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnbGkubGlzdC0nICsgcCArICctcGFkZGluZ2xlZnQtMXtwYWRkaW5nLWxlZnQ6NDBweH0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCdsaS5saXN0LScgKyBwICsgJy1wYWRkaW5nbGVmdC0ye3BhZGRpbmctbGVmdDo1NXB4fScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goJ2xpLmxpc3QtJyArIHAgKyAnLXBhZGRpbmdsZWZ0LTN7cGFkZGluZy1sZWZ0OjY4cHh9Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnbnVtJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnbnVtMSc6XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnbGkubGlzdC0nICsgcCArICctcGFkZGluZ2xlZnQtMXtwYWRkaW5nLWxlZnQ6MjVweH0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdudW0yJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCdsaS5saXN0LScgKyBwICsgJy1wYWRkaW5nbGVmdC0xe3BhZGRpbmctbGVmdDozNXB4fScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goJ2xpLmxpc3QtJyArIHAgKyAnLXBhZGRpbmdsZWZ0LTJ7cGFkZGluZy1sZWZ0OjQwcHh9Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZGFzaCc6XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnbGkubGlzdC0nICsgcCArICctcGFkZGluZ2xlZnR7cGFkZGluZy1sZWZ0OjM1cHh9Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZG90JzpcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCdsaS5saXN0LScgKyBwICsgJy1wYWRkaW5nbGVmdHtwYWRkaW5nLWxlZnQ6MjBweH0nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdXN0b21Dc3MucHVzaCgnLmxpc3QtcGFkZGluZ2xlZnQtMXtwYWRkaW5nLWxlZnQ6MH0nKTtcbiAgICAgICAgICAgIGN1c3RvbUNzcy5wdXNoKCcubGlzdC1wYWRkaW5nbGVmdC0ye3BhZGRpbmctbGVmdDonICsgbWUub3B0aW9ucy5saXN0RGVmYXVsdFBhZGRpbmdMZWZ0ICsgJ3B4fScpO1xuICAgICAgICAgICAgY3VzdG9tQ3NzLnB1c2goJy5saXN0LXBhZGRpbmdsZWZ0LTN7cGFkZGluZy1sZWZ0OicgKyBtZS5vcHRpb25zLmxpc3REZWZhdWx0UGFkZGluZ0xlZnQgKiAyICsgJ3B4fScpO1xuICAgICAgICAgICAgLy/lpoLmnpzkuI3nu5nlrr3luqbkvJrlnKjoh6rlrprlupTmoLflvI/ph4zlh7rnjrDmu5rliqjmnaFcbiAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoXG4gICAgICAgICAgICAgICAgJ2xpc3QnLFxuICAgICAgICAgICAgICAgICdvbCx1bHttYXJnaW46MDtwYWRpbmc6MDsnICtcbiAgICAgICAgICAgICAgICAgICAgKGJyb3dzZXIuaWUgPyAnJyA6ICd3aWR0aDo5NSUnKSArXG4gICAgICAgICAgICAgICAgICAgICd9bGl7Y2xlYXI6Ym90aDt9JyArXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbUNzcy5qb2luKCdcXG4nKSxcbiAgICAgICAgICAgICAgICBtZS5kb2N1bWVudFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8v5Y2V54us5aSE55CG5Ymq5YiH55qE6Zeu6aKYXG4gICAgICAgIG1lLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRvbVV0aWxzLm9uKG1lLmJvZHksICdjdXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpO1xuICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjM0MTZcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFybmcuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKGxpID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICdsaScsIHRydWUpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbGkubmV4dFNpYmxpbmcgJiYgZG9tVXRpbHMuaXNFbXB0eUJsb2NrKGxpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcG4gPSBsaS5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChub2RlID0gcG4ucHJldmlvdXNTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHBuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEF0TGFzdChub2RlKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKG5vZGUgPSBwbi5uZXh0U2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnRBdEZpcnN0KG5vZGUpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodG1wTm9kZSwgcG4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHBuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydCh0bXBOb2RlLCAwKS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBnZXRTdHlsZShub2RlKSB7XG4gICAgICAgICAgICB2YXIgY2xzID0gbm9kZS5jbGFzc05hbWU7XG4gICAgICAgICAgICBpZiAoZG9tVXRpbHMuaGFzQ2xhc3Mobm9kZSwgL2N1c3RvbV8vKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjbHMubWF0Y2goL2N1c3RvbV8oXFx3KykvKVsxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5nZXRTdHlsZShub2RlLCAnbGlzdC1zdHlsZS10eXBlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcignYmVmb3JlcGFzdGUnLCBmdW5jdGlvbiAodHlwZSwgaHRtbCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICBsaTtcbiAgICAgICAgICAgIHZhciByb290ID0gVUUuaHRtbHBhcnNlcihodG1sLmh0bWwsIHRydWUpO1xuICAgICAgICAgICAgaWYgKChsaSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCAnbGknLCB0cnVlKSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGlzdCA9IGxpLnBhcmVudE5vZGUsXG4gICAgICAgICAgICAgICAgICAgIHRhZ05hbWUgPSBsaXN0LnRhZ05hbWUgPT0gJ09MJyA/ICd1bCcgOiAnb2wnO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSh0YWdOYW1lKSwgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgbi50YWdOYW1lID0gbGlzdC50YWdOYW1lO1xuICAgICAgICAgICAgICAgICAgICBuLnNldEF0dHIoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG4ucGFyZW50Tm9kZSA9PT0gcm9vdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IGdldFN0eWxlKGxpc3QpIHx8IChsaXN0LnRhZ05hbWUgPT0gJ09MJyA/ICdkZWNpbWFsJyA6ICdkaXNjJyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2xhc3NOYW1lID0gbi5wYXJlbnROb2RlLmdldEF0dHIoJ2NsYXNzJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2xhc3NOYW1lICYmIC9jdXN0b21fLy50ZXN0KGNsYXNzTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlID0gY2xhc3NOYW1lLm1hdGNoKC9jdXN0b21fKFxcdyspLylbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUgPSBuLnBhcmVudE5vZGUuZ2V0U3R5bGUoJ2xpc3Qtc3R5bGUtdHlwZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IGxpc3QudGFnTmFtZSA9PSAnT0wnID8gJ2RlY2ltYWwnIDogJ2Rpc2MnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHV0aWxzLmluZGV4T2YobGlzdFN0eWxlW2xpc3QudGFnTmFtZV0sIHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobi5wYXJlbnROb2RlICE9PSByb290KSBpbmRleCA9IGluZGV4ICsgMSA9PSBsaXN0U3R5bGVbbGlzdC50YWdOYW1lXS5sZW5ndGggPyAwIDogaW5kZXggKyAxO1xuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFN0eWxlID0gbGlzdFN0eWxlW2xpc3QudGFnTmFtZV1baW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VzdG9tU3R5bGVbY3VycmVudFN0eWxlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbi5zZXRBdHRyKCdjbGFzcycsICdjdXN0b21fJyArIGN1cnJlbnRTdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuLnNldFN0eWxlKCdsaXN0LXN0eWxlLXR5cGUnLCBjdXJyZW50U3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGh0bWwuaHRtbCA9IHJvb3QudG9IdG1sKCk7XG4gICAgICAgIH0pO1xuICAgICAgICAvL+WvvOWHuuaXtu+8jOWOu+aOiXDmoIfnrb5cbiAgICAgICAgbWUuZ2V0T3B0KCdkaXNhYmxlUEluTGlzdCcpID09PSB0cnVlICYmXG4gICAgICAgICAgICBtZS5hZGRPdXRwdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdsaScpLCBmdW5jdGlvbiAobGkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld0NoaWxkcmVucyA9IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGxpLmNoaWxkcmVuLCBmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG4udGFnTmFtZSA9PSAncCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoKHRtcE5vZGUgPSBuLmNoaWxkcmVuLnBvcCgpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDaGlsZHJlbnMuc3BsaWNlKGluZGV4LCAwLCB0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZS5wYXJlbnROb2RlID0gbGk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3ROb2RlID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IG5ld0NoaWxkcmVuc1tuZXdDaGlsZHJlbnMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0bXBOb2RlIHx8IHRtcE5vZGUudHlwZSAhPSAnZWxlbWVudCcgfHwgdG1wTm9kZS50YWdOYW1lICE9ICdicicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJyID0gVUUudU5vZGUuY3JlYXRlRWxlbWVudCgnYnInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnIucGFyZW50Tm9kZSA9IGxpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDaGlsZHJlbnMucHVzaChicik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBuZXdDaGlsZHJlbnMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0NoaWxkcmVucy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpLmNoaWxkcmVuID0gbmV3Q2hpbGRyZW5zO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgLy/ov5vlhaXnvJbovpHlmajnmoRsaeimgeWll3DmoIfnrb5cbiAgICAgICAgbWUuYWRkSW5wdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2xpJyksIGZ1bmN0aW9uIChsaSkge1xuICAgICAgICAgICAgICAgIHZhciB0bXBQID0gVUUudU5vZGUuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbGkuY2hpbGRyZW5baV0pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnR5cGUgPT0gJ3RleHQnIHx8IGR0ZC5wW2NpLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBQLmFwcGVuZENoaWxkKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBQLmZpcnN0Q2hpbGQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpLmluc2VydEJlZm9yZSh0bXBQLCBjaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUCA9IFVFLnVOb2RlLmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpID0gaSArIDI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKHRtcFAuZmlyc3RDaGlsZCgpICYmICF0bXBQLnBhcmVudE5vZGUpIHx8ICFsaS5maXJzdENoaWxkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbGkuYXBwZW5kQ2hpbGQodG1wUCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vdHJhY2U6MzM1N1xuICAgICAgICAgICAgICAgIC8vcOS4jeiDveS4uuepulxuICAgICAgICAgICAgICAgIGlmICghdG1wUC5maXJzdENoaWxkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wUC5pbm5lckhUTUwoYnJvd3Nlci5pZSA/ICcmbmJzcDsnIDogJzxici8+Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v5Y675o6J5pyr5bC+55qE56m655m9XG4gICAgICAgICAgICAgICAgdmFyIHAgPSBsaS5maXJzdENoaWxkKCk7XG4gICAgICAgICAgICAgICAgdmFyIGxhc3RDaGlsZCA9IHAubGFzdENoaWxkKCk7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RDaGlsZCAmJiBsYXN0Q2hpbGQudHlwZSA9PSAndGV4dCcgJiYgL15cXHMqJC8udGVzdChsYXN0Q2hpbGQuZGF0YSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcC5yZW1vdmVDaGlsZChsYXN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKG1lLm9wdGlvbnMuYXV0b1RyYW5zV29yZFRvTGlzdCkge1xuICAgICAgICAgICAgICAgIHZhciBvcmRlcmxpc3R0eXBlID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbnVtMTogL15cXGQrXFwpLyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlY2ltYWw6IC9eXFxkK1xcLi8sXG4gICAgICAgICAgICAgICAgICAgICAgICAnbG93ZXItYWxwaGEnOiAvXlthLXpdK1xcKS8sXG4gICAgICAgICAgICAgICAgICAgICAgICAndXBwZXItYWxwaGEnOiAvXltBLVpdK1xcLi8sXG4gICAgICAgICAgICAgICAgICAgICAgICBjbjogL15bXFx1NEUwMFxcdTRFOENcXHU0RTA5XFx1NTZEQlxcdTUxNmRcXHU0ZTk0XFx1NGUwM1xcdTUxNmJcXHU0ZTVkXStbXFx1MzAwMV0vLFxuICAgICAgICAgICAgICAgICAgICAgICAgY24yOiAvXlxcKFtcXHU0RTAwXFx1NEU4Q1xcdTRFMDlcXHU1NkRCXFx1NTE2ZFxcdTRlOTRcXHU0ZTAzXFx1NTE2YlxcdTRlNWRdK1xcKS9cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgdW5vcmRlcmxpc3R0eXBlID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3F1YXJlOiAnbidcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBjaGVja0xpc3RUeXBlKGNvbnRlbnQsIGNvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IGNvbnRhaW5lci5maXJzdENoaWxkKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4udHlwZSA9PSAnZWxlbWVudCcgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4udGFnTmFtZSA9PSAnc3BhbicgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIC9XaW5nZGluZ3N8U3ltYm9sLy50ZXN0KHNwYW4uZ2V0U3R5bGUoJ2ZvbnQtZmFtaWx5JykpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiB1bm9yZGVybGlzdHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodW5vcmRlcmxpc3R0eXBlW3BdID09IHNwYW4uZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2Rpc2MnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gb3JkZXJsaXN0dHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9yZGVybGlzdHR5cGVbcF0udGVzdChjb250ZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgncCcpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5nZXRBdHRyKCdjbGFzcycpICE9ICdNc29MaXN0UGFyYWdyYXBoJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy93b3Jk57KY6LS06L+H5p2l55qE5Lya5bim5pyJbWFyZ2lu6KaB5Y675o6JLOS9hui/meagt+S5n+WPr+iDveS8muivr+WRveS4reS4gOS6m+WkruinhlxuICAgICAgICAgICAgICAgICAgICBub2RlLnNldFN0eWxlKCdtYXJnaW4nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUuc2V0U3R5bGUoJ21hcmdpbi1sZWZ0JywgJycpO1xuICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHIoJ2NsYXNzJywgJycpO1xuXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGFwcGVuZExpKGxpc3QsIHAsIHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsaXN0LnRhZ05hbWUgPT0gJ29sJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdCA9IHAuZmlyc3RDaGlsZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdC50eXBlID09ICdlbGVtZW50JyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3QudGFnTmFtZSA9PSAnc3BhbicgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVybGlzdHR5cGVbdHlwZV0udGVzdChmaXJzdC5pbm5lclRleHQoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLnJlbW92ZUNoaWxkKGZpcnN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuaW5uZXJIVE1MKHAuaW5uZXJIVE1MKCkucmVwbGFjZShvcmRlcmxpc3R0eXBlW3R5cGVdLCAnJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcC5yZW1vdmVDaGlsZChwLmZpcnN0Q2hpbGQoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsaSA9IFVFLnVOb2RlLmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaS5hcHBlbmRDaGlsZChwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QuYXBwZW5kQ2hpbGQobGkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciB0bXAgPSBub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlTm9kZSA9IG5vZGU7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZS50YWdOYW1lICE9ICdsaScgJiYgKHR5cGUgPSBjaGVja0xpc3RUeXBlKG5vZGUuaW5uZXJUZXh0KCksIG5vZGUpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxpc3QgPSBVRS51Tm9kZS5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMuaW5zZXJ0b3JkZXJlZGxpc3QuaGFzT3duUHJvcGVydHkodHlwZSkgPyAnb2wnIDogJ3VsJ1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXN0b21TdHlsZVt0eXBlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Quc2V0QXR0cignY2xhc3MnLCAnY3VzdG9tXycgKyB0eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5zZXRTdHlsZSgnbGlzdC1zdHlsZS10eXBlJywgdHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobm9kZSAmJiBub2RlLnBhcmVudE5vZGUudGFnTmFtZSAhPSAnbGknICYmIGNoZWNrTGlzdFR5cGUobm9kZS5pbm5lclRleHQoKSwgbm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXAgPSBub2RlLm5leHRTaWJsaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0bXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsaXN0LCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwZW5kTGkobGlzdCwgbm9kZSwgdHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZSA9IHRtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbGlzdC5wYXJlbnROb2RlICYmIG5vZGUgJiYgbm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsaXN0LCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IGNhY2hlTm9kZS5maXJzdENoaWxkKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4udHlwZSA9PSAnZWxlbWVudCcgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4udGFnTmFtZSA9PSAnc3BhbicgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIC9eXFxzKigmbmJzcDspK1xccyokLy50ZXN0KHNwYW4uaW5uZXJUZXh0KCkpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3Bhbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNwYW4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8v6LCD5pW057Si5byV5qCH562+XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdjb250ZW50Y2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8g5L+d55WZbGnmoIfnrb7moLflvI8gaHR0cHM6Ly9hcHAuYXNhbmEuY29tLzAvMzU3MzEzMTk2NDU0ODgwLzEyMDUyNDczNzE2MjYyMjYvZlxuICAgICAgICAgICAgLy8gYWRqdXN0TGlzdFN0eWxlKG1lLmRvY3VtZW50KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gYWRqdXN0TGlzdFN0eWxlKGRvYywgaWdub3JlKSB7XG4gICAgICAgICAgICB1dGlscy5lYWNoKGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGRvYywgJ29sIHVsJyksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFkb21VdGlscy5pbkRvYyhub2RlLCBkb2MpKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgIGlmIChwYXJlbnQudGFnTmFtZSA9PSBub2RlLnRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGVTdHlsZVR5cGUgPSBnZXRTdHlsZShub2RlKSB8fCAobm9kZS50YWdOYW1lID09ICdPTCcgPyAnZGVjaW1hbCcgOiAnZGlzYycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50U3R5bGVUeXBlID0gZ2V0U3R5bGUocGFyZW50KSB8fCAocGFyZW50LnRhZ05hbWUgPT0gJ09MJyA/ICdkZWNpbWFsJyA6ICdkaXNjJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlU3R5bGVUeXBlID09IHBhcmVudFN0eWxlVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0eWxlSW5kZXggPSB1dGlscy5pbmRleE9mKGxpc3RTdHlsZVtub2RlLnRhZ05hbWVdLCBub2RlU3R5bGVUeXBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlSW5kZXggPSBzdHlsZUluZGV4ICsgMSA9PSBsaXN0U3R5bGVbbm9kZS50YWdOYW1lXS5sZW5ndGggPyAwIDogc3R5bGVJbmRleCArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRMaXN0U3R5bGUobm9kZSwgbGlzdFN0eWxlW25vZGUudGFnTmFtZV1bc3R5bGVJbmRleF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHR5cGUgPSAyO1xuICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5oYXNDbGFzcyhub2RlLCAvY3VzdG9tXy8pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKC9bb3VdbC9pLnRlc3QocGFyZW50LnRhZ05hbWUpICYmIGRvbVV0aWxzLmhhc0NsYXNzKHBhcmVudCwgL2N1c3RvbV8vKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUgPSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKC9bb3VdbC9pLnRlc3QocGFyZW50LnRhZ05hbWUpICYmIGRvbVV0aWxzLmhhc0NsYXNzKHBhcmVudCwgL2N1c3RvbV8vKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IDM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgc3R5bGUgPSBkb21VdGlscy5nZXRTdHlsZShub2RlLCAnbGlzdC1zdHlsZS10eXBlJyk7XG4gICAgICAgICAgICAgICAgc3R5bGUgJiYgKG5vZGUuc3R5bGUuY3NzVGV4dCA9ICdsaXN0LXN0eWxlLXR5cGU6JyArIHN0eWxlKTtcbiAgICAgICAgICAgICAgICBub2RlLmNsYXNzTmFtZSA9XG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLnRyaW0obm9kZS5jbGFzc05hbWUucmVwbGFjZSgvbGlzdC1wYWRkaW5nbGVmdC1cXHcrLywgJycpKSArICcgbGlzdC1wYWRkaW5nbGVmdC0nICsgdHlwZTtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKG5vZGUsICdsaScpLCBmdW5jdGlvbiAobGkpIHtcbiAgICAgICAgICAgICAgICAgICAgbGkuc3R5bGUuY3NzVGV4dCAmJiAobGkuc3R5bGUuY3NzVGV4dCA9ICcnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFsaS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChsaS5wYXJlbnROb2RlICE9PSBub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmhhc0NsYXNzKG5vZGUsIC9jdXN0b21fLykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYWRkaW5nTGVmdCA9IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFN0eWxlID0gZ2V0U3R5bGUobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50YWdOYW1lID09ICdPTCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoY3VycmVudFN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdjbic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdjbjEnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY24yJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiAxMCAmJiAoaW5kZXggJSAxMCA9PSAwIHx8IChpbmRleCA+IDEwICYmIGluZGV4IDwgMjApKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdCA9IDI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbmRleCA+IDIwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdMZWZ0ID0gMztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdudW0yJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiA5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmdMZWZ0ID0gMjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkuY2xhc3NOYW1lID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xpc3QtJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbVN0eWxlW2N1cnJlbnRTdHlsZV0gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsaXN0LScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3R5bGUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLXBhZGRpbmdsZWZ0LScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nTGVmdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkuY2xhc3NOYW1lID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xpc3QtJyArIGN1c3RvbVN0eWxlW2N1cnJlbnRTdHlsZV0gKyAnICcgKyAnbGlzdC0nICsgY3VycmVudFN0eWxlICsgJy1wYWRkaW5nbGVmdCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaS5jbGFzc05hbWUgPSBsaS5jbGFzc05hbWUucmVwbGFjZSgvbGlzdC1bXFx3XFwtXSsvZ2ksICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgY2xhc3NOYW1lID0gbGkuZ2V0QXR0cmlidXRlKCdjbGFzcycpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2xhc3NOYW1lICE9PSBudWxsICYmICFjbGFzc05hbWUucmVwbGFjZSgvXFxzL2csICcnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhsaSwgJ2NsYXNzJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAhaWdub3JlICYmXG4gICAgICAgICAgICAgICAgICAgIGFkanVzdExpc3QoXG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRTdHlsZShub2RlKSB8fCBkb21VdGlscy5nZXRTdHlsZShub2RlLCAnbGlzdC1zdHlsZS10eXBlJyksXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBhZGp1c3RMaXN0KGxpc3QsIHRhZywgc3R5bGUsIGlnbm9yZUVtcHR5KSB7XG4gICAgICAgICAgICB2YXIgbmV4dExpc3QgPSBsaXN0Lm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIG5leHRMaXN0ICYmXG4gICAgICAgICAgICAgICAgbmV4dExpc3Qubm9kZVR5cGUgPT0gMSAmJlxuICAgICAgICAgICAgICAgIG5leHRMaXN0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSB0YWcgJiZcbiAgICAgICAgICAgICAgICAoZ2V0U3R5bGUobmV4dExpc3QpIHx8XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldFN0eWxlKG5leHRMaXN0LCAnbGlzdC1zdHlsZS10eXBlJykgfHxcbiAgICAgICAgICAgICAgICAgICAgKHRhZyA9PSAnb2wnID8gJ2RlY2ltYWwnIDogJ2Rpc2MnKSkgPT0gc3R5bGVcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLm1vdmVDaGlsZChuZXh0TGlzdCwgbGlzdCk7XG4gICAgICAgICAgICAgICAgaWYgKG5leHRMaXN0LmNoaWxkTm9kZXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5leHRMaXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV4dExpc3QgJiYgZG9tVXRpbHMuaXNGaWxsQ2hhcihuZXh0TGlzdCkpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobmV4dExpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHByZUxpc3QgPSBsaXN0LnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBwcmVMaXN0ICYmXG4gICAgICAgICAgICAgICAgcHJlTGlzdC5ub2RlVHlwZSA9PSAxICYmXG4gICAgICAgICAgICAgICAgcHJlTGlzdC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gdGFnICYmXG4gICAgICAgICAgICAgICAgKGdldFN0eWxlKHByZUxpc3QpIHx8XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldFN0eWxlKHByZUxpc3QsICdsaXN0LXN0eWxlLXR5cGUnKSB8fFxuICAgICAgICAgICAgICAgICAgICAodGFnID09ICdvbCcgPyAnZGVjaW1hbCcgOiAnZGlzYycpKSA9PSBzdHlsZVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMubW92ZUNoaWxkKGxpc3QsIHByZUxpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByZUxpc3QgJiYgZG9tVXRpbHMuaXNGaWxsQ2hhcihwcmVMaXN0KSkge1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwcmVMaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICFpZ25vcmVFbXB0eSAmJiBkb21VdGlscy5pc0VtcHR5QmxvY2sobGlzdCkgJiYgZG9tVXRpbHMucmVtb3ZlKGxpc3QpO1xuICAgICAgICAgICAgaWYgKGdldFN0eWxlKGxpc3QpKSB7XG4gICAgICAgICAgICAgICAgYWRqdXN0TGlzdFN0eWxlKGxpc3Qub3duZXJEb2N1bWVudCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZXRMaXN0U3R5bGUobGlzdCwgc3R5bGUpIHtcbiAgICAgICAgICAgIGlmIChjdXN0b21TdHlsZVtzdHlsZV0pIHtcbiAgICAgICAgICAgICAgICBsaXN0LmNsYXNzTmFtZSA9ICdjdXN0b21fJyArIHN0eWxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZShsaXN0LCAnbGlzdC1zdHlsZS10eXBlJywgc3R5bGUpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjbGVhckVtcHR5U2libGluZyhub2RlKSB7XG4gICAgICAgICAgICB2YXIgdG1wTm9kZSA9IG5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgaWYgKHRtcE5vZGUgJiYgZG9tVXRpbHMuaXNFbXB0eUJsb2NrKHRtcE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG1wTm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICBpZiAodG1wTm9kZSAmJiBkb21VdGlscy5pc0VtcHR5QmxvY2sodG1wTm9kZSkpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHByZXZlbnRBbmRTYXZlKCkge1xuICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCA/IGV2dC5wcmV2ZW50RGVmYXVsdCgpIDogKGV2dC5yZXR1cm5WYWx1ZSA9IGZhbHNlKTtcbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICBtZS51bmRvTWFuZ2VyICYmIG1lLnVuZG9NYW5nZXIuc2F2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZmluZExpc3Qobm9kZSwgZmlsdGVyRm4pIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAobm9kZSAmJiAhZG9tVXRpbHMuaXNCb2R5KG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJGbihub2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMSAmJiAvW291XWwvaS50ZXN0KG5vZGUudGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBldnQua2V5Q29kZSB8fCBldnQud2hpY2g7XG4gICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSAxMyAmJiAhZXZ0LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgLy/lm57ovaZcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudCA9IGRvbVV0aWxzLmZpbmRQYXJlbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5pc0Jsb2NrRWxtKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgbGkgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ2xpJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmVudCAmJiBwYXJlbnQudGFnTmFtZSAhPSAnUFJFJyAmJiAhbGkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSBwYXJlbnQuaW5uZXJIVE1MLnJlcGxhY2UobmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKSwgJycpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoL15cXHMqMVxccypcXC5bXlxcZF0vLnRlc3QoaHRtbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5pbm5lckhUTUwgPSBodG1sLnJlcGxhY2UoL15cXHMqMVxccypcXC4vLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnRBdExhc3QocGFyZW50KS5jb2xsYXBzZSh0cnVlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0b3JkZXJlZGxpc3QnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IGZpbmRMaXN0KHJhbmdlLnN0YXJ0Q29udGFpbmVyLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUudGFnTmFtZSA9PSAnVEFCTEUnO1xuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgZW5kID0gcmFuZ2UuY29sbGFwc2VkXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHN0YXJ0XG4gICAgICAgICAgICAgICAgICAgICAgICA6IGZpbmRMaXN0KHJhbmdlLmVuZENvbnRhaW5lciwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLnRhZ05hbWUgPT0gJ1RBQkxFJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQgJiYgZW5kICYmIHN0YXJ0ID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ2xpJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLmVuZENvbnRhaW5lciwgJ2xpJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgJiYgZW5kICYmIHN0YXJ0ID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ2xpJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpICYmIGRvbVV0aWxzLmlzRW1wdHlCbG9jayhsaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlID0gbGkucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0ID0gbGkubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRMaXN0ID0gbGkucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZSAmJiBuZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChuZXh0LCAwKS5jb2xsYXBzZSh0cnVlKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCghcHJlICYmICFuZXh0KSB8fCAhcHJlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50TGlzdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkucGFyZW50Tm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCBwYXJlbnRMaXN0Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShsaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXBhcmVudExpc3QuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHAsIDApLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnRBbmRTYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmsgPSB0bXBSYW5nZS5jb2xsYXBzZShmYWxzZSkuY3JlYXRlQm9va21hcmsoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UubW92ZVRvQm9va21hcmsoYmspO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBsaSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUodG1wUmFuZ2Uuc3RhcnRDb250YWluZXIsICdsaScsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJFbXB0eVNpYmxpbmcobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnRBbmRTYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbGkgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCAnbGknLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAobGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5QmxvY2sobGkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmsgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRMaXN0ID0gbGkucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGkgIT09IHBhcmVudExpc3QubGFzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmJyZWFrUGFyZW50KGxpLCBwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJFbXB0eVNpYmxpbmcobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudExpc3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobGksIHBhcmVudExpc3QubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUocGFyZW50TGlzdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+W1jOWll+S4jeWkhOeQhlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZHRkLiRsaXN0W2xpLnBhcmVudE5vZGUudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkb21VdGlscy5pc0Jsb2NrRWxtKGxpLmZpcnN0Q2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocCwgbGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGxpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKGxpLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGxpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShsaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSBsaS5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZmlyc3QgfHwgIWRvbVV0aWxzLmlzQmxvY2tFbG0oZmlyc3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFsaS5maXJzdENoaWxkICYmIGRvbVV0aWxzLmZpbGxOb2RlKG1lLmRvY3VtZW50LCBwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGxpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuYXBwZW5kQ2hpbGQobGkuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkuYXBwZW5kQ2hpbGQocCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0ID0gcDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoc3Bhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYnJlYWtQYXJlbnQoc3BhbiwgbGkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5leHRMaSA9IHNwYW4ubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBuZXh0TGkuZmlyc3RDaGlsZDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZmlyc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRMaS5hcHBlbmRDaGlsZChwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3QgPSBwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUoZmlyc3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0LmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgZmlyc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KGZpcnN0LCAwKS5jb2xsYXBzZSh0cnVlKS5zaHJpbmtCb3VuZGFyeSgpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShzcGFuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gbmV4dExpLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlICYmIGRvbVV0aWxzLmlzRW1wdHlCbG9jayhwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5pbm5lckhUTUwgPSAnPHA+PC9wPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmZpbGxOb2RlKG1lLmRvY3VtZW50LCBwcmUuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50QW5kU2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gOCkge1xuICAgICAgICAgICAgICAgIC8v5L+u5LitaWXkuK1saeS4i+eahOmXrumimFxuICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCAmJiBkb21VdGlscy5pc1N0YXJ0SW5ibG9jayhyYW5nZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UgPSByYW5nZS5jbG9uZVJhbmdlKCkudHJpbUJvdW5kYXJ5KCk7XG4gICAgICAgICAgICAgICAgICAgIGxpID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ2xpJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIC8v6KaB5ZyobGnnmoTmnIDlt6bovrnvvIzmiY3og73lpITnkIZcbiAgICAgICAgICAgICAgICAgICAgaWYgKGxpICYmIGRvbVV0aWxzLmlzU3RhcnRJbmJsb2NrKHRtcFJhbmdlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCAncCcsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0ICYmIHN0YXJ0ICE9PSBsaS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudExpc3QgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCBbJ29sJywgJ3VsJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmJyZWFrUGFyZW50KHN0YXJ0LCBwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGVhckVtcHR5U2libGluZyhzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdjb250ZW50Y2hhbmdlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoc3RhcnQsIDApLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpICYmIChwcmUgPSBsaS5wcmV2aW91c1NpYmxpbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gNDYgJiYgbGkuY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+acieWPr+iDveS4iui+ueeahOWFhOW8n+iKgueCueaYr+S4qjLnuqfoj5zljZXvvIzopoHov73liqDliLAy57qn6I+c5Y2V55qE5pyA5ZCO55qEbGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZHRkLiRsaXN0W3ByZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUgPSBwcmUubGFzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS51bmRvTWFuZ2VyICYmIG1lLnVuZG9NYW5nZXIuc2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0ID0gbGkuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShmaXJzdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlOb2RlKGZpcnN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQocHJlLCBwcmUuY2hpbGROb2Rlcy5sZW5ndGgpLnNocmlua0JvdW5kYXJ5KCkuY29sbGFwc2UoKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUuYXBwZW5kQ2hpbGQoZmlyc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoZmlyc3QsIDApLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2ZpcnN05LiN5piv5ZSv5LiA55qE6IqC54K5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAobGkuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChsaS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4gPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHNwYW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/liKTmlq1wcmXmmK/lkKbmmK/nqbrnmoToioLngrks5aaC5p6c5pivPHA+PGJyLz48L3A+57G75Z6L55qE56m66IqC54K577yM5bmy5o6JcOagh+etvumYsuatouWug+WNoOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayhwcmUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMubW92ZUNoaWxkKGxpLCBwcmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUoc3BhbikuY29sbGFwc2UodHJ1ZSkuc2VsZWN0KHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoc3Bhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUobGkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZS5hcHBlbmRDaGlsZChwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHAsIDApLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQocHJlLCBwcmUuY2hpbGROb2Rlcy5sZW5ndGgpLnNocmlua0JvdW5kYXJ5KCkuY29sbGFwc2UoKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRFbmQocHJlLCBwcmUuY2hpbGROb2Rlcy5sZW5ndGgpLmNvbGxhcHNlKCkuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGxpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmUuYXBwZW5kQ2hpbGQobGkuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGxpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZTo5ODBcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpICYmICFsaS5wcmV2aW91c1NpYmxpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50TGlzdCA9IGxpLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNUYWdOb2RlKHBhcmVudExpc3QucGFyZW50Tm9kZSwgJ29sIHVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50TGlzdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShsaSwgcGFyZW50TGlzdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5Tm9kZShwYXJlbnRMaXN0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHBhcmVudExpc3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGxpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudExpc3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobGkuZmlyc3RDaGlsZCwgcGFyZW50TGlzdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUocGFyZW50TGlzdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwYXJlbnRMaXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhiaykuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAodHlwZSwgZXZ0KSB7XG4gICAgICAgICAgICB2YXIga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaDtcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09IDgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIGxpc3Q7XG4gICAgICAgICAgICAgICAgaWYgKChsaXN0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsIFsnb2wnLCAndWwnXSwgdHJ1ZSkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkanVzdExpc3QoXG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC50YWdOYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRTdHlsZShsaXN0KSB8fCBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGxpc3QsICdsaXN0LXN0eWxlLXR5cGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvL+WkhOeQhnRhYumUrlxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigndGFia2V5ZG93bicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuXG4gICAgICAgICAgICAvL+aOp+WItue6p+aVsFxuICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tMZXZlbChsaSkge1xuICAgICAgICAgICAgICAgIGlmIChtZS5vcHRpb25zLm1heExpc3RMZXZlbCAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGV2ZWwgPSBsaS5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW0gPSAwO1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoL1tvdV1sL2kudGVzdChsZXZlbC50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxOdW0rKztcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldmVsID0gbGV2ZWwucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobGV2ZWxOdW0gPj0gbWUub3B0aW9ucy5tYXhMaXN0TGV2ZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/lj6rku6XlvIDlp4vkuLrlh4ZcbiAgICAgICAgICAgIC8vdG9kbyDlkI7nu63mlLnov5tcbiAgICAgICAgICAgIHZhciBsaSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocmFuZ2Uuc3RhcnRDb250YWluZXIsICdsaScsIHRydWUpO1xuICAgICAgICAgICAgaWYgKGxpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJrO1xuICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrTGV2ZWwobGkpKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudExpID0gbGkucGFyZW50Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHBhcmVudExpLnRhZ05hbWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB1dGlscy5pbmRleE9mKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RTdHlsZVtsaXN0LnRhZ05hbWVdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldFN0eWxlKHBhcmVudExpKSB8fCBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHBhcmVudExpLCAnbGlzdC1zdHlsZS10eXBlJylcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaW5kZXggKyAxID09IGxpc3RTdHlsZVtsaXN0LnRhZ05hbWVdLmxlbmd0aCA/IDAgOiBpbmRleCArIDE7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50U3R5bGUgPSBsaXN0U3R5bGVbbGlzdC50YWdOYW1lXVtpbmRleF07XG4gICAgICAgICAgICAgICAgICAgIHNldExpc3RTdHlsZShsaXN0LCBjdXJyZW50U3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNTdGFydEluYmxvY2socmFuZ2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmsgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50TGkuaW5zZXJ0QmVmb3JlKGxpc3QsIGxpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QuYXBwZW5kQ2hpbGQobGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRqdXN0TGlzdChsaXN0LCBsaXN0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSwgY3VycmVudFN0eWxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY29udGVudGNoYW5nZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgYmsgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2xvc2VMaXN0LCBwYXJlbnRzID0gZG9tVXRpbHMuZmluZFBhcmVudHMobGkpLCBjaTsgKGNpID0gcGFyZW50c1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNUYWdOb2RlKGNpLCAnb2wgdWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlTGlzdCA9IGNpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gbGk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChiay5lbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICYmICEoZG9tVXRpbHMuZ2V0UG9zaXRpb24oY3VycmVudCwgYmsuZW5kKSAmIGRvbVV0aWxzLlBPU0lUSU9OX0ZPTExPV0lORykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tMZXZlbChjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZG9tVXRpbHMuZ2V0TmV4dERvbU5vZGUoY3VycmVudCwgZmFsc2UsIG51bGwsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZSAhPT0gY2xvc2VMaXN0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRMaSA9IGN1cnJlbnQucGFyZW50Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQocGFyZW50TGkudGFnTmFtZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gdXRpbHMuaW5kZXhPZihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RTdHlsZVtsaXN0LnRhZ05hbWVdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U3R5bGUocGFyZW50TGkpIHx8IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUocGFyZW50TGksICdsaXN0LXN0eWxlLXR5cGUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50SW5kZXggPSBpbmRleCArIDEgPT0gbGlzdFN0eWxlW2xpc3QudGFnTmFtZV0ubGVuZ3RoID8gMCA6IGluZGV4ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFN0eWxlID0gbGlzdFN0eWxlW2xpc3QudGFnTmFtZV1bY3VycmVudEluZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMaXN0U3R5bGUobGlzdCwgY3VycmVudFN0eWxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRMaS5pbnNlcnRCZWZvcmUobGlzdCwgY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnQgJiYgIShkb21VdGlscy5nZXRQb3NpdGlvbihjdXJyZW50LCBiay5lbmQpICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaSA9IGN1cnJlbnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QuYXBwZW5kQ2hpbGQoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbGkgfHwgZG9tVXRpbHMuaXNUYWdOb2RlKGxpLCAnb2wgdWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKChsaSA9IGxpLmZpcnN0Q2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsaS50YWdOYW1lID09ICdMSScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaSA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGN1cnJlbnQsIGZhbHNlLCBudWxsLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZSAhPT0gY2xvc2VMaXN0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGxpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGp1c3RMaXN0KGxpc3QsIGxpc3QudGFnTmFtZS50b0xvd2VyQ2FzZSgpLCBjdXJyZW50U3R5bGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBsaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBnZXRMaShzdGFydCkge1xuICAgICAgICAgICAgd2hpbGUgKHN0YXJ0ICYmICFkb21VdGlscy5pc0JvZHkoc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVOYW1lID09ICdUQUJMRScpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzdGFydC5ub2RlTmFtZSA9PSAnTEknKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGFydDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOacieW6j+WIl+ihqO+8jOS4juKAnGluc2VydHVub3JkZXJlZGxpc3TigJ3lkb3ku6TkupLmlqVcbiAgICAgICAgICogQGNvbW1hbmQgaW5zZXJ0b3JkZXJlZGxpc3RcbiAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjb21tYW5kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBzdHlsZSDmj5LlhaXnmoTmnInluo/liJfooajnsbvlnovvvIzlgLzkuLrvvJpkZWNpbWFsLGxvd2VyLWFscGhhLGxvd2VyLXJvbWFuLHVwcGVyLWFscGhhLHVwcGVyLXJvbWFuLGNuLGNuMSxjbjIsbnVtLG51bTEsbnVtMlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2luc2VydG9yZGVyZWRsaXN0JywnZGVjaW1hbCcpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmn6Xor6LlvZPliY3pgInljLrlhoXlrrnmmK/lkKbmnInluo/liJfooahcbiAgICAgICAgICogQGNvbW1hbmQgaW5zZXJ0b3JkZXJlZGxpc3RcbiAgICAgICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRTdGF0ZVxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZXR1cm4geyBpbnQgfSDlpoLmnpzlvZPliY3pgInljLrmmK/mnInluo/liJfooajov5Tlm54x77yM5ZCm5YiZ6L+U5ZueMFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSggJ2luc2VydG9yZGVyZWRsaXN0JyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmn6Xor6LlvZPliY3pgInljLrlhoXlrrnmmK/lkKbmnInluo/liJfooahcbiAgICAgICAgICogQGNvbW1hbmQgaW5zZXJ0b3JkZXJlZGxpc3RcbiAgICAgICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfSDov5Tlm57lvZPliY3mnInluo/liJfooajnmoTnsbvlnovvvIzlgLzkuLpudWxs5oiWZGVjaW1hbCxsb3dlci1hbHBoYSxsb3dlci1yb21hbix1cHBlci1hbHBoYSx1cHBlci1yb21hbixjbixjbjEsY24yLG51bSxudW0xLG51bTJcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoICdpbnNlcnRvcmRlcmVkbGlzdCcgKTtcbiAgICAgICAgICogYGBgXG4gICAgICAgICAqL1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDml6Dluo/liJfooajvvIzkuI7igJxpbnNlcnRvcmRlcmVkbGlzdOKAneWRveS7pOS6kuaWpVxuICAgICAgICAgKiBAY29tbWFuZCBpbnNlcnR1bm9yZGVyZWRsaXN0XG4gICAgICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY29tbWFuZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gc3R5bGUg5o+S5YWl55qE5peg5bqP5YiX6KGo57G75Z6L77yM5YC85Li677yaY2lyY2xlLGRpc2Msc3F1YXJlLGRhc2gsZG90XG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnaW5zZXJ0dW5vcmRlcmVkbGlzdCcsJ2NpcmNsZScpO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDmn6Xor6LlvZPliY3mmK/lkKbmnIl3b3Jk5paH5qGj57KY6LS06L+b5p2l55qE5Zu+54mHXG4gICAgICAgICAqIEBjb21tYW5kIGluc2VydHVub3JkZXJlZGxpc3RcbiAgICAgICAgICogQG1ldGhvZCBpbnNlcnR1bm9yZGVyZWRsaXN0XG4gICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNvbW1hbmQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZXR1cm4geyBpbnQgfSDlpoLmnpzlvZPliY3pgInljLrmmK/ml6Dluo/liJfooajov5Tlm54x77yM5ZCm5YiZ6L+U5ZueMFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSggJ2luc2VydHVub3JkZXJlZGxpc3QnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOafpeivouW9k+WJjemAieWMuuWGheWuueaYr+WQpuacieW6j+WIl+ihqFxuICAgICAgICAgKiBAY29tbWFuZCBpbnNlcnR1bm9yZGVyZWRsaXN0XG4gICAgICAgICAqIEBtZXRob2QgcXVlcnlDb21tYW5kVmFsdWVcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY29tbWFuZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB9IOi/lOWbnuW9k+WJjeaXoOW6j+WIl+ihqOeahOexu+Wei++8jOWAvOS4um51bGzmiJZjaXJjbGUsZGlzYyxzcXVhcmUsZGFzaCxkb3RcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoICdpbnNlcnR1bm9yZGVyZWRsaXN0JyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgbWUuY29tbWFuZHNbJ2luc2VydG9yZGVyZWRsaXN0J10gPSBtZS5jb21tYW5kc1snaW5zZXJ0dW5vcmRlcmVkbGlzdCddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjb21tYW5kLCBzdHlsZSkge1xuICAgICAgICAgICAgICAgIGlmICghc3R5bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgPSBjb21tYW5kLnRvTG93ZXJDYXNlKCkgPT0gJ2luc2VydG9yZGVyZWRsaXN0JyA/ICdkZWNpbWFsJyA6ICdkaXNjJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJGbiA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PSAxID8gbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT0gJ2JyJyA6ICFkb21VdGlscy5pc1doaXRlc3BhY2Uobm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHRhZyA9IGNvbW1hbmQudG9Mb3dlckNhc2UoKSA9PSAnaW5zZXJ0b3JkZXJlZGxpc3QnID8gJ29sJyA6ICd1bCcsXG4gICAgICAgICAgICAgICAgICAgIGZyYWcgPSBtZS5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgICAgICAgICAgLy/ljrvmjonmmK/lm6DkuLrkvJrlh7rnjrDpgInliLDmnKvlsL7vvIzlr7zoh7RhZGp1c3RtZW50Qm91bmRhcnnnvKnliLBvbC91bOeahOS9jee9rlxuICAgICAgICAgICAgICAgIC8vcmFuZ2Uuc2hyaW5rQm91bmRhcnkoKTsvLy5hZGp1c3RtZW50Qm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICByYW5nZS5hZGp1c3RtZW50Qm91bmRhcnkoKS5zaHJpbmtCb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgIHZhciBia28gPSByYW5nZS5jcmVhdGVCb29rbWFyayh0cnVlKSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBnZXRMaShtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChia28uc3RhcnQpKSxcbiAgICAgICAgICAgICAgICAgICAgbW9kaWZ5U3RhcnQgPSAwLFxuICAgICAgICAgICAgICAgICAgICBlbmQgPSBnZXRMaShtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChia28uZW5kKSksXG4gICAgICAgICAgICAgICAgICAgIG1vZGlmeUVuZCA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0UGFyZW50LFxuICAgICAgICAgICAgICAgICAgICBlbmRQYXJlbnQsXG4gICAgICAgICAgICAgICAgICAgIGxpc3QsXG4gICAgICAgICAgICAgICAgICAgIHRtcDtcblxuICAgICAgICAgICAgICAgIGlmIChzdGFydCB8fCBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgJiYgKHN0YXJ0UGFyZW50ID0gc3RhcnQucGFyZW50Tm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghYmtvLmVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZW5kICYmIChlbmRQYXJlbnQgPSBlbmQucGFyZW50Tm9kZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0UGFyZW50ID09PSBlbmRQYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChzdGFydCAhPT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWRvbVV0aWxzLmlzQmxvY2tFbG0odG1wLmZpcnN0Q2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodG1wLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHAuYXBwZW5kQ2hpbGQodG1wLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcC5hcHBlbmRDaGlsZChwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZCh0bXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRQYXJlbnQuaW5zZXJ0QmVmb3JlKHRtcCwgZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZG9tVXRpbHMuaXNCbG9ja0VsbShlbmQuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChlbmQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwLmFwcGVuZENoaWxkKGVuZC5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kLmFwcGVuZENoaWxkKHApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChlbmQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYnJlYWtQYXJlbnQodG1wLCBzdGFydFBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUodG1wLnByZXZpb3VzU2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wLnByZXZpb3VzU2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUodG1wLm5leHRTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0bXAubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGVTdHlsZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0U3R5bGUoc3RhcnRQYXJlbnQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShzdGFydFBhcmVudCwgJ2xpc3Qtc3R5bGUtdHlwZScpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNvbW1hbmQudG9Mb3dlckNhc2UoKSA9PSAnaW5zZXJ0b3JkZXJlZGxpc3QnID8gJ2RlY2ltYWwnIDogJ2Rpc2MnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydFBhcmVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gdGFnICYmIG5vZGVTdHlsZSA9PSBzdHlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpID0gMCwgY2ksIHRtcEZyYWcgPSBtZS5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjaSA9IGZyYWcuZmlyc3RDaGlsZCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzVGFnTm9kZShjaSwgJ29sIHVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOWIoOmZpOaXtu+8jOWtkOWIl+ihqOS4jeWkhOeQhlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShjaSwnbGknKSxmdW5jdGlvbihsaSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZShsaS5maXJzdENoaWxkKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBGcmFnLmFwcGVuZENoaWxkKGxpLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBGcmFnLmFwcGVuZENoaWxkKGNpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjaS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wRnJhZy5hcHBlbmRDaGlsZChjaS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2kpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0bXBGcmFnLCB0bXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldExpc3RTdHlsZShsaXN0LCBzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5hcHBlbmRDaGlsZChmcmFnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXAucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobGlzdCwgdG1wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0ICYmIGFkanVzdExpc3QobGlzdCwgdGFnLCBzdHlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhia28pLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8v5byA5aeLXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gc3RhcnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzVGFnTm9kZShzdGFydCwgJ29sIHVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcGZyYWcgPSBtZS5kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNCbG9jayA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChzdGFydC5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCbG9ja0VsbShzdGFydC5maXJzdENoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0Jsb2NrID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcGZyYWcuYXBwZW5kQ2hpbGQoc3RhcnQuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFoYXNCbG9jaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcFAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBQLmFwcGVuZENoaWxkKHRtcGZyYWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZCh0bXBQKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQodG1wZnJhZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHRtcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0UGFyZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGZyYWcsIHN0YXJ0UGFyZW50Lm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5Tm9kZShzdGFydFBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZShzdGFydFBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0UGFyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcihzdGFydFBhcmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RpZnlTdGFydCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoZW5kICYmIGRvbVV0aWxzLmluRG9jKGVuZFBhcmVudCwgbWUuZG9jdW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+e7k+adn1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBlbmRQYXJlbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChzdGFydCAmJiBzdGFydCAhPT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gc3RhcnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzVGFnTm9kZShzdGFydCwgJ29sIHVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wZnJhZyA9IG1lLmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQmxvY2sgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoc3RhcnQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQmxvY2tFbG0oc3RhcnQuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNCbG9jayA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBmcmFnLmFwcGVuZENoaWxkKHN0YXJ0LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaGFzQmxvY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFAgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBQLmFwcGVuZENoaWxkKHRtcGZyYWcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZCh0bXBQKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQodG1wZnJhZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSB0bXA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wRGl2ID0gZG9tVXRpbHMuY3JlYXRlRWxlbWVudChtZS5kb2N1bWVudCwgJ2RpdicsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBEaXY6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMubW92ZUNoaWxkKGVuZCwgdG1wRGl2KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZCh0bXBEaXYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGVuZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRQYXJlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZnJhZywgZW5kUGFyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldEVuZEJlZm9yZShlbmRQYXJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlOb2RlKGVuZFBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoZW5kUGFyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbW9kaWZ5RW5kID0gMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICghbW9kaWZ5U3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUobWUuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYmtvLnN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChia28uZW5kICYmICFtb2RpZnlFbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIobWUuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYmtvLmVuZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByYW5nZS5lbmxhcmdlKHRydWUsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBub3RFeGNoYW5nZVtub2RlLnRhZ05hbWVdO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgZnJhZyA9IG1lLmRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcblxuICAgICAgICAgICAgICAgIHZhciBiayA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCksXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShiay5zdGFydCwgZmFsc2UsIGZpbHRlckZuKSxcbiAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2UgPSByYW5nZS5jbG9uZVJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGUsXG4gICAgICAgICAgICAgICAgICAgIGJsb2NrID0gZG9tVXRpbHMuaXNCbG9ja0VsbTtcblxuICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudCAmJlxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ICE9PSBiay5lbmQgJiZcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0UG9zaXRpb24oY3VycmVudCwgYmsuZW5kKSAmIGRvbVV0aWxzLlBPU0lUSU9OX1BSRUNFRElOR1xuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5ub2RlVHlwZSA9PSAzIHx8IGR0ZC5saVtjdXJyZW50LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5ub2RlVHlwZSA9PSAxICYmIGR0ZC4kbGlzdFtjdXJyZW50LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcmFnLmFwcGVuZENoaWxkKGN1cnJlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgZmlsdGVyRm4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gdG1wTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0U3RhcnRCZWZvcmUoY3VycmVudCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IGJrLmVuZCAmJiAoIWJsb2NrKGN1cnJlbnQpIHx8IGRvbVV0aWxzLmlzQm9va21hcmtOb2RlKGN1cnJlbnQpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCBmYWxzZSwgbnVsbCwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICFub3RFeGNoYW5nZVtub2RlLnRhZ05hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudCAmJiBibG9jayhjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKHRtcE5vZGUsIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRtcCAmJiBkb21VdGlscy5pc0Jvb2ttYXJrTm9kZSh0bXApKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZSh0bXAsIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSB0bXA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wUmFuZ2Uuc2V0RW5kQWZ0ZXIodG1wTm9kZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZSh0bXBOb2RlLCBmYWxzZSwgZmlsdGVyRm4pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGkgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsaS5hcHBlbmRDaGlsZCh0bXBSYW5nZS5leHRyYWN0Q29udGVudHMoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eU5vZGUobGkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGxpLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZS5hcHBlbmRDaGlsZChsaS5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGkuYXBwZW5kQ2hpbGQodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFnLmFwcGVuZENoaWxkKGxpKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBkb21VdGlscy5nZXROZXh0RG9tTm9kZShjdXJyZW50LCB0cnVlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgIGxpc3QgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgICAgICAgICAgICAgc2V0TGlzdFN0eWxlKGxpc3QsIHN0eWxlKTtcbiAgICAgICAgICAgICAgICBsaXN0LmFwcGVuZENoaWxkKGZyYWcpO1xuICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUobGlzdCk7XG4gICAgICAgICAgICAgICAgLy/lvZPliY1saXN05LiK5LiL55yL6IO95ZCm5ZCI5bm2XG4gICAgICAgICAgICAgICAgYWRqdXN0TGlzdChsaXN0LCB0YWcsIHN0eWxlKTtcbiAgICAgICAgICAgICAgICAvL+WOu+aOieWGl+S9meeahHRtcERpdlxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgdG1wRGl2cyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGxpc3QsICdkaXYnKTsgKGNpID0gdG1wRGl2c1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaS5nZXRBdHRyaWJ1dGUoJ3RtcERpdicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2ksIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJhbmdlLm1vdmVUb0Jvb2ttYXJrKGJrbykuc2VsZWN0KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uIChjb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhZyA9IGNvbW1hbmQudG9Mb3dlckNhc2UoKSA9PSAnaW5zZXJ0b3JkZXJlZGxpc3QnID8gJ29sJyA6ICd1bCc7XG4gICAgICAgICAgICAgICAgdmFyIHBhdGggPSB0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBwYXRoW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpLm5vZGVOYW1lID09ICdUQUJMRScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YWcgPT0gY2kubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlDb21tYW5kVmFsdWU6IGZ1bmN0aW9uIChjb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhZyA9IGNvbW1hbmQudG9Mb3dlckNhc2UoKSA9PSAnaW5zZXJ0b3JkZXJlZGxpc3QnID8gJ29sJyA6ICd1bCc7XG4gICAgICAgICAgICAgICAgdmFyIHBhdGggPSB0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCksXG4gICAgICAgICAgICAgICAgICAgIG5vZGU7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBwYXRoW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNpLm5vZGVOYW1lID09ICdUQUJMRScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhZyA9PSBjaS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gY2k7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbm9kZSA/IGdldFN0eWxlKG5vZGUpIHx8IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUobm9kZSwgJ2xpc3Qtc3R5bGUtdHlwZScpIDogbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9zb3VyY2UuanNcbiAgICAvKipcbiAgICAgKiDmupDnoIHnvJbovpHmj5Lku7ZcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKihmdW5jdGlvbiAoKXsqL1xuICAgIC8vdmFyIHNvdXJjZUVkaXRvcnMgPSB7XG4gICAgLy90ZXh0YXJlYTogZnVuY3Rpb24gKGVkaXRvciwgaG9sZGVyKXtcbiAgICAvL3ZhciB0ZXh0YXJlYSA9IGhvbGRlci5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgLy90ZXh0YXJlYS5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOmFic29sdXRlO3Jlc2l6ZTpub25lO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ym9yZGVyOjA7cGFkZGluZzowO21hcmdpbjowO292ZXJmbG93LXk6YXV0bzsnO1xuICAgIC8vLy8gdG9kbzogSUXkuIvlj6rmnIlvbnJlc2l6ZeWxnuaAp+WPr+eUqC4uLiDlvojnuqDnu5NcbiAgICAvL2lmIChicm93c2VyLmllICYmIGJyb3dzZXIudmVyc2lvbiA8IDgpIHtcbiAgICAvL3RleHRhcmVhLnN0eWxlLndpZHRoID0gaG9sZGVyLm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAvL3RleHRhcmVhLnN0eWxlLmhlaWdodCA9IGhvbGRlci5vZmZzZXRIZWlnaHQgKyAncHgnO1xuICAgIC8vaG9sZGVyLm9ucmVzaXplID0gZnVuY3Rpb24gKCl7XG4gICAgLy90ZXh0YXJlYS5zdHlsZS53aWR0aCA9IGhvbGRlci5vZmZzZXRXaWR0aCArICdweCc7XG4gICAgLy90ZXh0YXJlYS5zdHlsZS5oZWlnaHQgPSBob2xkZXIub2Zmc2V0SGVpZ2h0ICsgJ3B4JztcbiAgICAvL307XG4gICAgLy99XG4gICAgLy9ob2xkZXIuYXBwZW5kQ2hpbGQodGV4dGFyZWEpO1xuICAgIC8vcmV0dXJuIHtcbiAgICAvL3NldENvbnRlbnQ6IGZ1bmN0aW9uIChjb250ZW50KXtcbiAgICAvL3RleHRhcmVhLnZhbHVlID0gY29udGVudDtcbiAgICAvL30sXG4gICAgLy9nZXRDb250ZW50OiBmdW5jdGlvbiAoKXtcbiAgICAvL3JldHVybiB0ZXh0YXJlYS52YWx1ZTtcbiAgICAvL30sXG4gICAgLy9zZWxlY3Q6IGZ1bmN0aW9uICgpe1xuICAgIC8vdmFyIHJhbmdlO1xuICAgIC8vaWYgKGJyb3dzZXIuaWUpIHtcbiAgICAvL3JhbmdlID0gdGV4dGFyZWEuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgLy9yYW5nZS5jb2xsYXBzZSh0cnVlKTtcbiAgICAvL3JhbmdlLnNlbGVjdCgpO1xuICAgIC8vfSBlbHNlIHtcbiAgICAvLy8vdG9kbzogY2hyb21l5LiL5peg5rOV6K6+572u54Sm54K5XG4gICAgLy90ZXh0YXJlYS5zZXRTZWxlY3Rpb25SYW5nZSgwLCAwKTtcbiAgICAvL3RleHRhcmVhLmZvY3VzKCk7XG4gICAgLy99XG4gICAgLy99LFxuICAgIC8vZGlzcG9zZTogZnVuY3Rpb24gKCl7XG4gICAgLy9ob2xkZXIucmVtb3ZlQ2hpbGQodGV4dGFyZWEpO1xuICAgIC8vLy8gdG9kb1xuICAgIC8vaG9sZGVyLm9ucmVzaXplID0gbnVsbDtcbiAgICAvL3RleHRhcmVhID0gbnVsbDtcbiAgICAvL2hvbGRlciA9IG51bGw7XG4gICAgLy99XG4gICAgLy99O1xuICAgIC8vfSxcbiAgICAvL2NvZGVtaXJyb3I6IGZ1bmN0aW9uIChlZGl0b3IsIGhvbGRlcil7XG4gICAgLy92YXIgY29kZUVkaXRvciA9IHdpbmRvdy5Db2RlTWlycm9yKGhvbGRlciwge1xuICAgIC8vbW9kZTogXCJ0ZXh0L2h0bWxcIixcbiAgICAvL3RhYk1vZGU6IFwiaW5kZW50XCIsXG4gICAgLy9saW5lTnVtYmVyczogdHJ1ZSxcbiAgICAvL2xpbmVXcmFwcGluZzp0cnVlXG4gICAgLy99KTtcbiAgICAvL3ZhciBkb20gPSBjb2RlRWRpdG9yLmdldFdyYXBwZXJFbGVtZW50KCk7XG4gICAgLy9kb20uc3R5bGUuY3NzVGV4dCA9ICdwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtmb250LWZhbWlseTpjb25zb2xhcyxcIkNvdXJpZXIgbmV3XCIsbW9ub3NwYWNlO2ZvbnQtc2l6ZToxM3B4Oyc7XG4gICAgLy9jb2RlRWRpdG9yLmdldFNjcm9sbGVyRWxlbWVudCgpLnN0eWxlLmNzc1RleHQgPSAncG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7JztcbiAgICAvL2NvZGVFZGl0b3IucmVmcmVzaCgpO1xuICAgIC8vcmV0dXJuIHtcbiAgICAvL2dldENvZGVNaXJyb3I6ZnVuY3Rpb24oKXtcbiAgICAvL3JldHVybiBjb2RlRWRpdG9yO1xuICAgIC8vfSxcbiAgICAvL3NldENvbnRlbnQ6IGZ1bmN0aW9uIChjb250ZW50KXtcbiAgICAvL2NvZGVFZGl0b3Iuc2V0VmFsdWUoY29udGVudCk7XG4gICAgLy99LFxuICAgIC8vZ2V0Q29udGVudDogZnVuY3Rpb24gKCl7XG4gICAgLy9yZXR1cm4gY29kZUVkaXRvci5nZXRWYWx1ZSgpO1xuICAgIC8vfSxcbiAgICAvL3NlbGVjdDogZnVuY3Rpb24gKCl7XG4gICAgLy9jb2RlRWRpdG9yLmZvY3VzKCk7XG4gICAgLy99LFxuICAgIC8vZGlzcG9zZTogZnVuY3Rpb24gKCl7XG4gICAgLy9ob2xkZXIucmVtb3ZlQ2hpbGQoZG9tKTtcbiAgICAvL2RvbSA9IG51bGw7XG4gICAgLy9jb2RlRWRpdG9yID0gbnVsbDtcbiAgICAvL31cbiAgICAvL307XG4gICAgLy99XG4gICAgLy99O1xuXG4gICAgLy9VRS5wbHVnaW5zWydzb3VyY2UnXSA9IGZ1bmN0aW9uICgpe1xuICAgIC8vdmFyIG1lID0gdGhpcztcbiAgICAvL3ZhciBvcHQgPSB0aGlzLm9wdGlvbnM7XG4gICAgLy92YXIgc291cmNlTW9kZSA9IGZhbHNlO1xuICAgIC8vdmFyIHNvdXJjZUVkaXRvcjtcbiAgICAvL3ZhciBvcmdTZXRDb250ZW50O1xuICAgIC8vb3B0LnNvdXJjZUVkaXRvciA9IGJyb3dzZXIuaWUgID8gJ3RleHRhcmVhJyA6IChvcHQuc291cmNlRWRpdG9yIHx8ICdjb2RlbWlycm9yJyk7XG5cbiAgICAvL21lLnNldE9wdCh7XG4gICAgLy9zb3VyY2VFZGl0b3JGaXJzdDpmYWxzZVxuICAgIC8vfSk7XG4gICAgLy9mdW5jdGlvbiBjcmVhdGVTb3VyY2VFZGl0b3IoaG9sZGVyKXtcbiAgICAvL3JldHVybiBzb3VyY2VFZGl0b3JzW29wdC5zb3VyY2VFZGl0b3IgPT0gJ2NvZGVtaXJyb3InICYmIHdpbmRvdy5Db2RlTWlycm9yID8gJ2NvZGVtaXJyb3InIDogJ3RleHRhcmVhJ10obWUsIGhvbGRlcik7XG4gICAgLy99XG5cbiAgICAvL3ZhciBiYWtDc3NUZXh0O1xuICAgIC8vLy/op6PlhrPlnKjmupDnoIHmqKHlvI/kuItnZXRDb250ZW505LiN6IO95b6X5Yiw5pyA5paw55qE5YaF5a656Zeu6aKYXG4gICAgLy92YXIgb2xkR2V0Q29udGVudCxcbiAgICAvL2Jha0FkZHJlc3M7XG5cbiAgICAvKipcbiAgICAgKiDliIfmjaLmupDnoIHmqKHlvI/lkoznvJbovpHmqKHlvI9cbiAgICAgKiBAY29tbWFuZCBzb3VyY2VcbiAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgamF2YXNjcmlwdFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3NvdXJjZScpO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5p+l6K+i5b2T5YmN57yW6L6R5Yy65Z+f55qE54q25oCB5piv5rqQ56CB5qih5byP6L+Y5piv5Y+v6KeG5YyW5qih5byPXG4gICAgICogQGNvbW1hbmQgc291cmNlXG4gICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRTdGF0ZVxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAcmV0dXJuIHsgaW50IH0g5aaC5p6c5b2T5YmN5piv5rqQ56CB57yW6L6R5qih5byP77yM6L+U5ZueMe+8jOWQpuWImei/lOWbnjBcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoICdzb3VyY2UnICk7XG4gICAgICogYGBgXG4gICAgICovXG5cbiAgICAvL21lLmNvbW1hbmRzWydzb3VyY2UnXSA9IHtcbiAgICAvL2V4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKXtcblxuICAgIC8vc291cmNlTW9kZSA9ICFzb3VyY2VNb2RlO1xuICAgIC8vaWYgKHNvdXJjZU1vZGUpIHtcbiAgICAvL2Jha0FkZHJlc3MgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5jcmVhdGVBZGRyZXNzKGZhbHNlLHRydWUpO1xuICAgIC8vbWUudW5kb01hbmdlciAmJiBtZS51bmRvTWFuZ2VyLnNhdmUodHJ1ZSk7XG4gICAgLy9pZihicm93c2VyLmdlY2tvKXtcbiAgICAvL21lLmJvZHkuY29udGVudEVkaXRhYmxlID0gZmFsc2U7XG4gICAgLy99XG5cbiAgICAvL2Jha0Nzc1RleHQgPSBtZS5pZnJhbWUuc3R5bGUuY3NzVGV4dDtcbiAgICAvL21lLmlmcmFtZS5zdHlsZS5jc3NUZXh0ICs9ICdwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0zMjc2OHB4O3RvcDotMzI3NjhweDsnO1xuXG4gICAgLy9tZS5maXJlRXZlbnQoJ2JlZm9yZWdldGNvbnRlbnQnKTtcbiAgICAvL3ZhciByb290ID0gVUUuaHRtbHBhcnNlcihtZS5ib2R5LmlubmVySFRNTCk7XG4gICAgLy9tZS5maWx0ZXJPdXRwdXRSdWxlKHJvb3QpO1xuICAgIC8vcm9vdC50cmF2ZXJzYWwoZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAvL2lmIChub2RlLnR5cGUgPT0gJ2VsZW1lbnQnKSB7XG4gICAgLy9zd2l0Y2ggKG5vZGUudGFnTmFtZSkge1xuICAgIC8vY2FzZSAndGQnOlxuICAgIC8vY2FzZSAndGgnOlxuICAgIC8vY2FzZSAnY2FwdGlvbic6XG4gICAgLy9pZihub2RlLmNoaWxkcmVuICYmIG5vZGUuY2hpbGRyZW4ubGVuZ3RoID09IDEpe1xuICAgIC8vaWYobm9kZS5maXJzdENoaWxkKCkudGFnTmFtZSA9PSAnYnInICl7XG4gICAgLy9ub2RlLnJlbW92ZUNoaWxkKG5vZGUuZmlyc3RDaGlsZCgpKVxuICAgIC8vfVxuICAgIC8vfTtcbiAgICAvL2JyZWFrO1xuICAgIC8vY2FzZSAncHJlJzpcbiAgICAvL25vZGUuaW5uZXJUZXh0KG5vZGUuaW5uZXJUZXh0KCkucmVwbGFjZSgvJm5ic3A7L2csJyAnKSlcblxuICAgIC8vfVxuICAgIC8vfVxuICAgIC8vfSk7XG5cbiAgICAvL21lLmZpcmVFdmVudCgnYWZ0ZXJnZXRjb250ZW50Jyk7XG5cbiAgICAvL3ZhciBjb250ZW50ID0gcm9vdC50b0h0bWwodHJ1ZSk7XG5cbiAgICAvL3NvdXJjZUVkaXRvciA9IGNyZWF0ZVNvdXJjZUVkaXRvcihtZS5pZnJhbWUucGFyZW50Tm9kZSk7XG5cbiAgICAvL3NvdXJjZUVkaXRvci5zZXRDb250ZW50KGNvbnRlbnQpO1xuXG4gICAgLy9vcmdTZXRDb250ZW50ID0gbWUuc2V0Q29udGVudDtcblxuICAgIC8vbWUuc2V0Q29udGVudCA9IGZ1bmN0aW9uKGh0bWwpe1xuICAgIC8vLy/ov5nph4zmmoLml7bkuI3op6blj5Hkuovku7bvvIzpmLLmraLmiqXplJlcbiAgICAvL3ZhciByb290ID0gVUUuaHRtbHBhcnNlcihodG1sKTtcbiAgICAvL21lLmZpbHRlcklucHV0UnVsZShyb290KTtcbiAgICAvL2h0bWwgPSByb290LnRvSHRtbCgpO1xuICAgIC8vc291cmNlRWRpdG9yLnNldENvbnRlbnQoaHRtbCk7XG4gICAgLy99O1xuXG4gICAgLy9zZXRUaW1lb3V0KGZ1bmN0aW9uICgpe1xuICAgIC8vc291cmNlRWRpdG9yLnNlbGVjdCgpO1xuICAgIC8vbWUuYWRkTGlzdGVuZXIoJ2Z1bGxzY3JlZW5jaGFuZ2VkJywgZnVuY3Rpb24oKXtcbiAgICAvL3RyeXtcbiAgICAvL3NvdXJjZUVkaXRvci5nZXRDb2RlTWlycm9yKCkucmVmcmVzaCgpXG4gICAgLy99Y2F0Y2goZSl7fVxuICAgIC8vfSk7XG4gICAgLy99KTtcblxuICAgIC8vLy/ph43nva5nZXRDb250ZW5077yM5rqQ56CB5qih5byP5LiL5Y+W5YC85Lmf6IO95piv5pyA5paw55qE5pWw5o2uXG4gICAgLy9vbGRHZXRDb250ZW50ID0gbWUuZ2V0Q29udGVudDtcbiAgICAvL21lLmdldENvbnRlbnQgPSBmdW5jdGlvbiAoKXtcbiAgICAvL3JldHVybiBzb3VyY2VFZGl0b3IuZ2V0Q29udGVudCgpIHx8ICc8cD4nICsgKGJyb3dzZXIuaWUgPyAnJyA6ICc8YnIvPicpKyc8L3A+JztcbiAgICAvL307XG4gICAgLy99IGVsc2Uge1xuICAgIC8vbWUuaWZyYW1lLnN0eWxlLmNzc1RleHQgPSBiYWtDc3NUZXh0O1xuICAgIC8vdmFyIGNvbnQgPSBzb3VyY2VFZGl0b3IuZ2V0Q29udGVudCgpIHx8ICc8cD4nICsgKGJyb3dzZXIuaWUgPyAnJyA6ICc8YnIvPicpKyc8L3A+JztcbiAgICAvLy8v5aSE55CG5o6JYmxvY2voioLngrnliY3lkI7nmoTnqbrmoLws5pyJ5Y+v6IO95Lya6K+v5ZG95Lit77yM5pqC5pe25LiN6ICD6JmRXG4gICAgLy9jb250ID0gY29udC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1tcXFxcclxcXFx0XFxcXG4gXSo8XFwvPyhcXFxcdyspXFxcXHMqKD86W14+XSopPicsJ2cnKSwgZnVuY3Rpb24oYSxiKXtcbiAgICAvL2lmKGIgJiYgIWR0ZC4kaW5saW5lV2l0aEFbYi50b0xvd2VyQ2FzZSgpXSl7XG4gICAgLy9yZXR1cm4gYS5yZXBsYWNlKC8oXltcXG5cXHJcXHQgXSopfChbXFxuXFxyXFx0IF0qJCkvZywnJyk7XG4gICAgLy99XG4gICAgLy9yZXR1cm4gYS5yZXBsYWNlKC8oXltcXG5cXHJcXHRdKil8KFtcXG5cXHJcXHRdKiQpL2csJycpXG4gICAgLy99KTtcblxuICAgIC8vbWUuc2V0Q29udGVudCA9IG9yZ1NldENvbnRlbnQ7XG5cbiAgICAvL21lLnNldENvbnRlbnQoY29udCk7XG4gICAgLy9zb3VyY2VFZGl0b3IuZGlzcG9zZSgpO1xuICAgIC8vc291cmNlRWRpdG9yID0gbnVsbDtcbiAgICAvLy8v6L+Y5Y6fZ2V0Q29udGVudOaWueazlVxuICAgIC8vbWUuZ2V0Q29udGVudCA9IG9sZEdldENvbnRlbnQ7XG4gICAgLy92YXIgZmlyc3QgPSBtZS5ib2R5LmZpcnN0Q2hpbGQ7XG4gICAgLy8vL3RyYWNlOjExMDYg6YO95Yig6Zmk56m65LqG77yM5LiL6L655Lya5oql6ZSZ77yM5omA5Lul6KGl5YWF5LiA5LiqcOWNoOS9jVxuICAgIC8vaWYoIWZpcnN0KXtcbiAgICAvL21lLmJvZHkuaW5uZXJIVE1MID0gJzxwPicrKGJyb3dzZXIuaWU/Jyc6Jzxici8+JykrJzwvcD4nO1xuICAgIC8vZmlyc3QgPSBtZS5ib2R5LmZpcnN0Q2hpbGQ7XG4gICAgLy99XG5cbiAgICAvLy8v6KaB5ZyoaWZt5Li65pi+56S65pe2ZmbmiY3og73lj5bliLBzZWxlY3Rpb24s5ZCm5YiZ5oql6ZSZXG4gICAgLy8vL+i/memHjOS4jeiDveavlOi+g+S9jee9ruS6hlxuICAgIC8vbWUudW5kb01hbmdlciAmJiBtZS51bmRvTWFuZ2VyLnNhdmUodHJ1ZSk7XG5cbiAgICAvL2lmKGJyb3dzZXIuZ2Vja28pe1xuXG4gICAgLy92YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIC8vaW5wdXQuc3R5bGUuY3NzVGV4dCA9ICdwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOi0zMjc2OHB4JztcblxuICAgIC8vZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnB1dCk7XG5cbiAgICAvL21lLmJvZHkuY29udGVudEVkaXRhYmxlID0gZmFsc2U7XG4gICAgLy9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgLy9kb21VdGlscy5zZXRWaWV3cG9ydE9mZnNldChpbnB1dCwgeyBsZWZ0OiAtMzI3NjgsIHRvcDogMCB9KTtcbiAgICAvL2lucHV0LmZvY3VzKCk7XG4gICAgLy9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgLy9tZS5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XG4gICAgLy9tZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5tb3ZlVG9BZGRyZXNzKGJha0FkZHJlc3MpLnNlbGVjdCh0cnVlKTtcbiAgICAvL2RvbVV0aWxzLnJlbW92ZShpbnB1dCk7XG4gICAgLy99KTtcblxuICAgIC8vfSk7XG4gICAgLy99ZWxzZXtcbiAgICAvLy8vaWXkuIvmnInlj6/og73miqXplJnvvIzmr5TlpoLlnKjku6PnoIHpobblpLTnmoTmg4XlhrVcbiAgICAvL3RyeXtcbiAgICAvL21lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLm1vdmVUb0FkZHJlc3MoYmFrQWRkcmVzcykuc2VsZWN0KHRydWUpO1xuICAgIC8vfWNhdGNoKGUpe31cblxuICAgIC8vfVxuICAgIC8vfVxuICAgIC8vdGhpcy5maXJlRXZlbnQoJ3NvdXJjZW1vZGVjaGFuZ2VkJywgc291cmNlTW9kZSk7XG4gICAgLy99LFxuICAgIC8vcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpe1xuICAgIC8vcmV0dXJuIHNvdXJjZU1vZGV8MDtcbiAgICAvL30sXG4gICAgLy9ub3ROZWVkVW5kbyA6IDFcbiAgICAvL307XG4gICAgLy92YXIgb2xkUXVlcnlDb21tYW5kU3RhdGUgPSBtZS5xdWVyeUNvbW1hbmRTdGF0ZTtcblxuICAgIC8vbWUucXVlcnlDb21tYW5kU3RhdGUgPSBmdW5jdGlvbiAoY21kTmFtZSl7XG4gICAgLy9jbWROYW1lID0gY21kTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIC8vaWYgKHNvdXJjZU1vZGUpIHtcbiAgICAvLy8v5rqQ56CB5qih5byP5LiL5Y+v5Lul5byA5ZCv55qE5ZG95LukXG4gICAgLy9yZXR1cm4gY21kTmFtZSBpbiB7XG4gICAgLy8nc291cmNlJyA6IDEsXG4gICAgLy8nZnVsbHNjcmVlbicgOiAxXG4gICAgLy99ID8gMSA6IC0xXG4gICAgLy99XG4gICAgLy9yZXR1cm4gb2xkUXVlcnlDb21tYW5kU3RhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAvL307XG5cbiAgICAvL2lmKG9wdC5zb3VyY2VFZGl0b3IgPT0gXCJjb2RlbWlycm9yXCIpe1xuXG4gICAgLy9tZS5hZGRMaXN0ZW5lcihcInJlYWR5XCIsZnVuY3Rpb24oKXtcbiAgICAvL3V0aWxzLmxvYWRGaWxlKGRvY3VtZW50LHtcbiAgICAvL3NyYyA6IG9wdC5jb2RlTWlycm9ySnNVcmwgfHwgb3B0LlVFRElUT1JfSE9NRV9VUkwgKyBcInRoaXJkLXBhcnR5L2NvZGVtaXJyb3IvY29kZW1pcnJvci5qc1wiLFxuICAgIC8vdGFnIDogXCJzY3JpcHRcIixcbiAgICAvL3R5cGUgOiBcInRleHQvamF2YXNjcmlwdFwiLFxuICAgIC8vZGVmZXIgOiBcImRlZmVyXCJcbiAgICAvL30sZnVuY3Rpb24oKXtcbiAgICAvL2lmKG9wdC5zb3VyY2VFZGl0b3JGaXJzdCl7XG4gICAgLy9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgLy9tZS5leGVjQ29tbWFuZChcInNvdXJjZVwiKTtcbiAgICAvL30sMCk7XG4gICAgLy99XG4gICAgLy99KTtcbiAgICAvL3V0aWxzLmxvYWRGaWxlKGRvY3VtZW50LHtcbiAgICAvL3RhZyA6IFwibGlua1wiLFxuICAgIC8vcmVsIDogXCJzdHlsZXNoZWV0XCIsXG4gICAgLy90eXBlIDogXCJ0ZXh0L2Nzc1wiLFxuICAgIC8vaHJlZiA6IG9wdC5jb2RlTWlycm9yQ3NzVXJsIHx8IG9wdC5VRURJVE9SX0hPTUVfVVJMICsgXCJ0aGlyZC1wYXJ0eS9jb2RlbWlycm9yL2NvZGVtaXJyb3IuY3NzXCJcbiAgICAvL30pO1xuXG4gICAgLy99KTtcbiAgICAvL31cblxuICAgIC8vfTtcblxuICAgIC8qfSkoKTsqL1xuXG4gICAgLy8gcGx1Z2lucy9lbnRlcmtleS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHBsdWdpbnMvdW5kby5qc1xuICAgIC8vL2NvbW1hbmRzIOiuvue9ruWbnui9puagh+etvnDmiJZiclxuICAgIC8vL2NvbW1hbmRzTmFtZSAgRW50ZXJLZXlcbiAgICAvLy9jb21tYW5kc1RpdGxlICDorr7nva7lm57ovabmoIfnrb5w5oiWYnJcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24g5aSE55CG5Zue6L2mXG4gICAgICogQGF1dGhvciB6aGFueWlcbiAgICAgKi9cbiAgICBVRS5wbHVnaW5zWydlbnRlcmtleSddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgaFRhZyxcbiAgICAgICAgICAgIG1lID0gdGhpcyxcbiAgICAgICAgICAgIHRhZyA9IG1lLm9wdGlvbnMuZW50ZXJUYWc7XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICAgICAgZG9TYXZlO1xuXG4gICAgICAgICAgICAgICAgLy/kv67mraPlnKhoMS1oNumHjOi+ueWbnui9puWQjuS4jeiDveW1jOWll3DnmoTpl67pophcbiAgICAgICAgICAgICAgICBpZiAoIWJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKC9oXFxkL2kudGVzdChoVGFnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuZ2Vja28pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2JywgJ2Jsb2NrcXVvdGUnLCAnY2FwdGlvbicsICd0YWJsZSddLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2Zvcm1hdEJsb2NrJywgZmFsc2UsICc8cD4nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9TYXZlID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2hyb21lIHJlbW92ZSBkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGl2O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHRtcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpdiA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUodG1wLCAnZGl2JywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaXYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGRpdi5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcC5hcHBlbmRDaGlsZChkaXYuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocCwgZGl2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShkaXYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wKS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvU2F2ZSA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUudW5kb01hbmdlciAmJiBkb1NhdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS51bmRvTWFuZ2VyLnNhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL+ayoeacieermeS9jeespu+8jOS8muWHuueOsOWkmuihjOeahOmXrumimFxuICAgICAgICAgICAgICAgICAgICBicm93c2VyLm9wZXJhICYmIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJywgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgICAvL+Wbnui9plxuICAgICAgICAgICAgICAgIGlmIChtZS5maXJlRXZlbnQoJ2JlZm9yZWVudGVya2V5ZG93bicpKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBoVGFnID0gJyc7XG5cbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcblxuICAgICAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIC8v6LeodGTkuI3og73liKBcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSByYW5nZS5lbmRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRkID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShzdGFydCwgJ3RkJywgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRUZCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoZW5kLCAndGQnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChzdGFydFRkICYmIGVuZFRkICYmIHN0YXJ0VGQgIT09IGVuZFRkKSB8fCAoIXN0YXJ0VGQgJiYgZW5kVGQpIHx8IChzdGFydFRkICYmICFlbmRUZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCA/IGV2dC5wcmV2ZW50RGVmYXVsdCgpIDogKGV2dC5yZXR1cm5WYWx1ZSA9IGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGFnID09ICdwJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zdGFydENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJ29sJywgJ3VsJywgJ3AnLCAnaDEnLCAnaDInLCAnaDMnLCAnaDQnLCAnaDUnLCAnaDYnLCAnYmxvY2txdW90ZScsICdjYXB0aW9uJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9vcGVyYeS4i+aJp+ihjGZvcm1hdGJsb2Nr5Lya5ZyodGFibGXnmoTlnLrmma/kuIvmnInpl67popjvvIzlm57ovablnKhvcGVyYeWOn+eUn+aUr+aMgeW+iOWlve+8jOaJgOS7peaaguaXtuWcqG9wZXJh5Y675o6J6LCD55So6L+Z5Liq5Y6f55Sf55qEY29tbWFuZFxuICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZToyNDMxXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXN0YXJ0ICYmICFicm93c2VyLm9wZXJhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2Zvcm1hdEJsb2NrJywgZmFsc2UsICc8cD4nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmdlY2tvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ3AnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgJiYgZG9tVXRpbHMucmVtb3ZlRGlydHlBdHRyKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhUYWcgPSBzdGFydC50YWdOYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAncCcgJiYgYnJvd3Nlci5nZWNrbyAmJiBkb21VdGlscy5yZW1vdmVEaXJ0eUF0dHIoc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0ID8gZXZ0LnByZXZlbnREZWZhdWx0KCkgOiAoZXZ0LnJldHVyblZhbHVlID0gZmFsc2UpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydC5ub2RlVHlwZSA9PSAxICYmIChzdGFydCA9IHN0YXJ0LmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChzdGFydC5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkdGQuJGVtcHR5W3N0YXJ0LnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydEJlZm9yZShzdGFydCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUudW5kb01hbmdlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnVuZG9NYW5nZXIuc2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3RhcnQuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJyID0gcmFuZ2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LmFwcGVuZENoaWxkKGJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHN0YXJ0LCAwKS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS51bmRvTWFuZ2VyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUudW5kb01hbmdlci5zYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgPT09IHJhbmdlLnN0YXJ0Q29udGFpbmVyLmNoaWxkTm9kZXNbcmFuZ2Uuc3RhcnRPZmZzZXRdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyID0gcmFuZ2UuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShicikuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoc3RhcnQsIDApLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnIgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUoYnIpLnNldFN0YXJ0QWZ0ZXIoYnIpLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnIgPSByYW5nZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShicik7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gYnIucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJlbnQubGFzdENoaWxkID09PSBicikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGJyLmNsb25lTm9kZSh0cnVlKSwgYnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKGJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcihicik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMva2V5c3Ryb2tlcy5qc1xuICAgIC8qIOWkhOeQhueJueauiumUrueahOWFvOWuueaAp+mXrumimCAqL1xuICAgIFVFLnBsdWdpbnNbJ2tleXN0cm9rZXMnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgdmFyIGNvbGxhcHNlZCA9IHRydWU7XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBldnQua2V5Q29kZSB8fCBldnQud2hpY2gsXG4gICAgICAgICAgICAgICAgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG5cbiAgICAgICAgICAgIC8v5aSE55CG5YWo6YCJ55qE5oOF5Ya1XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIXJuZy5jb2xsYXBzZWQgJiZcbiAgICAgICAgICAgICAgICAhKGV2dC5jdHJsS2V5IHx8IGV2dC5zaGlmdEtleSB8fCBldnQuYWx0S2V5IHx8IGV2dC5tZXRhS2V5KSAmJlxuICAgICAgICAgICAgICAgICgoa2V5Q29kZSA+PSA2NSAmJiBrZXlDb2RlIDw9IDkwKSB8fFxuICAgICAgICAgICAgICAgICAgICAoa2V5Q29kZSA+PSA0OCAmJiBrZXlDb2RlIDw9IDU3KSB8fFxuICAgICAgICAgICAgICAgICAgICAoa2V5Q29kZSA+PSA5NiAmJiBrZXlDb2RlIDw9IDExMSkgfHxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgMTM6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICA4OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgNDY6IDFcbiAgICAgICAgICAgICAgICAgICAgfVtrZXlDb2RlXSlcbiAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgIHZhciB0bXBOb2RlID0gcm5nLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0ZpbGxDaGFyKHRtcE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEJlZm9yZSh0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdG1wTm9kZSA9IHJuZy5lbmRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRmlsbENoYXIodG1wTm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcm5nLnNldEVuZEFmdGVyKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBybmcudHh0VG9FbG1Cb3VuZGFyeSgpO1xuICAgICAgICAgICAgICAgIC8v57uT5p2f6L6555WM5Y+v6IO95pS+5Yiw5LqGYnLnmoTliY3ovrnvvIzopoHmiopicuWMheWQq+i/m+adpVxuICAgICAgICAgICAgICAgIC8vIHhbeHh4XTxici8+XG4gICAgICAgICAgICAgICAgaWYgKHJuZy5lbmRDb250YWluZXIgJiYgcm5nLmVuZENvbnRhaW5lci5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBybmcuZW5kQ29udGFpbmVyLmNoaWxkTm9kZXNbcm5nLmVuZE9mZnNldF07XG4gICAgICAgICAgICAgICAgICAgIGlmICh0bXBOb2RlICYmIGRvbVV0aWxzLmlzQnIodG1wTm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRFbmRBZnRlcih0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocm5nLnN0YXJ0T2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSA9IHJuZy5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQm91bmRhcnlOb2RlKHRtcE5vZGUsICdmaXJzdENoaWxkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcE5vZGUgPSBybmcuZW5kQ29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5lbmRPZmZzZXQgPT1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRtcE5vZGUubm9kZVR5cGUgPT0gMyA/IHRtcE5vZGUubm9kZVZhbHVlLmxlbmd0aCA6IHRtcE5vZGUuY2hpbGROb2Rlcy5sZW5ndGgpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNCb3VuZGFyeU5vZGUodG1wTm9kZSwgJ2xhc3RDaGlsZCcpXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuaW5uZXJIVE1MID0gJzxwPicgKyAoYnJvd3Nlci5pZSA/ICcnIDogJzxici8+JykgKyAnPC9wPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KG1lLmJvZHkuZmlyc3RDaGlsZCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5fc2VsZWN0aW9uQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL+WkhOeQhmJhY2tzcGFjZVxuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0ga2V5bWFwLkJhY2tzcGFjZSkge1xuICAgICAgICAgICAgICAgIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIGNvbGxhcHNlZCA9IHJuZy5jb2xsYXBzZWQ7XG4gICAgICAgICAgICAgICAgaWYgKG1lLmZpcmVFdmVudCgnZGVsa2V5ZG93bicsIGV2dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQsIGVuZDtcbiAgICAgICAgICAgICAgICAvL+mBv+WFjeaMieS4pOasoeWIoOmZpOaJjeiDveeUn+aViOeahOmXrumimFxuICAgICAgICAgICAgICAgIGlmIChybmcuY29sbGFwc2VkICYmIHJuZy5pbkZpbGxDaGFyKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBybmcuc3RhcnRDb250YWluZXI7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRmlsbENoYXIoc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnRCZWZvcmUoc3RhcnQpLnNocmlua0JvdW5kYXJ5KHRydWUpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0Lm5vZGVWYWx1ZSA9IHN0YXJ0Lm5vZGVWYWx1ZS5yZXBsYWNlKG5ldyBSZWdFeHAoJ14nICsgZG9tVXRpbHMuZmlsbENoYXIpLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc3RhcnRPZmZzZXQtLTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5jb2xsYXBzZSh0cnVlKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+ino+WGs+mAieS4rWNvbnRyb2zlhYPntKDkuI3og73liKDpmaTnmoTpl67pophcbiAgICAgICAgICAgICAgICBpZiAoKHN0YXJ0ID0gcm5nLmdldENsb3NlZE5vZGUoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QmVmb3JlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgcm5nLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v6Zi75q2i5ZyodGFibGXkuIrnmoTliKDpmaRcbiAgICAgICAgICAgICAgICBpZiAoIWJyb3dzZXIuaWUpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ3RhYmxlJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLmVuZENvbnRhaW5lciwgJ3RhYmxlJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoc3RhcnQgJiYgIWVuZCkgfHwgKCFzdGFydCAmJiBlbmQpIHx8IHN0YXJ0ICE9PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/lpITnkIZ0YWLplK7nmoTpgLvovpFcbiAgICAgICAgICAgIGlmIChrZXlDb2RlID09IGtleW1hcC5UYWIpIHtcbiAgICAgICAgICAgICAgICAvL+S4jeWkhOeQhuS7peS4i+agh+etvlxuICAgICAgICAgICAgICAgIHZhciBleGNsdWRlVGFnTmFtZUZvclRhYktleSA9IHtcbiAgICAgICAgICAgICAgICAgICAgb2w6IDEsXG4gICAgICAgICAgICAgICAgICAgIHVsOiAxLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZTogMVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgLy/lpITnkIbnu4Tku7bph4znmoR0YWLmjInkuIvkuovku7ZcbiAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCd0YWJrZXlkb3duJywgZXZ0KSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgZm9yIChcbiAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSAwLCB0eHQgPSAnJywgdGFiU2l6ZSA9IG1lLm9wdGlvbnMudGFiU2l6ZSB8fCA0LCB0YWJOb2RlID0gbWUub3B0aW9ucy50YWJOb2RlIHx8ICcmbmJzcDsnO1xuICAgICAgICAgICAgICAgICAgICBpIDwgdGFiU2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgaSsrXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHR4dCArPSB0YWJOb2RlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgc3BhbiA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9IHR4dCArIGRvbVV0aWxzLmZpbGxDaGFyO1xuICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShzcGFuLmNsb25lTm9kZSh0cnVlKS5maXJzdENoaWxkKS5zZXRDdXJzb3IodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbHRlckZuID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5pc0Jsb2NrRWxtKG5vZGUpICYmICFleGNsdWRlVGFnTmFtZUZvclRhYktleVtub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKV07XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIC8v5pmu6YCa55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudChyYW5nZS5zdGFydENvbnRhaW5lciwgZmlsdGVyRm4sIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBlbmQgPSBkb21VdGlscy5maW5kUGFyZW50KHJhbmdlLmVuZENvbnRhaW5lciwgZmlsdGVyRm4sIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhcnQgJiYgZW5kICYmIHN0YXJ0ID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmRlbGV0ZUNvbnRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHNwYW4uY2xvbmVOb2RlKHRydWUpLmZpcnN0Q2hpbGQpLnNldEN1cnNvcih0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBib29rbWFyayA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5lbmxhcmdlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJvb2ttYXJrMiA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGJvb2ttYXJrMi5zdGFydCwgZmFsc2UsIGZpbHRlckZuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIShkb21VdGlscy5nZXRQb3NpdGlvbihjdXJyZW50LCBib29rbWFyazIuZW5kKSAmIGRvbVV0aWxzLlBPU0lUSU9OX0ZPTExPV0lORylcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQuaW5zZXJ0QmVmb3JlKHNwYW4uY2xvbmVOb2RlKHRydWUpLmZpcnN0Q2hpbGQsIGN1cnJlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGN1cnJlbnQsIGZhbHNlLCBmaWx0ZXJGbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhib29rbWFyazIpLm1vdmVUb0Jvb2ttYXJrKGJvb2ttYXJrKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy90cmFjZToxNjM0XG4gICAgICAgICAgICAvL2Zm55qEZGVs6ZSu5Zyo5a655Zmo56m655qE5pe25YCZ77yM5Lmf5Lya5Yig6ZmkXG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5nZWNrbyAmJiBrZXlDb2RlID09IDQ2KSB7XG4gICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5QmxvY2soc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gc3RhcnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChkb21VdGlscy5nZXRDaGlsZENvdW50KHBhcmVudCkgPT0gMSAmJiAhZG9tVXRpbHMuaXNCb2R5KHBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCA9PT0gcGFyZW50Lmxhc3RDaGlsZCkgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbiAodHlwZSwgZXZ0KSB7XG4gICAgICAgICAgICB2YXIga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaCxcbiAgICAgICAgICAgICAgICBybmcsXG4gICAgICAgICAgICAgICAgbWUgPSB0aGlzO1xuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0ga2V5bWFwLkJhY2tzcGFjZSkge1xuICAgICAgICAgICAgICAgIGlmIChtZS5maXJlRXZlbnQoJ2RlbGtleXVwJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAocm5nLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9DbGVhclRhZ05hbWUgPSBbJ2gxJywgJ2gyJywgJ2gzJywgJ2g0JywgJ2g1JywgJ2g2J107XG4gICAgICAgICAgICAgICAgICAgIGlmICgodG1wTm9kZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCBhdXRvQ2xlYXJUYWdOYW1lLCB0cnVlKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5QmxvY2sodG1wTm9kZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gdG1wTm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZSAmJiBwcmUubm9kZU5hbWUgIT0gJ1RBQkxFJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEF0TGFzdChwcmUpLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IHRtcE5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0ICYmIG5leHQubm9kZU5hbWUgIT0gJ1RBQkxFJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QXRGaXJzdChuZXh0KS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8v5aSE55CG5b2T5Yig6Zmk5YiwYm9keeaXtu+8jOimgemHjeaWsOe7mXDmoIfnrb7lsZXkvY1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQm9keShybmcuc3RhcnRDb250YWluZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IGRvbVV0aWxzLmNyZWF0ZUVsZW1lbnQobWUuZG9jdW1lbnQsICdwJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubmVySFRNTDogYnJvd3Nlci5pZSA/IGRvbVV0aWxzLmZpbGxDaGFyIDogJzxici8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuaW5zZXJ0Tm9kZSh0bXBOb2RlKS5zZXRTdGFydCh0bXBOb2RlLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy9jaHJvbWXkuIvlpoLmnpzliKDpmaTkuoZpbmxpbmXmoIfnrb7vvIzmtY/op4jlmajkvJrmnInorrDlv4bvvIzlnKjovpPlhaXmloflrZfov5jmmK/kvJrlpZfkuIrliJrmiY3liKDpmaTnmoTmoIfnrb7vvIzmiYDku6Xov5nph4zlho3pgInkuIDmrKHlsLHkuI3kvJrkuoZcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICFjb2xsYXBzZWQgJiZcbiAgICAgICAgICAgICAgICAgICAgKHJuZy5zdGFydENvbnRhaW5lci5ub2RlVHlwZSA9PSAzIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAocm5nLnN0YXJ0Q29udGFpbmVyLm5vZGVUeXBlID09IDEgJiYgZG9tVXRpbHMuaXNFbXB0eUJsb2NrKHJuZy5zdGFydENvbnRhaW5lcikpKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNwYW4gPSBybmcuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLmluc2VydE5vZGUoc3Bhbikuc2V0U3RhcnRCZWZvcmUoc3BhbikuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoc3Bhbik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2ZpeGltZ2NsaWNrLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9jb21tYW5kcyDkv67lpI1jaHJvbWXkuIvlm77niYfkuI3og73ngrnlh7vnmoTpl67popjvvIzlh7rnjrDlhavkuKrop5Llj6/mlLnlj5jlpKflsI9cbiAgICAvLy9jb21tYW5kc05hbWUgIEZpeEltZ0NsaWNrXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5L+u5aSNY2hyb21l5LiL5Zu+54mH5LiN6IO954K55Ye755qE6Zeu6aKY77yM5Ye6546w5YWr5Liq6KeS5Y+v5pS55Y+Y5aSn5bCPXG4gICAgLy/kv67lpI1jaHJvbWXkuIvlm77niYfkuI3og73ngrnlh7vnmoTpl67popjvvIzlh7rnjrDlhavkuKrop5Llj6/mlLnlj5jlpKflsI9cblxuICAgIFVFLnBsdWdpbnNbJ2ZpeGltZ2NsaWNrJ10gPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZWxlbWVudFVwZGF0ZWQgPSBmYWxzZTtcbiAgICAgICAgZnVuY3Rpb24gU2NhbGUoKSB7XG4gICAgICAgICAgICB0aGlzLmVkaXRvciA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLnJlc2l6ZXIgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5jb3ZlciA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmRvYyA9IGRvY3VtZW50O1xuICAgICAgICAgICAgdGhpcy5wcmVQb3MgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRQb3MgPSB7IHg6IDAsIHk6IDAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmVjdCA9IFtcbiAgICAgICAgICAgICAgICAvL1tsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHRdXG4gICAgICAgICAgICAgICAgWzAsIDAsIC0xLCAtMV0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIC0xXSxcbiAgICAgICAgICAgICAgICBbMCwgMCwgMSwgLTFdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAtMSwgMF0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDEsIDBdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAtMSwgMV0sXG4gICAgICAgICAgICAgICAgWzAsIDAsIDAsIDFdLFxuICAgICAgICAgICAgICAgIFswLCAwLCAxLCAxXVxuICAgICAgICAgICAgXTtcblxuICAgICAgICAgICAgU2NhbGUucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgbWUuZWRpdG9yID0gZWRpdG9yO1xuICAgICAgICAgICAgICAgICAgICBtZS5zdGFydFBvcyA9IHRoaXMucHJlUG9zID0geyB4OiAwLCB5OiAwIH07XG4gICAgICAgICAgICAgICAgICAgIG1lLmRyYWdJZCA9IC0xO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBoYW5kcyA9IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY292ZXIgPSAobWUuY292ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSksXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNpemVyID0gKG1lLnJlc2l6ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY292ZXIuaWQgPSBtZS5lZGl0b3IudWkuaWQgKyAnX2ltYWdlc2NhbGVfY292ZXInO1xuICAgICAgICAgICAgICAgICAgICBjb3Zlci5zdHlsZS5jc3NUZXh0ID1cbiAgICAgICAgICAgICAgICAgICAgICAgICdwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5Om5vbmU7ei1pbmRleDonICtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5vcHRpb25zLnpJbmRleCArXG4gICAgICAgICAgICAgICAgICAgICAgICAnO2ZpbHRlcjphbHBoYShvcGFjaXR5PTApOyBvcGFjaXR5OjA7YmFja2dyb3VuZDojQ0NDOyc7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKGNvdmVyLCAnbW91c2Vkb3duIGNsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgODsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kcy5wdXNoKCc8c3BhbiBjbGFzcz1cImVkdWktZWRpdG9yLWltYWdlc2NhbGUtaGFuZCcgKyBpICsgJ1wiPjwvc3Bhbj4nKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXNpemVyLmlkID0gbWUuZWRpdG9yLnVpLmlkICsgJ19pbWFnZXNjYWxlJztcbiAgICAgICAgICAgICAgICAgICAgcmVzaXplci5jbGFzc05hbWUgPSAnZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZSc7XG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZXIuaW5uZXJIVE1MID0gaGFuZHMuam9pbignJyk7XG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZXIuc3R5bGUuY3NzVGV4dCArPVxuICAgICAgICAgICAgICAgICAgICAgICAgJztkaXNwbGF5Om5vbmU7Ym9yZGVyOjFweCBzb2xpZCAjM2I3N2ZmO3otaW5kZXg6JyArIG1lLmVkaXRvci5vcHRpb25zLnpJbmRleCArICc7JztcblxuICAgICAgICAgICAgICAgICAgICBtZS5lZGl0b3IudWkuZ2V0RG9tKCkuYXBwZW5kQ2hpbGQoY292ZXIpO1xuICAgICAgICAgICAgICAgICAgICBtZS5lZGl0b3IudWkuZ2V0RG9tKCkuYXBwZW5kQ2hpbGQocmVzaXplcik7XG5cbiAgICAgICAgICAgICAgICAgICAgbWUuaW5pdFN0eWxlKCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmluaXRFdmVudHMoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGluaXRTdHlsZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5jc3NSdWxlKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2ltYWdlc2NhbGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJy5lZHVpLWVkaXRvci1pbWFnZXNjYWxle2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXI6MXB4IHNvbGlkICMzOEIyQ0U7Y3Vyc29yOmhhbmQ7LXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDstbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O2JveC1zaXppbmc6IGNvbnRlbnQtYm94O30nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmVkdWktZWRpdG9yLWltYWdlc2NhbGUgc3Bhbntwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo2cHg7aGVpZ2h0OjZweDtvdmVyZmxvdzpoaWRkZW47Zm9udC1zaXplOjBweDtkaXNwbGF5OmJsb2NrO2JhY2tncm91bmQtY29sb3I6IzNDOUREMDt9JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJy5lZHVpLWVkaXRvci1pbWFnZXNjYWxlIC5lZHVpLWVkaXRvci1pbWFnZXNjYWxlLWhhbmQwe2N1cnNvcjpudy1yZXNpemU7dG9wOjA7bWFyZ2luLXRvcDotNHB4O2xlZnQ6MDttYXJnaW4tbGVmdDotNHB4O30nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmVkdWktZWRpdG9yLWltYWdlc2NhbGUgLmVkdWktZWRpdG9yLWltYWdlc2NhbGUtaGFuZDF7Y3Vyc29yOm4tcmVzaXplO3RvcDowO21hcmdpbi10b3A6LTRweDtsZWZ0OjUwJTttYXJnaW4tbGVmdDotNHB4O30nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmVkdWktZWRpdG9yLWltYWdlc2NhbGUgLmVkdWktZWRpdG9yLWltYWdlc2NhbGUtaGFuZDJ7Y3Vyc29yOm5lLXJlc2l6ZTt0b3A6MDttYXJnaW4tdG9wOi00cHg7bGVmdDoxMDAlO21hcmdpbi1sZWZ0Oi0zcHg7fScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZSAuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZS1oYW5kM3tjdXJzb3I6dy1yZXNpemU7dG9wOjUwJTttYXJnaW4tdG9wOi00cHg7bGVmdDowO21hcmdpbi1sZWZ0Oi00cHg7fScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZSAuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZS1oYW5kNHtjdXJzb3I6ZS1yZXNpemU7dG9wOjUwJTttYXJnaW4tdG9wOi00cHg7bGVmdDoxMDAlO21hcmdpbi1sZWZ0Oi0zcHg7fScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZSAuZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZS1oYW5kNXtjdXJzb3I6c3ctcmVzaXplO3RvcDoxMDAlO21hcmdpbi10b3A6LTNweDtsZWZ0OjA7bWFyZ2luLWxlZnQ6LTRweDt9JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJy5lZHVpLWVkaXRvci1pbWFnZXNjYWxlIC5lZHVpLWVkaXRvci1pbWFnZXNjYWxlLWhhbmQ2e2N1cnNvcjpzLXJlc2l6ZTt0b3A6MTAwJTttYXJnaW4tdG9wOi0zcHg7bGVmdDo1MCU7bWFyZ2luLWxlZnQ6LTRweDt9JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJy5lZHVpLWVkaXRvci1pbWFnZXNjYWxlIC5lZHVpLWVkaXRvci1pbWFnZXNjYWxlLWhhbmQ3e2N1cnNvcjpzZS1yZXNpemU7dG9wOjEwMCU7bWFyZ2luLXRvcDotM3B4O2xlZnQ6MTAwJTttYXJnaW4tbGVmdDotM3B4O30nXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpbml0RXZlbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgICAgICAgICAgICAgICAgbWUuc3RhcnRQb3MueCA9IG1lLnN0YXJ0UG9zLnkgPSAwO1xuICAgICAgICAgICAgICAgICAgICBtZS5pc0RyYWdpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF9ldmVudEhhbmRsZXI6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZS50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtb3VzZWRvd24nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBoYW5kID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYW5kLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLWVkaXRvci1pbWFnZXNjYWxlLWhhbmQnKSAhPSAtMSAmJiBtZS5kcmFnSWQgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZHJhZ0lkID0gaGFuZC5jbGFzc05hbWUuc2xpY2UoLTEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5zdGFydFBvcy54ID0gbWUucHJlUG9zLnggPSBlLmNsaWVudFg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnN0YXJ0UG9zLnkgPSBtZS5wcmVQb3MueSA9IGUuY2xpZW50WTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUuZG9jLCAnbW91c2Vtb3ZlJywgbWUucHJveHkobWUuX2V2ZW50SGFuZGxlciwgbWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtb3VzZW1vdmUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5kcmFnSWQgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUudXBkYXRlQ29udGFpbmVyU3R5bGUobWUuZHJhZ0lkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4OiBlLmNsaWVudFggLSBtZS5wcmVQb3MueCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IGUuY2xpZW50WSAtIG1lLnByZVBvcy55XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5wcmVQb3MueCA9IGUuY2xpZW50WDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUucHJlUG9zLnkgPSBlLmNsaWVudFk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRVcGRhdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUudXBkYXRlVGFyZ2V0RWxlbWVudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ21vdXNldXAnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5kcmFnSWQgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUudXBkYXRlQ29udGFpbmVyU3R5bGUobWUuZHJhZ0lkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4OiBlLmNsaWVudFggLSBtZS5wcmVQb3MueCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IGUuY2xpZW50WSAtIG1lLnByZVBvcy55XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS51cGRhdGVUYXJnZXRFbGVtZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS50YXJnZXQucGFyZW50Tm9kZSkgbWUuYXR0YWNoVG8obWUudGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZHJhZ0lkID0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuKG1lLmRvYywgJ21vdXNlbW92ZScsIG1lLnByb3h5KG1lLl9ldmVudEhhbmRsZXIsIG1lKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/kv67lpI3lj6rmmK/ngrnlh7vmjKrliqjngrnvvIzkvYbmsqHmnInmlLnlj5jlpKflsI/vvIzkuI3lupTor6Xop6blj5Fjb250ZW50Y2hhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnRVcGRhdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRVcGRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVwZGF0ZVRhcmdldEVsZW1lbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0U3R5bGVzKG1lLnRhcmdldCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IG1lLnJlc2l6ZXIuc3R5bGUud2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IG1lLnJlc2l6ZXIuc3R5bGUuaGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBtZS50YXJnZXQud2lkdGggPSBwYXJzZUludChtZS5yZXNpemVyLnN0eWxlLndpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgbWUudGFyZ2V0LmhlaWdodCA9IHBhcnNlSW50KG1lLnJlc2l6ZXIuc3R5bGUuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgbWUuYXR0YWNoVG8obWUudGFyZ2V0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVwZGF0ZUNvbnRhaW5lclN0eWxlOiBmdW5jdGlvbiAoZGlyLCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbSA9IG1lLnJlc2l6ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0bXA7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY3RbZGlyXVswXSAhPSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXAgPSBwYXJzZUludChkb20uc3R5bGUubGVmdCkgKyBvZmZzZXQueDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbS5zdHlsZS5sZWZ0ID0gbWUuX3ZhbGlkU2NhbGVkUHJvcCgnbGVmdCcsIHRtcCkgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWN0W2Rpcl1bMV0gIT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG1wID0gcGFyc2VJbnQoZG9tLnN0eWxlLnRvcCkgKyBvZmZzZXQueTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbS5zdHlsZS50b3AgPSBtZS5fdmFsaWRTY2FsZWRQcm9wKCd0b3AnLCB0bXApICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocmVjdFtkaXJdWzJdICE9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IGRvbS5jbGllbnRXaWR0aCArIHJlY3RbZGlyXVsyXSAqIG9mZnNldC54O1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tLnN0eWxlLndpZHRoID0gbWUuX3ZhbGlkU2NhbGVkUHJvcCgnd2lkdGgnLCB0bXApICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocmVjdFtkaXJdWzNdICE9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcCA9IGRvbS5jbGllbnRIZWlnaHQgKyByZWN0W2Rpcl1bM10gKiBvZmZzZXQueTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbS5zdHlsZS5oZWlnaHQgPSBtZS5fdmFsaWRTY2FsZWRQcm9wKCdoZWlnaHQnLCB0bXApICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgX3ZhbGlkU2NhbGVkUHJvcDogZnVuY3Rpb24gKHByb3AsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbGUgPSB0aGlzLnJlc2l6ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICB3cmFwID0gZG9jdW1lbnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBpc05hTih2YWx1ZSkgPyAwIDogdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAocHJvcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnbGVmdCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlIDwgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSArIGVsZS5jbGllbnRXaWR0aCA+IHdyYXAuY2xpZW50V2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3cmFwLmNsaWVudFdpZHRoIC0gZWxlLmNsaWVudFdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICd0b3AnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSA8IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdmFsdWUgKyBlbGUuY2xpZW50SGVpZ2h0ID4gd3JhcC5jbGllbnRIZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3cmFwLmNsaWVudEhlaWdodCAtIGVsZS5jbGllbnRIZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3dpZHRoJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUgPD0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSArIGVsZS5vZmZzZXRMZWZ0ID4gd3JhcC5jbGllbnRXaWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHdyYXAuY2xpZW50V2lkdGggLSBlbGUub2Zmc2V0TGVmdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaGVpZ2h0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUgPD0gMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB2YWx1ZSArIGVsZS5vZmZzZXRUb3AgPiB3cmFwLmNsaWVudEhlaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHdyYXAuY2xpZW50SGVpZ2h0IC0gZWxlLm9mZnNldFRvcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBoaWRlQ292ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb3Zlci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc2hvd0NvdmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3JQb3MgPSBkb21VdGlscy5nZXRYWShtZS5lZGl0b3IudWkuZ2V0RG9tKCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lUG9zID0gZG9tVXRpbHMuZ2V0WFkobWUuZWRpdG9yLmlmcmFtZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0U3R5bGVzKG1lLmNvdmVyLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogbWUuZWRpdG9yLmlmcmFtZS5vZmZzZXRXaWR0aCArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IG1lLmVkaXRvci5pZnJhbWUub2Zmc2V0SGVpZ2h0ICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogaWZyYW1lUG9zLnkgLSBlZGl0b3JQb3MueSArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBpZnJhbWVQb3MueCAtIGVkaXRvclBvcy54ICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJydcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAodGFyZ2V0T2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIG1lLnJlc2l6ZXIuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXRPYmopIG1lLmF0dGFjaFRvKHRhcmdldE9iaik7XG5cbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24odGhpcy5yZXNpemVyLCAnbW91c2Vkb3duJywgbWUucHJveHkobWUuX2V2ZW50SGFuZGxlciwgbWUpKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUuZG9jLCAnbW91c2V1cCcsIG1lLnByb3h5KG1lLl9ldmVudEhhbmRsZXIsIG1lKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgbWUuc2hvd0NvdmVyKCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5maXJlRXZlbnQoJ2FmdGVyc2NhbGVzaG93JywgbWUpO1xuICAgICAgICAgICAgICAgICAgICBtZS5lZGl0b3IuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGhpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgbWUuaGlkZUNvdmVyKCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLnJlc2l6ZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy51bihtZS5yZXNpemVyLCAnbW91c2Vkb3duJywgbWUucHJveHkobWUuX2V2ZW50SGFuZGxlciwgbWUpKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMudW4obWUuZG9jLCAnbW91c2V1cCcsIG1lLnByb3h5KG1lLl9ldmVudEhhbmRsZXIsIG1lKSk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5maXJlRXZlbnQoJ2FmdGVyc2NhbGVoaWRlJywgbWUpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcHJveHk6IGZ1bmN0aW9uIChmbiwgY29udGV4dCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmbi5hcHBseShjb250ZXh0IHx8IHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBhdHRhY2hUbzogZnVuY3Rpb24gKHRhcmdldE9iaikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0ID0gKG1lLnRhcmdldCA9IHRhcmdldE9iaiksXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNpemVyID0gdGhpcy5yZXNpemVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW1nUG9zID0gZG9tVXRpbHMuZ2V0WFkodGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmcmFtZVBvcyA9IGRvbVV0aWxzLmdldFhZKG1lLmVkaXRvci5pZnJhbWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yUG9zID0gZG9tVXRpbHMuZ2V0WFkocmVzaXplci5wYXJlbnROb2RlKTtcblxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRTdHlsZXMocmVzaXplciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHRhcmdldC53aWR0aCArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHRhcmdldC5oZWlnaHQgKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZnJhbWVQb3MueCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nUG9zLnggLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5kb2N1bWVudC5ib2R5LnNjcm9sbExlZnQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvclBvcy54IC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludChyZXNpemVyLnN0eWxlLmJvcmRlckxlZnRXaWR0aCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lUG9zLnkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZ1Bvcy55IC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5lZGl0b3IuZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvclBvcy55IC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludChyZXNpemVyLnN0eWxlLmJvcmRlclRvcFdpZHRoKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3B4J1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSgpO1xuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgIGltYWdlU2NhbGU7XG5cbiAgICAgICAgICAgIG1lLnNldE9wdCgnaW1hZ2VTY2FsZUVuYWJsZWQnLCB0cnVlKTtcblxuICAgICAgICAgICAgaWYgKCFicm93c2VyLmllICYmIG1lLm9wdGlvbnMuaW1hZ2VTY2FsZUVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAodHlwZSwgZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZyA9IHJhbmdlLmdldENsb3NlZE5vZGUoKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaW1nICYmIGltZy50YWdOYW1lID09ICdJTUcnICYmIG1lLmJvZHkuY29udGVudEVkaXRhYmxlICE9ICdmYWxzZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWcuY2xhc3NOYW1lLmluZGV4T2YoJ2VkdWktZmFrZWQtbXVzaWMnKSAhPSAtMSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZy5nZXRBdHRyaWJ1dGUoJ2FuY2hvcm5hbWUnKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmhhc0NsYXNzKGltZywgJ2xvYWRpbmdjbGFzcycpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaGFzQ2xhc3MoaW1nLCAnbG9hZGVycm9yY2xhc3MnKVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWltYWdlU2NhbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZVNjYWxlID0gbmV3IFNjYWxlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VTY2FsZS5pbml0KG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS51aS5nZXREb20oKS5hcHBlbmRDaGlsZChpbWFnZVNjYWxlLnJlc2l6ZXIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9rZXlEb3duSGFuZGxlciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZVNjYWxlLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZVNjYWxlLnRhcmdldClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5zZWxlY3ROb2RlKGltYWdlU2NhbGUudGFyZ2V0KS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX21vdXNlRG93bkhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsZSA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZWxlLmNsYXNzTmFtZSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZS5jbGFzc05hbWUuaW5kZXhPZignZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZScpID09IC0xKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2tleURvd25IYW5kbGVyKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lcjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdhZnRlcnNjYWxlc2hvdycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdiZWZvcmVrZXlkb3duJywgX2tleURvd25IYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2JlZm9yZW1vdXNlZG93bicsIF9tb3VzZURvd25IYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZG9jdW1lbnQsICdrZXlkb3duJywgX2tleURvd25IYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZG9jdW1lbnQsICdtb3VzZWRvd24nLCBfbW91c2VEb3duSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKS5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignYWZ0ZXJzY2FsZWhpZGUnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5yZW1vdmVMaXN0ZW5lcignYmVmb3Jla2V5ZG93bicsIF9rZXlEb3duSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdiZWZvcmVtb3VzZWRvd24nLCBfbW91c2VEb3duSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuKGRvY3VtZW50LCAna2V5ZG93bicsIF9rZXlEb3duSGFuZGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuKGRvY3VtZW50LCAnbW91c2Vkb3duJywgX21vdXNlRG93bkhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gaW1hZ2VTY2FsZS50YXJnZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXQucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuc2VsZWN0Tm9kZSh0YXJnZXQpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9UT0RPIOaciWlmcmFtZeeahOaDheWGte+8jG1vdXNlZG93buS4jeiDveW+gOS4i+S8oOOAguOAglxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKGltYWdlU2NhbGUucmVzaXplciwgJ21vdXNlZG93bicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKS5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVsZSA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZSAmJiBlbGUuY2xhc3NOYW1lLmluZGV4T2YoJ2VkdWktZWRpdG9yLWltYWdlc2NhbGUtaGFuZCcpID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlU2NhbGUuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWFnZVNjYWxlLnRhcmdldCkgbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuc2VsZWN0Tm9kZShlbGUpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKGltYWdlU2NhbGUucmVzaXplciwgJ21vdXNldXAnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlICYmIGVsZS5jbGFzc05hbWUuaW5kZXhPZignZWR1aS1lZGl0b3ItaW1hZ2VzY2FsZS1oYW5kJykgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlU2NhbGUuc2hvdyhpbWcpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltYWdlU2NhbGUgJiYgaW1hZ2VTY2FsZS5yZXNpemVyLnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnKSBpbWFnZVNjYWxlLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYnJvd3Nlci53ZWJraXQpIHtcbiAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAodHlwZSwgZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PSAnSU1HJyAmJiBtZS5ib2R5LmNvbnRlbnRFZGl0YWJsZSAhPSAnZmFsc2UnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBuZXcgZG9tLlJhbmdlKG1lLmRvY3VtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGUoZS50YXJnZXQpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIC8vIHBsdWdpbnMvYXV0b2xpbmsuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2NvbW1hbmRzIOS4uumdnmll5rWP6KeI5Zmo6Ieq5Yqo5re75YqgYeagh+etvlxuICAgIC8vL2NvbW1hbmRzTmFtZSAgQXV0b0xpbmtcbiAgICAvLy9jb21tYW5kc1RpdGxlICDoh6rliqjlop7liqDpk77mjqVcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24g5Li66Z2eaWXmtY/op4jlmajoh6rliqjmt7vliqBh5qCH562+XG4gICAgICogQGF1dGhvciB6aGFueWlcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbi5yZWdpc3RlcihcbiAgICAgICAgJ2F1dG9saW5rJyxcbiAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNvbnQgPSAwO1xuXG4gICAgICAgICAgICByZXR1cm4gIWJyb3dzZXIuaWVcbiAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgICBiaW5kRXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5ZG93bjogZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSAzMiB8fCBrZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlbCA9IG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBzZWwuZ2V0UmFuZ2VBdCgwKS5jbG9uZVJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhckNvZGU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoc3RhcnQubm9kZVR5cGUgPT0gMSAmJiByYW5nZS5zdGFydE9mZnNldCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lci5jaGlsZE5vZGVzW3JhbmdlLnN0YXJ0T2Zmc2V0IC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydC5ub2RlVHlwZSA9PSAxID8gc3RhcnQuY2hpbGROb2Rlcy5sZW5ndGggOiBzdGFydC5ub2RlVmFsdWUubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLnN0YXJ0T2Zmc2V0ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXIucHJldmlvdXNTaWJsaW5nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoc3RhcnQgJiYgc3RhcnQubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnQubGFzdENoaWxkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzdGFydCB8fCBkb21VdGlscy5pc0ZpbGxDaGFyKHN0YXJ0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gc3RhcnQubm9kZVZhbHVlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSByYW5nZS5zdGFydE9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChzdGFydCwgb2Zmc2V0IC0gMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gcmFuZ2UudG9TdHJpbmcoKS5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKGNoYXJDb2RlICE9IDE2MCAmJiBjaGFyQ29kZSAhPSAzMik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudG9TdHJpbmcoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UobmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKSwgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAubWF0Y2goLyg/Omh0dHBzPzpcXC9cXC98c3NoOlxcL1xcL3xmdHA6XFwvXFwvfGZpbGU6XFwvfHd3d1xcLikvaSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHJhbmdlLnRvU3RyaW5nKCkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL14oPzpodHRwcz86XFwvXFwvfHNzaDpcXC9cXC98ZnRwOlxcL1xcL3xmaWxlOlxcL3x3d3dcXC4pL2kudGVzdChyYW5nZS50b1N0cmluZygpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MjEyMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHJhbmdlLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICghKG5leHQgPSBzdGFydC5uZXh0U2libGluZykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzQm9keShzdGFydCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHN0YXJ0LnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KG5leHQsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vcmFuZ2XnmoTlvIDlp4vovrnnlYzlt7Lnu4/lnKhh5qCH562+6YeM55qE5LiN5YaN5aSE55CGXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCAnYScsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJyAnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUudW5kb01hbmdlciAmJiBtZS51bmRvTWFuZ2VyLnNhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYS5hcHBlbmRDaGlsZChyYW5nZS5leHRyYWN0Q29udGVudHMoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEuaHJlZiA9IGEuaW5uZXJIVE1MID0gYS5pbm5lckhUTUwucmVwbGFjZSgvPFtePl0rPi9nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWYgPSBhLmdldEF0dHJpYnV0ZSgnaHJlZicpLnJlcGxhY2UobmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKSwgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmID0gL14oPzpodHRwcz86XFwvXFwvKS9naS50ZXN0KGhyZWYpID8gaHJlZiA6ICdodHRwOi8vJyArIGhyZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEuc2V0QXR0cmlidXRlKCdfc3JjJywgdXRpbHMuaHRtbChocmVmKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEuaHJlZiA9IHV0aWxzLmh0bWwoaHJlZik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0ZXh0LCBhLm5leHRTaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGV4dCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWwucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnVuZG9NYW5nZXIgJiYgbWUudW5kb01hbmdlci5zYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDoge307XG4gICAgICAgIH0sXG4gICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlcyA9IHtcbiAgICAgICAgICAgICAgICAzNzogMSxcbiAgICAgICAgICAgICAgICAzODogMSxcbiAgICAgICAgICAgICAgICAzOTogMSxcbiAgICAgICAgICAgICAgICA0MDogMSxcbiAgICAgICAgICAgICAgICAxMzogMSxcbiAgICAgICAgICAgICAgICAzMjogMVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrSXNDbHVkZUxpbmsobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChub2RlLm5vZGVOYW1lID09ICdBJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGxhc3RDaGlsZCA9IG5vZGUubGFzdENoaWxkO1xuXG4gICAgICAgICAgICAgICAgd2hpbGUgKGxhc3RDaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobGFzdENoaWxkLm5vZGVOYW1lID09ICdBJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobGFzdENoaWxkLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc1doaXRlc3BhY2UobGFzdENoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RDaGlsZCA9IGxhc3RDaGlsZC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsYXN0Q2hpbGQgPSBsYXN0Q2hpbGQubGFzdENoaWxkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyb3dzZXIuaWUgJiZcbiAgICAgICAgICAgICAgICB0aGlzLmFkZExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uIChjbWQsIGV2dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5Q29kZSA9IGV2dC5rZXlDb2RlO1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5Q29kZXNba2V5Q29kZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IHJuZy5zdGFydENvbnRhaW5lcjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoc3RhcnQgJiYgIWRvbVV0aWxzLmlzQm9keShzdGFydCkgJiYgIWRvbVV0aWxzLmlzQmxvY2tFbG0oc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnQucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0ICYmICFkb21VdGlscy5pc0JvZHkoc3RhcnQpICYmIHN0YXJ0Lm5vZGVOYW1lID09ICdQJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gc3RhcnQucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlICYmIHByZS5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJlID0gY2hlY2tJc0NsdWRlTGluayhwcmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByZSAmJiAhcHJlLmdldEF0dHJpYnV0ZSgnX2hyZWYnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShwcmUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChrZXlDb2RlID09IDMyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0Lm5vZGVUeXBlID09IDMgJiYgL15cXHMkLy50ZXN0KHN0YXJ0Lm5vZGVWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCAmJiBzdGFydC5ub2RlTmFtZSA9PSAnQScgJiYgIXN0YXJ0LmdldEF0dHJpYnV0ZSgnX2hyZWYnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHN0YXJ0LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCAnYScsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCAmJiAhc3RhcnQuZ2V0QXR0cmlidXRlKCdfaHJlZicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiayA9IHJuZy5jcmVhdGVCb29rbWFyaygpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShzdGFydCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgKTtcblxuICAgIC8vIHBsdWdpbnMvYXV0b2hlaWdodC5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vY29tbWFuZHMg5b2T6L6T5YWl5YaF5a656LaF6L+H57yW6L6R5Zmo6auY5bqm5pe277yM57yW6L6R5Zmo6Ieq5Yqo5aKe6auYXG4gICAgLy8vY29tbWFuZHNOYW1lICBBdXRvSGVpZ2h0LGF1dG9IZWlnaHRFbmFibGVkXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg6Ieq5Yqo5aKe6auYXG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIOiHquWKqOS8uOWxlVxuICAgICAqIEBhdXRob3IgemhhbnlpXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snYXV0b2hlaWdodCddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAvL+aPkOS+m+W8gOWFs++8jOWwseeul+WKoOi9veS5n+WPr+S7peWFs+mXrVxuICAgICAgICBtZS5hdXRvSGVpZ2h0RW5hYmxlZCA9IG1lLm9wdGlvbnMuYXV0b0hlaWdodEVuYWJsZWQgIT09IGZhbHNlO1xuICAgICAgICBpZiAoIW1lLmF1dG9IZWlnaHRFbmFibGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYmFrT3ZlcmZsb3csXG4gICAgICAgICAgICBsYXN0SGVpZ2h0ID0gMCxcbiAgICAgICAgICAgIG9wdGlvbnMgPSBtZS5vcHRpb25zLFxuICAgICAgICAgICAgY3VycmVudEhlaWdodCxcbiAgICAgICAgICAgIHRpbWVyO1xuXG4gICAgICAgIGZ1bmN0aW9uIGFkanVzdEhlaWdodCgpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgaWYgKGlzRnVsbHNjcmVlbikgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKCFtZS5xdWVyeUNvbW1hbmRTdGF0ZSB8fCAobWUucXVlcnlDb21tYW5kU3RhdGUgJiYgbWUucXVlcnlDb21tYW5kU3RhdGUoJ3NvdXJjZScpICE9IDEpKSB7XG4gICAgICAgICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGUgPSBtZS5ib2R5Lmxhc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSAhPSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5ub2RlVHlwZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmNsZWFyID0gJ2JvdGgnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEhlaWdodCA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldFhZKG5vZGUpLnkgKyBub2RlLm9mZnNldEhlaWdodCArIDI1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgubWF4KG9wdGlvbnMubWluRnJhbWVIZWlnaHQsIG9wdGlvbnMuaW5pdGlhbEZyYW1lSGVpZ2h0KVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50SGVpZ2h0ICE9IGxhc3RIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEhlaWdodCAhPT0gcGFyc2VJbnQobWUuaWZyYW1lLnBhcmVudE5vZGUuc3R5bGUuaGVpZ2h0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5pZnJhbWUucGFyZW50Tm9kZS5zdHlsZS5oZWlnaHQgPSBjdXJyZW50SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuYm9keS5zdHlsZS5oZWlnaHQgPSBjdXJyZW50SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0SGVpZ2h0ID0gY3VycmVudEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZVN0eWxlKG5vZGUsICdjbGVhcicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgNTApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBpc0Z1bGxzY3JlZW47XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdmdWxsc2NyZWVuY2hhbmdlZCcsIGZ1bmN0aW9uIChjbWQsIGYpIHtcbiAgICAgICAgICAgIGlzRnVsbHNjcmVlbiA9IGY7XG4gICAgICAgIH0pO1xuICAgICAgICBtZS5hZGRMaXN0ZW5lcignZGVzdHJveScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdjb250ZW50Y2hhbmdlIGFmdGVyaW5zZXJ0aHRtbCBrZXl1cCBtb3VzZXVwJywgYWRqdXN0SGVpZ2h0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIG1lLmVuYWJsZUF1dG9IZWlnaHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgaWYgKCFtZS5hdXRvSGVpZ2h0RW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkb2MgPSBtZS5kb2N1bWVudDtcbiAgICAgICAgICAgIG1lLmF1dG9IZWlnaHRFbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGJha092ZXJmbG93ID0gZG9jLmJvZHkuc3R5bGUub3ZlcmZsb3dZO1xuICAgICAgICAgICAgZG9jLmJvZHkuc3R5bGUub3ZlcmZsb3dZID0gJ2hpZGRlbic7XG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignY29udGVudGNoYW5nZSBhZnRlcmluc2VydGh0bWwga2V5dXAgbW91c2V1cCcsIGFkanVzdEhlaWdodCk7XG4gICAgICAgICAgICAvL2Zm5LiN57uZ5LqL5Lu2566X5b6X5LiN5a+5XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBhZGp1c3RIZWlnaHQuY2FsbChtZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBicm93c2VyLmdlY2tvID8gMTAwIDogMFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYXV0b2hlaWdodGNoYW5nZWQnLCBtZS5hdXRvSGVpZ2h0RW5hYmxlZCk7XG4gICAgICAgIH07XG4gICAgICAgIG1lLmRpc2FibGVBdXRvSGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWUuYm9keS5zdHlsZS5vdmVyZmxvd1kgPSBiYWtPdmVyZmxvdyB8fCAnJztcblxuICAgICAgICAgICAgbWUucmVtb3ZlTGlzdGVuZXIoJ2NvbnRlbnRjaGFuZ2UnLCBhZGp1c3RIZWlnaHQpO1xuICAgICAgICAgICAgbWUucmVtb3ZlTGlzdGVuZXIoJ2tleXVwJywgYWRqdXN0SGVpZ2h0KTtcbiAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdtb3VzZXVwJywgYWRqdXN0SGVpZ2h0KTtcbiAgICAgICAgICAgIG1lLmF1dG9IZWlnaHRFbmFibGVkID0gZmFsc2U7XG4gICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2F1dG9oZWlnaHRjaGFuZ2VkJywgbWUuYXV0b0hlaWdodEVuYWJsZWQpO1xuICAgICAgICB9O1xuXG4gICAgICAgIG1lLm9uKCdzZXRIZWlnaHQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBtZS5kaXNhYmxlQXV0b0hlaWdodCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3JlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWUuZW5hYmxlQXV0b0hlaWdodCgpO1xuICAgICAgICAgICAgLy90cmFjZToxNzY0XG4gICAgICAgICAgICB2YXIgdGltZXI7XG4gICAgICAgICAgICBkb21VdGlscy5vbihicm93c2VyLmllID8gbWUuYm9keSA6IG1lLmRvY3VtZW50LCBicm93c2VyLndlYmtpdCA/ICdkcmFnb3ZlcicgOiAnZHJvcCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MzY4MVxuICAgICAgICAgICAgICAgICAgICBhZGp1c3RIZWlnaHQuY2FsbChtZSk7XG4gICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy/kv67lpI3lhoXlrrnov4flpJrml7bvvIzlm57liLDpobbpg6jvvIzpobbpg6jlhoXlrrnooqvlt6XlhbfmoI/pga7mjKHpl67pophcbiAgICAgICAgICAgIHZhciBsYXN0U2Nyb2xsWTtcbiAgICAgICAgICAgIHdpbmRvdy5vbnNjcm9sbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAobGFzdFNjcm9sbFkgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbGFzdFNjcm9sbFkgPSB0aGlzLnNjcm9sbFk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNjcm9sbFkgPT0gMCAmJiBsYXN0U2Nyb2xsWSAhPSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWUud2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWUud2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsWSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvYXV0b2Zsb2F0LmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9jb21tYW5kcyDmgqzmta7lt6XlhbfmoI9cbiAgICAvLy9jb21tYW5kc05hbWUgIEF1dG9GbG9hdCxhdXRvRmxvYXRFbmFibGVkXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5oKs5rWu5bel5YW35qCPXG4gICAgLyoqXG4gICAgICogIG1vZGlmaWVkIGJ5IGNoZW5nY2hhbzAxXG4gICAgICogIOazqOaEj++8miDlvJXlhaXmraTlip/og73lkI7vvIzlnKhJRTbkuIvkvJrlsIZib2R555qE6IOM5pmv5Zu+54mH6KaG55uW5o6J77yBXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snYXV0b2Zsb2F0J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICBsYW5nID0gbWUuZ2V0TGFuZygpO1xuICAgICAgICBtZS5zZXRPcHQoe1xuICAgICAgICAgICAgdG9wT2Zmc2V0OiAwXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgb3B0c0F1dG9GbG9hdEVuYWJsZWQgPSBtZS5vcHRpb25zLmF1dG9GbG9hdEVuYWJsZWQgIT09IGZhbHNlLFxuICAgICAgICAgICAgdG9wT2Zmc2V0ID0gbWUub3B0aW9ucy50b3BPZmZzZXQ7XG5cbiAgICAgICAgLy/lpoLmnpzkuI3lm7rlrpp0b29sYmFy55qE5L2N572u77yM5YiZ55u05o6l6YCA5Ye6XG4gICAgICAgIGlmICghb3B0c0F1dG9GbG9hdEVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdWlVdGlscyA9IFVFLnVpLnVpVXRpbHMsXG4gICAgICAgICAgICBMdGVJRTYgPSBicm93c2VyLmllICYmIGJyb3dzZXIudmVyc2lvbiA8PSA2LFxuICAgICAgICAgICAgcXVpcmtzID0gYnJvd3Nlci5xdWlya3M7XG5cbiAgICAgICAgZnVuY3Rpb24gY2hlY2tIYXNVSSgpIHtcbiAgICAgICAgICAgIGlmICghVUUudWkpIHtcbiAgICAgICAgICAgICAgICBhbGVydChsYW5nLmF1dG9mbG9hdE1zZyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBmaXhJRTZGaXhlZFBvcygpIHtcbiAgICAgICAgICAgIHZhciBkb2NTdHlsZSA9IGRvY3VtZW50LmJvZHkuc3R5bGU7XG4gICAgICAgICAgICBkb2NTdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKFwiYWJvdXQ6YmxhbmtcIiknO1xuICAgICAgICAgICAgZG9jU3R5bGUuYmFja2dyb3VuZEF0dGFjaG1lbnQgPSAnZml4ZWQnO1xuICAgICAgICB9XG4gICAgICAgIHZhciBiYWtDc3NUZXh0LFxuICAgICAgICAgICAgcGxhY2VIb2xkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxcbiAgICAgICAgICAgIHRvb2xiYXJCb3gsXG4gICAgICAgICAgICBvcmdUb3AsXG4gICAgICAgICAgICBnZXRQb3NpdGlvbixcbiAgICAgICAgICAgIGZsYWcgPSB0cnVlOyAvL2llN+aooeW8j+S4i+mcgOimgeWBj+enu1xuICAgICAgICBmdW5jdGlvbiBzZXRGbG9hdGluZygpIHtcbiAgICAgICAgICAgIHZhciB0b29iYXJCb3hQb3MgPSBkb21VdGlscy5nZXRYWSh0b29sYmFyQm94KSxcbiAgICAgICAgICAgICAgICBvcmlnYWxGbG9hdCA9IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUodG9vbGJhckJveCwgJ3Bvc2l0aW9uJyksXG4gICAgICAgICAgICAgICAgb3JpZ2FsTGVmdCA9IGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUodG9vbGJhckJveCwgJ2xlZnQnKTtcbiAgICAgICAgICAgIHRvb2xiYXJCb3guc3R5bGUud2lkdGggPSB0b29sYmFyQm94Lm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgICAgIHRvb2xiYXJCb3guc3R5bGUuekluZGV4ID0gbWUub3B0aW9ucy56SW5kZXggKiAxICsgMTtcbiAgICAgICAgICAgIC8vZHVhbmp1biDpmLLmraLmipbliqhcbiAgICAgICAgICAgIHBsYWNlSG9sZGVyLnN0eWxlLmhlaWdodCA9IHRvb2xiYXJCb3gub2Zmc2V0SGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgIHRvb2xiYXJCb3gucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocGxhY2VIb2xkZXIsIHRvb2xiYXJCb3gpO1xuICAgICAgICAgICAgaWYgKEx0ZUlFNiB8fCAocXVpcmtzICYmIGJyb3dzZXIuaWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRvb2xiYXJCb3guc3R5bGUucG9zaXRpb24gIT0gJ2Fic29sdXRlJykge1xuICAgICAgICAgICAgICAgICAgICB0b29sYmFyQm94LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdG9vbGJhckJveC5zdHlsZS50b3AgPVxuICAgICAgICAgICAgICAgICAgICAoZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCkgLSBvcmdUb3AgKyB0b3BPZmZzZXQgKyAncHgnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZTdDb21wYXQgJiYgZmxhZykge1xuICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRvb2xiYXJCb3guc3R5bGUubGVmdCA9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5nZXRYWSh0b29sYmFyQm94KS54IC0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgKyAyICsgJ3B4JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRvb2xiYXJCb3guc3R5bGUucG9zaXRpb24gIT0gJ2ZpeGVkJykge1xuICAgICAgICAgICAgICAgICAgICB0b29sYmFyQm94LnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcbiAgICAgICAgICAgICAgICAgICAgdG9vbGJhckJveC5zdHlsZS50b3AgPSB0b3BPZmZzZXQgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICAob3JpZ2FsRmxvYXQgPT0gJ2Fic29sdXRlJyB8fCBvcmlnYWxGbG9hdCA9PSAncmVsYXRpdmUnKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VGbG9hdChvcmlnYWxMZWZ0KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKHRvb2xiYXJCb3guc3R5bGUubGVmdCA9IHRvb2JhckJveFBvcy54ICsgJ3B4Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHVuc2V0RmxvYXRpbmcoKSB7XG4gICAgICAgICAgICBmbGFnID0gdHJ1ZTtcbiAgICAgICAgICAgIHRvb2xiYXJCb3guc3R5bGUuY3NzVGV4dCA9IGJha0Nzc1RleHQ7XG4gICAgICAgICAgICBpZiAocGxhY2VIb2xkZXIucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgIHBsYWNlSG9sZGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocGxhY2VIb2xkZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlRmxvYXRpbmcoKSB7XG4gICAgICAgICAgICB2YXIgcmVjdDMgPSBnZXRQb3NpdGlvbihtZS5jb250YWluZXIpO1xuICAgICAgICAgICAgdmFyIG9mZnNldCA9IG1lLm9wdGlvbnMudG9vbGJhclRvcE9mZnNldCB8fCAwO1xuICAgICAgICAgICAgLy9ieSBkdWFuanVuIOS4jeaYr+WIsOa1j+iniOWZqOmhtumDqOaJjea1ruWKqFxuICAgICAgICAgICAgaWYgKHJlY3QzLnRvcCA8IG1lLm9wdGlvbnMudG9wT2Zmc2V0ICYmIHJlY3QzLmJvdHRvbSAtIHRvb2xiYXJCb3gub2Zmc2V0SGVpZ2h0ID4gb2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgc2V0RmxvYXRpbmcoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdW5zZXRGbG9hdGluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBkZWZlcl91cGRhdGVGbG9hdGluZyA9IHV0aWxzLmRlZmVyKFxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHVwZGF0ZUZsb2F0aW5nKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYnJvd3Nlci5pZSA/IDIwMCA6IDEwMCxcbiAgICAgICAgICAgIHRydWVcbiAgICAgICAgKTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcignZGVzdHJveScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRvbVV0aWxzLnVuKHdpbmRvdywgWydzY3JvbGwnLCAncmVzaXplJ10sIHVwZGF0ZUZsb2F0aW5nKTtcbiAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdrZXlkb3duJywgZGVmZXJfdXBkYXRlRmxvYXRpbmcpO1xuICAgICAgICB9KTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigncmVhZHknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoY2hlY2tIYXNVSShtZSkpIHtcbiAgICAgICAgICAgICAgICAvL+WKoOi9veS6hnVp57uE5Lu277yM5L2G5ZyobmV35pe277yM5rKh5pyJ5Yqg6L29dWnvvIzlr7zoh7TnvJbovpHlmajlrp7kvovkuIrmsqHmnIl1aeexu++8jOaJgOS7pei/memHjOWBmuWIpOaWrVxuICAgICAgICAgICAgICAgIGlmICghbWUudWkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBnZXRQb3NpdGlvbiA9IHVpVXRpbHMuZ2V0Q2xpZW50UmVjdDtcbiAgICAgICAgICAgICAgICB0b29sYmFyQm94ID0gbWUudWkuZ2V0RG9tKCd0b29sYmFyYm94Jyk7XG4gICAgICAgICAgICAgICAgb3JnVG9wID0gZ2V0UG9zaXRpb24odG9vbGJhckJveCkudG9wO1xuICAgICAgICAgICAgICAgIGJha0Nzc1RleHQgPSB0b29sYmFyQm94LnN0eWxlLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgcGxhY2VIb2xkZXIuc3R5bGUuaGVpZ2h0ID0gdG9vbGJhckJveC5vZmZzZXRIZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgICAgIGlmIChMdGVJRTYpIHtcbiAgICAgICAgICAgICAgICAgICAgZml4SUU2Rml4ZWRQb3MoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMub24od2luZG93LCBbJ3Njcm9sbCcsICdyZXNpemUnXSwgdXBkYXRlRmxvYXRpbmcpO1xuICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXlkb3duJywgZGVmZXJfdXBkYXRlRmxvYXRpbmcpO1xuXG4gICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2JlZm9yZWZ1bGxzY3JlZW5jaGFuZ2UnLCBmdW5jdGlvbiAodCwgZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXRGbG9hdGluZygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2Z1bGxzY3JlZW5jaGFuZ2VkJywgZnVuY3Rpb24gKHQsIGVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG9hdGluZygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3NvdXJjZW1vZGVjaGFuZ2VkJywgZnVuY3Rpb24gKHQsIGVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGbG9hdGluZygpO1xuICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignY2xlYXJEb2MnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlRmxvYXRpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3RhYmxlLmNvcmUuanNcbiAgICAvKipcbiAgICAgKiBDcmVhdGVkIHdpdGggSmV0QnJhaW5zIFdlYlN0b3JtLlxuICAgICAqIFVzZXI6IHRhb3FpbGlcbiAgICAgKiBEYXRlOiAxMy0xLTE4XG4gICAgICogVGltZTog5LiK5Y2IMTE6MDlcbiAgICAgKiBUbyBjaGFuZ2UgdGhpcyB0ZW1wbGF0ZSB1c2UgRmlsZSB8IFNldHRpbmdzIHwgRmlsZSBUZW1wbGF0ZXMuXG4gICAgICovXG4gICAgLyoqXG4gICAgICogVUXooajmoLzmk43kvZznsbtcbiAgICAgKiBAcGFyYW0gdGFibGVcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgVUVUYWJsZSA9IChVRS5VRVRhYmxlID0gZnVuY3Rpb24gKHRhYmxlKSB7XG4gICAgICAgICAgICB0aGlzLnRhYmxlID0gdGFibGU7XG4gICAgICAgICAgICB0aGlzLmluZGV4VGFibGUgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRUZHMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuY2VsbHNSYW5nZSA9IHt9O1xuICAgICAgICAgICAgdGhpcy51cGRhdGUodGFibGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLz09PeS7peS4i+S4uumdmeaAgeW3peWFt+aWueazlT09PVxuICAgICAgICBVRVRhYmxlLnJlbW92ZVNlbGVjdGVkQ2xhc3MgPSBmdW5jdGlvbiAoY2VsbHMpIHtcbiAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQ2xhc3NlcyhjZWxsLCAnc2VsZWN0VGRDbGFzcycpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIFVFVGFibGUuYWRkU2VsZWN0ZWRDbGFzcyA9IGZ1bmN0aW9uIChjZWxscykge1xuICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5hZGRDbGFzcyhjZWxsLCAnc2VsZWN0VGRDbGFzcycpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIFVFVGFibGUuaXNFbXB0eUJsb2NrID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHZhciByZWcgPSBuZXcgUmVnRXhwKGRvbVV0aWxzLmZpbGxDaGFyLCAnZycpO1xuICAgICAgICAgICAgaWYgKG5vZGVbYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J10ucmVwbGFjZSgvXlxccyokLywgJycpLnJlcGxhY2UocmVnLCAnJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBkdGQuJGlzTm90RW1wdHkpXG4gICAgICAgICAgICAgICAgaWYgKGR0ZC4kaXNOb3RFbXB0eS5oYXNPd25Qcm9wZXJ0eShpKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZShpKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH07XG4gICAgICAgIFVFVGFibGUuZ2V0V2lkdGggPSBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgaWYgKCFjZWxsKSByZXR1cm4gMDtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGNlbGwsICd3aWR0aCcpLCAxMCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluWNleWFg+agvOaIluiAheWNleWFg+agvOe7hOeahOKAnOWvuem9kOKAneeKtuaAgeOAgiDlpoLmnpzlvZPliY3nmoTmo4DmtYvlr7nosaHmmK/kuIDkuKrljZXlhYPmoLznu4TvvIwg5Y+q5pyJ5Zyo5ruh6Laz5omA5pyJ5Y2V5YWD5qC855qEIOawtOW5s+WSjOerluebtCDlr7npvZDlsZ7mgKfpg73nm7jlkIznmoRcbiAgICAgICAgICog5p2h5Lu25pe25omN5Lya6L+U5Zue5YW254q25oCB5YC877yM5ZCm5YiZ5bCG6L+U5ZuebnVsbO+8myDlpoLmnpzlvZPliY3lj6rmo4DmtYvkuobkuIDkuKrljZXlhYPmoLzvvIwg5YiZ55u05o6l6L+U5Zue5b2T5YmN5Y2V5YWD5qC855qE5a+56b2Q54q25oCB77ybXG4gICAgICAgICAqIEBwYXJhbSB0YWJsZSBjZWxsIG9yIHRhYmxlIGNlbGxzICwg5pSv5oyB5Y2V5Liq5Y2V5YWD5qC8ZG9t5a+56LGhIOaIluiAhSDljZXlhYPmoLxkb23lr7nosaHmlbDnu4RcbiAgICAgICAgICogQHJldHVybiB7IGFsaWduOiAnbGVmdCcgfHwgJ3JpZ2h0JyB8fCAnY2VudGVyJywgdmFsaWduOiAndG9wJyB8fCAnbWlkZGxlJyB8fCAnYm90dG9tJyB9IOaIluiAhSBudWxsXG4gICAgICAgICAqL1xuICAgICAgICBVRVRhYmxlLmdldFRhYmxlQ2VsbEFsaWduU3RhdGUgPSBmdW5jdGlvbiAoY2VsbHMpIHtcbiAgICAgICAgICAgICF1dGlscy5pc0FycmF5KGNlbGxzKSAmJiAoY2VsbHMgPSBbY2VsbHNdKTtcblxuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHt9LFxuICAgICAgICAgICAgICAgIHN0YXR1cyA9IFsnYWxpZ24nLCAndmFsaWduJ10sXG4gICAgICAgICAgICAgICAgdGVtcFN0YXR1cyA9IG51bGwsXG4gICAgICAgICAgICAgICAgaXNTYW1lID0gdHJ1ZTsgLy/nirbmgIHmmK/lkKbnm7jlkIxcblxuICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGxOb2RlKSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChzdGF0dXMsIGZ1bmN0aW9uIChjdXJyZW50U3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGVtcFN0YXR1cyA9IGNlbGxOb2RlLmdldEF0dHJpYnV0ZShjdXJyZW50U3RhdGUpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVzdWx0W2N1cnJlbnRTdGF0ZV0gJiYgdGVtcFN0YXR1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2N1cnJlbnRTdGF0ZV0gPSB0ZW1wU3RhdHVzO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFyZXN1bHRbY3VycmVudFN0YXRlXSB8fCB0ZW1wU3RhdHVzICE9PSByZXN1bHRbY3VycmVudFN0YXRlXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNTYW1lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBpc1NhbWU7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGlzU2FtZSA/IHJlc3VsdCA6IG51bGw7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOagueaNruW9k+WJjemAieWMuuiOt+WPluebuOWFs+eahHRhYmxl5L+h5oGvXG4gICAgICAgICAqIEByZXR1cm4ge09iamVjdH1cbiAgICAgICAgICovXG4gICAgICAgIFVFVGFibGUuZ2V0VGFibGVJdGVtc0J5UmFuZ2UgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnQgPSBlZGl0b3Iuc2VsZWN0aW9uLmdldFN0YXJ0KCk7XG5cbiAgICAgICAgICAgIC8vZmbkuIvkvJrpgInkuK1ib29rbWFya1xuICAgICAgICAgICAgaWYgKHN0YXJ0ICYmIHN0YXJ0LmlkICYmIHN0YXJ0LmlkLmluZGV4T2YoJ19iYWlkdV9ib29rbWFya19zdGFydF8nKSA9PT0gMCAmJiBzdGFydC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gc3RhcnQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8v5ZyodGFibGXmiJbogIV0ZOi+uee8mOacieWPr+iDveWtmOWcqOmAieS4rXRy55qE5oOF5Ya1XG4gICAgICAgICAgICB2YXIgY2VsbCA9IHN0YXJ0ICYmIGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoc3RhcnQsIFsndGQnLCAndGgnXSwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgdHIgPSBjZWxsICYmIGNlbGwucGFyZW50Tm9kZSxcbiAgICAgICAgICAgICAgICBjYXB0aW9uID0gc3RhcnQgJiYgZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShzdGFydCwgJ2NhcHRpb24nLCB0cnVlKSxcbiAgICAgICAgICAgICAgICB0YWJsZSA9IGNhcHRpb24gPyBjYXB0aW9uLnBhcmVudE5vZGUgOiB0ciAmJiB0ci5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgY2VsbDogY2VsbCxcbiAgICAgICAgICAgICAgICB0cjogdHIsXG4gICAgICAgICAgICAgICAgdGFibGU6IHRhYmxlLFxuICAgICAgICAgICAgICAgIGNhcHRpb246IGNhcHRpb25cbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFVFVGFibGUuZ2V0VUVUYWJsZUJ5U2VsZWN0ZWQgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICB2YXIgdGFibGUgPSBVRVRhYmxlLmdldFRhYmxlSXRlbXNCeVJhbmdlKGVkaXRvcikudGFibGU7XG4gICAgICAgICAgICBpZiAodGFibGUgJiYgdGFibGUudWVUYWJsZSAmJiB0YWJsZS51ZVRhYmxlLnNlbGVjdGVkVGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0YWJsZS51ZVRhYmxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH07XG5cbiAgICAgICAgVUVUYWJsZS5nZXREZWZhdWx0VmFsdWUgPSBmdW5jdGlvbiAoZWRpdG9yLCB0YWJsZSkge1xuICAgICAgICAgICAgdmFyIGJvcmRlck1hcCA9IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpbjogJzBweCcsXG4gICAgICAgICAgICAgICAgICAgIG1lZGl1bTogJzFweCcsXG4gICAgICAgICAgICAgICAgICAgIHRoaWNrOiAnMnB4J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGFibGVCb3JkZXIsXG4gICAgICAgICAgICAgICAgdGRQYWRkaW5nLFxuICAgICAgICAgICAgICAgIHRkQm9yZGVyLFxuICAgICAgICAgICAgICAgIHRtcFZhbHVlO1xuICAgICAgICAgICAgaWYgKCF0YWJsZSkge1xuICAgICAgICAgICAgICAgIHRhYmxlID0gZWRpdG9yLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyk7XG4gICAgICAgICAgICAgICAgdGFibGUuaW5zZXJ0Um93KDApLmluc2VydENlbGwoMCkuaW5uZXJIVE1MID0gJ3h4eCc7XG4gICAgICAgICAgICAgICAgZWRpdG9yLmJvZHkuYXBwZW5kQ2hpbGQodGFibGUpO1xuICAgICAgICAgICAgICAgIHZhciB0ZCA9IHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpWzBdO1xuICAgICAgICAgICAgICAgIHRtcFZhbHVlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZSh0YWJsZSwgJ2JvcmRlci1sZWZ0LXdpZHRoJyk7XG4gICAgICAgICAgICAgICAgdGFibGVCb3JkZXIgPSBwYXJzZUludChib3JkZXJNYXBbdG1wVmFsdWVdIHx8IHRtcFZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgdG1wVmFsdWUgPSBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHRkLCAncGFkZGluZy1sZWZ0Jyk7XG4gICAgICAgICAgICAgICAgdGRQYWRkaW5nID0gcGFyc2VJbnQoYm9yZGVyTWFwW3RtcFZhbHVlXSB8fCB0bXBWYWx1ZSwgMTApO1xuICAgICAgICAgICAgICAgIHRtcFZhbHVlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZSh0ZCwgJ2JvcmRlci1sZWZ0LXdpZHRoJyk7XG4gICAgICAgICAgICAgICAgdGRCb3JkZXIgPSBwYXJzZUludChib3JkZXJNYXBbdG1wVmFsdWVdIHx8IHRtcFZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRhYmxlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0YWJsZUJvcmRlcjogdGFibGVCb3JkZXIsXG4gICAgICAgICAgICAgICAgICAgIHRkUGFkZGluZzogdGRQYWRkaW5nLFxuICAgICAgICAgICAgICAgICAgICB0ZEJvcmRlcjogdGRCb3JkZXJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0ZCA9IHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpWzBdO1xuICAgICAgICAgICAgICAgIHRtcFZhbHVlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZSh0YWJsZSwgJ2JvcmRlci1sZWZ0LXdpZHRoJyk7XG4gICAgICAgICAgICAgICAgdGFibGVCb3JkZXIgPSBwYXJzZUludChib3JkZXJNYXBbdG1wVmFsdWVdIHx8IHRtcFZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgdG1wVmFsdWUgPSBkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKHRkLCAncGFkZGluZy1sZWZ0Jyk7XG4gICAgICAgICAgICAgICAgdGRQYWRkaW5nID0gcGFyc2VJbnQoYm9yZGVyTWFwW3RtcFZhbHVlXSB8fCB0bXBWYWx1ZSwgMTApO1xuICAgICAgICAgICAgICAgIHRtcFZhbHVlID0gZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZSh0ZCwgJ2JvcmRlci1sZWZ0LXdpZHRoJyk7XG4gICAgICAgICAgICAgICAgdGRCb3JkZXIgPSBwYXJzZUludChib3JkZXJNYXBbdG1wVmFsdWVdIHx8IHRtcFZhbHVlLCAxMCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdGFibGVCb3JkZXI6IHRhYmxlQm9yZGVyLFxuICAgICAgICAgICAgICAgICAgICB0ZFBhZGRpbmc6IHRkUGFkZGluZyxcbiAgICAgICAgICAgICAgICAgICAgdGRCb3JkZXI6IHRkQm9yZGVyXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIOagueaNruW9k+WJjeeCueWHu+eahHRk5oiW6ICFdGFibGXojrflj5bntKLlvJXlr7nosaFcbiAgICAgICAgICogQHBhcmFtIHRkT3JUYWJsZVxuICAgICAgICAgKi9cbiAgICAgICAgVUVUYWJsZS5nZXRVRVRhYmxlID0gZnVuY3Rpb24gKHRkT3JUYWJsZSkge1xuICAgICAgICAgICAgdmFyIHRhZyA9IHRkT3JUYWJsZS50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICB0ZE9yVGFibGUgPVxuICAgICAgICAgICAgICAgIHRhZyA9PSAndGQnIHx8IHRhZyA9PSAndGgnIHx8IHRhZyA9PSAnY2FwdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHRkT3JUYWJsZSwgJ3RhYmxlJywgdHJ1ZSlcbiAgICAgICAgICAgICAgICAgICAgOiB0ZE9yVGFibGU7XG4gICAgICAgICAgICBpZiAoIXRkT3JUYWJsZS51ZVRhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGRPclRhYmxlLnVlVGFibGUgPSBuZXcgVUVUYWJsZSh0ZE9yVGFibGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRkT3JUYWJsZS51ZVRhYmxlO1xuICAgICAgICB9O1xuXG4gICAgICAgIFVFVGFibGUuY2xvbmVDZWxsID0gZnVuY3Rpb24gKGNlbGwsIGlnbm9yZU1lcmdlLCBrZWVwUHJvKSB7XG4gICAgICAgICAgICBpZiAoIWNlbGwgfHwgdXRpbHMuaXNTdHJpbmcoY2VsbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50YWJsZS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoY2VsbCB8fCAndGQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBmbGFnID0gZG9tVXRpbHMuaGFzQ2xhc3MoY2VsbCwgJ3NlbGVjdFRkQ2xhc3MnKTtcbiAgICAgICAgICAgIGZsYWcgJiYgZG9tVXRpbHMucmVtb3ZlQ2xhc3NlcyhjZWxsLCAnc2VsZWN0VGRDbGFzcycpO1xuICAgICAgICAgICAgdmFyIHRtcENlbGwgPSBjZWxsLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIGlmIChpZ25vcmVNZXJnZSkge1xuICAgICAgICAgICAgICAgIHRtcENlbGwucm93U3BhbiA9IHRtcENlbGwuY29sU3BhbiA9IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL+WOu+aOieWuvemrmFxuICAgICAgICAgICAgIWtlZXBQcm8gJiYgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyh0bXBDZWxsLCAnd2lkdGggaGVpZ2h0Jyk7XG4gICAgICAgICAgICAha2VlcFBybyAmJiBkb21VdGlscy5yZW1vdmVBdHRyaWJ1dGVzKHRtcENlbGwsICdzdHlsZScpO1xuXG4gICAgICAgICAgICB0bXBDZWxsLnN0eWxlLmJvcmRlckxlZnRTdHlsZSA9ICcnO1xuICAgICAgICAgICAgdG1wQ2VsbC5zdHlsZS5ib3JkZXJUb3BTdHlsZSA9ICcnO1xuICAgICAgICAgICAgdG1wQ2VsbC5zdHlsZS5ib3JkZXJMZWZ0Q29sb3IgPSBjZWxsLnN0eWxlLmJvcmRlclJpZ2h0Q29sb3I7XG4gICAgICAgICAgICB0bXBDZWxsLnN0eWxlLmJvcmRlckxlZnRXaWR0aCA9IGNlbGwuc3R5bGUuYm9yZGVyUmlnaHRXaWR0aDtcbiAgICAgICAgICAgIHRtcENlbGwuc3R5bGUuYm9yZGVyVG9wQ29sb3IgPSBjZWxsLnN0eWxlLmJvcmRlckJvdHRvbUNvbG9yO1xuICAgICAgICAgICAgdG1wQ2VsbC5zdHlsZS5ib3JkZXJUb3BXaWR0aCA9IGNlbGwuc3R5bGUuYm9yZGVyQm90dG9tV2lkdGg7XG4gICAgICAgICAgICBmbGFnICYmIGRvbVV0aWxzLmFkZENsYXNzKGNlbGwsICdzZWxlY3RUZENsYXNzJyk7XG4gICAgICAgICAgICByZXR1cm4gdG1wQ2VsbDtcbiAgICAgICAgfTtcblxuICAgICAgICBVRVRhYmxlLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGdldE1heFJvd3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm93cyA9IHRoaXMudGFibGUucm93cyxcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuID0gMTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgcm93OyAocm93ID0gcm93c1tpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudE1heCA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCBjajsgKGNqID0gcm93LmNlbGxzW2orK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRNYXggPSBNYXRoLm1heChjai5yb3dTcGFuIHx8IDEsIGN1cnJlbnRNYXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG1heExlbiA9IE1hdGgubWF4KGN1cnJlbnRNYXggKyBpLCBtYXhMZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbWF4TGVuO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmN6KGo5qC855qE5pyA5aSn5YiX5pWwXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldE1heENvbHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm93cyA9IHRoaXMudGFibGUucm93cyxcbiAgICAgICAgICAgICAgICAgICAgbWF4TGVuID0gMCxcbiAgICAgICAgICAgICAgICAgICAgY2VsbFJvd3MgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgcm93OyAocm93ID0gcm93c1tpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbHNOdW0gPSAwO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMCwgY2o7IChjaiA9IHJvdy5jZWxsc1tqKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsc051bSArPSBjai5jb2xTcGFuIHx8IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2oucm93U3BhbiAmJiBjai5yb3dTcGFuID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGsgPSAxOyBrIDwgY2oucm93U3BhbjsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2VsbFJvd3NbJ3Jvd18nICsgKGkgKyBrKV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxSb3dzWydyb3dfJyArIChpICsgayldID0gY2ouY29sU3BhbiB8fCAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbFJvd3NbJ3Jvd18nICsgKGkgKyBrKV0rKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjZWxsc051bSArPSBjZWxsUm93c1sncm93XycgKyBpXSB8fCAwO1xuICAgICAgICAgICAgICAgICAgICBtYXhMZW4gPSBNYXRoLm1heChjZWxsc051bSwgbWF4TGVuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1heExlbjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRDZWxsQ29sSW5kZXg6IGZ1bmN0aW9uIChjZWxsKSB7fSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W5b2T5YmNY2VsbOaXgei+ueeahOWNleWFg+agvO+8jFxuICAgICAgICAgICAgICogQHBhcmFtIGNlbGxcbiAgICAgICAgICAgICAqIEBwYXJhbSByaWdodFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRIU2lkZUNlbGw6IGZ1bmN0aW9uIChjZWxsLCByaWdodCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZWxsSW5mbyA9IHRoaXMuZ2V0Q2VsbEluZm8oY2VsbCksXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3Um93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aWV3Q29sSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsZW4gPSB0aGlzLnNlbGVjdGVkVGRzLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5jZWxsc1JhbmdlO1xuICAgICAgICAgICAgICAgICAgICAvL+mmluihjOaIluiAhemmluWIl+ayoeacieWJjee9ruWNleWFg+agvFxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoIXJpZ2h0ICYmICghbGVuID8gIWNlbGxJbmZvLmNvbEluZGV4IDogIXJhbmdlLmJlZ2luQ29sSW5kZXgpKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKHJpZ2h0ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKCFsZW4gPyBjZWxsSW5mby5jb2xJbmRleCA9PSB0aGlzLmNvbHNOdW0gLSAxIDogcmFuZ2UuZW5kQ29sSW5kZXggPT0gdGhpcy5jb2xzTnVtIC0gMSkpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdSb3dJbmRleCA9ICFsZW4gPyBjZWxsSW5mby5yb3dJbmRleCA6IHJhbmdlLmJlZ2luUm93SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdDb2xJbmRleCA9ICFyaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgPyAhbGVuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBjZWxsSW5mby5jb2xJbmRleCA8IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogY2VsbEluZm8uY29sSW5kZXggLSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiByYW5nZS5iZWdpbkNvbEluZGV4IC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAhbGVuXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNlbGxJbmZvLmNvbEluZGV4ICsgMVxuICAgICAgICAgICAgICAgICAgICAgICAgOiByYW5nZS5lbmRDb2xJbmRleCArIDE7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldENlbGwoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4VGFibGVbcHJldmlld1Jvd0luZGV4XVtwcmV2aWV3Q29sSW5kZXhdLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmRleFRhYmxlW3ByZXZpZXdSb3dJbmRleF1bcHJldmlld0NvbEluZGV4XS5jZWxsSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFcnJvcihlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VGFiTmV4dENlbGw6IGZ1bmN0aW9uIChjZWxsLCBwcmVSb3dJbmRleCkge1xuICAgICAgICAgICAgICAgIHZhciBjZWxsSW5mbyA9IHRoaXMuZ2V0Q2VsbEluZm8oY2VsbCksXG4gICAgICAgICAgICAgICAgICAgIHJvd0luZGV4ID0gcHJlUm93SW5kZXggfHwgY2VsbEluZm8ucm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIGNvbEluZGV4ID0gY2VsbEluZm8uY29sSW5kZXggKyAxICsgKGNlbGxJbmZvLmNvbFNwYW4gLSAxKSxcbiAgICAgICAgICAgICAgICAgICAgbmV4dENlbGw7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dENlbGwgPSB0aGlzLmdldENlbGwoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4VGFibGVbcm93SW5kZXhdW2NvbEluZGV4XS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleF1bY29sSW5kZXhdLmNlbGxJbmRleFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvd0luZGV4ID0gcm93SW5kZXggKiAxICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbEluZGV4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDZWxsID0gdGhpcy5nZXRDZWxsKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleF1bY29sSW5kZXhdLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleF1bY29sSW5kZXhdLmNlbGxJbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHRDZWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W6KeG6KeJ5LiK55qE5ZCO572u5Y2V5YWD5qC8XG4gICAgICAgICAgICAgKiBAcGFyYW0gY2VsbFxuICAgICAgICAgICAgICogQHBhcmFtIGJvdHRvbVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRWU2lkZUNlbGw6IGZ1bmN0aW9uIChjZWxsLCBib3R0b20sIGlnbm9yZVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxJbmZvID0gdGhpcy5nZXRDZWxsSW5mbyhjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRSb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDb2xJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxlbiA9IHRoaXMuc2VsZWN0ZWRUZHMubGVuZ3RoICYmICFpZ25vcmVSYW5nZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5jZWxsc1JhbmdlO1xuICAgICAgICAgICAgICAgICAgICAvL+acq+ihjOaIluiAheacq+WIl+ayoeacieWQjue9ruWNleWFg+agvFxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAoIWJvdHRvbSAmJiBjZWxsSW5mby5yb3dJbmRleCA9PSAwKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgKGJvdHRvbSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICghbGVuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gY2VsbEluZm8ucm93SW5kZXggKyBjZWxsSW5mby5yb3dTcGFuID4gdGhpcy5yb3dzTnVtIC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHJhbmdlLmVuZFJvd0luZGV4ID09IHRoaXMucm93c051bSAtIDEpKVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICAgICAgICAgICAgICBuZXh0Um93SW5kZXggPSAhYm90dG9tXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICFsZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGNlbGxJbmZvLnJvd0luZGV4IC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcmFuZ2UuYmVnaW5Sb3dJbmRleCAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgIDogIWxlblxuICAgICAgICAgICAgICAgICAgICAgICAgPyBjZWxsSW5mby5yb3dJbmRleCArIGNlbGxJbmZvLnJvd1NwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgIDogcmFuZ2UuZW5kUm93SW5kZXggKyAxO1xuICAgICAgICAgICAgICAgICAgICBuZXh0Q29sSW5kZXggPSAhbGVuID8gY2VsbEluZm8uY29sSW5kZXggOiByYW5nZS5iZWdpbkNvbEluZGV4O1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRDZWxsKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmRleFRhYmxlW25leHRSb3dJbmRleF1bbmV4dENvbEluZGV4XS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtuZXh0Um93SW5kZXhdW25leHRDb2xJbmRleF0uY2VsbEluZGV4XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBzaG93RXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W55u45ZCM57uT5p2f5L2N572u55qE5Y2V5YWD5qC877yMeE9yWeaMh+S7o+S6huaYr+iOt+WPlnjovbTnm7jlkIzov5jmmK956L2055u45ZCMXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldFNhbWVFbmRQb3NDZWxsczogZnVuY3Rpb24gKGNlbGwsIHhPclkpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmxhZyA9IHhPclkudG9Mb3dlckNhc2UoKSA9PT0gJ3gnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gZG9tVXRpbHMuZ2V0WFkoY2VsbClbZmxhZyA/ICd4JyA6ICd5J10gKyBjZWxsWydvZmZzZXQnICsgKGZsYWcgPyAnV2lkdGgnIDogJ0hlaWdodCcpXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvd3MgPSB0aGlzLnRhYmxlLnJvd3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxscyA9IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5zID0gW107XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5yb3dzTnVtOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxzID0gcm93c1tpXS5jZWxscztcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCB0bXBDZWxsOyAodG1wQ2VsbCA9IGNlbGxzW2orK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wRW5kID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0WFkodG1wQ2VsbClbZmxhZyA/ICd4JyA6ICd5J10gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBDZWxsWydvZmZzZXQnICsgKGZsYWcgPyAnV2lkdGgnIDogJ0hlaWdodCcpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WvueW6lOihjOeahHRk5bey57uP6KKr5LiK6Z2i6KGMcm93U3BhbuS6hlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBFbmQgPiBlbmQgJiYgZmxhZykgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwgPT0gdG1wQ2VsbCB8fCBlbmQgPT0gdG1wRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Y+q6I635Y+W5Y2V5LiA55qE5Y2V5YWD5qC8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdG9kbyDku4Xojrflj5bljZXkuIDljZXlhYPmoLzlnKjnibnlrprmg4XlhrXkuIvkvJrpgKDmiJByZXR1cm5z5Li656m677yM5LuO6ICM5b2x5ZON5ZCO57ut55qE5ouW5ou95a6e546w77yM5L+u5q2j6L+Z5Liq44CC6ZyA6ICD6JmR5oCn6IO9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0bXBDZWxsW2ZsYWcgPyAnY29sU3BhbicgOiAncm93U3BhbiddID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybnMucHVzaCh0bXBDZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmxhZykgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXR1cm5zO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0Vycm9yKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRDZWxsQ29udGVudDogZnVuY3Rpb24gKGNlbGwsIGNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICBjZWxsLmlubmVySFRNTCA9IGNvbnRlbnQgfHwgKGJyb3dzZXIuaWUgPyBkb21VdGlscy5maWxsQ2hhciA6ICc8YnIgLz4nKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjbG9uZUNlbGw6IFVFVGFibGUuY2xvbmVDZWxsLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDojrflj5bot5/lvZPliY3ljZXlhYPmoLznmoTlj7Povrnnq5bnur/kuLrlt6bovrnnmoTmiYDmnInmnKrlkIjlubbljZXlhYPmoLxcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0U2FtZVN0YXJ0UG9zWENlbGxzOiBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IGRvbVV0aWxzLmdldFhZKGNlbGwpLnggKyBjZWxsLm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm93cyA9IHRoaXMudGFibGUucm93cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucm93c051bTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxscyA9IHJvd3NbaV0uY2VsbHM7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMCwgdG1wQ2VsbDsgKHRtcENlbGwgPSBjZWxsc1tqKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcFN0YXJ0ID0gZG9tVXRpbHMuZ2V0WFkodG1wQ2VsbCkueDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG1wU3RhcnQgPiBzdGFydCkgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRtcFN0YXJ0ID09IHN0YXJ0ICYmIHRtcENlbGwuY29sU3BhbiA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybnMucHVzaCh0bXBDZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXR1cm5zO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd0Vycm9yKGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOabtOaWsHRhYmxl5a+55bqU55qE57Si5byV6KGoXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHVwZGF0ZTogZnVuY3Rpb24gKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50YWJsZSA9IHRhYmxlIHx8IHRoaXMudGFibGU7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFRkcyA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMuY2VsbHNSYW5nZSA9IHt9O1xuICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZSA9IFtdO1xuICAgICAgICAgICAgICAgIHZhciByb3dzID0gdGhpcy50YWJsZS5yb3dzLFxuICAgICAgICAgICAgICAgICAgICByb3dzTnVtID0gdGhpcy5nZXRNYXhSb3dzKCksXG4gICAgICAgICAgICAgICAgICAgIGROdW0gPSByb3dzTnVtIC0gcm93cy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgIGNvbHNOdW0gPSB0aGlzLmdldE1heENvbHMoKTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoZE51bS0tKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGUuaW5zZXJ0Um93KHJvd3MubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5yb3dzTnVtID0gcm93c051bTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbHNOdW0gPSBjb2xzTnVtO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByb3dzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtpXSA9IG5ldyBBcnJheShjb2xzTnVtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/loavlhYXntKLlvJXooahcbiAgICAgICAgICAgICAgICBmb3IgKHZhciByb3dJbmRleCA9IDAsIHJvdzsgKHJvdyA9IHJvd3Nbcm93SW5kZXhdKTsgcm93SW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBjZWxsSW5kZXggPSAwLCBjZWxsLCBjZWxscyA9IHJvdy5jZWxsczsgKGNlbGwgPSBjZWxsc1tjZWxsSW5kZXhdKTsgY2VsbEluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5L+u5q2j5pW06KGM6KKrcm93U3BhbuaXtuWvvOiHtOeahOihjOaVsOiuoeeul+mUmeivr1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwucm93U3BhbiA+IHJvd3NOdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLnJvd1NwYW4gPSByb3dzTnVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbEluZGV4ID0gY2VsbEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd1NwYW4gPSBjZWxsLnJvd1NwYW4gfHwgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xTcGFuID0gY2VsbC5jb2xTcGFuIHx8IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+W9k+W3sue7j+iiq+S4iuS4gOihjHJvd1NwYW7miJbogIXooqvliY3kuIDliJdjb2xTcGFu5LqG77yM5YiZ6Lez5Yiw5LiL5LiA5Liq5Y2V5YWD5qC86L+b6KGMXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAodGhpcy5pbmRleFRhYmxlW3Jvd0luZGV4XVtjb2xJbmRleF0pIGNvbEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJvd1NwYW47IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgY29sU3BhbjsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleCArIGpdW2NvbEluZGV4ICsga10gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3dJbmRleDogcm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsSW5kZXg6IGNlbGxJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbEluZGV4OiBjb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd1NwYW46IHJvd1NwYW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xTcGFuOiBjb2xTcGFuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v5L+u5aSN5q6L57y6dGRcbiAgICAgICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgcm93c051bTsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoayA9IDA7IGsgPCBjb2xzTnVtOyBrKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmluZGV4VGFibGVbal1ba10gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdyA9IHJvd3Nbal07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHJvdy5jZWxsc1tyb3cuY2VsbHMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IGNlbGwgPyBjZWxsLmNsb25lTm9kZSh0cnVlKSA6IHRoaXMudGFibGUub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q2VsbENvbnRlbnQoY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwuY29sU3BhbiAhPT0gMSkgY2VsbC5jb2xTcGFuID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbC5yb3dTcGFuICE9PSAxKSBjZWxsLnJvd1NwYW4gPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4VGFibGVbal1ba10gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd0luZGV4OiBqLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsSW5kZXg6IGNlbGwuY2VsbEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xJbmRleDogayxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93U3BhbjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sU3BhbjogMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/lvZPmoYbpgInlkI7liKDpmaTooYzmiJbogIXliJflkI7mkqTplIDvvIzpnIDopoHph43lu7rpgInljLrjgIJcbiAgICAgICAgICAgICAgICB2YXIgdGRzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGhpcy50YWJsZSwgJ3RkJyksXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdFRkcyA9IFtdO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2godGRzLCBmdW5jdGlvbiAodGQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmhhc0NsYXNzKHRkLCAnc2VsZWN0VGRDbGFzcycpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RUZHMucHVzaCh0ZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0VGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBzZWxlY3RUZHNbMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSBzZWxlY3RUZHNbc2VsZWN0VGRzLmxlbmd0aCAtIDFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRJbmZvID0gdGhpcy5nZXRDZWxsSW5mbyhzdGFydCksXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRJbmZvID0gdGhpcy5nZXRDZWxsSW5mbyhlbmQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVGRzID0gc2VsZWN0VGRzO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNlbGxzUmFuZ2UgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpblJvd0luZGV4OiBzdGFydEluZm8ucm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpbkNvbEluZGV4OiBzdGFydEluZm8uY29sSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRSb3dJbmRleDogZW5kSW5mby5yb3dJbmRleCArIGVuZEluZm8ucm93U3BhbiAtIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRDb2xJbmRleDogZW5kSW5mby5jb2xJbmRleCArIGVuZEluZm8uY29sU3BhbiAtIDFcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/nu5nnrKzkuIDooYzorr7nva5maXJzdFJvd+eahOagt+W8j+WQjeensCzlnKjmjpLluo/lm77moIfnmoTmoLflvI/kuIrkvb/nlKjliLBcbiAgICAgICAgICAgICAgICBpZiAoIWRvbVV0aWxzLmhhc0NsYXNzKHRoaXMudGFibGUucm93c1swXSwgJ2ZpcnN0Um93JykpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3ModGhpcy50YWJsZS5yb3dzWzBdLCAnZmlyc3RSb3cnKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCB0aGlzLnRhYmxlLnJvd3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUNsYXNzZXModGhpcy50YWJsZS5yb3dzW2ldLCAnZmlyc3RSb3cnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOiOt+WPluWNleWFg+agvOeahOe0ouW8leS/oeaBr1xuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDZWxsSW5mbzogZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNlbGwpIHJldHVybjtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZGV4ID0gY2VsbC5jZWxsSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIHJvd0luZGV4ID0gY2VsbC5wYXJlbnROb2RlLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICByb3dJbmZvID0gdGhpcy5pbmRleFRhYmxlW3Jvd0luZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgbnVtQ29scyA9IHRoaXMuY29sc051bTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBjb2xJbmRleCA9IGNlbGxJbmRleDsgY29sSW5kZXggPCBudW1Db2xzOyBjb2xJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZWxsSW5mbyA9IHJvd0luZm9bY29sSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbEluZm8ucm93SW5kZXggPT09IHJvd0luZGV4ICYmIGNlbGxJbmZvLmNlbGxJbmRleCA9PT0gY2VsbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2VsbEluZm87XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja7ooYzliJflj7fojrflj5bljZXlhYPmoLxcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZ2V0Q2VsbDogZnVuY3Rpb24gKHJvd0luZGV4LCBjZWxsSW5kZXgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHJvd0luZGV4IDwgdGhpcy5yb3dzTnVtICYmIHRoaXMudGFibGUucm93c1tyb3dJbmRleF0uY2VsbHNbY2VsbEluZGV4XSkgfHwgbnVsbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOWIoOmZpOWNleWFg+agvFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBkZWxldGVDZWxsOiBmdW5jdGlvbiAoY2VsbCwgcm93SW5kZXgpIHtcbiAgICAgICAgICAgICAgICByb3dJbmRleCA9IHR5cGVvZiByb3dJbmRleCA9PSAnbnVtYmVyJyA/IHJvd0luZGV4IDogY2VsbC5wYXJlbnROb2RlLnJvd0luZGV4O1xuICAgICAgICAgICAgICAgIHZhciByb3cgPSB0aGlzLnRhYmxlLnJvd3Nbcm93SW5kZXhdO1xuICAgICAgICAgICAgICAgIHJvdy5kZWxldGVDZWxsKGNlbGwuY2VsbEluZGV4KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOagueaNruWni+acq+S4pOS4quWNleWFg+agvOiOt+WPluiiq+ahhumAieeahOaJgOacieWNleWFg+agvOiMg+WbtFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRDZWxsc1JhbmdlOiBmdW5jdGlvbiAoY2VsbEEsIGNlbGxCKSB7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gY2hlY2tSYW5nZShiZWdpblJvd0luZGV4LCBiZWdpbkNvbEluZGV4LCBlbmRSb3dJbmRleCwgZW5kQ29sSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcEJlZ2luUm93SW5kZXggPSBiZWdpblJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wQmVnaW5Db2xJbmRleCA9IGJlZ2luQ29sSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBFbmRSb3dJbmRleCA9IGVuZFJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wRW5kQ29sSW5kZXggPSBlbmRDb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICByb3dJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgLy8g6YCa6L+HaW5kZXhUYWJsZeajgOafpeaYr+WQpuWtmOWcqOi2heWHulRhYmxlUmFuZ2XkuIrovrnnlYznmoTmg4XlhrVcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJlZ2luUm93SW5kZXggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbEluZGV4ID0gYmVnaW5Db2xJbmRleDsgY29sSW5kZXggPCBlbmRDb2xJbmRleDsgY29sSW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gbWUuaW5kZXhUYWJsZVtiZWdpblJvd0luZGV4XVtjb2xJbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93SW5kZXggPSBjZWxsSW5mby5yb3dJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93SW5kZXggPCBiZWdpblJvd0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcEJlZ2luUm93SW5kZXggPSBNYXRoLm1pbihyb3dJbmRleCwgdG1wQmVnaW5Sb3dJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIOmAmui/h2luZGV4VGFibGXmo4Dmn6XmmK/lkKblrZjlnKjotoXlh7pUYWJsZVJhbmdl5Y+z6L6555WM55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbmRDb2xJbmRleCA8IG1lLmNvbHNOdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAocm93SW5kZXggPSBiZWdpblJvd0luZGV4OyByb3dJbmRleCA8IGVuZFJvd0luZGV4OyByb3dJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8gPSBtZS5pbmRleFRhYmxlW3Jvd0luZGV4XVtlbmRDb2xJbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sSW5kZXggPSBjZWxsSW5mby5jb2xJbmRleCArIGNlbGxJbmZvLmNvbFNwYW4gLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb2xJbmRleCA+IGVuZENvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcEVuZENvbEluZGV4ID0gTWF0aC5tYXgoY29sSW5kZXgsIHRtcEVuZENvbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5pyJ6LaF5Ye6VGFibGVSYW5nZeS4i+i+ueeVjOeahOaDheWGtVxuICAgICAgICAgICAgICAgICAgICBpZiAoZW5kUm93SW5kZXggPCBtZS5yb3dzTnVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbEluZGV4ID0gYmVnaW5Db2xJbmRleDsgY29sSW5kZXggPCBlbmRDb2xJbmRleDsgY29sSW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gbWUuaW5kZXhUYWJsZVtlbmRSb3dJbmRleF1bY29sSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd0luZGV4ID0gY2VsbEluZm8ucm93SW5kZXggKyBjZWxsSW5mby5yb3dTcGFuIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocm93SW5kZXggPiBlbmRSb3dJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBFbmRSb3dJbmRleCA9IE1hdGgubWF4KHJvd0luZGV4LCB0bXBFbmRSb3dJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuaciei2heWHulRhYmxlUmFuZ2Xlt6bovrnnlYznmoTmg4XlhrVcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJlZ2luQ29sSW5kZXggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHJvd0luZGV4ID0gYmVnaW5Sb3dJbmRleDsgcm93SW5kZXggPCBlbmRSb3dJbmRleDsgcm93SW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gbWUuaW5kZXhUYWJsZVtyb3dJbmRleF1bYmVnaW5Db2xJbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sSW5kZXggPSBjZWxsSW5mby5jb2xJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29sSW5kZXggPCBiZWdpbkNvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcEJlZ2luQ29sSW5kZXggPSBNYXRoLm1pbihjZWxsSW5mby5jb2xJbmRleCwgdG1wQmVnaW5Db2xJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8v6YCS5b2S6LCD55So55u06Iez5omA5pyJ5a6M5oiQ5omA5pyJ5qGG6YCJ5Y2V5YWD5qC855qE5omp5bGVXG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcEJlZ2luUm93SW5kZXggIT0gYmVnaW5Sb3dJbmRleCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wQmVnaW5Db2xJbmRleCAhPSBiZWdpbkNvbEluZGV4IHx8XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBFbmRSb3dJbmRleCAhPSBlbmRSb3dJbmRleCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wRW5kQ29sSW5kZXggIT0gZW5kQ29sSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2hlY2tSYW5nZSh0bXBCZWdpblJvd0luZGV4LCB0bXBCZWdpbkNvbEluZGV4LCB0bXBFbmRSb3dJbmRleCwgdG1wRW5kQ29sSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5LiN6ZyA6KaB5omp5bGVVGFibGVSYW5nZeeahOaDheWGtVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZWdpblJvd0luZGV4OiBiZWdpblJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luQ29sSW5kZXg6IGJlZ2luQ29sSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kUm93SW5kZXg6IGVuZFJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZENvbEluZGV4OiBlbmRDb2xJbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsQUluZm8gPSBtZS5nZXRDZWxsSW5mbyhjZWxsQSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsQSA9PT0gY2VsbEIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmVnaW5Sb3dJbmRleDogY2VsbEFJbmZvLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luQ29sSW5kZXg6IGNlbGxBSW5mby5jb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRSb3dJbmRleDogY2VsbEFJbmZvLnJvd0luZGV4ICsgY2VsbEFJbmZvLnJvd1NwYW4gLSAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZENvbEluZGV4OiBjZWxsQUluZm8uY29sSW5kZXggKyBjZWxsQUluZm8uY29sU3BhbiAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxCSW5mbyA9IG1lLmdldENlbGxJbmZvKGNlbGxCKTtcbiAgICAgICAgICAgICAgICAgICAgLy8g6K6h566XVGFibGVSYW5nZeeahOWbm+S4qui+uVxuICAgICAgICAgICAgICAgICAgICB2YXIgYmVnaW5Sb3dJbmRleCA9IE1hdGgubWluKGNlbGxBSW5mby5yb3dJbmRleCwgY2VsbEJJbmZvLnJvd0luZGV4KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJlZ2luQ29sSW5kZXggPSBNYXRoLm1pbihjZWxsQUluZm8uY29sSW5kZXgsIGNlbGxCSW5mby5jb2xJbmRleCksXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRSb3dJbmRleCA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxBSW5mby5yb3dJbmRleCArIGNlbGxBSW5mby5yb3dTcGFuIC0gMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsQkluZm8ucm93SW5kZXggKyBjZWxsQkluZm8ucm93U3BhbiAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRDb2xJbmRleCA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxBSW5mby5jb2xJbmRleCArIGNlbGxBSW5mby5jb2xTcGFuIC0gMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsQkluZm8uY29sSW5kZXggKyBjZWxsQkluZm8uY29sU3BhbiAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrUmFuZ2UoYmVnaW5Sb3dJbmRleCwgYmVnaW5Db2xJbmRleCwgZW5kUm93SW5kZXgsIGVuZENvbEluZGV4KTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDkvp3mja5jZWxsc1Jhbmdl6I635Y+W5a+55bqU55qE5Y2V5YWD5qC86ZuG5ZCIXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGdldENlbGxzOiBmdW5jdGlvbiAocmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAvL+avj+asoeiOt+WPlmNlbGxz5LmL5YmN5b+F6aG75YWI5riF6Zmk5LiK5qyh55qE6YCJ5oup77yM5ZCm5YiZ5Lya5a+55ZCO57ut6I635Y+W5pON5L2c6YCg5oiQ5b2x5ZONXG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhclNlbGVjdGVkKCk7XG4gICAgICAgICAgICAgICAgdmFyIGJlZ2luUm93SW5kZXggPSByYW5nZS5iZWdpblJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICBiZWdpbkNvbEluZGV4ID0gcmFuZ2UuYmVnaW5Db2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgZW5kUm93SW5kZXggPSByYW5nZS5lbmRSb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgZW5kQ29sSW5kZXggPSByYW5nZS5lbmRDb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8sXG4gICAgICAgICAgICAgICAgICAgIHJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICBjb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgdGRIYXNoID0ge30sXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblRkcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBiZWdpblJvd0luZGV4OyBpIDw9IGVuZFJvd0luZGV4OyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IGJlZ2luQ29sSW5kZXg7IGogPD0gZW5kQ29sSW5kZXg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8gPSB0aGlzLmluZGV4VGFibGVbaV1bal07XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dJbmRleCA9IGNlbGxJbmZvLnJvd0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sSW5kZXggPSBjZWxsSW5mby5jb2xJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenENlbGxz6YeM5bey57uP5YyF5ZCr5LqG5q2kQ2VsbOWImei3s+i/h1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IHJvd0luZGV4ICsgJ3wnICsgY29sSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGRIYXNoW2tleV0pIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGRIYXNoW2tleV0gPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd0luZGV4IDwgaSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbEluZGV4IDwgaiB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvd0luZGV4ICsgY2VsbEluZm8ucm93U3BhbiAtIDEgPiBlbmRSb3dJbmRleCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbEluZGV4ICsgY2VsbEluZm8uY29sU3BhbiAtIDEgPiBlbmRDb2xJbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5UZHMucHVzaCh0aGlzLmdldENlbGwocm93SW5kZXgsIGNlbGxJbmZvLmNlbGxJbmRleCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXR1cm5UZHM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmuIXnkIblt7Lnu4/pgInkuK3nmoTljZXlhYPmoLxcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgY2xlYXJTZWxlY3RlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIFVFVGFibGUucmVtb3ZlU2VsZWN0ZWRDbGFzcyh0aGlzLnNlbGVjdGVkVGRzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVGRzID0gW107XG4gICAgICAgICAgICAgICAgdGhpcy5jZWxsc1JhbmdlID0ge307XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmoLnmja5yYW5nZeiuvue9ruW3sue7j+mAieS4reeahOWNleWFg+agvFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBzZXRTZWxlY3RlZDogZnVuY3Rpb24gKHJhbmdlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGxzID0gdGhpcy5nZXRDZWxscyhyYW5nZSk7XG4gICAgICAgICAgICAgICAgVUVUYWJsZS5hZGRTZWxlY3RlZENsYXNzKGNlbGxzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVGRzID0gY2VsbHM7XG4gICAgICAgICAgICAgICAgdGhpcy5jZWxsc1JhbmdlID0gcmFuZ2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNGdWxsUm93OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5jZWxsc1JhbmdlO1xuICAgICAgICAgICAgICAgIHJldHVybiByYW5nZS5lbmRDb2xJbmRleCAtIHJhbmdlLmJlZ2luQ29sSW5kZXggKyAxID09IHRoaXMuY29sc051bTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc0Z1bGxDb2w6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmNlbGxzUmFuZ2UsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlID0gdGhpcy50YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgdGhzID0gdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RoJyksXG4gICAgICAgICAgICAgICAgICAgIHJvd3MgPSByYW5nZS5lbmRSb3dJbmRleCAtIHJhbmdlLmJlZ2luUm93SW5kZXggKyAxO1xuICAgICAgICAgICAgICAgIHJldHVybiAhdGhzLmxlbmd0aCA/IHJvd3MgPT0gdGhpcy5yb3dzTnVtIDogcm93cyA9PSB0aGlzLnJvd3NOdW0gfHwgcm93cyA9PSB0aGlzLnJvd3NOdW0gLSAxO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog6I635Y+W6KeG6KeJ5LiK55qE5YmN572u5Y2V5YWD5qC877yM6buY6K6k5piv5bem6L6577yMdG9w5Lyg5YWl5pe2XG4gICAgICAgICAgICAgKiBAcGFyYW0gY2VsbFxuICAgICAgICAgICAgICogQHBhcmFtIHRvcFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXROZXh0Q2VsbDogZnVuY3Rpb24gKGNlbGwsIGJvdHRvbSwgaWdub3JlUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dFJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dENvbEluZGV4O1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGVuID0gdGhpcy5zZWxlY3RlZFRkcy5sZW5ndGggJiYgIWlnbm9yZVJhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLmNlbGxzUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIC8v5pyr6KGM5oiW6ICF5pyr5YiX5rKh5pyJ5ZCO572u5Y2V5YWD5qC8XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICghYm90dG9tICYmIGNlbGxJbmZvLnJvd0luZGV4ID09IDApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoYm90dG9tICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKCFsZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBjZWxsSW5mby5yb3dJbmRleCArIGNlbGxJbmZvLnJvd1NwYW4gPiB0aGlzLnJvd3NOdW0gLSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcmFuZ2UuZW5kUm93SW5kZXggPT0gdGhpcy5yb3dzTnVtIC0gMSkpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgIG5leHRSb3dJbmRleCA9ICFib3R0b21cbiAgICAgICAgICAgICAgICAgICAgICAgID8gIWxlblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gY2VsbEluZm8ucm93SW5kZXggLSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiByYW5nZS5iZWdpblJvd0luZGV4IC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAhbGVuXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNlbGxJbmZvLnJvd0luZGV4ICsgY2VsbEluZm8ucm93U3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgOiByYW5nZS5lbmRSb3dJbmRleCArIDE7XG4gICAgICAgICAgICAgICAgICAgIG5leHRDb2xJbmRleCA9ICFsZW4gPyBjZWxsSW5mby5jb2xJbmRleCA6IHJhbmdlLmJlZ2luQ29sSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldENlbGwoXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4VGFibGVbbmV4dFJvd0luZGV4XVtuZXh0Q29sSW5kZXhdLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmRleFRhYmxlW25leHRSb3dJbmRleF1bbmV4dENvbEluZGV4XS5jZWxsSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNob3dFcnJvcihlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0UHJldmlld0NlbGw6IGZ1bmN0aW9uIChjZWxsLCB0b3ApIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlld1Jvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlld0NvbEluZGV4O1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGVuID0gdGhpcy5zZWxlY3RlZFRkcy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IHRoaXMuY2VsbHNSYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgLy/pppbooYzmiJbogIXpppbliJfmsqHmnInliY3nva7ljZXlhYPmoLxcbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgKCF0b3AgJiYgKCFsZW4gPyAhY2VsbEluZm8uY29sSW5kZXggOiAhcmFuZ2UuYmVnaW5Db2xJbmRleCkpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAodG9wICYmICghbGVuID8gY2VsbEluZm8ucm93SW5kZXggPiB0aGlzLmNvbHNOdW0gLSAxIDogcmFuZ2UuZW5kQ29sSW5kZXggPT0gdGhpcy5jb2xzTnVtIC0gMSkpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdSb3dJbmRleCA9ICF0b3BcbiAgICAgICAgICAgICAgICAgICAgICAgID8gIWxlblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gY2VsbEluZm8ucm93SW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHJhbmdlLmJlZ2luUm93SW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgIDogIWxlblxuICAgICAgICAgICAgICAgICAgICAgICAgPyBjZWxsSW5mby5yb3dJbmRleCA8IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGNlbGxJbmZvLnJvd0luZGV4IC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgOiByYW5nZS5iZWdpblJvd0luZGV4O1xuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3Q29sSW5kZXggPSAhdG9wXG4gICAgICAgICAgICAgICAgICAgICAgICA/ICFsZW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGNlbGxJbmZvLmNvbEluZGV4IDwgMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjZWxsSW5mby5jb2xJbmRleCAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHJhbmdlLmJlZ2luQ29sSW5kZXggLSAxXG4gICAgICAgICAgICAgICAgICAgICAgICA6ICFsZW5cbiAgICAgICAgICAgICAgICAgICAgICAgID8gY2VsbEluZm8uY29sSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgIDogcmFuZ2UuZW5kQ29sSW5kZXggKyAxO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRDZWxsKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbmRleFRhYmxlW3ByZXZpZXdSb3dJbmRleF1bcHJldmlld0NvbEluZGV4XS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhUYWJsZVtwcmV2aWV3Um93SW5kZXhdW3ByZXZpZXdDb2xJbmRleF0uY2VsbEluZGV4XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBzaG93RXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog56e75Yqo5Y2V5YWD5qC85Lit55qE5YaF5a65XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIG1vdmVDb250ZW50OiBmdW5jdGlvbiAoY2VsbFRvLCBjZWxsRnJvbSkge1xuICAgICAgICAgICAgICAgIGlmIChVRVRhYmxlLmlzRW1wdHlCbG9jayhjZWxsRnJvbSkpIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoVUVUYWJsZS5pc0VtcHR5QmxvY2soY2VsbFRvKSkge1xuICAgICAgICAgICAgICAgICAgICBjZWxsVG8uaW5uZXJIVE1MID0gY2VsbEZyb20uaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IGNlbGxUby5sYXN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkLm5vZGVUeXBlID09IDMgfHwgIWR0ZC4kYmxvY2tbY2hpbGQudGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgY2VsbFRvLmFwcGVuZENoaWxkKGNlbGxUby5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3aGlsZSAoKGNoaWxkID0gY2VsbEZyb20uZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2VsbFRvLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDlkJHlj7PlkIjlubbljZXlhYPmoLxcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbWVyZ2VSaWdodDogZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICByaWdodENvbEluZGV4ID0gY2VsbEluZm8uY29sSW5kZXggKyBjZWxsSW5mby5jb2xTcGFuLFxuICAgICAgICAgICAgICAgICAgICByaWdodENlbGxJbmZvID0gdGhpcy5pbmRleFRhYmxlW2NlbGxJbmZvLnJvd0luZGV4XVtyaWdodENvbEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgcmlnaHRDZWxsID0gdGhpcy5nZXRDZWxsKHJpZ2h0Q2VsbEluZm8ucm93SW5kZXgsIHJpZ2h0Q2VsbEluZm8uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAvL+WQiOW5tlxuICAgICAgICAgICAgICAgIGNlbGwuY29sU3BhbiA9IGNlbGxJbmZvLmNvbFNwYW4gKyByaWdodENlbGxJbmZvLmNvbFNwYW47XG4gICAgICAgICAgICAgICAgLy/ooqvlkIjlubbnmoTljZXlhYPmoLzkuI3lupTlrZjlnKjlrr3luqblsZ7mgKdcbiAgICAgICAgICAgICAgICBjZWxsLnJlbW92ZUF0dHJpYnV0ZSgnd2lkdGgnKTtcbiAgICAgICAgICAgICAgICAvL+enu+WKqOWGheWuuVxuICAgICAgICAgICAgICAgIHRoaXMubW92ZUNvbnRlbnQoY2VsbCwgcmlnaHRDZWxsKTtcbiAgICAgICAgICAgICAgICAvL+WIoOaOieiiq+WQiOW5tueahENlbGxcbiAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUNlbGwocmlnaHRDZWxsLCByaWdodENlbGxJbmZvLnJvd0luZGV4KTtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5ZCR5LiL5ZCI5bm25Y2V5YWD5qC8XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIG1lcmdlRG93bjogZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICBkb3duUm93SW5kZXggPSBjZWxsSW5mby5yb3dJbmRleCArIGNlbGxJbmZvLnJvd1NwYW4sXG4gICAgICAgICAgICAgICAgICAgIGRvd25DZWxsSW5mbyA9IHRoaXMuaW5kZXhUYWJsZVtkb3duUm93SW5kZXhdW2NlbGxJbmZvLmNvbEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgZG93bkNlbGwgPSB0aGlzLmdldENlbGwoZG93bkNlbGxJbmZvLnJvd0luZGV4LCBkb3duQ2VsbEluZm8uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICBjZWxsLnJvd1NwYW4gPSBjZWxsSW5mby5yb3dTcGFuICsgZG93bkNlbGxJbmZvLnJvd1NwYW47XG4gICAgICAgICAgICAgICAgY2VsbC5yZW1vdmVBdHRyaWJ1dGUoJ2hlaWdodCcpO1xuICAgICAgICAgICAgICAgIHRoaXMubW92ZUNvbnRlbnQoY2VsbCwgZG93bkNlbGwpO1xuICAgICAgICAgICAgICAgIHRoaXMuZGVsZXRlQ2VsbChkb3duQ2VsbCwgZG93bkNlbGxJbmZvLnJvd0luZGV4KTtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5ZCI5bm25pW05LiqcmFuZ2XkuK3nmoTlhoXlrrlcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbWVyZ2VSYW5nZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8v55Sx5LqO5ZCI5bm25pON5L2c5Y+v5Lul5Zyo5Lu75oSP5pe25Yi76L+b6KGM77yM5omA5Lul5peg5rOV6YCa6L+H6byg5qCH5L2N572u562J5L+h5oGv5a6e5pe255Sf5oiQcmFuZ2XvvIzlj6rog73pgJrov4fnvJPlrZjlrp7kvovkuK3nmoRjZWxsc1Jhbmdl5a+56LGh5p2l6K6/6ZeuXG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5jZWxsc1JhbmdlLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0VG9wQ2VsbCA9IHRoaXMuZ2V0Q2VsbChcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmJlZ2luUm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluZGV4VGFibGVbcmFuZ2UuYmVnaW5Sb3dJbmRleF1bcmFuZ2UuYmVnaW5Db2xJbmRleF0uY2VsbEluZGV4XG4gICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICBpZiAobGVmdFRvcENlbGwudGFnTmFtZSA9PSAnVEgnICYmIHJhbmdlLmVuZFJvd0luZGV4ICE9PSByYW5nZS5iZWdpblJvd0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHRoaXMuaW5kZXhUYWJsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm8gPSB0aGlzLmdldENlbGxJbmZvKGxlZnRUb3BDZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdFRvcENlbGwgPSB0aGlzLmdldENlbGwoMSwgaW5kZXhbMV1baW5mby5jb2xJbmRleF0uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLmdldENlbGxzUmFuZ2UoXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0VG9wQ2VsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0Q2VsbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFt0aGlzLnJvd3NOdW0gLSAxXVtpbmZvLmNvbEluZGV4XS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleFt0aGlzLnJvd3NOdW0gLSAxXVtpbmZvLmNvbEluZGV4XS5jZWxsSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyDliKDpmaTliankvZnnmoRDZWxsc1xuICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IHRoaXMuZ2V0Q2VsbHMocmFuZ2UpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gY2VsbHNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2kgIT09IGxlZnRUb3BDZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vdmVDb250ZW50KGxlZnRUb3BDZWxsLCBjaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlbGV0ZUNlbGwoY2kpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIOS/ruaUueW3puS4iuinkkNlbGznmoRyb3dTcGFu5ZKMY29sU3Bhbu+8jOW5tuiwg+aVtOWuveW6puWxnuaAp+iuvue9rlxuICAgICAgICAgICAgICAgIGxlZnRUb3BDZWxsLnJvd1NwYW4gPSByYW5nZS5lbmRSb3dJbmRleCAtIHJhbmdlLmJlZ2luUm93SW5kZXggKyAxO1xuICAgICAgICAgICAgICAgIGxlZnRUb3BDZWxsLnJvd1NwYW4gPiAxICYmIGxlZnRUb3BDZWxsLnJlbW92ZUF0dHJpYnV0ZSgnaGVpZ2h0Jyk7XG4gICAgICAgICAgICAgICAgbGVmdFRvcENlbGwuY29sU3BhbiA9IHJhbmdlLmVuZENvbEluZGV4IC0gcmFuZ2UuYmVnaW5Db2xJbmRleCArIDE7XG4gICAgICAgICAgICAgICAgbGVmdFRvcENlbGwuY29sU3BhbiA+IDEgJiYgbGVmdFRvcENlbGwucmVtb3ZlQXR0cmlidXRlKCd3aWR0aCcpO1xuICAgICAgICAgICAgICAgIGlmIChsZWZ0VG9wQ2VsbC5yb3dTcGFuID09IHRoaXMucm93c051bSAmJiBsZWZ0VG9wQ2VsbC5jb2xTcGFuICE9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdFRvcENlbGwuY29sU3BhbiA9IDE7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGxlZnRUb3BDZWxsLmNvbFNwYW4gPT0gdGhpcy5jb2xzTnVtICYmIGxlZnRUb3BDZWxsLnJvd1NwYW4gIT0gMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcm93SW5kZXggPSBsZWZ0VG9wQ2VsbC5wYXJlbnROb2RlLnJvd0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAvL+ino+WGs0lF5LiL55qE6KGo5qC85pON5L2c6Zeu6aKYXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnRhYmxlLmRlbGV0ZVJvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IHJvd0luZGV4ICsgMSwgY3VySW5kZXggPSByb3dJbmRleCArIDEsIGxlbiA9IGxlZnRUb3BDZWxsLnJvd1NwYW47IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGUuZGVsZXRlUm93KGN1ckluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBsZWZ0VG9wQ2VsbC5yb3dTcGFuIC0gMTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IHRoaXMudGFibGUucm93c1tyb3dJbmRleCArIDFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHJvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGVmdFRvcENlbGwucm93U3BhbiA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmj5LlhaXkuIDooYzljZXlhYPmoLxcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaW5zZXJ0Um93OiBmdW5jdGlvbiAocm93SW5kZXgsIHNvdXJjZUNlbGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgbnVtQ29scyA9IHRoaXMuY29sc051bSxcbiAgICAgICAgICAgICAgICAgICAgdGFibGUgPSB0aGlzLnRhYmxlLFxuICAgICAgICAgICAgICAgICAgICByb3cgPSB0YWJsZS5pbnNlcnRSb3cocm93SW5kZXgpLFxuICAgICAgICAgICAgICAgICAgICBjZWxsLFxuICAgICAgICAgICAgICAgICAgICBpc0luc2VydFRpdGxlID0gdHlwZW9mIHNvdXJjZUNlbGwgPT0gJ3N0cmluZycgJiYgc291cmNlQ2VsbC50b1VwcGVyQ2FzZSgpID09ICdUSCc7XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiByZXBsYWNlVGRUb1RoKGNvbEluZGV4LCBjZWxsLCB0YWJsZVJvdykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29sSW5kZXggPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRyID0gdGFibGVSb3cubmV4dFNpYmxpbmcgfHwgdGFibGVSb3cucHJldmlvdXNTaWJsaW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoID0gdHIuY2VsbHNbY29sSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoLnRhZ05hbWUgPT0gJ1RIJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoID0gY2VsbC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGguYXBwZW5kQ2hpbGQoY2VsbC5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZVJvdy5pbnNlcnRCZWZvcmUodGgsIGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjZWxsLnRhZ05hbWUgPT0gJ1RIJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZCA9IGNlbGwub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkLmFwcGVuZENoaWxkKGNlbGwuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVSb3cuaW5zZXJ0QmVmb3JlKHRkLCBjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+mmluihjOebtOaOpeaPkuWFpSzml6DpnIDogIPomZHpg6jliIbljZXlhYPmoLzooqtyb3dzcGFu55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgaWYgKHJvd0luZGV4ID09IDAgfHwgcm93SW5kZXggPT0gdGhpcy5yb3dzTnVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGNvbEluZGV4ID0gMDsgY29sSW5kZXggPCBudW1Db2xzOyBjb2xJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGhpcy5jbG9uZUNlbGwoc291cmNlQ2VsbCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENlbGxDb250ZW50KGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5nZXRBdHRyaWJ1dGUoJ3ZBbGlnbicpICYmIGNlbGwuc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc0luc2VydFRpdGxlKSByZXBsYWNlVGRUb1RoKGNvbEluZGV4LCBjZWxsLCByb3cpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZm9Sb3cgPSB0aGlzLmluZGV4VGFibGVbcm93SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEluZGV4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb2xJbmRleCA9IDA7IGNvbEluZGV4IDwgbnVtQ29sczsgY29sSW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxJbmZvID0gaW5mb1Jvd1tjb2xJbmRleF07XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WmguaenOWtmOWcqOafkOS4quWNleWFg+agvOeahHJvd3NwYW7nqb/ov4flvoXmj5LlhaXooYznmoTkvY3nva7vvIzliJnkv67mlLnor6XljZXlhYPmoLznmoRyb3dzcGFu5Y2z5Y+v77yM5peg6ZyA5o+S5YWl5Y2V5YWD5qC8XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbEluZm8ucm93SW5kZXggPCByb3dJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0aGlzLmdldENlbGwoY2VsbEluZm8ucm93SW5kZXgsIGNlbGxJbmZvLmNlbGxJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5yb3dTcGFuID0gY2VsbEluZm8ucm93U3BhbiArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0aGlzLmNsb25lQ2VsbChzb3VyY2VDZWxsLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENlbGxDb250ZW50KGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNJbnNlcnRUaXRsZSkgcmVwbGFjZVRkVG9UaChjb2xJbmRleCwgY2VsbCwgcm93KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL+ahhumAieaXtuaPkuWFpeS4jeinpuWPkWNvbnRlbnRjaGFuZ2XvvIzpnIDopoHmiYvliqjmm7TmlrDntKLlvJXjgIJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiByb3c7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDliKDpmaTkuIDooYzljZXlhYPmoLxcbiAgICAgICAgICAgICAqIEBwYXJhbSByb3dJbmRleFxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBkZWxldGVSb3c6IGZ1bmN0aW9uIChyb3dJbmRleCkge1xuICAgICAgICAgICAgICAgIHZhciByb3cgPSB0aGlzLnRhYmxlLnJvd3Nbcm93SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBpbmZvUm93ID0gdGhpcy5pbmRleFRhYmxlW3Jvd0luZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY29sc051bSA9IHRoaXMuY29sc051bSxcbiAgICAgICAgICAgICAgICAgICAgY291bnQgPSAwOyAvL+WkhOeQhuiuoeaVsFxuICAgICAgICAgICAgICAgIGZvciAodmFyIGNvbEluZGV4ID0gMDsgY29sSW5kZXggPCBjb2xzTnVtOyApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxJbmZvID0gaW5mb1Jvd1tjb2xJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGhpcy5nZXRDZWxsKGNlbGxJbmZvLnJvd0luZGV4LCBjZWxsSW5mby5jZWxsSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbC5yb3dTcGFuID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGxJbmZvLnJvd0luZGV4ID09IHJvd0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNsb25lID0gY2VsbC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmUucm93U3BhbiA9IGNlbGwucm93U3BhbiAtIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmUuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5yb3dTcGFuID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dFJvd0luZGV4ID0gcm93SW5kZXggKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Um93ID0gdGhpcy50YWJsZS5yb3dzW25leHRSb3dJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc2VydENlbGxJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlTWVyZ2VkID0gdGhpcy5nZXRQcmV2aWV3TWVyZ2VkQ2VsbHNOdW0obmV4dFJvd0luZGV4LCBjb2xJbmRleCkgLSBjb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJlTWVyZ2VkIDwgY29sSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0Q2VsbEluZGV4ID0gY29sSW5kZXggLSBwcmVNZXJnZWQgLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL25leHRSb3cuaW5zZXJ0Q2VsbChpbnNlcnRDZWxsSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pbnNlcnRBZnRlcihuZXh0Um93LmNlbGxzW2luc2VydENlbGxJbmRleF0sIGNsb25lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dFJvdy5jZWxscy5sZW5ndGgpIG5leHRSb3cuaW5zZXJ0QmVmb3JlKGNsb25lLCBuZXh0Um93LmNlbGxzWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NlbGwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb2xJbmRleCArPSBjZWxsLmNvbFNwYW4gfHwgMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGRlbGV0ZVRkcyA9IFtdLFxuICAgICAgICAgICAgICAgICAgICBjYWNoZU1hcCA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29sSW5kZXggPSAwOyBjb2xJbmRleCA8IGNvbHNOdW07IGNvbEluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcFJvd0luZGV4ID0gaW5mb1Jvd1tjb2xJbmRleF0ucm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBDZWxsSW5kZXggPSBpbmZvUm93W2NvbEluZGV4XS5jZWxsSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSB0bXBSb3dJbmRleCArICdfJyArIHRtcENlbGxJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlTWFwW2tleV0pIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICBjYWNoZU1hcFtrZXldID0gMTtcbiAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRoaXMuZ2V0Q2VsbCh0bXBSb3dJbmRleCwgdG1wQ2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlVGRzLnB1c2goY2VsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtZXJnZVRkcyA9IFtdO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZGVsZXRlVGRzLCBmdW5jdGlvbiAodGQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRkLnJvd1NwYW4gPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0ZCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZVRkcy5wdXNoKHRkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gobWVyZ2VUZHMsIGZ1bmN0aW9uICh0ZCkge1xuICAgICAgICAgICAgICAgICAgICB0ZC5yb3dTcGFuLS07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcm93LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocm93KTtcbiAgICAgICAgICAgICAgICAvL+a1j+iniOWZqOaWueazleacrOi6q+WtmOWcqGJ1Zyzph4fnlKjoh6rlrprkuYnmlrnms5XliKDpmaRcbiAgICAgICAgICAgICAgICAvL3RoaXMudGFibGUuZGVsZXRlUm93KHJvd0luZGV4KTtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluc2VydENvbDogZnVuY3Rpb24gKGNvbEluZGV4LCBzb3VyY2VDZWxsLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm93c051bSA9IHRoaXMucm93c051bSxcbiAgICAgICAgICAgICAgICAgICAgcm93SW5kZXggPSAwLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZVJvdyxcbiAgICAgICAgICAgICAgICAgICAgY2VsbCxcbiAgICAgICAgICAgICAgICAgICAgYmFja1dpZHRoID0gcGFyc2VJbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy50YWJsZS5vZmZzZXRXaWR0aCAtICh0aGlzLmNvbHNOdW0gKyAxKSAqIDIwIC0gKHRoaXMuY29sc051bSArIDEpKSAvICh0aGlzLmNvbHNOdW0gKyAxKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDEwXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIGlzSW5zZXJ0VGl0bGVDb2wgPSB0eXBlb2Ygc291cmNlQ2VsbCA9PSAnc3RyaW5nJyAmJiBzb3VyY2VDZWxsLnRvVXBwZXJDYXNlKCkgPT0gJ1RIJztcblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJlcGxhY2VUZFRvVGgocm93SW5kZXgsIGNlbGwsIHRhYmxlUm93KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyb3dJbmRleCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGggPSBjZWxsLm5leHRTaWJsaW5nIHx8IGNlbGwucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoLnRhZ05hbWUgPT0gJ1RIJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoID0gY2VsbC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGguYXBwZW5kQ2hpbGQoY2VsbC5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZVJvdy5pbnNlcnRCZWZvcmUodGgsIGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjZWxsLnRhZ05hbWUgPT0gJ1RIJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZCA9IGNlbGwub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkLmFwcGVuZENoaWxkKGNlbGwuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVSb3cuaW5zZXJ0QmVmb3JlKHRkLCBjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgcHJlQ2VsbDtcbiAgICAgICAgICAgICAgICBpZiAoY29sSW5kZXggPT0gMCB8fCBjb2xJbmRleCA9PSB0aGlzLmNvbHNOdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICg7IHJvd0luZGV4IDwgcm93c051bTsgcm93SW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVSb3cgPSB0aGlzLnRhYmxlLnJvd3Nbcm93SW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlQ2VsbCA9IHRhYmxlUm93LmNlbGxzW2NvbEluZGV4ID09IDAgPyBjb2xJbmRleCA6IHRhYmxlUm93LmNlbGxzLmxlbmd0aF07XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGhpcy5jbG9uZUNlbGwoc291cmNlQ2VsbCwgdHJ1ZSk7IC8vdGFibGVSb3cuaW5zZXJ0Q2VsbChjb2xJbmRleCA9PSAwID8gY29sSW5kZXggOiB0YWJsZVJvdy5jZWxscy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDZWxsQ29udGVudChjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJlQ2VsbCAmJiBjZWxsLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBwcmVDZWxsLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVSb3cuaW5zZXJ0QmVmb3JlKGNlbGwsIHRhYmxlUm93LmNlbGxzWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaW5zZXJ0QWZ0ZXIodGFibGVSb3cuY2VsbHNbdGFibGVSb3cuY2VsbHMubGVuZ3RoIC0gMV0sIGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc0luc2VydFRpdGxlQ29sKSByZXBsYWNlVGRUb1RoKHJvd0luZGV4LCBjZWxsLCB0YWJsZVJvdyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKDsgcm93SW5kZXggPCByb3dzTnVtOyByb3dJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmluZGV4VGFibGVbcm93SW5kZXhdW2NvbEluZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjZWxsSW5mby5jb2xJbmRleCA8IGNvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRoaXMuZ2V0Q2VsbChjZWxsSW5mby5yb3dJbmRleCwgY2VsbEluZm8uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLmNvbFNwYW4gPSBjZWxsSW5mby5jb2xTcGFuICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVSb3cgPSB0aGlzLnRhYmxlLnJvd3Nbcm93SW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZUNlbGwgPSB0YWJsZVJvdy5jZWxsc1tjZWxsSW5mby5jZWxsSW5kZXhdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRoaXMuY2xvbmVDZWxsKHNvdXJjZUNlbGwsIHRydWUpOyAvL3RhYmxlUm93Lmluc2VydENlbGwoY2VsbEluZm8uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENlbGxDb250ZW50KGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZUNlbGwgJiYgY2VsbC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgcHJlQ2VsbC5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v6Ziy5q2iSUXkuIvmiqXplJlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVDZWxsID8gdGFibGVSb3cuaW5zZXJ0QmVmb3JlKGNlbGwsIHByZUNlbGwpIDogdGFibGVSb3cuYXBwZW5kQ2hpbGQoY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzSW5zZXJ0VGl0bGVDb2wpIHJlcGxhY2VUZFRvVGgocm93SW5kZXgsIGNlbGwsIHRhYmxlUm93KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL+ahhumAieaXtuaPkuWFpeS4jeinpuWPkWNvbnRlbnRjaGFuZ2XvvIzpnIDopoHmiYvliqjmm7TmlrDntKLlvJVcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlV2lkdGgoYmFja1dpZHRoLCBkZWZhdWx0VmFsdWUgfHwgeyB0ZFBhZGRpbmc6IDEwLCB0ZEJvcmRlcjogMSB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1cGRhdGVXaWR0aDogZnVuY3Rpb24gKHdpZHRoLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSB0aGlzLnRhYmxlLFxuICAgICAgICAgICAgICAgICAgICB0bXBXaWR0aCA9IFVFVGFibGUuZ2V0V2lkdGgodGFibGUpIC0gZGVmYXVsdFZhbHVlLnRkUGFkZGluZyAqIDIgLSBkZWZhdWx0VmFsdWUudGRCb3JkZXIgKyB3aWR0aDtcbiAgICAgICAgICAgICAgICBpZiAodG1wV2lkdGggPCB0YWJsZS5vd25lckRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFibGUuc2V0QXR0cmlidXRlKCd3aWR0aCcsIHRtcFdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdGRzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGhpcy50YWJsZSwgJ3RkIHRoJyk7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh0ZHMsIGZ1bmN0aW9uICh0ZCkge1xuICAgICAgICAgICAgICAgICAgICB0ZC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgd2lkdGgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGV0ZUNvbDogZnVuY3Rpb24gKGNvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgdmFyIGluZGV4VGFibGUgPSB0aGlzLmluZGV4VGFibGUsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlUm93cyA9IHRoaXMudGFibGUucm93cyxcbiAgICAgICAgICAgICAgICAgICAgYmFja1RhYmxlV2lkdGggPSB0aGlzLnRhYmxlLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSxcbiAgICAgICAgICAgICAgICAgICAgYmFja1RkV2lkdGggPSAwLFxuICAgICAgICAgICAgICAgICAgICByb3dzTnVtID0gdGhpcy5yb3dzTnVtLFxuICAgICAgICAgICAgICAgICAgICBjYWNoZU1hcCA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHJvd0luZGV4ID0gMDsgcm93SW5kZXggPCByb3dzTnVtOyApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZm9Sb3cgPSBpbmRleFRhYmxlW3Jvd0luZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gaW5mb1Jvd1tjb2xJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBjZWxsSW5mby5yb3dJbmRleCArICdfJyArIGNlbGxJbmZvLmNvbEluZGV4O1xuICAgICAgICAgICAgICAgICAgICAvLyDot7Pov4flt7Lnu4/lpITnkIbov4fnmoRDZWxsXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZU1hcFtrZXldKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVNYXBba2V5XSA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZWxsID0gdGhpcy5nZXRDZWxsKGNlbGxJbmZvLnJvd0luZGV4LCBjZWxsSW5mby5jZWxsSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWJhY2tUZFdpZHRoKSBiYWNrVGRXaWR0aCA9IGNlbGwgJiYgcGFyc2VJbnQoY2VsbC5vZmZzZXRXaWR0aCAvIGNlbGwuY29sU3BhbiwgMTApLnRvRml4ZWQoMCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIOWmguaenENlbGznmoRjb2xTcGFu5aSn5LqOMSwg5bCx5L+u5pS5Y29sU3Bhbiwg5ZCm5YiZ5bCx5Yig5o6J6L+Z5LiqQ2VsbFxuICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbC5jb2xTcGFuID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5jb2xTcGFuLS07XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZVJvd3Nbcm93SW5kZXhdLmRlbGV0ZUNlbGwoY2VsbEluZm8uY2VsbEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByb3dJbmRleCArPSBjZWxsSW5mby5yb3dTcGFuIHx8IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudGFibGUuc2V0QXR0cmlidXRlKCd3aWR0aCcsIGJhY2tUYWJsZVdpZHRoIC0gYmFja1RkV2lkdGgpO1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3BsaXRUb0NlbGxzOiBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIGNlbGxzID0gdGhpcy5zcGxpdFRvUm93cyhjZWxsKTtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5zcGxpdFRvQ29scyhjZWxsKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzcGxpdFRvUm93czogZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICByb3dJbmRleCA9IGNlbGxJbmZvLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICBjb2xJbmRleCA9IGNlbGxJbmZvLmNvbEluZGV4LFxuICAgICAgICAgICAgICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgICAgICAgICAgLy8g5L+u5pS5Q2VsbOeahHJvd1NwYW5cbiAgICAgICAgICAgICAgICBjZWxsLnJvd1NwYW4gPSAxO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChjZWxsKTtcbiAgICAgICAgICAgICAgICAvLyDooaXpvZDljZXlhYPmoLxcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gcm93SW5kZXgsIGVuZFJvdyA9IHJvd0luZGV4ICsgY2VsbEluZm8ucm93U3BhbjsgaSA8IGVuZFJvdzsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpID09IHJvd0luZGV4KSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRhYmxlUm93ID0gdGhpcy50YWJsZS5yb3dzW2ldLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wQ2VsbCA9IHRhYmxlUm93Lmluc2VydENlbGwoY29sSW5kZXggLSB0aGlzLmdldFByZXZpZXdNZXJnZWRDZWxsc051bShpLCBjb2xJbmRleCkpO1xuICAgICAgICAgICAgICAgICAgICB0bXBDZWxsLmNvbFNwYW4gPSBjZWxsSW5mby5jb2xTcGFuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENlbGxDb250ZW50KHRtcENlbGwpO1xuICAgICAgICAgICAgICAgICAgICB0bXBDZWxsLnNldEF0dHJpYnV0ZSgndkFsaWduJywgY2VsbC5nZXRBdHRyaWJ1dGUoJ3ZBbGlnbicpKTtcbiAgICAgICAgICAgICAgICAgICAgdG1wQ2VsbC5zZXRBdHRyaWJ1dGUoJ2FsaWduJywgY2VsbC5nZXRBdHRyaWJ1dGUoJ2FsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbC5zdHlsZS5jc3NUZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0bXBDZWxsLnN0eWxlLmNzc1RleHQgPSBjZWxsLnN0eWxlLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRtcENlbGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFByZXZpZXdNZXJnZWRDZWxsc051bTogZnVuY3Rpb24gKHJvd0luZGV4LCBjb2xJbmRleCkge1xuICAgICAgICAgICAgICAgIHZhciBpbmRleFJvdyA9IHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIG51bSA9IDA7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2xJbmRleDsgKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb2xTcGFuID0gaW5kZXhSb3dbaV0uY29sU3BhbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcFJvd0luZGV4ID0gaW5kZXhSb3dbaV0ucm93SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIG51bSArPSBjb2xTcGFuIC0gKHRtcFJvd0luZGV4ID09IHJvd0luZGV4ID8gMSA6IDApO1xuICAgICAgICAgICAgICAgICAgICBpICs9IGNvbFNwYW47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBudW07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3BsaXRUb0NvbHM6IGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJhY2tXaWR0aCA9IChjZWxsLm9mZnNldFdpZHRoIC8gY2VsbC5jb2xTcGFuIC0gMjIpLnRvRml4ZWQoMCksXG4gICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gdGhpcy5nZXRDZWxsSW5mbyhjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgcm93SW5kZXggPSBjZWxsSW5mby5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgY29sSW5kZXggPSBjZWxsSW5mby5jb2xJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgICAgICAgIC8vIOS/ruaUuUNlbGznmoRyb3dTcGFuXG4gICAgICAgICAgICAgICAgY2VsbC5jb2xTcGFuID0gMTtcbiAgICAgICAgICAgICAgICBjZWxsLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBiYWNrV2lkdGgpO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChjZWxsKTtcbiAgICAgICAgICAgICAgICAvLyDooaXpvZDljZXlhYPmoLxcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gY29sSW5kZXgsIGVuZENvbCA9IGNvbEluZGV4ICsgY2VsbEluZm8uY29sU3BhbjsgaiA8IGVuZENvbDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChqID09IGNvbEluZGV4KSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRhYmxlUm93ID0gdGhpcy50YWJsZS5yb3dzW3Jvd0luZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcENlbGwgPSB0YWJsZVJvdy5pbnNlcnRDZWxsKHRoaXMuaW5kZXhUYWJsZVtyb3dJbmRleF1bal0uY2VsbEluZGV4ICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIHRtcENlbGwucm93U3BhbiA9IGNlbGxJbmZvLnJvd1NwYW47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q2VsbENvbnRlbnQodG1wQ2VsbCk7XG4gICAgICAgICAgICAgICAgICAgIHRtcENlbGwuc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICB0bXBDZWxsLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgnYWxpZ24nKSk7XG4gICAgICAgICAgICAgICAgICAgIHRtcENlbGwuc2V0QXR0cmlidXRlKCd3aWR0aCcsIGJhY2tXaWR0aCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsLnN0eWxlLmNzc1RleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRtcENlbGwuc3R5bGUuY3NzVGV4dCA9IGNlbGwuc3R5bGUuY3NzVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL+WkhOeQhnRo55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsLnRhZ05hbWUgPT0gJ1RIJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRoID0gY2VsbC5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aC5hcHBlbmRDaGlsZCh0bXBDZWxsLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGguc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjZWxsLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGgucm93U3BhbiA9IHRtcENlbGwucm93U3BhbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlUm93Lmluc2VydEJlZm9yZSh0aCwgdG1wQ2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wQ2VsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRtcENlbGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzTGFzdENlbGw6IGZ1bmN0aW9uIChjZWxsLCByb3dzTnVtLCBjb2xzTnVtKSB7XG4gICAgICAgICAgICAgICAgcm93c051bSA9IHJvd3NOdW0gfHwgdGhpcy5yb3dzTnVtO1xuICAgICAgICAgICAgICAgIGNvbHNOdW0gPSBjb2xzTnVtIHx8IHRoaXMuY29sc051bTtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGwpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvLnJvd0luZGV4ICsgY2VsbEluZm8ucm93U3BhbiA9PSByb3dzTnVtICYmIGNlbGxJbmZvLmNvbEluZGV4ICsgY2VsbEluZm8uY29sU3BhbiA9PSBjb2xzTnVtXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRMYXN0Q2VsbDogZnVuY3Rpb24gKGNlbGxzKSB7XG4gICAgICAgICAgICAgICAgY2VsbHMgPSBjZWxscyB8fCB0aGlzLnRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpO1xuICAgICAgICAgICAgICAgIHZhciBmaXJzdEluZm8gPSB0aGlzLmdldENlbGxJbmZvKGNlbGxzWzBdKTtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBsYXN0ID0gY2VsbHNbMF0sXG4gICAgICAgICAgICAgICAgICAgIHRyID0gbGFzdC5wYXJlbnROb2RlLFxuICAgICAgICAgICAgICAgICAgICBjZWxsc051bSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIGNvbHMgPSAwLFxuICAgICAgICAgICAgICAgICAgICByb3dzO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsLnBhcmVudE5vZGUgPT0gdHIpIGNvbHMgKz0gY2VsbC5jb2xTcGFuIHx8IDE7XG4gICAgICAgICAgICAgICAgICAgIGNlbGxzTnVtICs9IGNlbGwucm93U3BhbiAqIGNlbGwuY29sU3BhbiB8fCAxO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJvd3MgPSBjZWxsc051bSAvIGNvbHM7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmlzTGFzdENlbGwoY2VsbCwgcm93cywgY29scykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3QgPSBjZWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhc3Q7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0Um93OiBmdW5jdGlvbiAocm93SW5kZXgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5kZXhSb3cgPSB0aGlzLmluZGV4VGFibGVbcm93SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHRoaXMuZ2V0Q2VsbChpbmRleFJvd1swXS5yb3dJbmRleCwgaW5kZXhSb3dbMF0uY2VsbEluZGV4KSxcbiAgICAgICAgICAgICAgICAgICAgZW5kID0gdGhpcy5nZXRDZWxsKGluZGV4Um93W3RoaXMuY29sc051bSAtIDFdLnJvd0luZGV4LCBpbmRleFJvd1t0aGlzLmNvbHNOdW0gLSAxXS5jZWxsSW5kZXgpLFxuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IHRoaXMuZ2V0Q2VsbHNSYW5nZShzdGFydCwgZW5kKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFNlbGVjdGVkKHJhbmdlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZWxlY3RUYWJsZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0ZHMgPSB0aGlzLnRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpLFxuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IHRoaXMuZ2V0Q2VsbHNSYW5nZSh0ZHNbMF0sIHRkc1t0ZHMubGVuZ3RoIC0gMV0pO1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U2VsZWN0ZWQocmFuZ2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldEJhY2tncm91bmQ6IGZ1bmN0aW9uIChjZWxscywgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdXRpbHMuZXh0ZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcGVhdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvckxpc3Q6IFsnI2RkZCcsICcjZmZmJ11cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcm93SW5kZXggPSB0aGlzLmdldENlbGxJbmZvKGNlbGxzWzBdKS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9ycyA9IHZhbHVlLmNvbG9yTGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldENvbG9yID0gZnVuY3Rpb24gKGxpc3QsIGluZGV4LCByZXBlYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbGlzdFtpbmRleF0gPyBsaXN0W2luZGV4XSA6IHJlcGVhdCA/IGxpc3RbaW5kZXggJSBsaXN0Lmxlbmd0aF0gOiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjZWxsOyAoY2VsbCA9IGNlbGxzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjZWxsSW5mbyA9IHRoaXMuZ2V0Q2VsbEluZm8oY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGdldENvbG9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9ycyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3dJbmRleCArIGNvdW50ID09IGNlbGxJbmZvLnJvd0luZGV4ID8gY291bnQgOiArK2NvdW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlLnJlcGVhdFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW1vdmVCYWNrZ3JvdW5kOiBmdW5jdGlvbiAoY2VsbHMpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICBjZWxsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBmdW5jdGlvbiBzaG93RXJyb3IoZSkge31cbiAgICB9KSgpO1xuXG4gICAgLy8gcGx1Z2lucy90YWJsZS5jbWRzLmpzXG4gICAgLyoqXG4gICAgICogQ3JlYXRlZCB3aXRoIEpldEJyYWlucyBQaHBTdG9ybS5cbiAgICAgKiBVc2VyOiB0YW9xaWxpXG4gICAgICogRGF0ZTogMTMtMi0yMFxuICAgICAqIFRpbWU6IOS4i+WNiDY6MjVcbiAgICAgKiBUbyBjaGFuZ2UgdGhpcyB0ZW1wbGF0ZSB1c2UgRmlsZSB8IFNldHRpbmdzIHwgRmlsZSBUZW1wbGF0ZXMuXG4gICAgICovXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIFVUID0gVUUuVUVUYWJsZSxcbiAgICAgICAgICAgIGdldFRhYmxlSXRlbXNCeVJhbmdlID0gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC5nZXRUYWJsZUl0ZW1zQnlSYW5nZShlZGl0b3IpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFVFVGFibGVCeVNlbGVjdGVkID0gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC5nZXRVRVRhYmxlQnlTZWxlY3RlZChlZGl0b3IpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldERlZmF1bHRWYWx1ZSA9IGZ1bmN0aW9uIChlZGl0b3IsIHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFVULmdldERlZmF1bHRWYWx1ZShlZGl0b3IsIHRhYmxlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRVRVRhYmxlID0gZnVuY3Rpb24gKHRkT3JUYWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC5nZXRVRVRhYmxlKHRkT3JUYWJsZSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnR0YWJsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGUgPyAtMSA6IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIG9wdCkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVRhYmxlKG9wdCwgdGRXaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm93c051bSA9IG9wdC5udW1Sb3dzLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sc051bSA9IG9wdC5udW1Db2xzO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciByID0gMDsgciA8IHJvd3NOdW07IHIrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbC5wdXNoKCc8dHInICsgKHIgPT0gMCA/ICcgY2xhc3M9XCJmaXJzdFJvd1wiJyA6ICcnKSArICc+Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBjID0gMDsgYyA8IGNvbHNOdW07IGMrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwucHVzaChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzx0ZCB3aWR0aD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGRXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCIgIHZBbGlnbj1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0LnRkdmFsaWduICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiA+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPCAxMSA/IGRvbVV0aWxzLmZpbGxDaGFyIDogJzxici8+JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvdGQ+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sLnB1c2goJzwvdHI+Jyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy/npoHmraLmjIflrpp0YWJsZS13aWR0aFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzx0YWJsZT48dGJvZHk+JyArIGh0bWwuam9pbignJykgKyAnPC90Ym9keT48L3RhYmxlPic7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKCFvcHQpIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0gdXRpbHMuZXh0ZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAge30sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtQ29sczogdGhpcy5vcHRpb25zLmRlZmF1bHRDb2xzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bVJvd3M6IHRoaXMub3B0aW9ucy5kZWZhdWx0Um93cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZHZhbGlnbjogdGhpcy5vcHRpb25zLnRkdmFsaWduXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSByYW5nZS5zdGFydENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICAgICAgZmlyc3RQYXJlbnRCbG9jayA9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maW5kUGFyZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5pc0Jsb2NrRWxtKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKSB8fCBtZS5ib2R5O1xuXG4gICAgICAgICAgICAgICAgdmFyIGRlZmF1bHRWYWx1ZSA9IGdldERlZmF1bHRWYWx1ZShtZSksXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlV2lkdGggPSBmaXJzdFBhcmVudEJsb2NrLm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICB0ZFdpZHRoID0gTWF0aC5mbG9vcih0YWJsZVdpZHRoIC8gb3B0Lm51bUNvbHMgLSBkZWZhdWx0VmFsdWUudGRQYWRkaW5nICogMiAtIGRlZmF1bHRWYWx1ZS50ZEJvcmRlcik7XG5cbiAgICAgICAgICAgICAgICAvL3RvZG/lhbbku5blsZ7mgKdcbiAgICAgICAgICAgICAgICAhb3B0LnRkdmFsaWduICYmIChvcHQudGR2YWxpZ24gPSBtZS5vcHRpb25zLnRkdmFsaWduKTtcbiAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0aHRtbCcsIGNyZWF0ZVRhYmxlKG9wdCwgdGRXaWR0aCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnRwYXJhZ3JhcGhiZWZvcmV0YWJsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykuY2VsbCA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLnRhYmxlO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IHRoaXMuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICAgICAgICAgICAgICBwLmlubmVySFRNTCA9IGJyb3dzZXIuaWUgPyAnJm5ic3A7JyA6ICc8YnIgLz4nO1xuICAgICAgICAgICAgICAgICAgICB0YWJsZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCB0YWJsZSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCkuc2V0U3RhcnQocCwgMCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIFVFLmNvbW1hbmRzWydkZWxldGV0YWJsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICd0YWJsZScsIHRydWUpID8gMCA6IC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCB0YWJsZSkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIHRhYmxlID0gdGFibGUgfHwgZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICd0YWJsZScsIHRydWUpO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dCA9IHRhYmxlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5leHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBkb21VdGlscy5jcmVhdGVFbGVtZW50KHRoaXMuZG9jdW1lbnQsICdwJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlubmVySFRNTDogYnJvd3Nlci5pZSA/IGRvbVV0aWxzLmZpbGxDaGFyIDogJzxici8+J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXh0LCB0YWJsZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHQubm9kZVR5cGUgPT0gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0QmVmb3JlKG5leHQpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KG5leHQsIDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJuZy5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgndGFibGVoYXNkZWxldGVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBVRS5jb21tYW5kc1snY2VsbGFsaWduJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRTZWxlY3RlZEFycih0aGlzKS5sZW5ndGggPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIGFsaWduKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkVGRzID0gZ2V0U2VsZWN0ZWRBcnIodGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkVGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHNlbGVjdGVkVGRzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCBhbGlnbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydjZWxsdmFsaWduJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRTZWxlY3RlZEFycih0aGlzKS5sZW5ndGggPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIHZhbGlnbikge1xuICAgICAgICAgICAgICAgIHZhciBzZWxlY3RlZFRkcyA9IGdldFNlbGVjdGVkQXJyKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBzZWxlY3RlZFRkc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaS5zZXRBdHRyaWJ1dGUoJ3ZBbGlnbicsIHZhbGlnbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnRjYXB0aW9uJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLnRhYmxlO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2NhcHRpb24nKS5sZW5ndGggPT0gMCA/IDEgOiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjYXB0aW9uID0gdGhpcy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYXB0aW9uJyk7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb24uaW5uZXJIVE1MID0gYnJvd3Nlci5pZSA/IGRvbVV0aWxzLmZpbGxDaGFyIDogJzxici8+JztcbiAgICAgICAgICAgICAgICAgICAgdGFibGUuaW5zZXJ0QmVmb3JlKGNhcHRpb24sIHRhYmxlLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChjYXB0aW9uLCAwKS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydkZWxldGVjYXB0aW9uJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCAndGFibGUnKTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYXB0aW9uJykubGVuZ3RoID09IDAgPyAtMSA6IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCAndGFibGUnKTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYXB0aW9uJylbMF0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydCh0YWJsZS5yb3dzWzBdLmNlbGxzWzBdLCAwKS5zZXRDdXJzb3IoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnR0aXRsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0Um93ID0gdGFibGUucm93c1swXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZpcnN0Um93LmNlbGxzW2ZpcnN0Um93LmNlbGxzLmxlbmd0aCAtIDFdLnRhZ05hbWUudG9Mb3dlckNhc2UoKSAhPSAndGgnID8gMCA6IC0xO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0VUVUYWJsZSh0YWJsZSkuaW5zZXJ0Um93KDAsICd0aCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgdGggPSB0YWJsZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGgnKVswXTtcbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnNldFN0YXJ0KHRoLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBVRS5jb21tYW5kc1snZGVsZXRldGl0bGUnXSA9IHtcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmaXJzdFJvdyA9IHRhYmxlLnJvd3NbMF07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmaXJzdFJvdy5jZWxsc1tmaXJzdFJvdy5jZWxscy5sZW5ndGggLSAxXS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ3RoJyA/IDAgOiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0YWJsZS5yb3dzWzBdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHRkID0gdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RkJylbMF07XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5zZXRTdGFydCh0ZCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ2luc2VydHRpdGxlY29sJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLnRhYmxlO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdFJvdyA9IHRhYmxlLnJvd3NbdGFibGUucm93cy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhc3RSb3cuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RoJykubGVuZ3RoID8gLTEgOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZ2V0VUVUYWJsZSh0YWJsZSkuaW5zZXJ0Q29sKDAsICd0aCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNldFRkV2lkdGgodGFibGUsIHRoaXMpO1xuICAgICAgICAgICAgICAgIHZhciB0aCA9IHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0aCcpWzBdO1xuICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCkuc2V0U3RhcnQodGgsIDApLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydkZWxldGV0aXRsZWNvbCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RSb3cgPSB0YWJsZS5yb3dzW3RhYmxlLnJvd3MubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBsYXN0Um93LmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0aCcpLmxlbmd0aCA/IDAgOiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGFibGUucm93cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRhYmxlLnJvd3NbaV0uY2hpbGRyZW5bMF0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc2V0VGRXaWR0aCh0YWJsZSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgdmFyIHRkID0gdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RkJylbMF07XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5zZXRTdGFydCh0ZCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBVRS5jb21tYW5kc1snbWVyZ2VyaWdodCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IHRhYmxlSXRlbXMudGFibGUsXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRhYmxlIHx8ICFjZWxsKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgdmFyIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZSk7XG4gICAgICAgICAgICAgICAgaWYgKHV0LnNlbGVjdGVkVGRzLmxlbmd0aCkgcmV0dXJuIC0xO1xuXG4gICAgICAgICAgICAgICAgdmFyIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8oY2VsbCksXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0Q29sSW5kZXggPSBjZWxsSW5mby5jb2xJbmRleCArIGNlbGxJbmZvLmNvbFNwYW47XG4gICAgICAgICAgICAgICAgaWYgKHJpZ2h0Q29sSW5kZXggPj0gdXQuY29sc051bSkgcmV0dXJuIC0xOyAvLyDlpoLmnpzlpITkuo7mnIDlj7PovrnliJnkuI3og73lkJHlj7PlkIjlubZcblxuICAgICAgICAgICAgICAgIHZhciByaWdodENlbGxJbmZvID0gdXQuaW5kZXhUYWJsZVtjZWxsSW5mby5yb3dJbmRleF1bcmlnaHRDb2xJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0Q2VsbCA9IHRhYmxlLnJvd3NbcmlnaHRDZWxsSW5mby5yb3dJbmRleF0uY2VsbHNbcmlnaHRDZWxsSW5mby5jZWxsSW5kZXhdO1xuICAgICAgICAgICAgICAgIGlmICghcmlnaHRDZWxsIHx8IGNlbGwudGFnTmFtZSAhPSByaWdodENlbGwudGFnTmFtZSkgcmV0dXJuIC0xOyAvLyBUSOWSjFRE5LiN6IO955u45LqS5ZCI5bm2XG5cbiAgICAgICAgICAgICAgICAvLyDlvZPkuJTku4XlvZPkuKTkuKpDZWxs55qE5byA5aeL5YiX5Y+35ZKM57uT5p2f5YiX5Y+35LiA6Ie05pe26IO96L+b6KGM5ZCI5bm2XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJpZ2h0Q2VsbEluZm8ucm93SW5kZXggPT0gY2VsbEluZm8ucm93SW5kZXggJiYgcmlnaHRDZWxsSW5mby5yb3dTcGFuID09IGNlbGxJbmZvLnJvd1NwYW5cbiAgICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICAgIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYmsgPSBybmcuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGwgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS5jZWxsLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGUoY2VsbCk7XG4gICAgICAgICAgICAgICAgdXQubWVyZ2VSaWdodChjZWxsKTtcbiAgICAgICAgICAgICAgICBybmcubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBVRS5jb21tYW5kc1snbWVyZ2Vkb3duJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlID0gdGFibGVJdGVtcy50YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRhYmxlSXRlbXMuY2VsbDtcblxuICAgICAgICAgICAgICAgIGlmICghdGFibGUgfHwgIWNlbGwpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlKHRhYmxlKTtcbiAgICAgICAgICAgICAgICBpZiAodXQuc2VsZWN0ZWRUZHMubGVuZ3RoKSByZXR1cm4gLTE7XG5cbiAgICAgICAgICAgICAgICB2YXIgY2VsbEluZm8gPSB1dC5nZXRDZWxsSW5mbyhjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgZG93blJvd0luZGV4ID0gY2VsbEluZm8ucm93SW5kZXggKyBjZWxsSW5mby5yb3dTcGFuO1xuICAgICAgICAgICAgICAgIGlmIChkb3duUm93SW5kZXggPj0gdXQucm93c051bSkgcmV0dXJuIC0xOyAvLyDlpoLmnpzlpITkuo7mnIDkuIvovrnliJnkuI3og73lkJHkuIvlkIjlubZcblxuICAgICAgICAgICAgICAgIHZhciBkb3duQ2VsbEluZm8gPSB1dC5pbmRleFRhYmxlW2Rvd25Sb3dJbmRleF1bY2VsbEluZm8uY29sSW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBkb3duQ2VsbCA9IHRhYmxlLnJvd3NbZG93bkNlbGxJbmZvLnJvd0luZGV4XS5jZWxsc1tkb3duQ2VsbEluZm8uY2VsbEluZGV4XTtcbiAgICAgICAgICAgICAgICBpZiAoIWRvd25DZWxsIHx8IGNlbGwudGFnTmFtZSAhPSBkb3duQ2VsbC50YWdOYW1lKSByZXR1cm4gLTE7IC8vIFRI5ZKMVETkuI3og73nm7jkupLlkIjlubZcblxuICAgICAgICAgICAgICAgIC8vIOW9k+S4lOS7heW9k+S4pOS4qkNlbGznmoTlvIDlp4vliJflj7flkoznu5PmnZ/liJflj7fkuIDoh7Tml7bog73ov5vooYzlkIjlubZcbiAgICAgICAgICAgICAgICByZXR1cm4gZG93bkNlbGxJbmZvLmNvbEluZGV4ID09IGNlbGxJbmZvLmNvbEluZGV4ICYmIGRvd25DZWxsSW5mby5jb2xTcGFuID09IGNlbGxJbmZvLmNvbFNwYW4gPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYmsgPSBybmcuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGwgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS5jZWxsLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGUoY2VsbCk7XG4gICAgICAgICAgICAgICAgdXQubWVyZ2VEb3duKGNlbGwpO1xuICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydtZXJnZWNlbGxzJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRVRVRhYmxlQnlTZWxlY3RlZCh0aGlzKSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICh1dCAmJiB1dC5zZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGwgPSB1dC5zZWxlY3RlZFRkc1swXTtcbiAgICAgICAgICAgICAgICAgICAgdXQubWVyZ2VSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayhjZWxsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KGNlbGwsIDApLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNlbGVjdE5vZGVDb250ZW50cyhjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBybmcuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBVRS5jb21tYW5kc1snaW5zZXJ0cm93J10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNlbGwgJiZcbiAgICAgICAgICAgICAgICAgICAgKGNlbGwudGFnTmFtZSA9PSAnVEQnIHx8IChjZWxsLnRhZ05hbWUgPT0gJ1RIJyAmJiB0YWJsZUl0ZW1zLnRyICE9PSB0YWJsZUl0ZW1zLnRhYmxlLnJvd3NbMF0pKSAmJlxuICAgICAgICAgICAgICAgICAgICBnZXRVRVRhYmxlKHRhYmxlSXRlbXMudGFibGUpLnJvd3NOdW0gPCB0aGlzLm9wdGlvbnMubWF4Um93TnVtXG4gICAgICAgICAgICAgICAgICAgID8gMFxuICAgICAgICAgICAgICAgICAgICA6IC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJuZyA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIGJrID0gcm5nLmNyZWF0ZUJvb2ttYXJrKHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlID0gdGFibGVJdGVtcy50YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgdXQgPSBnZXRVRVRhYmxlKHRhYmxlKSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8gPSB1dC5nZXRDZWxsSW5mbyhjZWxsKTtcbiAgICAgICAgICAgICAgICAvL3V0Lmluc2VydFJvdyghdXQuc2VsZWN0ZWRUZHMubGVuZ3RoID8gY2VsbEluZm8ucm93SW5kZXg6dXQuY2VsbHNSYW5nZS5iZWdpblJvd0luZGV4LCcnKTtcbiAgICAgICAgICAgICAgICBpZiAoIXV0LnNlbGVjdGVkVGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB1dC5pbnNlcnRSb3coY2VsbEluZm8ucm93SW5kZXgsIGNlbGwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHV0LmNlbGxzUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYW5nZS5lbmRSb3dJbmRleCAtIHJhbmdlLmJlZ2luUm93SW5kZXggKyAxOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0Lmluc2VydFJvdyhyYW5nZS5iZWdpblJvd0luZGV4LCBjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBybmcubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZS5nZXRBdHRyaWJ1dGUoJ2ludGVybGFjZWQnKSA9PT0gJ2VuYWJsZWQnKSB0aGlzLmZpcmVFdmVudCgnaW50ZXJsYWNldGFibGUnLCB0YWJsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8v5ZCO5o+S5YWl6KGMXG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnRyb3duZXh0J10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNlbGwgJiYgY2VsbC50YWdOYW1lID09ICdURCcgJiYgZ2V0VUVUYWJsZSh0YWJsZUl0ZW1zLnRhYmxlKS5yb3dzTnVtIDwgdGhpcy5vcHRpb25zLm1heFJvd051bVxuICAgICAgICAgICAgICAgICAgICA/IDBcbiAgICAgICAgICAgICAgICAgICAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBiayA9IHJuZy5jcmVhdGVCb29rbWFyayh0cnVlKTtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGFibGVJdGVtcy5jZWxsLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IHRhYmxlSXRlbXMudGFibGUsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZSksXG4gICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8oY2VsbCk7XG4gICAgICAgICAgICAgICAgLy91dC5pbnNlcnRSb3coIXV0LnNlbGVjdGVkVGRzLmxlbmd0aD8gY2VsbEluZm8ucm93SW5kZXggKyBjZWxsSW5mby5yb3dTcGFuIDogdXQuY2VsbHNSYW5nZS5lbmRSb3dJbmRleCArIDEsJycpO1xuICAgICAgICAgICAgICAgIGlmICghdXQuc2VsZWN0ZWRUZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHV0Lmluc2VydFJvdyhjZWxsSW5mby5yb3dJbmRleCArIGNlbGxJbmZvLnJvd1NwYW4sIGNlbGwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHV0LmNlbGxzUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYW5nZS5lbmRSb3dJbmRleCAtIHJhbmdlLmJlZ2luUm93SW5kZXggKyAxOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0Lmluc2VydFJvdyhyYW5nZS5lbmRSb3dJbmRleCArIDEsIGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlLmdldEF0dHJpYnV0ZSgnaW50ZXJsYWNlZCcpID09PSAnZW5hYmxlZCcpIHRoaXMuZmlyZUV2ZW50KCdpbnRlcmxhY2V0YWJsZScsIHRhYmxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ2RlbGV0ZXJvdyddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0YWJsZUl0ZW1zLmNlbGwgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZShjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbHNSYW5nZSA9IHV0LmNlbGxzUmFuZ2UsXG4gICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8oY2VsbCksXG4gICAgICAgICAgICAgICAgICAgIHByZUNlbGwgPSB1dC5nZXRWU2lkZUNlbGwoY2VsbCksXG4gICAgICAgICAgICAgICAgICAgIG5leHRDZWxsID0gdXQuZ2V0VlNpZGVDZWxsKGNlbGwsIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIGlmICh1dGlscy5pc0VtcHR5T2JqZWN0KGNlbGxzUmFuZ2UpKSB7XG4gICAgICAgICAgICAgICAgICAgIHV0LmRlbGV0ZVJvdyhjZWxsSW5mby5yb3dJbmRleCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IGNlbGxzUmFuZ2UuYmVnaW5Sb3dJbmRleDsgaSA8IGNlbGxzUmFuZ2UuZW5kUm93SW5kZXggKyAxOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0LmRlbGV0ZVJvdyhjZWxsc1JhbmdlLmJlZ2luUm93SW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IHV0LnRhYmxlO1xuICAgICAgICAgICAgICAgIGlmICghdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RkJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXh0U2libGluZyA9IHRhYmxlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodGFibGUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV4dFNpYmxpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydChuZXh0U2libGluZywgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvLnJvd1NwYW4gPT0gMSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8ucm93U3BhbiA9PSBjZWxsc1JhbmdlLmVuZFJvd0luZGV4IC0gY2VsbHNSYW5nZS5iZWdpblJvd0luZGV4ICsgMVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0Q2VsbCB8fCBwcmVDZWxsKSBybmcuc2VsZWN0Tm9kZUNvbnRlbnRzKG5leHRDZWxsIHx8IHByZUNlbGwpLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Q2VsbCA9IHV0LmdldENlbGwoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8ucm93SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQuaW5kZXhUYWJsZVtjZWxsSW5mby5yb3dJbmRleF1bY2VsbEluZm8uY29sSW5kZXhdLmNlbGxJbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdDZWxsKSBybmcuc2VsZWN0Tm9kZUNvbnRlbnRzKG5ld0NlbGwpLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlLmdldEF0dHJpYnV0ZSgnaW50ZXJsYWNlZCcpID09PSAnZW5hYmxlZCcpIHRoaXMuZmlyZUV2ZW50KCdpbnRlcmxhY2V0YWJsZScsIHRhYmxlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ2luc2VydGNvbCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGFibGVJdGVtcy5jZWxsO1xuICAgICAgICAgICAgICAgIHJldHVybiBjZWxsICYmXG4gICAgICAgICAgICAgICAgICAgIChjZWxsLnRhZ05hbWUgPT0gJ1REJyB8fCAoY2VsbC50YWdOYW1lID09ICdUSCcgJiYgY2VsbCAhPT0gdGFibGVJdGVtcy50ci5jZWxsc1swXSkpICYmXG4gICAgICAgICAgICAgICAgICAgIGdldFVFVGFibGUodGFibGVJdGVtcy50YWJsZSkuY29sc051bSA8IHRoaXMub3B0aW9ucy5tYXhDb2xOdW1cbiAgICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICAgIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYmsgPSBybmcuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucXVlcnlDb21tYW5kU3RhdGUoY21kKSA9PSAtMSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHZhciBjZWxsID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykuY2VsbCxcbiAgICAgICAgICAgICAgICAgICAgdXQgPSBnZXRVRVRhYmxlKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICBjZWxsSW5mbyA9IHV0LmdldENlbGxJbmZvKGNlbGwpO1xuXG4gICAgICAgICAgICAgICAgLy91dC5pbnNlcnRDb2woIXV0LnNlbGVjdGVkVGRzLmxlbmd0aCA/IGNlbGxJbmZvLmNvbEluZGV4OnV0LmNlbGxzUmFuZ2UuYmVnaW5Db2xJbmRleCk7XG4gICAgICAgICAgICAgICAgaWYgKCF1dC5zZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdXQuaW5zZXJ0Q29sKGNlbGxJbmZvLmNvbEluZGV4LCBjZWxsKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSB1dC5jZWxsc1JhbmdlO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcmFuZ2UuZW5kQ29sSW5kZXggLSByYW5nZS5iZWdpbkNvbEluZGV4ICsgMTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dC5pbnNlcnRDb2wocmFuZ2UuYmVnaW5Db2xJbmRleCwgY2VsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcm5nLm1vdmVUb0Jvb2ttYXJrKGJrKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydpbnNlcnRjb2xuZXh0J10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNlbGwgJiYgZ2V0VUVUYWJsZSh0YWJsZUl0ZW1zLnRhYmxlKS5jb2xzTnVtIDwgdGhpcy5vcHRpb25zLm1heENvbE51bSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBiayA9IHJuZy5jcmVhdGVCb29rbWFyayh0cnVlKTtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZShjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8gPSB1dC5nZXRDZWxsSW5mbyhjZWxsKTtcbiAgICAgICAgICAgICAgICAvL3V0Lmluc2VydENvbCghdXQuc2VsZWN0ZWRUZHMubGVuZ3RoID8gY2VsbEluZm8uY29sSW5kZXggKyBjZWxsSW5mby5jb2xTcGFuOnV0LmNlbGxzUmFuZ2UuZW5kQ29sSW5kZXggKzEpO1xuICAgICAgICAgICAgICAgIGlmICghdXQuc2VsZWN0ZWRUZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHV0Lmluc2VydENvbChjZWxsSW5mby5jb2xJbmRleCArIGNlbGxJbmZvLmNvbFNwYW4sIGNlbGwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHV0LmNlbGxzUmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYW5nZS5lbmRDb2xJbmRleCAtIHJhbmdlLmJlZ2luQ29sSW5kZXggKyAxOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0Lmluc2VydENvbChyYW5nZS5lbmRDb2xJbmRleCArIDEsIGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgVUUuY29tbWFuZHNbJ2RlbGV0ZWNvbCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0YWJsZUl0ZW1zLmNlbGwgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZShjZWxsKSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSB1dC5jZWxsc1JhbmdlLFxuICAgICAgICAgICAgICAgICAgICBjZWxsSW5mbyA9IHV0LmdldENlbGxJbmZvKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICBwcmVDZWxsID0gdXQuZ2V0SFNpZGVDZWxsKGNlbGwpLFxuICAgICAgICAgICAgICAgICAgICBuZXh0Q2VsbCA9IHV0LmdldEhTaWRlQ2VsbChjZWxsLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBpZiAodXRpbHMuaXNFbXB0eU9iamVjdChyYW5nZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdXQuZGVsZXRlQ29sKGNlbGxJbmZvLmNvbEluZGV4KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gcmFuZ2UuYmVnaW5Db2xJbmRleDsgaSA8IHJhbmdlLmVuZENvbEluZGV4ICsgMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dC5kZWxldGVDb2wocmFuZ2UuYmVnaW5Db2xJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gdXQudGFibGUsXG4gICAgICAgICAgICAgICAgICAgIHJuZyA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dFNpYmxpbmcgPSB0YWJsZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnQobmV4dFNpYmxpbmcsIDApLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaW5Eb2MoY2VsbCwgdGhpcy5kb2N1bWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydChjZWxsLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5leHRDZWxsICYmIGRvbVV0aWxzLmluRG9jKG5leHRDZWxsLCB0aGlzLmRvY3VtZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3ROb2RlQ29udGVudHMobmV4dENlbGwpLnNldEN1cnNvcihmYWxzZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmVDZWxsICYmIGRvbVV0aWxzLmluRG9jKHByZUNlbGwsIHRoaXMuZG9jdW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3ROb2RlQ29udGVudHMocHJlQ2VsbCkuc2V0Q3Vyc29yKHRydWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ3NwbGl0dG9jZWxscyddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGVJdGVtcyA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBjZWxsID0gdGFibGVJdGVtcy5jZWxsO1xuICAgICAgICAgICAgICAgIGlmICghY2VsbCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGUodGFibGVJdGVtcy50YWJsZSk7XG4gICAgICAgICAgICAgICAgaWYgKHV0LnNlbGVjdGVkVGRzLmxlbmd0aCA+IDApIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2VsbCAmJiAoY2VsbC5jb2xTcGFuID4gMSB8fCBjZWxsLnJvd1NwYW4gPiAxKSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICBiayA9IHJuZy5jcmVhdGVCb29rbWFyayh0cnVlKTtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZShjZWxsKTtcbiAgICAgICAgICAgICAgICB1dC5zcGxpdFRvQ2VsbHMoY2VsbCk7XG4gICAgICAgICAgICAgICAgcm5nLm1vdmVUb0Jvb2ttYXJrKGJrKS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ3NwbGl0dG9yb3dzJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG4gICAgICAgICAgICAgICAgaWYgKCFjZWxsKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgdmFyIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZUl0ZW1zLnRhYmxlKTtcbiAgICAgICAgICAgICAgICBpZiAodXQuc2VsZWN0ZWRUZHMubGVuZ3RoID4gMCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIHJldHVybiBjZWxsICYmIGNlbGwucm93U3BhbiA+IDEgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYmsgPSBybmcuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGwgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS5jZWxsLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGUoY2VsbCk7XG4gICAgICAgICAgICAgICAgdXQuc3BsaXRUb1Jvd3MoY2VsbCk7XG4gICAgICAgICAgICAgICAgcm5nLm1vdmVUb0Jvb2ttYXJrKGJrKS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgVUUuY29tbWFuZHNbJ3NwbGl0dG9jb2xzJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGw7XG4gICAgICAgICAgICAgICAgaWYgKCFjZWxsKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgdmFyIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZUl0ZW1zLnRhYmxlKTtcbiAgICAgICAgICAgICAgICBpZiAodXQuc2VsZWN0ZWRUZHMubGVuZ3RoID4gMCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIHJldHVybiBjZWxsICYmIGNlbGwuY29sU3BhbiA+IDEgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgYmsgPSBybmcuY3JlYXRlQm9va21hcmsodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGwgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS5jZWxsLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGUoY2VsbCk7XG4gICAgICAgICAgICAgICAgdXQuc3BsaXRUb0NvbHMoY2VsbCk7XG4gICAgICAgICAgICAgICAgcm5nLm1vdmVUb0Jvb2ttYXJrKGJrKS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBVRS5jb21tYW5kc1snYWRhcHRieXRleHQnXSA9IFVFLmNvbW1hbmRzWydhZGFwdGJ5d2luZG93J10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZUl0ZW1zID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlID0gdGFibGVJdGVtcy50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNtZCA9PSAnYWRhcHRieXdpbmRvdycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0VGRXaWR0aCh0YWJsZSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbHMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWJsZSwgJ3RkIHRoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNlbGxzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwucmVtb3ZlQXR0cmlidXRlKCd3aWR0aCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS5yZW1vdmVBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy/lubPlnYfliIbphY3lkITliJdcbiAgICAgICAgVUUuY29tbWFuZHNbJ2F2ZXJhZ2VkaXN0cmlidXRlY29sJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICghdXQpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXQuaXNGdWxsUm93KCkgfHwgdXQuaXNGdWxsQ29sKCkgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldEF2ZXJhZ2VXaWR0aCgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRiID0gdXQudGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdmVyYWdlV2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdW1XaWR0aCA9IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xzTnVtID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRiQXR0ciA9IGdldERlZmF1bHRWYWx1ZShtZSwgdGIpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh1dC5pc0Z1bGxSb3coKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VtV2lkdGggPSB0Yi5vZmZzZXRXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHNOdW0gPSB1dC5jb2xzTnVtO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJlZ2luID0gdXQuY2VsbHNSYW5nZS5iZWdpbkNvbEluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCA9IHV0LmNlbGxzUmFuZ2UuZW5kQ29sSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBiZWdpbjsgaSA8PSBlbmQ7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSB1dC5zZWxlY3RlZFRkc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdW1XaWR0aCArPSBub2RlLm9mZnNldFdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgKz0gbm9kZS5jb2xTcGFuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbHNOdW0gKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhdmVyYWdlV2lkdGggPSBNYXRoLmNlaWwoc3VtV2lkdGggLyBjb2xzTnVtKSAtIHRiQXR0ci50ZEJvcmRlciAqIDIgLSB0YkF0dHIudGRQYWRkaW5nICogMjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF2ZXJhZ2VXaWR0aDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBzZXRBdmVyYWdlV2lkdGgoYXZlcmFnZVdpZHRoKSB7XG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodXQudGFibGUsICd0aCcpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgJycpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxzID0gdXQuaXNGdWxsUm93KCkgPyBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSh1dC50YWJsZSwgJ3RkJykgOiB1dC5zZWxlY3RlZFRkcztcblxuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGNlbGxzLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuY29sU3BhbiA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgYXZlcmFnZVdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHV0ICYmIHV0LnNlbGVjdGVkVGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRBdmVyYWdlV2lkdGgoZ2V0QXZlcmFnZVdpZHRoKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy/lubPlnYfliIbphY3lkITooYxcbiAgICAgICAgVUUuY29tbWFuZHNbJ2F2ZXJhZ2VkaXN0cmlidXRlcm93J10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICghdXQpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICBpZiAodXQuc2VsZWN0ZWRUZHMgJiYgL3RoL2dpLnRlc3QodXQuc2VsZWN0ZWRUZHNbMF0udGFnTmFtZSkpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXQuaXNGdWxsUm93KCkgfHwgdXQuaXNGdWxsQ29sKCkgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldEF2ZXJhZ2VIZWlnaHQoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhdmVyYWdlSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgcm93TnVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VtSGVpZ2h0ID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRiID0gdXQudGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0YkF0dHIgPSBnZXREZWZhdWx0VmFsdWUobWUsIHRiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRkcGFkZGluZyA9IHBhcnNlSW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUodGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RkJylbMF0sICdwYWRkaW5nLXRvcCcpXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh1dC5pc0Z1bGxDb2woKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNhcHRpb25BcnIgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YiwgJ2NhcHRpb24nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aEFyciA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRiLCAndGgnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoSGVpZ2h0O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbkFyci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FwdGlvbkhlaWdodCA9IGNhcHRpb25BcnJbMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoQXJyLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aEhlaWdodCA9IHRoQXJyWzBdLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgc3VtSGVpZ2h0ID0gdGIub2Zmc2V0SGVpZ2h0IC0gKGNhcHRpb25IZWlnaHQgfHwgMCkgLSAodGhIZWlnaHQgfHwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3dOdW0gPSB0aEFyci5sZW5ndGggPT0gMCA/IHV0LnJvd3NOdW0gOiB1dC5yb3dzTnVtIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiZWdpbiA9IHV0LmNlbGxzUmFuZ2UuYmVnaW5Sb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgPSB1dC5jZWxsc1JhbmdlLmVuZFJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YiwgJ3RyJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gYmVnaW47IGkgPD0gZW5kOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdW1IZWlnaHQgKz0gdHJzW2ldLm9mZnNldEhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudCArPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcm93TnVtID0gY291bnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy9pZTjkuIvmmK/mt7fmnYLmqKHlvI9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uIDwgOSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXZlcmFnZUhlaWdodCA9IE1hdGguY2VpbChzdW1IZWlnaHQgLyByb3dOdW0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXZlcmFnZUhlaWdodCA9IE1hdGguY2VpbChzdW1IZWlnaHQgLyByb3dOdW0pIC0gdGJBdHRyLnRkQm9yZGVyICogMiAtIHRkcGFkZGluZyAqIDI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF2ZXJhZ2VIZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gc2V0QXZlcmFnZUhlaWdodChhdmVyYWdlSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IHV0LmlzRnVsbENvbCgpID8gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodXQudGFibGUsICd0ZCcpIDogdXQuc2VsZWN0ZWRUZHM7XG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5yb3dTcGFuID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgYXZlcmFnZUhlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICh1dCAmJiB1dC5zZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QXZlcmFnZUhlaWdodChnZXRBdmVyYWdlSGVpZ2h0KCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvL+WNleWFg+agvOWvuem9kOaWueW8j1xuICAgICAgICBVRS5jb21tYW5kc1snY2VsbGFsaWdubWVudCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGUgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIGRhdGEpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcblxuICAgICAgICAgICAgICAgIGlmICghdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gbWUuc2VsZWN0aW9uLmdldFN0YXJ0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsID0gc3RhcnQgJiYgZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShzdGFydCwgWyd0ZCcsICd0aCcsICdjYXB0aW9uJ10sIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIS9jYXB0aW9uL2dpLnRlc3QoY2VsbC50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhjZWxsLCBkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuc3R5bGUudGV4dEFsaWduID0gZGF0YS5hbGlnbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuc3R5bGUudmVydGljYWxBbGlnbiA9IGRhdGEudkFsaWduO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnNldEN1cnNvcih0cnVlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHV0LnNlbGVjdGVkVGRzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhjZWxsLCBkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICog5p+l6K+i5b2T5YmN54K55Ye755qE5Y2V5YWD5qC855qE5a+56b2Q54q25oCB77yMIOWmguaenOW9k+WJjeW3sue7j+mAieaLqeS6huWkmuS4quWNleWFg+agvO+8jCDliJnkvJrov5Tlm57miYDmnInljZXlhYPmoLznu4/ov4fnu5/kuIDljY/osIPov4flkI7nmoTnirbmgIFcbiAgICAgICAgICAgICAqIEBzZWUgVUUuVUVUYWJsZS5nZXRUYWJsZUNlbGxBbGlnblN0YXRlXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoY21kKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFjdGl2ZU1lbnVDZWxsID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykuY2VsbDtcblxuICAgICAgICAgICAgICAgIGlmICghYWN0aXZlTWVudUNlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZlTWVudUNlbGwgPSBnZXRTZWxlY3RlZEFycih0aGlzKVswXTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoIWFjdGl2ZU1lbnVDZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8v6I635Y+W5ZCM5pe26YCJ5Lit55qE5YW25LuW5Y2V5YWD5qC8XG4gICAgICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IFVFLlVFVGFibGUuZ2V0VUVUYWJsZShhY3RpdmVNZW51Q2VsbCkuc2VsZWN0ZWRUZHM7XG5cbiAgICAgICAgICAgICAgICAgICAgIWNlbGxzLmxlbmd0aCAmJiAoY2VsbHMgPSBhY3RpdmVNZW51Q2VsbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFVFLlVFVGFibGUuZ2V0VGFibGVDZWxsQWxpZ25TdGF0ZShjZWxscyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvL+ihqOagvOWvuem9kOaWueW8j1xuICAgICAgICBVRS5jb21tYW5kc1sndGFibGVhbGlnbm1lbnQnXSA9IHtcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uIDwgOCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IG1lLnNlbGVjdGlvbi5nZXRTdGFydCgpLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IHN0YXJ0ICYmIGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoc3RhcnQsIFsndGFibGUnXSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFibGUuc2V0QXR0cmlidXRlKCdhbGlnbicsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy/ooajmoLzlsZ7mgKdcbiAgICAgICAgVUUuY29tbWFuZHNbJ2VkaXR0YWJsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGUgPyAwIDogLTE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJuZyA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICd0YWJsZScpO1xuICAgICAgICAgICAgICAgIGlmICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYXJyID0gZG9tVXRpbHNcbiAgICAgICAgICAgICAgICAgICAgICAgIC5nZXRFbGVtZW50c0J5VGFnTmFtZSh0YWJsZSwgJ3RkJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGFibGUsICd0aCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhYmxlLCAnY2FwdGlvbicpXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGFyciwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc3R5bGUuYm9yZGVyQ29sb3IgPSBjb2xvcjtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAvL+WNleWFg+agvOWxnuaAp1xuICAgICAgICBVRS5jb21tYW5kc1snZWRpdHRkJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgYmtDb2xvcikge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZUJ5U2VsZWN0ZWQobWUpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF1dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSBzdGFydCAmJiBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCBbJ3RkJywgJ3RoJywgJ2NhcHRpb24nXSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJrQ29sb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHV0LnNlbGVjdGVkVGRzLCBmdW5jdGlvbiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBia0NvbG9yO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgVUUuY29tbWFuZHNbJ3NldHRhYmxlYmFja2dyb3VuZCddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U2VsZWN0ZWRBcnIodGhpcykubGVuZ3RoID4gMSA/IDAgOiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgY2VsbHMsIHV0O1xuICAgICAgICAgICAgICAgIGNlbGxzID0gZ2V0U2VsZWN0ZWRBcnIodGhpcyk7XG4gICAgICAgICAgICAgICAgdXQgPSBnZXRVRVRhYmxlKGNlbGxzWzBdKTtcbiAgICAgICAgICAgICAgICB1dC5zZXRCYWNrZ3JvdW5kKGNlbGxzLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgVUUuY29tbWFuZHNbJ2NsZWFydGFibGViYWNrZ3JvdW5kJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IGdldFNlbGVjdGVkQXJyKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICghY2VsbHMubGVuZ3RoKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNlbGw7IChjZWxsID0gY2VsbHNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgIT09ICcnKSByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGxzID0gZ2V0U2VsZWN0ZWRBcnIodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZShjZWxsc1swXSk7XG4gICAgICAgICAgICAgICAgdXQucmVtb3ZlQmFja2dyb3VuZChjZWxscyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgVUUuY29tbWFuZHNbJ2ludGVybGFjZXRhYmxlJ10gPSBVRS5jb21tYW5kc1sndW5pbnRlcmxhY2V0YWJsZSddID0ge1xuICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICBpZiAoIXRhYmxlKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgdmFyIGludGVybGFjZWQgPSB0YWJsZS5nZXRBdHRyaWJ1dGUoJ2ludGVybGFjZWQnKTtcbiAgICAgICAgICAgICAgICBpZiAoY21kID09ICdpbnRlcmxhY2V0YWJsZScpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9UT0RPIOW+heWumlxuICAgICAgICAgICAgICAgICAgICAvL+aYr+WQpumcgOimgeW+heWumu+8jOWmguaenOiuvue9ru+8jOWImeWRveS7pOWPquiDveWNleasoeaJp+ihjOaIkOWKn++8jOS9huWPjeWwhOWFt+Wkh3RvZ2dsZeaViOaenO+8m+WQpuWImeWPr+S7peimhuebluWJjeasoeWRveS7pO+8jOS9huWPjeWwhOWwhuS4jeWtmOWcqHRvZ2dsZeaViOaenFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW50ZXJsYWNlZCA9PT0gJ2VuYWJsZWQnID8gLTEgOiAwO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhaW50ZXJsYWNlZCB8fCBpbnRlcmxhY2VkID09PSAnZGlzYWJsZWQnID8gLTEgOiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgY2xhc3NMaXN0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKGNtZCA9PSAnaW50ZXJsYWNldGFibGUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhYmxlLnNldEF0dHJpYnV0ZSgnaW50ZXJsYWNlZCcsICdlbmFibGVkJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdpbnRlcmxhY2V0YWJsZScsIHRhYmxlLCBjbGFzc0xpc3QpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhYmxlLnNldEF0dHJpYnV0ZSgnaW50ZXJsYWNlZCcsICdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgndW5pbnRlcmxhY2V0YWJsZScsIHRhYmxlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFVFLmNvbW1hbmRzWydzZXRib3JkZXJ2aXNpYmxlJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLnRhYmxlO1xuICAgICAgICAgICAgICAgIGlmICghdGFibGUpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFRhYmxlSXRlbXNCeVJhbmdlKHRoaXMpLnRhYmxlO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGFibGUsICd0ZCcpLCBmdW5jdGlvbiAodGQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGQuc3R5bGUuYm9yZGVyV2lkdGggPSAnMXB4JztcbiAgICAgICAgICAgICAgICAgICAgdGQuc3R5bGUuYm9yZGVyU3R5bGUgPSAnc29saWQnO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBmdW5jdGlvbiByZXNldFRkV2lkdGgodGFibGUsIGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIHRkcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhYmxlLCAndGQgdGgnKTtcbiAgICAgICAgICAgIHV0aWxzLmVhY2godGRzLCBmdW5jdGlvbiAodGQpIHtcbiAgICAgICAgICAgICAgICB0ZC5yZW1vdmVBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRhYmxlLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBnZXRUYWJsZVdpZHRoKGVkaXRvciwgdHJ1ZSwgZ2V0RGVmYXVsdFZhbHVlKGVkaXRvciwgdGFibGUpKSk7XG4gICAgICAgICAgICB2YXIgdGRzV2lkdGhzID0gW107XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHRkcywgZnVuY3Rpb24gKHRkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRkLmNvbFNwYW4gPT0gMSAmJiB0ZHNXaWR0aHMucHVzaCh0ZC5vZmZzZXRXaWR0aCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh0ZHMsIGZ1bmN0aW9uICh0ZCwgaSkge1xuICAgICAgICAgICAgICAgICAgICB0ZC5jb2xTcGFuID09IDEgJiYgdGQuc2V0QXR0cmlidXRlKCd3aWR0aCcsIHRkc1dpZHRoc1tpXSArICcnKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0VGFibGVXaWR0aChlZGl0b3IsIG5lZWRJRUhhY2ssIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBlZGl0b3IuYm9keTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgYm9keS5vZmZzZXRXaWR0aCAtXG4gICAgICAgICAgICAgICAgKG5lZWRJRUhhY2sgPyBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGJvZHksICdtYXJnaW4tbGVmdCcpLCAxMCkgKiAyIDogMCkgLVxuICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZS50YWJsZUJvcmRlciAqIDIgLVxuICAgICAgICAgICAgICAgIChlZGl0b3Iub3B0aW9ucy5vZmZzZXRXaWR0aCB8fCAwKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFNlbGVjdGVkQXJyKGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIGNlbGwgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZShlZGl0b3IpLmNlbGw7XG4gICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGUoY2VsbCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHV0LnNlbGVjdGVkVGRzLmxlbmd0aCA/IHV0LnNlbGVjdGVkVGRzIDogW2NlbGxdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KSgpO1xuXG4gICAgLy8gcGx1Z2lucy90YWJsZS5hY3Rpb24uanNcbiAgICAvKipcbiAgICAgKiBDcmVhdGVkIHdpdGggSmV0QnJhaW5zIFBocFN0b3JtLlxuICAgICAqIFVzZXI6IHRhb3FpbGlcbiAgICAgKiBEYXRlOiAxMi0xMC0xMlxuICAgICAqIFRpbWU6IOS4iuWNiDEwOjA1XG4gICAgICogVG8gY2hhbmdlIHRoaXMgdGVtcGxhdGUgdXNlIEZpbGUgfCBTZXR0aW5ncyB8IEZpbGUgVGVtcGxhdGVzLlxuICAgICAqL1xuICAgIFVFLnBsdWdpbnNbJ3RhYmxlJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICB0YWJUaW1lciA9IG51bGwsXG4gICAgICAgICAgICAvL+aLluWKqOiuoeaXtuWZqFxuICAgICAgICAgICAgdGFibGVEcmFnVGltZXIgPSBudWxsLFxuICAgICAgICAgICAgLy/lj4zlh7vorqHml7blmahcbiAgICAgICAgICAgIHRhYmxlUmVzaXplVGltZXIgPSBudWxsLFxuICAgICAgICAgICAgLy/ljZXlhYPmoLzmnIDlsI/lrr3luqZcbiAgICAgICAgICAgIGNlbGxNaW5XaWR0aCA9IDUsXG4gICAgICAgICAgICBpc0luUmVzaXplQnVmZmVyID0gZmFsc2UsXG4gICAgICAgICAgICAvL+WNleWFg+agvOi+ueahhuWkp+Wwj1xuICAgICAgICAgICAgY2VsbEJvcmRlcldpZHRoID0gNSxcbiAgICAgICAgICAgIC8v6byg5qCH5YGP56e76Led56a7XG4gICAgICAgICAgICBvZmZzZXRPZlRhYmxlQ2VsbCA9IDEwLFxuICAgICAgICAgICAgLy/orrDlvZXlnKjmnInpmZDml7bpl7TlhoXnmoTngrnlh7vnirbmgIHvvIwg5YWx5pyJM+S4quWPluWAvO+8jCAwLCAxLCAy44CCIDDku6PooajmnKrliJ3lp4vljJbvvIwgMeS7o+ihqOWNleWHu+S6hjHmrKHvvIwy5Luj6KGoMuasoVxuICAgICAgICAgICAgc2luZ2xlQ2xpY2tTdGF0ZSA9IDAsXG4gICAgICAgICAgICB1c2VyQWN0aW9uU3RhdHVzID0gbnVsbCxcbiAgICAgICAgICAgIC8v5Y+M5Ye75YWB6K6455qE5pe26Ze06IyD5Zu0XG4gICAgICAgICAgICBkYmxjbGlja1RpbWUgPSAzNjAsXG4gICAgICAgICAgICBVVCA9IFVFLlVFVGFibGUsXG4gICAgICAgICAgICBnZXRVRVRhYmxlID0gZnVuY3Rpb24gKHRkT3JUYWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC5nZXRVRVRhYmxlKHRkT3JUYWJsZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VUVUYWJsZUJ5U2VsZWN0ZWQgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFVULmdldFVFVGFibGVCeVNlbGVjdGVkKGVkaXRvcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0RGVmYXVsdFZhbHVlID0gZnVuY3Rpb24gKGVkaXRvciwgdGFibGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gVVQuZ2V0RGVmYXVsdFZhbHVlKGVkaXRvciwgdGFibGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbW92ZVNlbGVjdGVkQ2xhc3MgPSBmdW5jdGlvbiAoY2VsbHMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gVVQucmVtb3ZlU2VsZWN0ZWRDbGFzcyhjZWxscyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIHNob3dFcnJvcihlKSB7XG4gICAgICAgICAgICAvLyAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgICBtZS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIG9yZ0dldFRleHQgPSBtZS5zZWxlY3Rpb24uZ2V0VGV4dDtcbiAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXRUZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0ciA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHRhYmxlLnNlbGVjdGVkVGRzLCBmdW5jdGlvbiAodGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ciArPSB0ZFticm93c2VyLmllID8gJ2lubmVyVGV4dCcgOiAndGV4dENvbnRlbnQnXTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdHI7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yZ0dldFRleHQuY2FsbChtZS5zZWxlY3Rpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8v5aSE55CG5ouW5Yqo5Y+K5qGG6YCJ55u45YWz5pa55rOVXG4gICAgICAgIHZhciBzdGFydFRkID0gbnVsbCwgLy/pvKDmoIfmjInkuIvml7bnmoTplJrngrl0ZFxuICAgICAgICAgICAgY3VycmVudFRkID0gbnVsbCwgLy/lvZPliY3pvKDmoIfnu4/ov4fml7bnmoR0ZFxuICAgICAgICAgICAgb25EcmFnID0gJycsIC8v5oyH56S65b2T5YmN5ouW5Yqo54q25oCB77yM5YW25YC85Y+v5Li6XCJcIixcImhcIixcInZcIiAs5YiG5Yir6KGo56S65pyq5ouW5Yqo54q25oCB77yM5qiq5ZCR5ouW5Yqo54q25oCB77yM57q15ZCR5ouW5Yqo54q25oCB77yM55So5LqO6byg5qCH56e75Yqo6L+H56iL5Lit55qE5Yik5patXG4gICAgICAgICAgICBvbkJvcmRlciA9IGZhbHNlLCAvL+ajgOa1i+m8oOagh+aMieS4i+aXtuaYr+WQpuWkhOWcqOWNleWFg+agvOi+uee8mOS9jee9rlxuICAgICAgICAgICAgZHJhZ0J1dHRvbiA9IG51bGwsXG4gICAgICAgICAgICBkcmFnT3ZlciA9IGZhbHNlLFxuICAgICAgICAgICAgZHJhZ0xpbmUgPSBudWxsLCAvL+aooeaLn+eahOaLluWKqOe6v1xuICAgICAgICAgICAgZHJhZ1RkID0gbnVsbDsgLy/lj5HnlJ/mi5bliqjnmoTnm67moId0ZFxuXG4gICAgICAgIHZhciBtb3VzZWRvd24gPSBmYWxzZSxcbiAgICAgICAgICAgIC8vdG9kbyDliKTmlq3mt7fkubHmqKHlvI9cbiAgICAgICAgICAgIG5lZWRJRUhhY2sgPSB0cnVlO1xuXG4gICAgICAgIG1lLnNldE9wdCh7XG4gICAgICAgICAgICBtYXhDb2xOdW06IDIwLFxuICAgICAgICAgICAgbWF4Um93TnVtOiAxMDAsXG4gICAgICAgICAgICBkZWZhdWx0Q29sczogNSxcbiAgICAgICAgICAgIGRlZmF1bHRSb3dzOiA1LFxuICAgICAgICAgICAgdGR2YWxpZ246ICd0b3AnLFxuICAgICAgICAgICAgY3Vyc29ycGF0aDogbWUub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMICsgJ3RoZW1lcy9kZWZhdWx0L2ltYWdlcy9jdXJzb3JfJyxcbiAgICAgICAgICAgIHRhYmxlRHJhZ2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgY2xhc3NMaXN0OiBbJ3VlLXRhYmxlLWludGVybGFjZS1jb2xvci1zaW5nbGUnLCAndWUtdGFibGUtaW50ZXJsYWNlLWNvbG9yLWRvdWJsZSddXG4gICAgICAgIH0pO1xuICAgICAgICBtZS5nZXRVRVRhYmxlID0gZ2V0VUVUYWJsZTtcbiAgICAgICAgdmFyIGNvbW1hbmRzID0ge1xuICAgICAgICAgICAgZGVsZXRldGFibGU6IDEsXG4gICAgICAgICAgICBpbnNlcnR0YWJsZTogMSxcbiAgICAgICAgICAgIGNlbGx2YWxpZ246IDEsXG4gICAgICAgICAgICBpbnNlcnRjYXB0aW9uOiAxLFxuICAgICAgICAgICAgZGVsZXRlY2FwdGlvbjogMSxcbiAgICAgICAgICAgIGluc2VydHRpdGxlOiAxLFxuICAgICAgICAgICAgZGVsZXRldGl0bGU6IDEsXG4gICAgICAgICAgICBtZXJnZXJpZ2h0OiAxLFxuICAgICAgICAgICAgbWVyZ2Vkb3duOiAxLFxuICAgICAgICAgICAgbWVyZ2VjZWxsczogMSxcbiAgICAgICAgICAgIGluc2VydHJvdzogMSxcbiAgICAgICAgICAgIGluc2VydHJvd25leHQ6IDEsXG4gICAgICAgICAgICBkZWxldGVyb3c6IDEsXG4gICAgICAgICAgICBpbnNlcnRjb2w6IDEsXG4gICAgICAgICAgICBpbnNlcnRjb2xuZXh0OiAxLFxuICAgICAgICAgICAgZGVsZXRlY29sOiAxLFxuICAgICAgICAgICAgc3BsaXR0b2NlbGxzOiAxLFxuICAgICAgICAgICAgc3BsaXR0b3Jvd3M6IDEsXG4gICAgICAgICAgICBzcGxpdHRvY29sczogMSxcbiAgICAgICAgICAgIGFkYXB0Ynl0ZXh0OiAxLFxuICAgICAgICAgICAgYWRhcHRieXdpbmRvdzogMSxcbiAgICAgICAgICAgIGFkYXB0YnljdXN0b21lcjogMSxcbiAgICAgICAgICAgIGluc2VydHBhcmFncmFwaDogMSxcbiAgICAgICAgICAgIGluc2VydHBhcmFncmFwaGJlZm9yZXRhYmxlOiAxLFxuICAgICAgICAgICAgYXZlcmFnZWRpc3RyaWJ1dGVjb2w6IDEsXG4gICAgICAgICAgICBhdmVyYWdlZGlzdHJpYnV0ZXJvdzogMVxuICAgICAgICB9O1xuICAgICAgICBtZS5yZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB1dGlscy5jc3NSdWxlKFxuICAgICAgICAgICAgICAgICd0YWJsZScsXG4gICAgICAgICAgICAgICAgLy/pgInkuK3nmoR0ZOS4iueahOagt+W8j1xuICAgICAgICAgICAgICAgICcuc2VsZWN0VGRDbGFzc3tiYWNrZ3JvdW5kLWNvbG9yOiNlZGY1ZmEgIWltcG9ydGFudH0nICtcbiAgICAgICAgICAgICAgICAgICAgJ3RhYmxlLm5vQm9yZGVyVGFibGUgdGQsdGFibGUubm9Cb3JkZXJUYWJsZSB0aCx0YWJsZS5ub0JvcmRlclRhYmxlIGNhcHRpb257Ym9yZGVyOjFweCBkYXNoZWQgI2RkZCAhaW1wb3J0YW50fScgK1xuICAgICAgICAgICAgICAgICAgICAvL+aPkuWFpeeahOihqOagvOeahOm7mOiupOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAndGFibGV7bWFyZ2luLWJvdHRvbToxMHB4O2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtkaXNwbGF5OnRhYmxlO30nICtcbiAgICAgICAgICAgICAgICAgICAgJ3RkLHRoe3BhZGRpbmc6IDVweCAxMHB4O2JvcmRlcjogMXB4IHNvbGlkICNEREQ7fScgK1xuICAgICAgICAgICAgICAgICAgICAnY2FwdGlvbntib3JkZXI6MXB4IGRhc2hlZCAjREREO2JvcmRlci1ib3R0b206MDtwYWRkaW5nOjNweDt0ZXh0LWFsaWduOmNlbnRlcjt9JyArXG4gICAgICAgICAgICAgICAgICAgICd0aHtib3JkZXItdG9wOjFweCBzb2xpZCAjQkJCO2JhY2tncm91bmQtY29sb3I6I0Y3RjdGNzt9JyArXG4gICAgICAgICAgICAgICAgICAgICd0YWJsZSB0ci5maXJzdFJvdyB0aHtib3JkZXItdG9wLXdpZHRoOjJweDt9JyArXG4gICAgICAgICAgICAgICAgICAgICcudWUtdGFibGUtaW50ZXJsYWNlLWNvbG9yLXNpbmdsZXsgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYzsgfSAudWUtdGFibGUtaW50ZXJsYWNlLWNvbG9yLWRvdWJsZXsgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZmFmZjsgfScgK1xuICAgICAgICAgICAgICAgICAgICAndGQgcHttYXJnaW46MDtwYWRkaW5nOjA7fScsXG4gICAgICAgICAgICAgICAgbWUuZG9jdW1lbnRcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHZhciB0YWJsZUNvcHlMaXN0LCBpc0Z1bGxDb2wsIGlzRnVsbFJvdztcbiAgICAgICAgICAgIC8v5rOo5YaMZGVsL2JhY2tzcGFjZeS6i+S7tlxuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoY21kLCBldnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuXG4gICAgICAgICAgICAgICAgaWYgKGtleUNvZGUgPT0gOCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlQnlTZWxlY3RlZChtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh1dCAmJiB1dC5zZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1dC5pc0Z1bGxDb2woKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdkZWxldGVjb2wnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXQuaXNGdWxsUm93KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnZGVsZXRlcm93Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnZGVsY2VsbHMnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgY2FwdGlvbiA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUobWUuc2VsZWN0aW9uLmdldFN0YXJ0KCksICdjYXB0aW9uJywgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkICYmIGNhcHRpb24gJiYgaXNFbXB0eUJsb2NrKGNhcHRpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gY2FwdGlvbi5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNhcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGFibGUucm93c1swXS5jZWxsc1swXSwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSA0Nikge1xuICAgICAgICAgICAgICAgICAgICB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB1dC5zZWxlY3RlZFRkc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIGNpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChrZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ2NhcHRpb24nLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoY2FwdGlvbiwgJ3RhYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJuZy5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuZGVsZXRlQ29udGVudHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnQodGFibGUucm93c1swXS5jZWxsc1swXSwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChybmcuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgJ3RhYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IHRhYmxlLnJvd3NbMF0uY2VsbHNbMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSwgWyd0ZCcsICd0aCddLCB0cnVlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlTm9kZSA9IHRhYmxlLnByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPT09IHN0YXJ0ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICghcHJlTm9kZSB8fCAocHJlTm9kZS5ub2RlVHlwZSA9PSAxICYmIHByZU5vZGUudGFnTmFtZSA9PSAnVEFCTEUnKSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuaXNTdGFydEluYmxvY2socm5nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3QgPSBkb21VdGlscy5maW5kUGFyZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmdldFN0YXJ0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5pc0Jsb2NrRWxtKG4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpcnN0ICYmICgvdChofGQpL2kudGVzdChmaXJzdC50YWdOYW1lKSB8fCBmaXJzdCA9PT0gc3RhcnQuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRwYXJhZ3JhcGhiZWZvcmV0YWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucHJldmVudERlZmF1bHQoZXZ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICgoZXZ0LmN0cmxLZXkgfHwgZXZ0Lm1ldGFLZXkpICYmIGV2dC5rZXlDb2RlID09ICc2NycpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFibGVDb3B5TGlzdCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGRzID0gdXQuc2VsZWN0ZWRUZHM7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc0Z1bGxDb2wgPSB1dC5pc0Z1bGxDb2woKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRnVsbFJvdyA9IHV0LmlzRnVsbFJvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVDb3B5TGlzdCA9IFtbdXQuY2xvbmVDZWxsKHRkc1swXSwgbnVsbCwgdHJ1ZSldXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAxLCBjaTsgKGNpID0gdGRzW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnBhcmVudE5vZGUgIT09IHRkc1tpIC0gMV0ucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZUNvcHlMaXN0LnB1c2goW3V0LmNsb25lQ2VsbChjaSwgbnVsbCwgdHJ1ZSldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZUNvcHlMaXN0W3RhYmxlQ29weUxpc3QubGVuZ3RoIC0gMV0ucHVzaCh1dC5jbG9uZUNlbGwoY2ksIG51bGwsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCd0YWJsZWhhc2RlbGV0ZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlRHJhZ2dhYmxlU3RhdGUodGhpcywgZmFsc2UsICcnLCBudWxsKTtcbiAgICAgICAgICAgICAgICBpZiAoZHJhZ0J1dHRvbikgZG9tVXRpbHMucmVtb3ZlKGRyYWdCdXR0b24pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdiZWZvcmVwYXN0ZScsIGZ1bmN0aW9uIChjbWQsIGh0bWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShybmcuc3RhcnRDb250YWluZXIsICdjYXB0aW9uJywgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpdiA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgICAgICAgICBkaXYuaW5uZXJIVE1MID0gaHRtbC5odG1sO1xuICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjM3MjlcbiAgICAgICAgICAgICAgICAgICAgaHRtbC5odG1sID0gZGl2W2Jyb3dzZXIuaWU5YmVsb3cgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGVDb3B5TGlzdCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcm5nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocm5nLnN0YXJ0Q29udGFpbmVyLCBbJ3RkJywgJ3RoJ10sIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG1wTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZU5vZGU7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHV0ID0gZ2V0VUVUYWJsZSh0ZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNGdWxsUm93KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJvd0luZGV4ID0gdXQuZ2V0Q2VsbEluZm8odGQpLnJvd0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZC50YWdOYW1lID09ICdUSCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93SW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0YWJsZUNvcHlMaXN0W2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRyID0gdXQuaW5zZXJ0Um93KHJvd0luZGV4KyssICd0ZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMCwgY2o7IChjaiA9IGNpW2pdKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IHRyLmNlbGxzW2pdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbCA9IHRyLmluc2VydENlbGwoaik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLmlubmVySFRNTCA9IGNqLmlubmVySFRNTDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNqLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSAmJiBjZWxsLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBjai5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ouZ2V0QXR0cmlidXRlKCd2QWxpZ24nKSAmJiBjZWxsLnNldEF0dHJpYnV0ZSgndkFsaWduJywgY2ouZ2V0QXR0cmlidXRlKCd2QWxpZ24nKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjai5nZXRBdHRyaWJ1dGUoJ2FsaWduJykgJiYgY2VsbC5zZXRBdHRyaWJ1dGUoJ2FsaWduJywgY2ouZ2V0QXR0cmlidXRlKCdhbGlnbicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNqLnN0eWxlLmNzc1RleHQgJiYgKGNlbGwuc3R5bGUuY3NzVGV4dCA9IGNqLnN0eWxlLmNzc1RleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCBjajsgKGNqID0gdHIuY2VsbHNbal0pOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2lbal0pIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ouaW5uZXJIVE1MID0gY2lbal0uaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2lbal0uZ2V0QXR0cmlidXRlKCd3aWR0aCcpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ouc2V0QXR0cmlidXRlKCd3aWR0aCcsIGNpW2pdLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaVtqXS5nZXRBdHRyaWJ1dGUoJ3ZBbGlnbicpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ouc2V0QXR0cmlidXRlKCd2QWxpZ24nLCBjaVtqXS5nZXRBdHRyaWJ1dGUoJ3ZBbGlnbicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpW2pdLmdldEF0dHJpYnV0ZSgnYWxpZ24nKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNqLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCBjaVtqXS5nZXRBdHRyaWJ1dGUoJ2FsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2lbal0uc3R5bGUuY3NzVGV4dCAmJiAoY2ouc3R5bGUuY3NzVGV4dCA9IGNpW2pdLnN0eWxlLmNzc1RleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNGdWxsQ29sKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8odGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWF4Q29sTnVtID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDAsIGNpID0gdGFibGVDb3B5TGlzdFswXSwgY2o7IChjaiA9IGNpW2orK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heENvbE51bSArPSBjai5jb2xTcGFuIHx8IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG1heENvbE51bTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0Y29sJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gdXQudGFibGUucm93c1swXS5jZWxsc1tjZWxsSW5mby5jZWxsSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGQudGFnTmFtZSA9PSAnVEgnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZCA9IHV0LnRhYmxlLnJvd3NbMV0uY2VsbHNbY2VsbEluZm8uY2VsbEluZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHRhYmxlQ29weUxpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXBOb2RlID0gdGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCBjajsgKGNqID0gY2lbaisrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGQuaW5uZXJIVE1MID0gY2ouaW5uZXJIVE1MO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdG9kbyDlrprliLblpITnkIZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjai5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykgJiYgdGQuc2V0QXR0cmlidXRlKCd3aWR0aCcsIGNqLmdldEF0dHJpYnV0ZSgnd2lkdGgnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ouZ2V0QXR0cmlidXRlKCd2QWxpZ24nKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZC5zZXRBdHRyaWJ1dGUoJ3ZBbGlnbicsIGNqLmdldEF0dHJpYnV0ZSgndkFsaWduJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNqLmdldEF0dHJpYnV0ZSgnYWxpZ24nKSAmJiB0ZC5zZXRBdHRyaWJ1dGUoJ2FsaWduJywgY2ouZ2V0QXR0cmlidXRlKCdhbGlnbicpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjai5zdHlsZS5jc3NUZXh0ICYmICh0ZC5zdHlsZS5jc3NUZXh0ID0gY2ouc3R5bGUuY3NzVGV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlTm9kZSA9IHRkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gdGQubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbG9uZVRkID0gY2ouY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXMoY2xvbmVUZCwgWydjbGFzcycsICdyb3dTcGFuJywgJ2NvbFNwYW4nXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVOb2RlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoY2xvbmVUZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGQgPSB1dC5nZXROZXh0Q2VsbCh0bXBOb2RlLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0YWJsZUNvcHlMaXN0W2ldKSBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0ZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8odG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dC50YWJsZS5pbnNlcnRSb3codXQudGFibGUucm93cy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQudXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZCA9IHV0LmdldFZTaWRlQ2VsbCh0bXBOb2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHV0LnVwZGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0YWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0YWJsZUNvcHlMaXN0W2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHIgPSB0YWJsZS5pbnNlcnRSb3codGFibGUucm93cy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCBjajsgKGNqID0gY2lbaisrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9uZVRkID0gVVQuY2xvbmVDZWxsKGNqLCBudWxsLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQXR0cmlidXRlcyhjbG9uZVRkLCBbJ2NsYXNzJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ci5hcHBlbmRDaGlsZChjbG9uZVRkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGogPT0gMiAmJiBjbG9uZVRkLnJvd1NwYW4gPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb25lVGQucm93U3BhbiA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gZ2V0RGVmYXVsdFZhbHVlKG1lKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkub2Zmc2V0V2lkdGggLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobmVlZElFSGFjayA/IHBhcnNlSW50KGRvbVV0aWxzLmdldENvbXB1dGVkU3R5bGUobWUuYm9keSwgJ21hcmdpbi1sZWZ0JyksIDEwKSAqIDIgOiAwKSAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZS50YWJsZUJvcmRlciAqIDIgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobWUub3B0aW9ucy5vZmZzZXRXaWR0aCB8fCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbnNlcnRIVE1MJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHRhYmxlICAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGlzRnVsbENvbCAmJiBpc0Z1bGxSb3cgPyAnd2lkdGg9XCInICsgd2lkdGggKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUuaW5uZXJIVE1MLnJlcGxhY2UoLz5cXHMqPC9nLCAnPjwnKS5yZXBsYWNlKC9cXGJ0aFxcYi9naSwgJ3RkJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC90YWJsZT4nXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY29udGVudGNoYW5nZScpO1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICBodG1sLmh0bWwgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpdiA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVzO1xuICAgICAgICAgICAgICAgICAgICBkaXYuaW5uZXJIVE1MID0gaHRtbC5odG1sO1xuICAgICAgICAgICAgICAgICAgICB0YWJsZXMgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RhYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKG1lLnNlbGVjdGlvbi5nZXRTdGFydCgpLCAndGFibGUnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh0YWJsZXMsIGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSwgJ2NhcHRpb24nLCB0cnVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpdi5pbm5lckhUTUwgPSBkaXZbYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J107XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHRhYmxlcywgZnVuY3Rpb24gKHRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlU3R5bGVTaXplKHRhYmxlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVBdHRyaWJ1dGVzKHRhYmxlLCBbJ3N0eWxlJywgJ2JvcmRlciddKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhYmxlLCAndGQnKSwgZnVuY3Rpb24gKHRkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0VtcHR5QmxvY2sodGQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgdGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZVN0eWxlU2l6ZSh0ZCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUF0dHJpYnV0ZXModGQsIFsnc3R5bGUnXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGh0bWwuaHRtbCA9IGRpdi5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdhZnRlcnBhc3RlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuYm9keSwgJ3RhYmxlJyksIGZ1bmN0aW9uICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFibGUub2Zmc2V0V2lkdGggPiBtZS5ib2R5Lm9mZnNldFdpZHRoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gZ2V0RGVmYXVsdFZhbHVlKG1lLCB0YWJsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS5zdHlsZS53aWR0aCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuYm9keS5vZmZzZXRXaWR0aCAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5lZWRJRUhhY2sgPyBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKG1lLmJvZHksICdtYXJnaW4tbGVmdCcpLCAxMCkgKiAyIDogMCkgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZS50YWJsZUJvcmRlciAqIDIgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtZS5vcHRpb25zLm9mZnNldFdpZHRoIHx8IDApICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHgnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdibHVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRhYmxlQ29weUxpc3QgPSBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgdGltZXI7XG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJuZy5zdGFydENvbnRhaW5lciwgWyd0aCcsICd0ZCddLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YWJsZSA9IGNlbGwucGFyZW50Tm9kZS5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFibGUub2Zmc2V0V2lkdGggPiB0YWJsZS5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLnN0eWxlLndvcmRCcmVhayA9ICdicmVhay1hbGwnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0b2dnbGVEcmFnZ2FibGVTdGF0ZShtZSwgZmFsc2UsICcnLCBudWxsKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL+WGheWuueWPmOWMluaXtuinpuWPkee0ouW8leabtOaWsFxuICAgICAgICAgICAgLy90b2RvIOWPr+WQpuiAg+iZkeagh+iusOajgOa1i++8jOWmguaenOS4jea2ieWPiuihqOagvOeahOWPmOWMluWwseS4jei/m+ihjOe0ouW8lemHjeW7uuWSjOabtOaWsFxuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2NvbnRlbnRjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAvL+WwveWPr+iDveaOkumZpOS4gOS6m+S4jemcgOimgeabtOaWsOeahOeKtuWGtVxuICAgICAgICAgICAgICAgIGhpZGVEcmFnTGluZShtZSk7XG4gICAgICAgICAgICAgICAgaWYgKGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBybmcuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHN0YXJ0LCBbJ3RkJywgJ3RoJ10sIHRydWUpO1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuZG9jdW1lbnQsICd0YWJsZScpLCBmdW5jdGlvbiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmZpcmVFdmVudCgnZXhjbHVkZXRhYmxlJywgdGFibGUpID09PSB0cnVlKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRhYmxlLnVlVGFibGUgPSBuZXcgVVQodGFibGUpO1xuICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjM3NDJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZShtZS5kb2N1bWVudCwgJ3RkJyksIGZ1bmN0aW9uICh0ZCkge1xuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayh0ZCkgJiYgdGQgIT09IHN0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHRkKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPT0gNikge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZC5pbm5lckhUTUwgPSAnJm5ic3A7J1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuZG9jdW1lbnQsICd0aCcpLCBmdW5jdGlvbiAodGgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0VtcHR5QmxvY2sodGgpICYmIHRoICE9PSBzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmZpbGxOb2RlKG1lLmRvY3VtZW50LCB0aCk7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUgJiYgYnJvd3Nlci52ZXJzaW9uID09IDYpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGguaW5uZXJIVE1MID0gJyZuYnNwOydcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB0YWJsZS5vbm1vdXNlb3ZlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgndGFibGVtb3VzZW92ZXInLCB0YWJsZSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIHRhYmxlLm9ubW91c2Vtb3ZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd0YWJsZW1vdXNlbW92ZScsIHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMudGFibGVEcmFnYWJsZSAmJiB0b2dnbGVEcmFnQnV0dG9uKHRydWUsIHRoaXMsIG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmRlZmVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnLCA1MCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgdGFibGUub25tb3VzZW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgndGFibGVtb3VzZW91dCcsIHRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZURyYWdnYWJsZVN0YXRlKG1lLCBmYWxzZSwgJycsIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGlkZURyYWdMaW5lKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgdGFibGUub25jbGljayA9IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2dCA9IG1lLndpbmRvdy5ldmVudCB8fCBldnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZ2V0UGFyZW50VGRPclRoKGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0YXJnZXQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGUodGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IHV0LnRhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxJbmZvID0gdXQuZ2V0Q2VsbEluZm8odGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsc1JhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIGlmIChcInRvcExlZnRcIiA9PSBpblBvc2l0aW9uKHRhYmxlLCBtb3VzZUNvb3JkcyhldnQpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBjZWxsc1JhbmdlID0gdXQuZ2V0Q2VsbHNSYW5nZSh1dC50YWJsZS5yb3dzWzBdLmNlbGxzWzBdLCB1dC5nZXRMYXN0Q2VsbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgdXQuc2V0U2VsZWN0ZWQoY2VsbHNSYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgaWYgKFwiYm90dG9tUmlnaHRcIiA9PSBpblBvc2l0aW9uKHRhYmxlLCBtb3VzZUNvb3JkcyhldnQpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpblRhYmxlU2lkZSh0YWJsZSwgdGFyZ2V0LCBldnQsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVuZFRkQ29sID0gdXQuZ2V0Q2VsbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQuaW5kZXhUYWJsZVt1dC5yb3dzTnVtIC0gMV1bY2VsbEluZm8uY29sSW5kZXhdLnJvd0luZGV4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dC5pbmRleFRhYmxlW3V0LnJvd3NOdW0gLSAxXVtjZWxsSW5mby5jb2xJbmRleF0uY2VsbEluZGV4XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0LnNoaWZ0S2V5ICYmIHV0LnNlbGVjdGVkVGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodXQuc2VsZWN0ZWRUZHNbMF0gIT09IGVuZFRkQ29sKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsc1JhbmdlID0gdXQuZ2V0Q2VsbHNSYW5nZSh1dC5zZWxlY3RlZFRkc1swXSwgZW5kVGRDb2wpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQuc2V0U2VsZWN0ZWQoY2VsbHNSYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcgJiYgcm5nLnNlbGVjdE5vZGVDb250ZW50cyhlbmRUZENvbCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0ICE9PSBlbmRUZENvbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHNSYW5nZSA9IHV0LmdldENlbGxzUmFuZ2UodGFyZ2V0LCBlbmRUZENvbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dC5zZXRTZWxlY3RlZChjZWxsc1JhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZyAmJiBybmcuc2VsZWN0Tm9kZUNvbnRlbnRzKGVuZFRkQ29sKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5UYWJsZVNpZGUodGFibGUsIHRhcmdldCwgZXZ0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbmRUZFJvdyA9IHV0LmdldENlbGwoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0LmluZGV4VGFibGVbY2VsbEluZm8ucm93SW5kZXhdW3V0LmNvbHNOdW0gLSAxXS5yb3dJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQuaW5kZXhUYWJsZVtjZWxsSW5mby5yb3dJbmRleF1bdXQuY29sc051bSAtIDFdLmNlbGxJbmRleFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2dC5zaGlmdEtleSAmJiB1dC5zZWxlY3RlZFRkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHV0LnNlbGVjdGVkVGRzWzBdICE9PSBlbmRUZFJvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHNSYW5nZSA9IHV0LmdldENlbGxzUmFuZ2UodXQuc2VsZWN0ZWRUZHNbMF0sIGVuZFRkUm93KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0LnNldFNlbGVjdGVkKGNlbGxzUmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nICYmIHJuZy5zZWxlY3ROb2RlQ29udGVudHMoZW5kVGRSb3cpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldCAhPT0gZW5kVGRSb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxzUmFuZ2UgPSB1dC5nZXRDZWxsc1JhbmdlKHRhcmdldCwgZW5kVGRSb3cpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXQuc2V0U2VsZWN0ZWQoY2VsbHNSYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcgJiYgcm5nLnNlbGVjdE5vZGVDb250ZW50cyhlbmRUZFJvdykuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBzd2l0Y2hCb3JkZXJDb2xvcihtZSwgdHJ1ZSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZG9tVXRpbHMub24obWUuZG9jdW1lbnQsICdtb3VzZW1vdmUnLCBtb3VzZU1vdmVFdmVudCk7XG5cbiAgICAgICAgICAgIGRvbVV0aWxzLm9uKG1lLmRvY3VtZW50LCAnbW91c2VvdXQnLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC50YWdOYW1lID09ICdUQUJMRScpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlRHJhZ2dhYmxlU3RhdGUobWUsIGZhbHNlLCAnJywgbnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIOihqOagvOmalOihjOWPmOiJslxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignaW50ZXJsYWNldGFibGUnLCBmdW5jdGlvbiAodHlwZSwgdGFibGUsIGNsYXNzTGlzdCkge1xuICAgICAgICAgICAgICAgIGlmICghdGFibGUpIHJldHVybjtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICByb3dzID0gdGFibGUucm93cyxcbiAgICAgICAgICAgICAgICAgICAgbGVuID0gcm93cy5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgIGdldENsYXNzID0gZnVuY3Rpb24gKGxpc3QsIGluZGV4LCByZXBlYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBsaXN0W2luZGV4XSA/IGxpc3RbaW5kZXhdIDogcmVwZWF0ID8gbGlzdFtpbmRleCAlIGxpc3QubGVuZ3RoXSA6ICcnO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgcm93c1tpXS5jbGFzc05hbWUgPSBnZXRDbGFzcyhjbGFzc0xpc3QgfHwgbWUub3B0aW9ucy5jbGFzc0xpc3QsIGksIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3VuaW50ZXJsYWNldGFibGUnLCBmdW5jdGlvbiAodHlwZSwgdGFibGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRhYmxlKSByZXR1cm47XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgcm93cyA9IHRhYmxlLnJvd3MsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTGlzdCA9IG1lLm9wdGlvbnMuY2xhc3NMaXN0LFxuICAgICAgICAgICAgICAgICAgICBsZW4gPSByb3dzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUNsYXNzZXMocm93c1tpXSwgY2xhc3NMaXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ21vdXNlZG93bicsIG1vdXNlRG93bkV2ZW50KTtcbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdtb3VzZXVwJywgbW91c2VVcEV2ZW50KTtcbiAgICAgICAgICAgIC8v5ouW5Yqo55qE5pe25YCZ6Kem5Y+RbW91c2V1cFxuICAgICAgICAgICAgZG9tVXRpbHMub24obWUuYm9keSwgJ2RyYWdzdGFydCcsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICBtb3VzZVVwRXZlbnQuY2FsbChtZSwgJ2RyYWdzdGFydCcsIGV2dCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lLmFkZE91dHB1dFJ1bGUoZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2RpdicpLCBmdW5jdGlvbiAobikge1xuICAgICAgICAgICAgICAgICAgICBpZiAobi5nZXRBdHRyKCdpZCcpID09ICd1ZV90YWJsZURyYWdMaW5lJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdmFyIGN1cnJlbnRSb3dJbmRleCA9IDA7XG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRSb3dJbmRleCA9IDA7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCd0YWJrZXlkb3duJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIGNvbW1vbiA9IHJhbmdlLmdldENvbW1vbkFuY2VzdG9yKHRydWUsIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoY29tbW9uLCAndGFibGUnKTtcbiAgICAgICAgICAgICAgICBpZiAodGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoY29tbW9uLCAnY2FwdGlvbicsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbCA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhYmxlLCAndGggdGQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjZWxsICYmIGNlbGwubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoY2VsbFswXSwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjZWxsID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShjb21tb24sIFsndGQnLCAndGgnXSwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWEgPSBnZXRVRVRhYmxlKGNlbGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFJvd0luZGV4ID0gY2VsbC5yb3dTcGFuID4gMSA/IGN1cnJlbnRSb3dJbmRleCA6IHVhLmdldENlbGxJbmZvKGNlbGwpLnJvd0luZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5leHRDZWxsID0gdWEuZ2V0VGFiTmV4dENlbGwoY2VsbCwgY3VycmVudFJvd0luZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXh0Q2VsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc0VtcHR5QmxvY2sobmV4dENlbGwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KG5leHRDZWxsLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhuZXh0Q2VsbCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5leGVjQ29tbWFuZCgnaW5zZXJ0cm93bmV4dCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydCh0YWJsZS5yb3dzW3RhYmxlLnJvd3MubGVuZ3RoIC0gMV0uY2VsbHNbMF0sIDApLnNldEN1cnNvcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnc2F2ZVNjZW5lJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBicm93c2VyLmllICYmXG4gICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlRHJhZ2dhYmxlU3RhdGUodGhpcywgZmFsc2UsICcnLCBudWxsKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgLy/lpITnkIblnKjooajmoLznmoTmnIDlkI7kuIDkuKrovpPlhaV0YWLkuqfnlJ/mlrDnmoTooajmoLxcbiAgICAgICAgICAgICAgICB2YXIga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaDtcbiAgICAgICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSA4IHx8IGtleUNvZGUgPT0gNDYpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgbm90Q3RybEtleSA9ICFldnQuY3RybEtleSAmJiAhZXZ0Lm1ldGFLZXkgJiYgIWV2dC5zaGlmdEtleSAmJiAhZXZ0LmFsdEtleTtcbiAgICAgICAgICAgICAgICBub3RDdHJsS2V5ICYmIHJlbW92ZVNlbGVjdGVkQ2xhc3MoZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuYm9keSwgJ3RkJykpO1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGVCeVNlbGVjdGVkKG1lKTtcbiAgICAgICAgICAgICAgICBpZiAoIXV0KSByZXR1cm47XG4gICAgICAgICAgICAgICAgbm90Q3RybEtleSAmJiB1dC5jbGVhclNlbGVjdGVkKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2JlZm9yZWdldGNvbnRlbnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoQm9yZGVyQ29sb3IodGhpcywgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGJyb3dzZXIuaWUgJiZcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh0aGlzLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYXB0aW9uJyksIGZ1bmN0aW9uIChjaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlOb2RlKGNpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpLmlubmVySFRNTCA9ICcmbmJzcDsnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2FmdGVyZ2V0Y29udGVudCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2hCb3JkZXJDb2xvcih0aGlzLCB0cnVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2dldEFsbEh0bWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlU2VsZWN0ZWRDbGFzcyhtZS5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGQnKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8v5L+u5q2j5YWo5bGP54q25oCB5LiL5o+S5YWl55qE6KGo5qC85a695bqm5Zyo6Z2e5YWo5bGP54q25oCB5LiL5pKR5byA57yW6L6R5Zmo55qE5oOF5Ya1XG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignZnVsbHNjcmVlbmNoYW5nZWQnLCBmdW5jdGlvbiAodHlwZSwgZnVsbHNjcmVlbikge1xuICAgICAgICAgICAgICAgIGlmICghZnVsbHNjcmVlbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmF0aW8gPSB0aGlzLmJvZHkub2Zmc2V0V2lkdGggLyBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGhpcy5ib2R5LCAndGFibGUnKTtcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh0YWJsZXMsIGZ1bmN0aW9uICh0YWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhYmxlLm9mZnNldFdpZHRoIDwgbWUuYm9keS5vZmZzZXRXaWR0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRkcyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhYmxlLCAndGQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrV2lkdGhzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHRkcywgZnVuY3Rpb24gKHRkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja1dpZHRocy5wdXNoKHRkLm9mZnNldFdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIHRkOyAodGQgPSB0ZHNbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgTWF0aC5mbG9vcihiYWNrV2lkdGhzW2ldICogcmF0aW8pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCBNYXRoLmZsb29yKGdldFRhYmxlV2lkdGgobWUsIG5lZWRJRUhhY2ssIGdldERlZmF1bHRWYWx1ZShtZSkpKSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL+mHjeWGmWV4ZWNDb21tYW5k5ZG95Luk77yM55So5LqO5aSE55CG5qGG6YCJ5pe255qE5aSE55CGXG4gICAgICAgICAgICB2YXIgb2xkRXhlY0NvbW1hbmQgPSBtZS5leGVjQ29tbWFuZDtcbiAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kID0gZnVuY3Rpb24gKGNtZCwgZGF0YXRhdCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG5cbiAgICAgICAgICAgICAgICBjbWQgPSBjbWQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlQnlTZWxlY3RlZChtZSksXG4gICAgICAgICAgICAgICAgICAgIHRkcyxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBuZXcgZG9tLlJhbmdlKG1lLmRvY3VtZW50KSxcbiAgICAgICAgICAgICAgICAgICAgY21kRnVuID0gbWUuY29tbWFuZHNbY21kXSB8fCBVRS5jb21tYW5kc1tjbWRdLFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQ7XG4gICAgICAgICAgICAgICAgaWYgKCFjbWRGdW4pIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAodXQgJiYgIWNvbW1hbmRzW2NtZF0gJiYgIWNtZEZ1bi5ub3ROZWVkVW5kbyAmJiAhbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnYmVmb3JlZXhlY2NvbW1hbmQnLCBjbWQpO1xuICAgICAgICAgICAgICAgICAgICB0ZHMgPSB1dC5zZWxlY3RlZFRkcztcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RTdGF0ZSA9IC0yLFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFZhbHVlID0gLTIsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgdGQ7ICh0ZCA9IHRkc1tpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzRW1wdHlCbG9jayh0ZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydCh0ZCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZSh0ZCkuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGUgPSBtZS5xdWVyeUNvbW1hbmRTdGF0ZShjbWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBtZS5xdWVyeUNvbW1hbmRWYWx1ZShjbWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlICE9IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3RTdGF0ZSAhPT0gc3RhdGUgfHwgbGFzdFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5faWdub3JlQ29udGVudENoYW5nZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IG9sZEV4ZWNDb21tYW5kLmFwcGx5KG1lLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5faWdub3JlQ29udGVudENoYW5nZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0U3RhdGUgPSBtZS5xdWVyeUNvbW1hbmRTdGF0ZShjbWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RWYWx1ZSA9IG1lLnF1ZXJ5Q29tbWFuZFZhbHVlKGNtZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmlzRW1wdHlCbG9jayh0ZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHRkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGRzWzBdLCAwKS5zaHJpbmtCb3VuZGFyeSh0cnVlKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcmV4ZWNjb21tYW5kJywgY21kKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIG1lLl9zZWxlY3Rpb25DaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBvbGRFeGVjQ29tbWFuZC5hcHBseShtZSwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICAvKipcbiAgICAgICAgICog5Yig6Zmkb2Jq55qE5a696auYc3R5bGXvvIzmlLnmiJDlsZ7mgKflrr3pq5hcbiAgICAgICAgICogQHBhcmFtIG9ialxuICAgICAgICAgKiBAcGFyYW0gcmVwbGFjZVRvUHJvcGVydHlcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZVN0eWxlU2l6ZShvYmosIHJlcGxhY2VUb1Byb3BlcnR5KSB7XG4gICAgICAgICAgICByZW1vdmVTdHlsZShvYmosICd3aWR0aCcsIHRydWUpO1xuICAgICAgICAgICAgcmVtb3ZlU3R5bGUob2JqLCAnaGVpZ2h0JywgdHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiByZW1vdmVTdHlsZShvYmosIHN0eWxlTmFtZSwgcmVwbGFjZVRvUHJvcGVydHkpIHtcbiAgICAgICAgICAgIGlmIChvYmouc3R5bGVbc3R5bGVOYW1lXSkge1xuICAgICAgICAgICAgICAgIHJlcGxhY2VUb1Byb3BlcnR5ICYmIG9iai5zZXRBdHRyaWJ1dGUoc3R5bGVOYW1lLCBwYXJzZUludChvYmouc3R5bGVbc3R5bGVOYW1lXSwgMTApKTtcbiAgICAgICAgICAgICAgICBvYmouc3R5bGVbc3R5bGVOYW1lXSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0UGFyZW50VGRPclRoKGVsZSkge1xuICAgICAgICAgICAgaWYgKGVsZS50YWdOYW1lID09ICdURCcgfHwgZWxlLnRhZ05hbWUgPT0gJ1RIJykgcmV0dXJuIGVsZTtcbiAgICAgICAgICAgIHZhciB0ZDtcbiAgICAgICAgICAgIGlmICgodGQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKGVsZSwgJ3RkJywgdHJ1ZSkgfHwgZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShlbGUsICd0aCcsIHRydWUpKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGQ7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGlzRW1wdHlCbG9jayhub2RlKSB7XG4gICAgICAgICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cChkb21VdGlscy5maWxsQ2hhciwgJ2cnKTtcbiAgICAgICAgICAgIGlmIChub2RlW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddLnJlcGxhY2UoL15cXHMqJC8sICcnKS5yZXBsYWNlKHJlZywgJycpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIG4gaW4gZHRkLiRpc05vdEVtcHR5KSB7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUobikubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gbW91c2VDb29yZHMoZXZ0KSB7XG4gICAgICAgICAgICBpZiAoZXZ0LnBhZ2VYIHx8IGV2dC5wYWdlWSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHg6IGV2dC5wYWdlWCwgeTogZXZ0LnBhZ2VZIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHg6IGV2dC5jbGllbnRYICsgbWUuZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0IC0gbWUuZG9jdW1lbnQuYm9keS5jbGllbnRMZWZ0LFxuICAgICAgICAgICAgICAgIHk6IGV2dC5jbGllbnRZICsgbWUuZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgLSBtZS5kb2N1bWVudC5ib2R5LmNsaWVudFRvcFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG1vdXNlTW92ZUV2ZW50KGV2dCkge1xuICAgICAgICAgICAgaWYgKGlzRWRpdG9yRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvL+aZrumAmueKtuaAgeS4i+m8oOagh+enu+WKqFxuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBnZXRQYXJlbnRUZE9yVGgoZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudCksXG4gICAgICAgICAgICAgICAgICAgIHBvcztcblxuICAgICAgICAgICAgICAgIC8v5Yy65YiG55So5oi355qE6KGM5Li65piv5ouW5Yqo6L+Y5piv5Y+M5Ye7XG4gICAgICAgICAgICAgICAgaWYgKGlzSW5SZXNpemVCdWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuYm9keS5zdHlsZS53ZWJraXRVc2VyU2VsZWN0ID0gJ25vbmUnO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKHVzZXJBY3Rpb25TdGF0dXMueCAtIGV2dC5jbGllbnRYKSA+IG9mZnNldE9mVGFibGVDZWxsIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyh1c2VyQWN0aW9uU3RhdHVzLnkgLSBldnQuY2xpZW50WSkgPiBvZmZzZXRPZlRhYmxlQ2VsbFxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGFibGVEcmFnVGltZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzSW5SZXNpemVCdWZmZXIgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpbmdsZUNsaWNrU3RhdGUgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9kcmFnIGFjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVCb3JkZXJEcmFnKGV2dCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+S/ruaUueWNleWFg+agvOWkp+Wwj+aXtueahOm8oOagh+enu+WKqFxuICAgICAgICAgICAgICAgIGlmIChvbkRyYWcgJiYgZHJhZ1RkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNpbmdsZUNsaWNrU3RhdGUgPSAwO1xuICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LnN0eWxlLndlYmtpdFVzZXJTZWxlY3QgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKVticm93c2VyLmllOWJlbG93ID8gJ2VtcHR5JyA6ICdyZW1vdmVBbGxSYW5nZXMnXSgpO1xuICAgICAgICAgICAgICAgICAgICBwb3MgPSBtb3VzZUNvb3JkcyhldnQpO1xuICAgICAgICAgICAgICAgICAgICB0b2dnbGVEcmFnZ2FibGVTdGF0ZShtZSwgdHJ1ZSwgb25EcmFnLCBwb3MsIHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkRyYWcgPT0gJ2gnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkcmFnTGluZS5zdHlsZS5sZWZ0ID0gZ2V0UGVybWlzc2lvblgoZHJhZ1RkLCBldnQpICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChvbkRyYWcgPT0gJ3YnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkcmFnTGluZS5zdHlsZS50b3AgPSBnZXRQZXJtaXNzaW9uWShkcmFnVGQsIGV2dCkgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy/lvZPpvKDmoIflpITkuo50YWJsZeS4iuaXtu+8jOS/ruaUueenu+WKqOi/h+eoi+S4reeahOWFieagh+eKtuaAgVxuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/pkojlr7nkvb/nlKh0YWJsZeS9nOS4uuWuueWZqOeahOe7hOS7tuS4jeinpuWPkeaLluaLveaViOaenFxuICAgICAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCdleGNsdWRldGFibGUnLCB0YXJnZXQpID09PSB0cnVlKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHBvcyA9IG1vdXNlQ29vcmRzKGV2dCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IGdldFJlbGF0aW9uKHRhcmdldCwgcG9zKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZSh0YXJnZXQsICd0YWJsZScsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpblRhYmxlU2lkZSh0YWJsZSwgdGFyZ2V0LCBldnQsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCdleGNsdWRldGFibGUnLCB0YWJsZSkgPT09IHRydWUpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuc3R5bGUuY3Vyc29yID0gJ3VybCgnICsgbWUub3B0aW9ucy5jdXJzb3JwYXRoICsgJ2gucG5nKSxwb2ludGVyJztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpblRhYmxlU2lkZSh0YWJsZSwgdGFyZ2V0LCBldnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCdleGNsdWRldGFibGUnLCB0YWJsZSkgPT09IHRydWUpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuc3R5bGUuY3Vyc29yID0gJ3VybCgnICsgbWUub3B0aW9ucy5jdXJzb3JwYXRoICsgJ3YucG5nKSxwb2ludGVyJztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmJvZHkuc3R5bGUuY3Vyc29yID0gJ3RleHQnO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGN1ckNlbGwgPSB0YXJnZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoL1xcZC8udGVzdChzdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9IHN0YXRlLnJlcGxhY2UoL1xcZC8sICcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBnZXRVRVRhYmxlKHRhcmdldCkuZ2V0UHJldmlld0NlbGwodGFyZ2V0LCBzdGF0ZSA9PSAndicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy/kvY3kuo7nrKzkuIDooYznmoTpobbpg6jmiJbogIXnrKzkuIDliJfnmoTlt6bovrnml7bkuI3lj6/mi5bliqhcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZURyYWdnYWJsZVN0YXRlKG1lLCB0YXJnZXQgPyAhIXN0YXRlIDogZmFsc2UsIHRhcmdldCA/IHN0YXRlIDogJycsIHBvcywgdGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZURyYWdCdXR0b24oZmFsc2UsIHRhYmxlLCBtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHNob3dFcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkcmFnQnV0dG9uVGltZXI7XG5cbiAgICAgICAgZnVuY3Rpb24gdG9nZ2xlRHJhZ0J1dHRvbihzaG93LCB0YWJsZSwgZWRpdG9yKSB7XG4gICAgICAgICAgICBpZiAoIXNob3cpIHtcbiAgICAgICAgICAgICAgICBpZiAoZHJhZ092ZXIpIHJldHVybjtcbiAgICAgICAgICAgICAgICBkcmFnQnV0dG9uVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgIWRyYWdPdmVyICYmIGRyYWdCdXR0b24gJiYgZHJhZ0J1dHRvbi5wYXJlbnROb2RlICYmIGRyYWdCdXR0b24ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkcmFnQnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY3JlYXRlRHJhZ0J1dHRvbih0YWJsZSwgZWRpdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZURyYWdCdXR0b24odGFibGUsIGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIHBvcyA9IGRvbVV0aWxzLmdldFhZKHRhYmxlKSxcbiAgICAgICAgICAgICAgICBkb2MgPSB0YWJsZS5vd25lckRvY3VtZW50O1xuICAgICAgICAgICAgaWYgKGRyYWdCdXR0b24gJiYgZHJhZ0J1dHRvbi5wYXJlbnROb2RlKSByZXR1cm4gZHJhZ0J1dHRvbjtcbiAgICAgICAgICAgIGRyYWdCdXR0b24gPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBkcmFnQnV0dG9uLmNvbnRlbnRFZGl0YWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgZHJhZ0J1dHRvbi5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgIGRyYWdCdXR0b24uc3R5bGUuY3NzVGV4dCA9XG4gICAgICAgICAgICAgICAgJ3dpZHRoOjE1cHg7aGVpZ2h0OjE1cHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoJyArXG4gICAgICAgICAgICAgICAgZWRpdG9yLm9wdGlvbnMuVUVESVRPUl9IT01FX1VSTCArXG4gICAgICAgICAgICAgICAgJ2RpYWxvZ3MvdGFibGUvZHJhZ2ljb24ucG5nKTtwb3NpdGlvbjogYWJzb2x1dGU7Y3Vyc29yOm1vdmU7dG9wOicgK1xuICAgICAgICAgICAgICAgIChwb3MueSAtIDE1KSArXG4gICAgICAgICAgICAgICAgJ3B4O2xlZnQ6JyArXG4gICAgICAgICAgICAgICAgcG9zLnggK1xuICAgICAgICAgICAgICAgICdweDsnO1xuICAgICAgICAgICAgZG9tVXRpbHMudW5TZWxlY3RhYmxlKGRyYWdCdXR0b24pO1xuICAgICAgICAgICAgZHJhZ0J1dHRvbi5vbm1vdXNlb3ZlciA9IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICBkcmFnT3ZlciA9IHRydWU7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZHJhZ0J1dHRvbi5vbm1vdXNlb3V0ID0gZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgICAgIGRyYWdPdmVyID0gZmFsc2U7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZG9tVXRpbHMub24oZHJhZ0J1dHRvbiwgJ2NsaWNrJywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgICAgIGRvQ2xpY2soZXZ0LCB0aGlzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZG9tVXRpbHMub24oZHJhZ0J1dHRvbiwgJ2RibGNsaWNrJywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgICAgIGRvRGJsQ2xpY2soZXZ0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZG9tVXRpbHMub24oZHJhZ0J1dHRvbiwgJ2RyYWdzdGFydCcsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChldnQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgdGltZXI7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGRvQ2xpY2soZXZ0LCBidXR0b24pIHtcbiAgICAgICAgICAgICAgICAvLyDpg6jliIbmtY/op4jlmajkuIvpnIDopoHmuIXnkIZcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ3RhYmxlQ2xpY2tlZCcsIHRhYmxlLCBidXR0b24pO1xuICAgICAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGRvRGJsQ2xpY2soZXZ0KSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlKHRhYmxlKSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSB0YWJsZS5yb3dzWzBdLmNlbGxzWzBdLFxuICAgICAgICAgICAgICAgICAgICBlbmQgPSB1dC5nZXRMYXN0Q2VsbCgpLFxuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IHV0LmdldENlbGxzUmFuZ2Uoc3RhcnQsIGVuZCk7XG4gICAgICAgICAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnNldFN0YXJ0KHN0YXJ0LCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgIHV0LnNldFNlbGVjdGVkKHJhbmdlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZG9jLmJvZHkuYXBwZW5kQ2hpbGQoZHJhZ0J1dHRvbik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyAgICBmdW5jdGlvbiBpblBvc2l0aW9uKHRhYmxlLCBwb3MpIHtcbiAgICAgICAgLy8gICAgICAgIHZhciB0YWJsZVBvcyA9IGRvbVV0aWxzLmdldFhZKHRhYmxlKSxcbiAgICAgICAgLy8gICAgICAgICAgICB3aWR0aCA9IHRhYmxlLm9mZnNldFdpZHRoLFxuICAgICAgICAvLyAgICAgICAgICAgIGhlaWdodCA9IHRhYmxlLm9mZnNldEhlaWdodDtcbiAgICAgICAgLy8gICAgICAgIGlmIChwb3MueCAtIHRhYmxlUG9zLnggPCA1ICYmIHBvcy55IC0gdGFibGVQb3MueSA8IDUpIHtcbiAgICAgICAgLy8gICAgICAgICAgICByZXR1cm4gXCJ0b3BMZWZ0XCI7XG4gICAgICAgIC8vICAgICAgICB9IGVsc2UgaWYgKHRhYmxlUG9zLnggKyB3aWR0aCAtIHBvcy54IDwgNSAmJiB0YWJsZVBvcy55ICsgaGVpZ2h0IC0gcG9zLnkgPCA1KSB7XG4gICAgICAgIC8vICAgICAgICAgICAgcmV0dXJuIFwiYm90dG9tUmlnaHRcIjtcbiAgICAgICAgLy8gICAgICAgIH1cbiAgICAgICAgLy8gICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGluVGFibGVTaWRlKHRhYmxlLCBjZWxsLCBldnQsIHRvcCkge1xuICAgICAgICAgICAgdmFyIHBvcyA9IG1vdXNlQ29vcmRzKGV2dCksXG4gICAgICAgICAgICAgICAgc3RhdGUgPSBnZXRSZWxhdGlvbihjZWxsLCBwb3MpO1xuXG4gICAgICAgICAgICBpZiAodG9wKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNhcHRpb24gPSB0YWJsZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY2FwdGlvbicpWzBdLFxuICAgICAgICAgICAgICAgICAgICBjYXBIZWlnaHQgPSBjYXB0aW9uID8gY2FwdGlvbi5vZmZzZXRIZWlnaHQgOiAwO1xuICAgICAgICAgICAgICAgIHJldHVybiBzdGF0ZSA9PSAndjEnICYmIHBvcy55IC0gZG9tVXRpbHMuZ2V0WFkodGFibGUpLnkgLSBjYXBIZWlnaHQgPCA4O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGUgPT0gJ2gxJyAmJiBwb3MueCAtIGRvbVV0aWxzLmdldFhZKHRhYmxlKS54IDwgODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5bmi5bliqjml7blhYHorrjnmoRY6L205Z2Q5qCHXG4gICAgICAgICAqIEBwYXJhbSBkcmFnVGRcbiAgICAgICAgICogQHBhcmFtIGV2dFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0UGVybWlzc2lvblgoZHJhZ1RkLCBldnQpIHtcbiAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGUoZHJhZ1RkKTtcbiAgICAgICAgICAgIGlmICh1dCkge1xuICAgICAgICAgICAgICAgIHZhciBwcmVUZCA9IHV0LmdldFNhbWVFbmRQb3NDZWxscyhkcmFnVGQsICd4JylbMF0sXG4gICAgICAgICAgICAgICAgICAgIG5leHRUZCA9IHV0LmdldFNhbWVTdGFydFBvc1hDZWxscyhkcmFnVGQpWzBdLFxuICAgICAgICAgICAgICAgICAgICBtb3VzZVggPSBtb3VzZUNvb3JkcyhldnQpLngsXG4gICAgICAgICAgICAgICAgICAgIGxlZnQgPSAocHJlVGQgPyBkb21VdGlscy5nZXRYWShwcmVUZCkueCA6IGRvbVV0aWxzLmdldFhZKHV0LnRhYmxlKS54KSArIDIwLFxuICAgICAgICAgICAgICAgICAgICByaWdodCA9IG5leHRUZFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBkb21VdGlscy5nZXRYWShuZXh0VGQpLnggKyBuZXh0VGQub2Zmc2V0V2lkdGggLSAyMFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBtZS5ib2R5Lm9mZnNldFdpZHRoICsgNSB8fCBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKG1lLmJvZHksICd3aWR0aCcpLCAxMCk7XG5cbiAgICAgICAgICAgICAgICBsZWZ0ICs9IGNlbGxNaW5XaWR0aDtcbiAgICAgICAgICAgICAgICByaWdodCAtPSBjZWxsTWluV2lkdGg7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gbW91c2VYIDwgbGVmdCA/IGxlZnQgOiBtb3VzZVggPiByaWdodCA/IHJpZ2h0IDogbW91c2VYO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluaLluWKqOaXtuWFgeiuuOeahFnovbTlnZDmoIdcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGdldFBlcm1pc3Npb25ZKGRyYWdUZCwgZXZ0KSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciB0b3AgPSBkb21VdGlscy5nZXRYWShkcmFnVGQpLnksXG4gICAgICAgICAgICAgICAgICAgIG1vdXNlUG9zWSA9IG1vdXNlQ29vcmRzKGV2dCkueTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbW91c2VQb3NZIDwgdG9wID8gdG9wIDogbW91c2VQb3NZO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHNob3dFcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDnp7vliqjnirbmgIHliIfmjaJcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHRvZ2dsZURyYWdnYWJsZVN0YXRlKGVkaXRvciwgZHJhZ2dhYmxlLCBkaXIsIG1vdXNlUG9zLCBjZWxsKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGVkaXRvci5ib2R5LnN0eWxlLmN1cnNvciA9IGRpciA9PSAnaCcgPyAnY29sLXJlc2l6ZScgOiBkaXIgPT0gJ3YnID8gJ3Jvdy1yZXNpemUnIDogJ3RleHQnO1xuICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXIgJiYgIW1vdXNlZG93biAmJiAhZ2V0VUVUYWJsZUJ5U2VsZWN0ZWQoZWRpdG9yKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0RHJhZ0xpbmUoZWRpdG9yLCBlZGl0b3IuZG9jdW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0RyYWdMaW5lQXQoZGlyLCBjZWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGVEcmFnTGluZShlZGl0b3IpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9uQm9yZGVyID0gZHJhZ2dhYmxlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHNob3dFcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDojrflj5bkuI5VRVRhYmxl55u45YWz55qEcmVzaXplIGxpbmVcbiAgICAgICAgICogQHBhcmFtIHVldGFibGUgVUVUYWJsZeWvueixoVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0UmVzaXplTGluZUJ5VUVUYWJsZSgpIHtcbiAgICAgICAgICAgIHZhciBsaW5lSWQgPSAnX1VFVGFibGVSZXNpemVMaW5lJyxcbiAgICAgICAgICAgICAgICBsaW5lID0gdGhpcy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsaW5lSWQpO1xuXG4gICAgICAgICAgICBpZiAoIWxpbmUpIHtcbiAgICAgICAgICAgICAgICBsaW5lID0gdGhpcy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBsaW5lLmlkID0gbGluZUlkO1xuICAgICAgICAgICAgICAgIGxpbmUuY29udG5ldEVkaXRhYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbGluZS5zZXRBdHRyaWJ1dGUoJ3Vuc2VsZWN0YWJsZScsICdvbicpO1xuXG4gICAgICAgICAgICAgICAgdmFyIHN0eWxlcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIgKiBjZWxsQm9yZGVyV2lkdGggKyAxICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgICAgICd6LWluZGV4JzogMTAwMDAwLFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdjb2wtcmVzaXplJyxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ3JlZCcsXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdub25lJ1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAvL+WIh+aNoueKtuaAgVxuICAgICAgICAgICAgICAgIGxpbmUub25tb3VzZW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICB1dGlscy5leHRlbmQobGluZS5zdHlsZSwgc3R5bGVzKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5lKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGxpbmU7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog5pu05pawcmVzaXplLWxpbmVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVJlc2l6ZUxpbmUoY2VsbCwgdWV0YWJsZSkge1xuICAgICAgICAgICAgdmFyIGxpbmUgPSBnZXRSZXNpemVMaW5lQnlVRVRhYmxlLmNhbGwodGhpcyksXG4gICAgICAgICAgICAgICAgdGFibGUgPSB1ZXRhYmxlLnRhYmxlLFxuICAgICAgICAgICAgICAgIHN0eWxlcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiBkb21VdGlscy5nZXRYWSh0YWJsZSkueSArICdweCcsXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IGRvbVV0aWxzLmdldFhZKGNlbGwpLnggKyBjZWxsLm9mZnNldFdpZHRoIC0gY2VsbEJvcmRlcldpZHRoICsgJ3B4JyxcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiB0YWJsZS5vZmZzZXRIZWlnaHQgKyAncHgnXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdXRpbHMuZXh0ZW5kKGxpbmUuc3R5bGUsIHN0eWxlcyk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog5pi+56S6cmVzaXplLWxpbmVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHNob3dSZXNpemVMaW5lKGNlbGwpIHtcbiAgICAgICAgICAgIHZhciB1ZXRhYmxlID0gZ2V0VUVUYWJsZShjZWxsKTtcblxuICAgICAgICAgICAgdXBkYXRlUmVzaXplTGluZS5jYWxsKHRoaXMsIGNlbGwsIHVldGFibGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPlum8oOagh+S4juW9k+WJjeWNleWFg+agvOeahOebuOWvueS9jee9rlxuICAgICAgICAgKiBAcGFyYW0gZWxlXG4gICAgICAgICAqIEBwYXJhbSBtb3VzZVBvc1xuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0UmVsYXRpb24oZWxlLCBtb3VzZVBvcykge1xuICAgICAgICAgICAgdmFyIGVsZVBvcyA9IGRvbVV0aWxzLmdldFhZKGVsZSk7XG5cbiAgICAgICAgICAgIGlmICghZWxlUG9zKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZWxlUG9zLnggKyBlbGUub2Zmc2V0V2lkdGggLSBtb3VzZVBvcy54IDwgY2VsbEJvcmRlcldpZHRoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICdoJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtb3VzZVBvcy54IC0gZWxlUG9zLnggPCBjZWxsQm9yZGVyV2lkdGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ2gxJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlbGVQb3MueSArIGVsZS5vZmZzZXRIZWlnaHQgLSBtb3VzZVBvcy55IDwgY2VsbEJvcmRlcldpZHRoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICd2JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtb3VzZVBvcy55IC0gZWxlUG9zLnkgPCBjZWxsQm9yZGVyV2lkdGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3YxJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG1vdXNlRG93bkV2ZW50KHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgaWYgKGlzRWRpdG9yRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdXNlckFjdGlvblN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICB4OiBldnQuY2xpZW50WCxcbiAgICAgICAgICAgICAgICB5OiBldnQuY2xpZW50WVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy/lj7PplK7oj5zljZXljZXni6zlpITnkIZcbiAgICAgICAgICAgIGlmIChldnQuYnV0dG9uID09IDIpIHtcbiAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlQnlTZWxlY3RlZChtZSksXG4gICAgICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgIGlmICh1dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGQgPSBnZXRUYXJnZXRUZChtZSwgZXZ0KTtcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaCh1dC5zZWxlY3RlZFRkcywgZnVuY3Rpb24gKHRpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGkgPT09IHRkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWZsYWcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZVNlbGVjdGVkQ2xhc3MoZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuYm9keSwgJ3RoIHRkJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXQuY2xlYXJTZWxlY3RlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGQgPSB1dC5zZWxlY3RlZFRkc1swXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnNldFN0YXJ0KHRkLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhYmxlQ2xpY2tIYW5kZXIoZXZ0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8v5riF6Zmk6KGo5qC855qE6K6h5pe25ZmoXG4gICAgICAgIGZ1bmN0aW9uIGNsZWFyVGFibGVUaW1lcigpIHtcbiAgICAgICAgICAgIHRhYlRpbWVyICYmIGNsZWFyVGltZW91dCh0YWJUaW1lcik7XG4gICAgICAgICAgICB0YWJUaW1lciA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICAvL+WPjOWHu+aUtue8qVxuICAgICAgICBmdW5jdGlvbiB0YWJsZURiY2xpY2tIYW5kbGVyKGV2dCkge1xuICAgICAgICAgICAgc2luZ2xlQ2xpY2tTdGF0ZSA9IDA7XG4gICAgICAgICAgICBldnQgPSBldnQgfHwgbWUud2luZG93LmV2ZW50O1xuICAgICAgICAgICAgdmFyIHRhcmdldCA9IGdldFBhcmVudFRkT3JUaChldnQudGFyZ2V0IHx8IGV2dC5zcmNFbGVtZW50KTtcbiAgICAgICAgICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICB2YXIgaDtcbiAgICAgICAgICAgICAgICBpZiAoKGggPSBnZXRSZWxhdGlvbih0YXJnZXQsIG1vdXNlQ29vcmRzKGV2dCkpKSkge1xuICAgICAgICAgICAgICAgICAgICBoaWRlRHJhZ0xpbmUobWUpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChoID09ICdoMScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGggPSAnaCc7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5UYWJsZVNpZGUoZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZSh0YXJnZXQsICd0YWJsZScpLCB0YXJnZXQsIGV2dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnYWRhcHRieXdpbmRvdycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBnZXRVRVRhYmxlKHRhcmdldCkuZ2V0UHJldmlld0NlbGwodGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNlbGVjdE5vZGVDb250ZW50cyh0YXJnZXQpLnNldEN1cnNvcih0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGggPT0gJ2gnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlKHRhcmdldCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUgPSB1dC50YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscyA9IGdldENlbGxzQnlNb3ZlQm9yZGVyKHRhcmdldCwgdGFibGUsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxscyA9IGV4dHJhY3RBcnJheShjZWxscywgJ2xlZnQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdXQud2lkdGggPSB1dC5vZmZzZXRXaWR0aDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9sZFdpZHRoID0gW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3V2lkdGggPSBbXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRXaWR0aC5wdXNoKGNlbGwub2Zmc2V0V2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbC5yZW1vdmVBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5piv5ZCm5YWB6K645pS55Y+YXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoYW5nZWFibGUgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGwsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3aWR0aCA9IGNlbGwub2Zmc2V0V2lkdGg7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHdpZHRoID4gb2xkV2lkdGhbaW5kZXhdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VhYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdXaWR0aC5wdXNoKHdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjaGFuZ2UgPSBjaGFuZ2VhYmxlID8gbmV3V2lkdGggOiBvbGRXaWR0aDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChjZWxsLCBpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsLndpZHRoID0gY2hhbmdlW2luZGV4XSAtIGdldFRhYmNlbGxTcGFjZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICBtaW5XaWR0aCAtPSBjZWxsTWluV2lkdGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIHRhYmxlLnJlbW92ZUF0dHJpYnV0ZShcIndpZHRoXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwuc3R5bGUud2lkdGggPSBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBjZWxsLndpZHRoIC09IG1pbldpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdGFibGVDbGlja0hhbmRlcihldnQpIHtcbiAgICAgICAgICAgIHJlbW92ZVNlbGVjdGVkQ2xhc3MoZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuYm9keSwgJ3RkIHRoJykpO1xuICAgICAgICAgICAgLy90cmFjZTozMTEzXG4gICAgICAgICAgICAvL+mAieS4reWNleWFg+agvO+8jOeCueWHu3RhYmxl5aSW6YOo77yM5LiN5Lya5riF5o6JdGFibGXkuIrmjILnmoR1ZVRhYmxlLOS8muW8lei1t2dldFVFVGFibGVCeVNlbGVjdGVk5pa55rOV6L+U5Zue5YC8XG4gICAgICAgICAgICB1dGlscy5lYWNoKG1lLmRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0YWJsZScpLCBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIHQudWVUYWJsZSA9IG51bGw7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHN0YXJ0VGQgPSBnZXRUYXJnZXRUZChtZSwgZXZ0KTtcbiAgICAgICAgICAgIGlmICghc3RhcnRUZCkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIHRhYmxlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShzdGFydFRkLCAndGFibGUnLCB0cnVlKTtcbiAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZSk7XG4gICAgICAgICAgICB1dCAmJiB1dC5jbGVhclNlbGVjdGVkKCk7XG5cbiAgICAgICAgICAgIC8v5Yik5pat5b2T5YmN6byg5qCH54q25oCBXG4gICAgICAgICAgICBpZiAoIW9uQm9yZGVyKSB7XG4gICAgICAgICAgICAgICAgbWUuZG9jdW1lbnQuYm9keS5zdHlsZS53ZWJraXRVc2VyU2VsZWN0ID0gJyc7XG4gICAgICAgICAgICAgICAgbW91c2Vkb3duID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignbW91c2VvdmVyJywgbW91c2VPdmVyRXZlbnQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL+i+ueahhuS4iueahOWKqOS9nOWkhOeQhlxuICAgICAgICAgICAgICAgIGJvcmRlckFjdGlvbkhhbmRsZXIoZXZ0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8v5aSE55CG6KGo5qC86L655qGG5LiK55qE5Yqo5L2cLCDov5nph4zlgZrlu7bml7blpITnkIbvvIzpgb/lhY3kuKTnp43liqjkvZzkupLnm7jlvbHlk41cbiAgICAgICAgZnVuY3Rpb24gYm9yZGVyQWN0aW9uSGFuZGxlcihldnQpIHtcbiAgICAgICAgICAgIGlmIChicm93c2VyLmllKSB7XG4gICAgICAgICAgICAgICAgZXZ0ID0gcmVjb25zdHJ1Y3QoZXZ0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2xlYXJUYWJsZURyYWdUaW1lcigpO1xuXG4gICAgICAgICAgICAvL+aYr+WQpuato+WcqOetieW+hXJlc2l6ZeeahOe8k+WGsuS4rVxuICAgICAgICAgICAgaXNJblJlc2l6ZUJ1ZmZlciA9IHRydWU7XG5cbiAgICAgICAgICAgIHRhYmxlRHJhZ1RpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGFibGVCb3JkZXJEcmFnKGV2dCk7XG4gICAgICAgICAgICB9LCBkYmxjbGlja1RpbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZXh0cmFjdEFycmF5KG9yaWdpbkFyciwga2V5KSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gW10sXG4gICAgICAgICAgICAgICAgdG1wID0gbnVsbDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IG9yaWdpbkFyci5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHRtcCA9IG9yaWdpbkFycltpXVtrZXldO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRtcCkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh0bXApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNsZWFyVGFibGVEcmFnVGltZXIoKSB7XG4gICAgICAgICAgICB0YWJsZURyYWdUaW1lciAmJiBjbGVhclRpbWVvdXQodGFibGVEcmFnVGltZXIpO1xuICAgICAgICAgICAgdGFibGVEcmFnVGltZXIgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmVjb25zdHJ1Y3Qob2JqKSB7XG4gICAgICAgICAgICB2YXIgYXR0cnMgPSBbJ3BhZ2VYJywgJ3BhZ2VZJywgJ2NsaWVudFgnLCAnY2xpZW50WScsICdzcmNFbGVtZW50JywgJ3RhcmdldCddLFxuICAgICAgICAgICAgICAgIG5ld09iaiA9IHt9O1xuXG4gICAgICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGtleSwgdmFsOyAoa2V5ID0gYXR0cnNbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsID0gb2JqW2tleV07XG4gICAgICAgICAgICAgICAgICAgIHZhbCAmJiAobmV3T2JqW2tleV0gPSB2YWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG5ld09iajtcbiAgICAgICAgfVxuXG4gICAgICAgIC8v6L655qGG5ouW5YqoXG4gICAgICAgIGZ1bmN0aW9uIHRhYmxlQm9yZGVyRHJhZyhldnQpIHtcbiAgICAgICAgICAgIGlzSW5SZXNpemVCdWZmZXIgPSBmYWxzZTtcblxuICAgICAgICAgICAgc3RhcnRUZCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICBpZiAoIXN0YXJ0VGQpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBzdGF0ZSA9IGdldFJlbGF0aW9uKHN0YXJ0VGQsIG1vdXNlQ29vcmRzKGV2dCkpO1xuICAgICAgICAgICAgaWYgKC9cXGQvLnRlc3Qoc3RhdGUpKSB7XG4gICAgICAgICAgICAgICAgc3RhdGUgPSBzdGF0ZS5yZXBsYWNlKC9cXGQvLCAnJyk7XG4gICAgICAgICAgICAgICAgc3RhcnRUZCA9IGdldFVFVGFibGUoc3RhcnRUZCkuZ2V0UHJldmlld0NlbGwoc3RhcnRUZCwgc3RhdGUgPT0gJ3YnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGhpZGVEcmFnTGluZShtZSk7XG4gICAgICAgICAgICBnZXREcmFnTGluZShtZSwgbWUuZG9jdW1lbnQpO1xuICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgIHNob3dEcmFnTGluZUF0KHN0YXRlLCBzdGFydFRkKTtcbiAgICAgICAgICAgIG1vdXNlZG93biA9IHRydWU7XG4gICAgICAgICAgICAvL+aLluWKqOW8gOWni1xuICAgICAgICAgICAgb25EcmFnID0gc3RhdGU7XG4gICAgICAgICAgICBkcmFnVGQgPSBzdGFydFRkO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gbW91c2VVcEV2ZW50KHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgaWYgKGlzRWRpdG9yRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2xlYXJUYWJsZURyYWdUaW1lcigpO1xuXG4gICAgICAgICAgICBpc0luUmVzaXplQnVmZmVyID0gZmFsc2U7XG5cbiAgICAgICAgICAgIGlmIChvbkJvcmRlcikge1xuICAgICAgICAgICAgICAgIHNpbmdsZUNsaWNrU3RhdGUgPSArK3NpbmdsZUNsaWNrU3RhdGUgJSAzO1xuXG4gICAgICAgICAgICAgICAgdXNlckFjdGlvblN0YXR1cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgeDogZXZ0LmNsaWVudFgsXG4gICAgICAgICAgICAgICAgICAgIHk6IGV2dC5jbGllbnRZXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIHRhYmxlUmVzaXplVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2luZ2xlQ2xpY2tTdGF0ZSA+IDAgJiYgc2luZ2xlQ2xpY2tTdGF0ZS0tO1xuICAgICAgICAgICAgICAgIH0sIGRibGNsaWNrVGltZSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoc2luZ2xlQ2xpY2tTdGF0ZSA9PT0gMikge1xuICAgICAgICAgICAgICAgICAgICBzaW5nbGVDbGlja1N0YXRlID0gMDtcbiAgICAgICAgICAgICAgICAgICAgdGFibGVEYmNsaWNrSGFuZGxlcihldnQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZXZ0LmJ1dHRvbiA9PSAyKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgLy/muIXpmaTooajmoLzkuIrljp/nlJ/ot6jpgInpl67pophcbiAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgIHN0YXJ0ID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5zdGFydENvbnRhaW5lciwgJ3RhYmxlJywgdHJ1ZSksXG4gICAgICAgICAgICAgICAgZW5kID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5lbmRDb250YWluZXIsICd0YWJsZScsIHRydWUpO1xuXG4gICAgICAgICAgICBpZiAoc3RhcnQgfHwgZW5kKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0ID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCBbJ3RkJywgJ3RoJywgJ2NhcHRpb24nXSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocmFuZ2UuZW5kQ29udGFpbmVyLCBbJ3RkJywgJ3RoJywgJ2NhcHRpb24nXSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFydCAhPT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uY2xlYXJSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmNsZWFyUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtb3VzZWRvd24gPSBmYWxzZTtcbiAgICAgICAgICAgIG1lLmRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0VXNlclNlbGVjdCA9ICcnO1xuICAgICAgICAgICAgLy/mi5bmi73nirbmgIHkuIvnmoRtb3VzZVVQXG4gICAgICAgICAgICBpZiAob25EcmFnICYmIGRyYWdUZCkge1xuICAgICAgICAgICAgICAgIG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKVticm93c2VyLmllOWJlbG93ID8gJ2VtcHR5JyA6ICdyZW1vdmVBbGxSYW5nZXMnXSgpO1xuXG4gICAgICAgICAgICAgICAgc2luZ2xlQ2xpY2tTdGF0ZSA9IDA7XG4gICAgICAgICAgICAgICAgZHJhZ0xpbmUgPSBtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndWVfdGFibGVEcmFnTGluZScpO1xuXG4gICAgICAgICAgICAgICAgLy8gdHJhY2UgMzk3M1xuICAgICAgICAgICAgICAgIGlmIChkcmFnTGluZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZHJhZ1RkUG9zID0gZG9tVXRpbHMuZ2V0WFkoZHJhZ1RkKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdMaW5lUG9zID0gZG9tVXRpbHMuZ2V0WFkoZHJhZ0xpbmUpO1xuXG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAob25EcmFnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdoJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VDb2xXaWR0aChkcmFnVGQsIGRyYWdMaW5lUG9zLnggLSBkcmFnVGRQb3MueCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlICd2JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VSb3dIZWlnaHQoZHJhZ1RkLCBkcmFnTGluZVBvcy55IC0gZHJhZ1RkUG9zLnkgLSBkcmFnVGQub2Zmc2V0SGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb25EcmFnID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIGRyYWdUZCA9IG51bGw7XG5cbiAgICAgICAgICAgICAgICAgICAgaGlkZURyYWdMaW5lKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5q2j5bi454q25oCB5LiL55qEbW91c2V1cFxuICAgICAgICAgICAgaWYgKCFzdGFydFRkKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudCwgJ3RkJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKCF0YXJnZXQpIHRhcmdldCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudCwgJ3RoJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldCAmJiAodGFyZ2V0LnRhZ05hbWUgPT0gJ1REJyB8fCB0YXJnZXQudGFnTmFtZSA9PSAnVEgnKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWUuZmlyZUV2ZW50KCdleGNsdWRldGFibGUnLCB0YXJnZXQpID09PSB0cnVlKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbmV3IGRvbS5SYW5nZShtZS5kb2N1bWVudCk7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHRhcmdldCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciB1dCA9IGdldFVFVGFibGUoc3RhcnRUZCksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB1dCA/IHV0LnNlbGVjdGVkVGRzWzBdIDogbnVsbDtcbiAgICAgICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG5ldyBkb20uUmFuZ2UobWUuZG9jdW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNFbXB0eUJsb2NrKGNlbGwpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChjZWxsLCAwKS5zZXRDdXJzb3IoZmFsc2UsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKGNlbGwpLnNocmlua0JvdW5kYXJ5KCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuc2hyaW5rQm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUocmFuZ2Uuc3RhcnRDb250YWluZXIsIFsndGQnLCAndGgnXSwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShyYW5nZS5lbmRDb250YWluZXIsIFsndGQnLCAndGgnXSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WcqHRhYmxl6YeM6L6555qE5LiN6IO95riF6ZmkXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHN0YXJ0ICYmICFlbmQpIHx8ICghc3RhcnQgJiYgZW5kKSB8fCAoc3RhcnQgJiYgZW5kICYmIHN0YXJ0ICE9PSBlbmQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdGFydFRkID0gbnVsbDtcbiAgICAgICAgICAgICAgICBtZS5yZW1vdmVMaXN0ZW5lcignbW91c2VvdmVyJywgbW91c2VPdmVyRXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWUuX3NlbGVjdGlvbkNoYW5nZSgyNTAsIGV2dCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBtb3VzZU92ZXJFdmVudCh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIGlmIChpc0VkaXRvckRpc2FibGVkKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgdGFyID0gZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudDtcbiAgICAgICAgICAgIGN1cnJlbnRUZCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUodGFyLCAndGQnLCB0cnVlKSB8fCBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKHRhciwgJ3RoJywgdHJ1ZSk7XG4gICAgICAgICAgICAvL+mcgOimgeWIpOaWreS4pOS4qlRE5piv5ZCm5L2N5LqO5ZCM5LiA5Liq6KGo5qC85YaFXG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgc3RhcnRUZCAmJlxuICAgICAgICAgICAgICAgIGN1cnJlbnRUZCAmJlxuICAgICAgICAgICAgICAgICgoc3RhcnRUZC50YWdOYW1lID09ICdURCcgJiYgY3VycmVudFRkLnRhZ05hbWUgPT0gJ1REJykgfHxcbiAgICAgICAgICAgICAgICAgICAgKHN0YXJ0VGQudGFnTmFtZSA9PSAnVEgnICYmIGN1cnJlbnRUZC50YWdOYW1lID09ICdUSCcpKSAmJlxuICAgICAgICAgICAgICAgIGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoc3RhcnRUZCwgJ3RhYmxlJykgPT0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShjdXJyZW50VGQsICd0YWJsZScpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlKGN1cnJlbnRUZCk7XG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0VGQgIT0gY3VycmVudFRkKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0VXNlclNlbGVjdCA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgbWUuc2VsZWN0aW9uLmdldE5hdGl2ZSgpW2Jyb3dzZXIuaWU5YmVsb3cgPyAnZW1wdHknIDogJ3JlbW92ZUFsbFJhbmdlcyddKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciByYW5nZSA9IHV0LmdldENlbGxzUmFuZ2Uoc3RhcnRUZCwgY3VycmVudFRkKTtcbiAgICAgICAgICAgICAgICAgICAgdXQuc2V0U2VsZWN0ZWQocmFuZ2UpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmRvY3VtZW50LmJvZHkuc3R5bGUud2Via2l0VXNlclNlbGVjdCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB1dC5jbGVhclNlbGVjdGVkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0ID8gZXZ0LnByZXZlbnREZWZhdWx0KCkgOiAoZXZ0LnJldHVyblZhbHVlID0gZmFsc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0Q2VsbEhlaWdodChjZWxsLCBoZWlnaHQsIGJhY2tIZWlnaHQpIHtcbiAgICAgICAgICAgIHZhciBsaW5lSGlnaHQgPSBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGNlbGwsICdsaW5lLWhlaWdodCcpLCAxMCksXG4gICAgICAgICAgICAgICAgdG1wSGVpZ2h0ID0gYmFja0hlaWdodCArIGhlaWdodDtcbiAgICAgICAgICAgIGhlaWdodCA9IHRtcEhlaWdodCA8IGxpbmVIaWdodCA/IGxpbmVIaWdodCA6IHRtcEhlaWdodDtcbiAgICAgICAgICAgIGlmIChjZWxsLnN0eWxlLmhlaWdodCkgY2VsbC5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICAgICAgICAgIGNlbGwucm93U3BhbiA9PSAxXG4gICAgICAgICAgICAgICAgPyBjZWxsLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgaGVpZ2h0KVxuICAgICAgICAgICAgICAgIDogY2VsbC5yZW1vdmVBdHRyaWJ1dGUgJiYgY2VsbC5yZW1vdmVBdHRyaWJ1dGUoJ2hlaWdodCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0V2lkdGgoY2VsbCkge1xuICAgICAgICAgICAgaWYgKCFjZWxsKSByZXR1cm4gMDtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUludChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKGNlbGwsICd3aWR0aCcpLCAxMCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjaGFuZ2VDb2xXaWR0aChjZWxsLCBjaGFuZ2VWYWx1ZSkge1xuICAgICAgICAgICAgdmFyIHV0ID0gZ2V0VUVUYWJsZShjZWxsKTtcbiAgICAgICAgICAgIGlmICh1dCkge1xuICAgICAgICAgICAgICAgIC8v5qC55o2u5b2T5YmN56e75Yqo55qE6L655qGG6I635Y+W55u45YWz55qE5Y2V5YWD5qC8XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gdXQudGFibGUsXG4gICAgICAgICAgICAgICAgICAgIGNlbGxzID0gZ2V0Q2VsbHNCeU1vdmVCb3JkZXIoY2VsbCwgdGFibGUpO1xuXG4gICAgICAgICAgICAgICAgdGFibGUuc3R5bGUud2lkdGggPSAnJztcbiAgICAgICAgICAgICAgICB0YWJsZS5yZW1vdmVBdHRyaWJ1dGUoJ3dpZHRoJyk7XG5cbiAgICAgICAgICAgICAgICAvL+S/ruato+aUueWPmOmHj1xuICAgICAgICAgICAgICAgIGNoYW5nZVZhbHVlID0gY29ycmVjdENoYW5nZVZhbHVlKGNoYW5nZVZhbHVlLCBjZWxsLCBjZWxscyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoY2VsbC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGxHcm91cCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEdyb3VwLmxlZnQud2lkdGggPSArY2VsbEdyb3VwLmxlZnQud2lkdGggKyBjaGFuZ2VWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxHcm91cC5yaWdodCAmJiAoY2VsbEdyb3VwLnJpZ2h0LndpZHRoID0gK2NlbGxHcm91cC5yaWdodC53aWR0aCAtIGNoYW5nZVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGxHcm91cCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbEdyb3VwLmxlZnQud2lkdGggLT0gLWNoYW5nZVZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBpc0VkaXRvckRpc2FibGVkKCkge1xuICAgICAgICAgICAgcmV0dXJuIG1lLmJvZHkuY29udGVudEVkaXRhYmxlID09PSAnZmFsc2UnO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY2hhbmdlUm93SGVpZ2h0KHRkLCBjaGFuZ2VWYWx1ZSkge1xuICAgICAgICAgICAgaWYgKE1hdGguYWJzKGNoYW5nZVZhbHVlKSA8IDEwKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgdXQgPSBnZXRVRVRhYmxlKHRkKTtcbiAgICAgICAgICAgIGlmICh1dCkge1xuICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IHV0LmdldFNhbWVFbmRQb3NDZWxscyh0ZCwgJ3knKSxcbiAgICAgICAgICAgICAgICAgICAgLy/lpIfku73pnIDopoHov57luKblj5jljJbnmoR0ZOeahOWOn+Wni+mrmOW6pu+8jOWQpuWImeWQjuacn+aXoOazleiOt+WPluato+ehrueahOWAvFxuICAgICAgICAgICAgICAgICAgICBiYWNrSGVpZ2h0ID0gY2VsbHNbMF0gPyBjZWxsc1swXS5vZmZzZXRIZWlnaHQgOiAwO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjZWxsOyAoY2VsbCA9IGNlbGxzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2VsbEhlaWdodChjZWxsLCBjaGFuZ2VWYWx1ZSwgYmFja0hlaWdodCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOiOt+WPluiwg+aVtOWNleWFg+agvOWkp+Wwj+eahOebuOWFs+WNleWFg+agvFxuICAgICAgICAgKiBAaXNDb250YWluTWVyZ2VDZWxsIOi/lOWbnueahOe7k+aenOS4reaYr+WQpuWMheWQq+WPkeeUn+WQiOW5tuWQjueahOWNleWFg+agvFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0Q2VsbHNCeU1vdmVCb3JkZXIoY2VsbCwgdGFibGUsIGlzQ29udGFpbk1lcmdlQ2VsbCkge1xuICAgICAgICAgICAgaWYgKCF0YWJsZSkge1xuICAgICAgICAgICAgICAgIHRhYmxlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShjZWxsLCAndGFibGUnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCF0YWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL+iOt+WPluWIsOivpeWNleWFg+agvOaJgOWcqOihjOeahOW6j+WIl+WPt1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gZG9tVXRpbHMuZ2V0Tm9kZUluZGV4KGNlbGwpLFxuICAgICAgICAgICAgICAgIHRlbXAgPSBjZWxsLFxuICAgICAgICAgICAgICAgIHJvd3MgPSB0YWJsZS5yb3dzLFxuICAgICAgICAgICAgICAgIGNvbEluZGV4ID0gMDtcblxuICAgICAgICAgICAgd2hpbGUgKHRlbXApIHtcbiAgICAgICAgICAgICAgICAvL+iOt+WPluWIsOW9k+WJjeWNleWFg+agvOWcqOacquWPkeeUn+WNleWFg+agvOWQiOW5tuaXtueahOW6j+WIl1xuICAgICAgICAgICAgICAgIGlmICh0ZW1wLm5vZGVUeXBlID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbEluZGV4ICs9IHRlbXAuY29sU3BhbiB8fCAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0ZW1wID0gdGVtcC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRlbXAgPSBudWxsO1xuXG4gICAgICAgICAgICAvL+iusOW9leaDs+WFs+eahOWNleWFg+agvFxuICAgICAgICAgICAgdmFyIGJvcmRlckNlbGxzID0gW107XG5cbiAgICAgICAgICAgIHV0aWxzLmVhY2gocm93cywgZnVuY3Rpb24gKHRhYlJvdykge1xuICAgICAgICAgICAgICAgIHZhciBjZWxscyA9IHRhYlJvdy5jZWxscyxcbiAgICAgICAgICAgICAgICAgICAgY3VyckluZGV4ID0gMDtcblxuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goY2VsbHMsIGZ1bmN0aW9uICh0YWJDZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJJbmRleCArPSB0YWJDZWxsLmNvbFNwYW4gfHwgMTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VyckluZGV4ID09PSBjb2xJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ2VsbHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogdGFiQ2VsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogdGFiQ2VsbC5uZXh0U2libGluZyB8fCBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGN1cnJJbmRleCA+IGNvbEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNDb250YWluTWVyZ2VDZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ2VsbHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRhYkNlbGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGJvcmRlckNlbGxzO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOmAmui/h+e7meWumueahOWNleWFg+agvOmbhuWQiOiOt+WPluacgOWwj+eahOWNleWFg+agvHdpZHRoXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBnZXRNaW5XaWR0aEJ5VGFibGVDZWxscyhjZWxscykge1xuICAgICAgICAgICAgdmFyIG1pbldpZHRoID0gTnVtYmVyLk1BWF9WQUxVRTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGN1ckNlbGw7IChjdXJDZWxsID0gY2VsbHNbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICBtaW5XaWR0aCA9IE1hdGgubWluKG1pbldpZHRoLCBjdXJDZWxsLndpZHRoIHx8IGdldFRhYmxlQ2VsbFdpZHRoKGN1ckNlbGwpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIG1pbldpZHRoO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY29ycmVjdENoYW5nZVZhbHVlKGNoYW5nZVZhbHVlLCByZWxhdGVkQ2VsbCwgY2VsbHMpIHtcbiAgICAgICAgICAgIC8v5Li65Y2V5YWD5qC855qEcGFhZGluZ+mihOeVmeepuumXtFxuICAgICAgICAgICAgY2hhbmdlVmFsdWUgLT0gZ2V0VGFiY2VsbFNwYWNlKCk7XG5cbiAgICAgICAgICAgIGlmIChjaGFuZ2VWYWx1ZSA8IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2hhbmdlVmFsdWUgLT0gZ2V0VGFibGVDZWxsV2lkdGgocmVsYXRlZENlbGwpO1xuXG4gICAgICAgICAgICAvL+ehruWumuaWueWQkVxuICAgICAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGNoYW5nZVZhbHVlIDwgMCA/ICdsZWZ0JyA6ICdyaWdodCc7XG5cbiAgICAgICAgICAgIGNoYW5nZVZhbHVlID0gTWF0aC5hYnMoY2hhbmdlVmFsdWUpO1xuXG4gICAgICAgICAgICAvL+WPquWFs+W/g+mdnuacgOWQjuS4gOS4quWNleWFg+agvOWwseWPr+S7pVxuICAgICAgICAgICAgdXRpbHMuZWFjaChjZWxscywgZnVuY3Rpb24gKGNlbGxHcm91cCkge1xuICAgICAgICAgICAgICAgIHZhciBjdXJDZWxsID0gY2VsbEdyb3VwW2RpcmVjdGlvbl07XG5cbiAgICAgICAgICAgICAgICAvL+S4uuWNleWFg+agvOS/neeVmeacgOWwj+epuumXtFxuICAgICAgICAgICAgICAgIGlmIChjdXJDZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZVZhbHVlID0gTWF0aC5taW4oY2hhbmdlVmFsdWUsIGdldFRhYmxlQ2VsbFdpZHRoKGN1ckNlbGwpIC0gY2VsbE1pbldpZHRoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy/kv67mraPotornlYxcbiAgICAgICAgICAgIGNoYW5nZVZhbHVlID0gY2hhbmdlVmFsdWUgPCAwID8gMCA6IGNoYW5nZVZhbHVlO1xuXG4gICAgICAgICAgICByZXR1cm4gZGlyZWN0aW9uID09PSAnbGVmdCcgPyAtY2hhbmdlVmFsdWUgOiBjaGFuZ2VWYWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFRhYmxlQ2VsbFdpZHRoKGNlbGwpIHtcbiAgICAgICAgICAgIHZhciB3aWR0aCA9IDAsXG4gICAgICAgICAgICAgICAgLy/lgY/np7vnuqDmraPph49cbiAgICAgICAgICAgICAgICBvZmZzZXQgPSAwLFxuICAgICAgICAgICAgICAgIHdpZHRoID0gY2VsbC5vZmZzZXRXaWR0aCAtIGdldFRhYmNlbGxTcGFjZSgpO1xuXG4gICAgICAgICAgICAvL+acgOWQjuS4gOS4quiKgueCuee6oOato+S4gOS4i1xuICAgICAgICAgICAgaWYgKCFjZWxsLm5leHRTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgd2lkdGggLT0gZ2V0VGFibGVDZWxsT2Zmc2V0KGNlbGwpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3aWR0aCA9IHdpZHRoIDwgMCA/IDAgOiB3aWR0aDtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjZWxsLndpZHRoID0gd2lkdGg7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgICAgICAgICByZXR1cm4gd2lkdGg7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog6I635Y+W5Y2V5YWD5qC85omA5Zyo6KGo5qC855qE5pyA5pyr5Y2V5YWD5qC855qE5YGP56e76YePXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBnZXRUYWJsZUNlbGxPZmZzZXQoY2VsbCkge1xuICAgICAgICAgICAgdGFiID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShjZWxsLCAndGFibGUnLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIGlmICh0YWIub2Zmc2V0VmFsID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcHJldiA9IGNlbGwucHJldmlvdXNTaWJsaW5nO1xuXG4gICAgICAgICAgICAgICAgaWYgKHByZXYpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/mnIDlkI7kuIDkuKrljZXlhYPmoLzlkozliY3kuIDkuKrljZXlhYPmoLznmoR3aWR0aCBkaWZm57uT5p6cIOWmguaenOaBsOWlveS4uuS4gOS4qmJvcmRlciB3aWR0aO+8jCDliJnmnaHku7bmiJDnq4tcbiAgICAgICAgICAgICAgICAgICAgdGFiLm9mZnNldFZhbCA9IGNlbGwub2Zmc2V0V2lkdGggLSBwcmV2Lm9mZnNldFdpZHRoID09PSBVVC5ib3JkZXJXaWR0aCA/IFVULmJvcmRlcldpZHRoIDogMDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YWIub2Zmc2V0VmFsID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0YWIub2Zmc2V0VmFsO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0VGFiY2VsbFNwYWNlKCkge1xuICAgICAgICAgICAgaWYgKFVULnRhYmNlbGxTcGFjZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNlbGwgPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICB0YWIgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0YWJsZScpLFxuICAgICAgICAgICAgICAgICAgICB0Ym9keSA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5JyksXG4gICAgICAgICAgICAgICAgICAgIHRyb3cgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpLFxuICAgICAgICAgICAgICAgICAgICB0YWJjZWxsID0gbWUuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKSxcbiAgICAgICAgICAgICAgICAgICAgbWlycm9yID0gbnVsbDtcblxuICAgICAgICAgICAgICAgIHRhYmNlbGwuc3R5bGUuY3NzVGV4dCA9ICdib3JkZXI6IDA7JztcbiAgICAgICAgICAgICAgICB0YWJjZWxsLndpZHRoID0gMTtcblxuICAgICAgICAgICAgICAgIHRyb3cuYXBwZW5kQ2hpbGQodGFiY2VsbCk7XG4gICAgICAgICAgICAgICAgdHJvdy5hcHBlbmRDaGlsZCgobWlycm9yID0gdGFiY2VsbC5jbG9uZU5vZGUoZmFsc2UpKSk7XG5cbiAgICAgICAgICAgICAgICB0Ym9keS5hcHBlbmRDaGlsZCh0cm93KTtcblxuICAgICAgICAgICAgICAgIHRhYi5hcHBlbmRDaGlsZCh0Ym9keSk7XG5cbiAgICAgICAgICAgICAgICB0YWIuc3R5bGUuY3NzVGV4dCA9ICd2aXNpYmlsaXR5OiBoaWRkZW47JztcblxuICAgICAgICAgICAgICAgIG1lLmJvZHkuYXBwZW5kQ2hpbGQodGFiKTtcblxuICAgICAgICAgICAgICAgIFVULnBhZGRpbmdTcGFjZSA9IHRhYmNlbGwub2Zmc2V0V2lkdGggLSAxO1xuXG4gICAgICAgICAgICAgICAgdmFyIHRtcFRhYldpZHRoID0gdGFiLm9mZnNldFdpZHRoO1xuXG4gICAgICAgICAgICAgICAgdGFiY2VsbC5zdHlsZS5jc3NUZXh0ID0gJyc7XG4gICAgICAgICAgICAgICAgbWlycm9yLnN0eWxlLmNzc1RleHQgPSAnJztcblxuICAgICAgICAgICAgICAgIFVULmJvcmRlcldpZHRoID0gKHRhYi5vZmZzZXRXaWR0aCAtIHRtcFRhYldpZHRoKSAvIDM7XG5cbiAgICAgICAgICAgICAgICBVVC50YWJjZWxsU3BhY2UgPSBVVC5wYWRkaW5nU3BhY2UgKyBVVC5ib3JkZXJXaWR0aDtcblxuICAgICAgICAgICAgICAgIG1lLmJvZHkucmVtb3ZlQ2hpbGQodGFiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZ2V0VGFiY2VsbFNwYWNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC50YWJjZWxsU3BhY2U7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByZXR1cm4gVVQudGFiY2VsbFNwYWNlO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0RHJhZ0xpbmUoZWRpdG9yLCBkb2MpIHtcbiAgICAgICAgICAgIGlmIChtb3VzZWRvd24pIHJldHVybjtcbiAgICAgICAgICAgIGRyYWdMaW5lID0gZWRpdG9yLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgZG9tVXRpbHMuc2V0QXR0cmlidXRlcyhkcmFnTGluZSwge1xuICAgICAgICAgICAgICAgIGlkOiAndWVfdGFibGVEcmFnTGluZScsXG4gICAgICAgICAgICAgICAgdW5zZWxlY3RhYmxlOiAnb24nLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRlZGl0YWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgb25yZXNpemVzdGFydDogJ3JldHVybiBmYWxzZScsXG4gICAgICAgICAgICAgICAgb25kcmFnc3RhcnQ6ICdyZXR1cm4gZmFsc2UnLFxuICAgICAgICAgICAgICAgIG9uc2VsZWN0c3RhcnQ6ICdyZXR1cm4gZmFsc2UnLFxuICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjpibHVlO3Bvc2l0aW9uOmFic29sdXRlO3BhZGRpbmc6MDttYXJnaW46MDtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyOjBweCBub25lO29wYWNpdHk6MDtmaWx0ZXI6YWxwaGEob3BhY2l0eT0wKSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWRpdG9yLmJvZHkuYXBwZW5kQ2hpbGQoZHJhZ0xpbmUpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaGlkZURyYWdMaW5lKGVkaXRvcikge1xuICAgICAgICAgICAgaWYgKG1vdXNlZG93bikgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGxpbmU7XG4gICAgICAgICAgICB3aGlsZSAoKGxpbmUgPSBlZGl0b3IuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VlX3RhYmxlRHJhZ0xpbmUnKSkpIHtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUobGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog5L6d5o2uc3RhdGXvvIh2fGjvvInlnKhjZWxs5L2N572u5pi+56S65qiq57q/XG4gICAgICAgICAqIEBwYXJhbSBzdGF0ZVxuICAgICAgICAgKiBAcGFyYW0gY2VsbFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gc2hvd0RyYWdMaW5lQXQoc3RhdGUsIGNlbGwpIHtcbiAgICAgICAgICAgIGlmICghY2VsbCkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIHRhYmxlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShjZWxsLCAndGFibGUnKSxcbiAgICAgICAgICAgICAgICBjYXB0aW9uID0gdGFibGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2NhcHRpb24nKSxcbiAgICAgICAgICAgICAgICB3aWR0aCA9IHRhYmxlLm9mZnNldFdpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodCA9IHRhYmxlLm9mZnNldEhlaWdodCAtIChjYXB0aW9uLmxlbmd0aCA+IDAgPyBjYXB0aW9uWzBdLm9mZnNldEhlaWdodCA6IDApLFxuICAgICAgICAgICAgICAgIHRhYmxlUG9zID0gZG9tVXRpbHMuZ2V0WFkodGFibGUpLFxuICAgICAgICAgICAgICAgIGNlbGxQb3MgPSBkb21VdGlscy5nZXRYWShjZWxsKSxcbiAgICAgICAgICAgICAgICBjc3M7XG4gICAgICAgICAgICBzd2l0Y2ggKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnaCc6XG4gICAgICAgICAgICAgICAgICAgIGNzcyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAnaGVpZ2h0OicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0ICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdweDt0b3A6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAodGFibGVQb3MueSArIChjYXB0aW9uLmxlbmd0aCA+IDAgPyBjYXB0aW9uWzBdLm9mZnNldEhlaWdodCA6IDApKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAncHg7bGVmdDonICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChjZWxsUG9zLnggKyBjZWxsLm9mZnNldFdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgZHJhZ0xpbmUuc3R5bGUuY3NzVGV4dCA9XG4gICAgICAgICAgICAgICAgICAgICAgICBjc3MgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3B4O3Bvc2l0aW9uOiBhYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2JhY2tncm91bmQtY29sb3I6Ymx1ZTt3aWR0aDoxcHg7Ym9yZGVyOjA7IGNvbG9yOmJsdWU7b3BhY2l0eTouMztmaWx0ZXI6YWxwaGEob3BhY2l0eT0zMCknO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICd2JzpcbiAgICAgICAgICAgICAgICAgICAgY3NzID0gJ3dpZHRoOicgKyB3aWR0aCArICdweDtsZWZ0OicgKyB0YWJsZVBvcy54ICsgJ3B4O3RvcDonICsgKGNlbGxQb3MueSArIGNlbGwub2Zmc2V0SGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgLy/lv4XpobvliqDkuIpib3JkZXI6MOWSjGNvbG9yOmJsdWXvvIzlkKbliJnkvY7niYhpZeS4jeaUr+aMgeiDjOaZr+iJsuaYvuekulxuICAgICAgICAgICAgICAgICAgICBkcmFnTGluZS5zdHlsZS5jc3NUZXh0ID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNzcyArXG4gICAgICAgICAgICAgICAgICAgICAgICAncHg7b3ZlcmZsb3c6aGlkZGVuO3Bvc2l0aW9uOiBhYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2JhY2tncm91bmQtY29sb3I6Ymx1ZTtoZWlnaHQ6MXB4O2JvcmRlcjowO2NvbG9yOmJsdWU7b3BhY2l0eTouMjtmaWx0ZXI6YWxwaGEob3BhY2l0eT0yMCknO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOW9k+ihqOagvOi+ueahhuminOiJsuS4uueZveiJsuaXtuiuvue9ruS4uuiZmue6vyx0cnVl5Li65re75Yqg6Jma57q/XG4gICAgICAgICAqIEBwYXJhbSBlZGl0b3JcbiAgICAgICAgICogQHBhcmFtIGZsYWdcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHN3aXRjaEJvcmRlckNvbG9yKGVkaXRvciwgZmxhZykge1xuICAgICAgICAgICAgdmFyIHRhYmxlQXJyID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZWRpdG9yLmJvZHksICd0YWJsZScpLFxuICAgICAgICAgICAgICAgIGNvbG9yO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG5vZGU7IChub2RlID0gdGFibGVBcnJbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIHZhciB0ZCA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKG5vZGUsICd0ZCcpO1xuICAgICAgICAgICAgICAgIGlmICh0ZFswXSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmxhZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3IgPSB0ZFswXS5zdHlsZS5ib3JkZXJDb2xvci5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC8oI2ZmZmZmZil8KHJnYlxcKDI1NSwyNTUsMjU1XFwpKS9naS50ZXN0KGNvbG9yKSkgZG9tVXRpbHMuYWRkQ2xhc3Mobm9kZSwgJ25vQm9yZGVyVGFibGUnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUNsYXNzZXMobm9kZSwgJ25vQm9yZGVyVGFibGUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFRhYmxlV2lkdGgoZWRpdG9yLCBuZWVkSUVIYWNrLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gZWRpdG9yLmJvZHk7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIGJvZHkub2Zmc2V0V2lkdGggLVxuICAgICAgICAgICAgICAgIChuZWVkSUVIYWNrID8gcGFyc2VJbnQoZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShib2R5LCAnbWFyZ2luLWxlZnQnKSwgMTApICogMiA6IDApIC1cbiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWUudGFibGVCb3JkZXIgKiAyIC1cbiAgICAgICAgICAgICAgICAoZWRpdG9yLm9wdGlvbnMub2Zmc2V0V2lkdGggfHwgMClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICog6I635Y+W5b2T5YmN5ouW5Yqo55qE5Y2V5YWD5qC8XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBnZXRUYXJnZXRUZChlZGl0b3IsIGV2dCkge1xuICAgICAgICAgICAgdmFyIHRhcmdldCA9IGRvbVV0aWxzLmZpbmRQYXJlbnRCeVRhZ05hbWUoZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudCwgWyd0ZCcsICd0aCddLCB0cnVlKSxcbiAgICAgICAgICAgICAgICBkaXIgPSBudWxsO1xuXG4gICAgICAgICAgICBpZiAoIXRhcmdldCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkaXIgPSBnZXRSZWxhdGlvbih0YXJnZXQsIG1vdXNlQ29vcmRzKGV2dCkpO1xuXG4gICAgICAgICAgICAvL+WmguaenOacieWJjeS4gOS4quiKgueCue+8jCDpnIDopoHlgZrkuIDkuKrkv67mraPvvIwg5ZCm5YiZ5Y+v6IO95Lya5b6X5Yiw5LiA5Liq6ZSZ6K+v55qEdGRcblxuICAgICAgICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGRpciA9PT0gJ2gxJyAmJiB0YXJnZXQucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gZG9tVXRpbHMuZ2V0WFkodGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbFdpZHRoID0gdGFyZ2V0Lm9mZnNldFdpZHRoO1xuXG4gICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKHBvc2l0aW9uLnggKyBjZWxsV2lkdGggLSBldnQuY2xpZW50WCkgPiBjZWxsV2lkdGggLyAzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChkaXIgPT09ICd2MScgJiYgdGFyZ2V0LnBhcmVudE5vZGUucHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gZG9tVXRpbHMuZ2V0WFkodGFyZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbEhlaWdodCA9IHRhcmdldC5vZmZzZXRIZWlnaHQ7XG5cbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMocG9zaXRpb24ueSArIGNlbGxIZWlnaHQgLSBldnQuY2xpZW50WSkgPiBjZWxsSGVpZ2h0IC8gMykge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSB0YXJnZXQucGFyZW50Tm9kZS5wcmV2aW91c1NpYmxpbmcuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8v5o6S6Zmk5LqG6Z2edGTlhoXpg6jku6Xlj4rnlKjkuo7ku6PnoIHpq5jkuq7pg6jliIbnmoR0ZFxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldCAmJiAhKGVkaXRvci5maXJlRXZlbnQoJ2V4Y2x1ZGV0YWJsZScsIHRhcmdldCkgPT09IHRydWUpID8gdGFyZ2V0IDogbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3RhYmxlLnNvcnQuanNcbiAgICAvKipcbiAgICAgKiBDcmVhdGVkIHdpdGggSmV0QnJhaW5zIFBocFN0b3JtLlxuICAgICAqIFVzZXI6IEppbnFuXG4gICAgICogRGF0ZTogMTMtMTAtMTJcbiAgICAgKiBUaW1lOiDkuIrljYgxMDoyMFxuICAgICAqIFRvIGNoYW5nZSB0aGlzIHRlbXBsYXRlIHVzZSBGaWxlIHwgU2V0dGluZ3MgfCBGaWxlIFRlbXBsYXRlcy5cbiAgICAgKi9cblxuICAgIFVFLlVFVGFibGUucHJvdG90eXBlLnNvcnRUYWJsZSA9IGZ1bmN0aW9uIChzb3J0QnlDZWxsSW5kZXgsIGNvbXBhcmVGbikge1xuICAgICAgICB2YXIgdGFibGUgPSB0aGlzLnRhYmxlLFxuICAgICAgICAgICAgcm93cyA9IHRhYmxlLnJvd3MsXG4gICAgICAgICAgICB0ckFycmF5ID0gW10sXG4gICAgICAgICAgICBmbGFnID0gcm93c1swXS5jZWxsc1swXS50YWdOYW1lID09PSAnVEgnLFxuICAgICAgICAgICAgbGFzdFJvd0luZGV4ID0gMDtcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRUZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLmNlbGxzUmFuZ2UsXG4gICAgICAgICAgICAgICAgbGVuID0gcmFuZ2UuZW5kUm93SW5kZXggKyAxO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHJhbmdlLmJlZ2luUm93SW5kZXg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHRyQXJyYXlbaV0gPSByb3dzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJBcnJheS5zcGxpY2UoMCwgcmFuZ2UuYmVnaW5Sb3dJbmRleCk7XG4gICAgICAgICAgICBsYXN0Um93SW5kZXggPSByYW5nZS5lbmRSb3dJbmRleCArIDEgPT09IHRoaXMucm93c051bSA/IDAgOiByYW5nZS5lbmRSb3dJbmRleCArIDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcm93cy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHRyQXJyYXlbaV0gPSByb3dzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIEZuID0ge1xuICAgICAgICAgICAgcmV2ZXJzZWN1cnJlbnQ6IGZ1bmN0aW9uICh0ZDEsIHRkMikge1xuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9yZGVyYnlhc2M6IGZ1bmN0aW9uICh0ZDEsIHRkMikge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZTEgPSB0ZDEuaW5uZXJUZXh0IHx8IHRkMS50ZXh0Q29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUyID0gdGQyLmlubmVyVGV4dCB8fCB0ZDIudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlMS5sb2NhbGVDb21wYXJlKHZhbHVlMik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmV2ZXJzZWJ5YXNjOiBmdW5jdGlvbiAodGQxLCB0ZDIpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUxID0gdGQxLmlubmVySFRNTCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUyID0gdGQyLmlubmVySFRNTDtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUyLmxvY2FsZUNvbXBhcmUodmFsdWUxKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvcmRlcmJ5bnVtOiBmdW5jdGlvbiAodGQxLCB0ZDIpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUxID0gdGQxW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddLm1hdGNoKC9cXGQrLyksXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlMiA9IHRkMlticm93c2VyLmllID8gJ2lubmVyVGV4dCcgOiAndGV4dENvbnRlbnQnXS5tYXRjaCgvXFxkKy8pO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZTEpIHZhbHVlMSA9ICt2YWx1ZTFbMF07XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlMikgdmFsdWUyID0gK3ZhbHVlMlswXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHZhbHVlMSB8fCAwKSAtICh2YWx1ZTIgfHwgMCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmV2ZXJzZWJ5bnVtOiBmdW5jdGlvbiAodGQxLCB0ZDIpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUxID0gdGQxW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddLm1hdGNoKC9cXGQrLyksXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlMiA9IHRkMlticm93c2VyLmllID8gJ2lubmVyVGV4dCcgOiAndGV4dENvbnRlbnQnXS5tYXRjaCgvXFxkKy8pO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZTEpIHZhbHVlMSA9ICt2YWx1ZTFbMF07XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlMikgdmFsdWUyID0gK3ZhbHVlMlswXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHZhbHVlMiB8fCAwKSAtICh2YWx1ZTEgfHwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy/lr7nooajmoLzorr7nva7mjpLluo/nmoTmoIforrBkYXRhLXNvcnQtdHlwZVxuICAgICAgICB0YWJsZS5zZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgICAnZGF0YS1zb3J0LXR5cGUnLFxuICAgICAgICAgICAgY29tcGFyZUZuICYmIHR5cGVvZiBjb21wYXJlRm4gPT09ICdzdHJpbmcnICYmIEZuW2NvbXBhcmVGbl0gPyBjb21wYXJlRm4gOiAnJ1xuICAgICAgICApO1xuXG4gICAgICAgIC8vdGjkuI3lj4LkuI7mjpLluo9cbiAgICAgICAgZmxhZyAmJiB0ckFycmF5LnNwbGljZSgwLCAxKTtcbiAgICAgICAgdHJBcnJheSA9IHV0aWxzLnNvcnQodHJBcnJheSwgZnVuY3Rpb24gKHRyMSwgdHIyKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgaWYgKGNvbXBhcmVGbiAmJiB0eXBlb2YgY29tcGFyZUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gY29tcGFyZUZuLmNhbGwodGhpcywgdHIxLmNlbGxzW3NvcnRCeUNlbGxJbmRleF0sIHRyMi5jZWxsc1tzb3J0QnlDZWxsSW5kZXhdKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY29tcGFyZUZuICYmIHR5cGVvZiBjb21wYXJlRm4gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY29tcGFyZUZuICYmIHR5cGVvZiBjb21wYXJlRm4gPT09ICdzdHJpbmcnICYmIEZuW2NvbXBhcmVGbl0pIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBGbltjb21wYXJlRm5dLmNhbGwodGhpcywgdHIxLmNlbGxzW3NvcnRCeUNlbGxJbmRleF0sIHRyMi5jZWxsc1tzb3J0QnlDZWxsSW5kZXhdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gRm5bJ29yZGVyYnlhc2MnXS5jYWxsKHRoaXMsIHRyMS5jZWxsc1tzb3J0QnlDZWxsSW5kZXhdLCB0cjIuY2VsbHNbc29ydEJ5Q2VsbEluZGV4XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGZyYWdtZW50ID0gdGFibGUub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBsZW4gPSB0ckFycmF5Lmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZCh0ckFycmF5W2pdKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdGJvZHkgPSB0YWJsZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGJvZHknKVswXTtcbiAgICAgICAgaWYgKCFsYXN0Um93SW5kZXgpIHtcbiAgICAgICAgICAgIHRib2R5LmFwcGVuZENoaWxkKGZyYWdtZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRib2R5Lmluc2VydEJlZm9yZShmcmFnbWVudCwgcm93c1tsYXN0Um93SW5kZXggLSByYW5nZS5lbmRSb3dJbmRleCArIHJhbmdlLmJlZ2luUm93SW5kZXggLSAxXSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgVUUucGx1Z2luc1sndGFibGVzb3J0J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICBVVCA9IFVFLlVFVGFibGUsXG4gICAgICAgICAgICBnZXRVRVRhYmxlID0gZnVuY3Rpb24gKHRkT3JUYWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBVVC5nZXRVRVRhYmxlKHRkT3JUYWJsZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VGFibGVJdGVtc0J5UmFuZ2UgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFVULmdldFRhYmxlSXRlbXNCeVJhbmdlKGVkaXRvcik7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIG1lLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8v5re75Yqg6KGo5qC85Y+v5o6S5bqP55qE5qC35byPXG4gICAgICAgICAgICB1dGlscy5jc3NSdWxlKFxuICAgICAgICAgICAgICAgICd0YWJsZXNvcnQnLFxuICAgICAgICAgICAgICAgICd0YWJsZS5zb3J0RW5hYmxlZCB0ci5maXJzdFJvdyB0aCx0YWJsZS5zb3J0RW5hYmxlZCB0ci5maXJzdFJvdyB0ZHtwYWRkaW5nLXJpZ2h0OjIwcHg7YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7JyArXG4gICAgICAgICAgICAgICAgICAgICcgICBiYWNrZ3JvdW5kLWltYWdlOnVybCgnICtcbiAgICAgICAgICAgICAgICAgICAgbWUub3B0aW9ucy50aGVtZVBhdGggK1xuICAgICAgICAgICAgICAgICAgICBtZS5vcHRpb25zLnRoZW1lICtcbiAgICAgICAgICAgICAgICAgICAgJy9pbWFnZXMvc29ydGFibGUucG5nKTt9JyxcbiAgICAgICAgICAgICAgICBtZS5kb2N1bWVudFxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy/lgZrljZXlhYPmoLzlkIjlubbmk43kvZzml7Ys5riF6Zmk5Y+v5o6S5bqP5qCH6K+GXG4gICAgICAgICAgICBtZS5hZGRMaXN0ZW5lcignYWZ0ZXJleGVjY29tbWFuZCcsIGZ1bmN0aW9uICh0eXBlLCBjbWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoY21kID09ICdtZXJnZXJpZ2h0JyB8fCBjbWQgPT0gJ21lcmdlZG93bicgfHwgY21kID09ICdtZXJnZWNlbGxzJykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCdkaXNhYmxlc29ydCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICAvL+ihqOagvOaOkuW6j1xuICAgICAgICBVRS5jb21tYW5kc1snc29ydHRhYmxlJ10gPSB7XG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlSXRlbXMgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZShtZSk7XG4gICAgICAgICAgICAgICAgaWYgKCF0YWJsZUl0ZW1zLmNlbGwpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSB0YWJsZUl0ZW1zLnRhYmxlLFxuICAgICAgICAgICAgICAgICAgICBjZWxscyA9IHRhYmxlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZCcpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjZWxsOyAoY2VsbCA9IGNlbGxzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNlbGwucm93U3BhbiAhPSAxIHx8IGNlbGwuY29sU3BhbiAhPSAxKSByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBmbikge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgIGJrID0gcmFuZ2UuY3JlYXRlQm9va21hcmsodHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlSXRlbXMgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZShtZSksXG4gICAgICAgICAgICAgICAgICAgIGNlbGwgPSB0YWJsZUl0ZW1zLmNlbGwsXG4gICAgICAgICAgICAgICAgICAgIHV0ID0gZ2V0VUVUYWJsZSh0YWJsZUl0ZW1zLnRhYmxlKSxcbiAgICAgICAgICAgICAgICAgICAgY2VsbEluZm8gPSB1dC5nZXRDZWxsSW5mbyhjZWxsKTtcbiAgICAgICAgICAgICAgICB1dC5zb3J0VGFibGUoY2VsbEluZm8uY2VsbEluZGV4LCBmbik7XG4gICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQm9va21hcmsoYmspO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy/orr7nva7ooajmoLzlj6/mjpLluo8s5riF6Zmk6KGo5qC85Y+v5o6S5bqPXG4gICAgICAgIFVFLmNvbW1hbmRzWydlbmFibGVzb3J0J10gPSBVRS5jb21tYW5kc1snZGlzYWJsZXNvcnQnXSA9IHtcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoY21kKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhYmxlID0gZ2V0VGFibGVJdGVtc0J5UmFuZ2UodGhpcykudGFibGU7XG4gICAgICAgICAgICAgICAgaWYgKHRhYmxlICYmIGNtZCA9PSAnZW5hYmxlc29ydCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGxzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGFibGUsICd0aCB0ZCcpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNlbGxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2VsbHNbaV0uZ2V0QXR0cmlidXRlKCdjb2xzcGFuJykgPiAxIHx8IGNlbGxzW2ldLmdldEF0dHJpYnV0ZSgncm93c3BhbicpID4gMSkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICF0YWJsZVxuICAgICAgICAgICAgICAgICAgICA/IC0xXG4gICAgICAgICAgICAgICAgICAgIDogKGNtZCA9PSAnZW5hYmxlc29ydCcpIF4gKHRhYmxlLmdldEF0dHJpYnV0ZSgnZGF0YS1zb3J0JykgIT0gJ3NvcnRFbmFibGVkJylcbiAgICAgICAgICAgICAgICAgICAgPyAtMVxuICAgICAgICAgICAgICAgICAgICA6IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFibGUgPSBnZXRUYWJsZUl0ZW1zQnlSYW5nZSh0aGlzKS50YWJsZTtcbiAgICAgICAgICAgICAgICB0YWJsZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtc29ydCcsIGNtZCA9PSAnZW5hYmxlc29ydCcgPyAnc29ydEVuYWJsZWQnIDogJ3NvcnREaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgIGNtZCA9PSAnZW5hYmxlc29ydCdcbiAgICAgICAgICAgICAgICAgICAgPyBkb21VdGlscy5hZGRDbGFzcyh0YWJsZSwgJ3NvcnRFbmFibGVkJylcbiAgICAgICAgICAgICAgICAgICAgOiBkb21VdGlscy5yZW1vdmVDbGFzc2VzKHRhYmxlLCAnc29ydEVuYWJsZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9jb250ZXh0bWVudS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vY29tbWFuZHMg5Y+z6ZSu6I+c5Y2VXG4gICAgLy8vY29tbWFuZHNOYW1lICBDb250ZXh0TWVudVxuICAgIC8vL2NvbW1hbmRzVGl0bGUgIOWPs+mUruiPnOWNlVxuICAgIC8qKlxuICAgICAqIOWPs+mUruiPnOWNlVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBuYW1lIGJhaWR1LmVkaXRvci5wbHVnaW5zLmNvbnRleHRtZW51XG4gICAgICogQGF1dGhvciB6aGFueWlcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbnNbJ2NvbnRleHRtZW51J10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIG1lLnNldE9wdCgnZW5hYmxlQ29udGV4dE1lbnUnLCB0cnVlKTtcbiAgICAgICAgaWYgKG1lLmdldE9wdCgnZW5hYmxlQ29udGV4dE1lbnUnKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGFuZyA9IG1lLmdldExhbmcoJ2NvbnRleHRNZW51JyksXG4gICAgICAgICAgICBtZW51LFxuICAgICAgICAgICAgaXRlbXMgPSBtZS5vcHRpb25zLmNvbnRleHRNZW51IHx8IFtcbiAgICAgICAgICAgICAgICB7IGxhYmVsOiBsYW5nWydzZWxlY3RhbGwnXSwgY21kTmFtZTogJ3NlbGVjdGFsbCcgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmNsZWFyZG9jLFxuICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnY2xlYXJkb2MnLFxuICAgICAgICAgICAgICAgICAgICBleGVjOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlybShsYW5nLmNvbmZpcm1jbGVhcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCdjbGVhcmRvYycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy51bmxpbmssXG4gICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICd1bmxpbmsnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBncm91cDogbGFuZy5wYXJhZ3JhcGgsXG4gICAgICAgICAgICAgICAgICAgIGljb246ICdqdXN0aWZ5anVzdGlmeScsXG4gICAgICAgICAgICAgICAgICAgIHN1Yk1lbnU6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5qdXN0aWZ5bGVmdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnanVzdGlmeScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdsZWZ0J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5qdXN0aWZ5cmlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2p1c3RpZnknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAncmlnaHQnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmp1c3RpZnljZW50ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2p1c3RpZnknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnY2VudGVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5qdXN0aWZ5anVzdGlmeSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnanVzdGlmeScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdqdXN0aWZ5J1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBncm91cDogbGFuZy50YWJsZSxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogJ3RhYmxlJyxcbiAgICAgICAgICAgICAgICAgICAgc3ViTWVudTogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmluc2VydHRhYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdpbnNlcnR0YWJsZSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuZGVsZXRldGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2RlbGV0ZXRhYmxlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICctJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5kZWxldGVyb3csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2RlbGV0ZXJvdydcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuZGVsZXRlY29sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdkZWxldGVjb2wnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmluc2VydGNvbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnaW5zZXJ0Y29sJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5pbnNlcnRjb2xuZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdpbnNlcnRjb2xuZXh0J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5pbnNlcnRyb3csXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2luc2VydHJvdydcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuaW5zZXJ0cm93bmV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnaW5zZXJ0cm93bmV4dCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuaW5zZXJ0Y2FwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnaW5zZXJ0Y2FwdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuZGVsZXRlY2FwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnZGVsZXRlY2FwdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuaW5zZXJ0dGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2luc2VydHRpdGxlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5kZWxldGV0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnZGVsZXRldGl0bGUnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmluc2VydHRpdGxlY29sLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdpbnNlcnR0aXRsZWNvbCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuZGVsZXRldGl0bGVjb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2RlbGV0ZXRpdGxlY29sJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICctJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5tZXJnZWNlbGxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdtZXJnZWNlbGxzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5tZXJnZXJpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdtZXJnZXJpZ2h0J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5tZXJnZWRvd24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ21lcmdlZG93bidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcuc3BsaXR0b3Jvd3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NwbGl0dG9yb3dzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5zcGxpdHRvY29scyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnc3BsaXR0b2NvbHMnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnNwbGl0dG9jZWxscyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnc3BsaXR0b2NlbGxzJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICctJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5hdmVyYWdlRGlzZVJvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnYXZlcmFnZWRpc3RyaWJ1dGVyb3cnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLmF2ZXJhZ2VEaXNDb2wsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2F2ZXJhZ2VkaXN0cmlidXRlY29sJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICctJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5lZGl0dGQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2VkaXR0ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoVUUudWlbJ2VkaXR0ZCddKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgVUUudWlbJ2VkaXR0ZCddKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGlhbG9nKCdlZGl0dGQnKS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5lZGl0dGFibGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2VkaXR0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoVUUudWlbJ2VkaXR0YWJsZSddKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgVUUudWlbJ2VkaXR0YWJsZSddKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RGlhbG9nKCdlZGl0dGFibGUnKS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5zZXRib3JkZXJ2aXNpYmxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdzZXRib3JkZXJ2aXNpYmxlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwOiBsYW5nLnRhYmxlc29ydCxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogJ3RhYmxlc29ydCcsXG4gICAgICAgICAgICAgICAgICAgIHN1Yk1lbnU6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5lbmFibGVzb3J0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdlbmFibGVzb3J0J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5kaXNhYmxlc29ydCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnZGlzYWJsZXNvcnQnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgJy0nLFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnJldmVyc2VjdXJyZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdzb3J0dGFibGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAncmV2ZXJzZWN1cnJlbnQnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLm9yZGVyYnlhc2MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NvcnR0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdvcmRlcmJ5YXNjJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5yZXZlcnNlYnlhc2MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NvcnR0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdyZXZlcnNlYnlhc2MnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLm9yZGVyYnludW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NvcnR0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdvcmRlcmJ5bnVtJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5yZXZlcnNlYnludW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NvcnR0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdyZXZlcnNlYnludW0nXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGxhbmcuYm9yZGVyYmssXG4gICAgICAgICAgICAgICAgICAgIGljb246ICdib3JkZXJCYWNrJyxcbiAgICAgICAgICAgICAgICAgICAgc3ViTWVudTogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnNldGNvbG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdpbnRlcmxhY2V0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCdpbnRlcmxhY2V0YWJsZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcudW5zZXRjb2xvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAndW5pbnRlcmxhY2V0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCd1bmludGVybGFjZXRhYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5zZXRiYWNrZ3JvdW5kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdzZXR0YWJsZWJhY2tncm91bmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4ZWM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5leGVjQ29tbWFuZCgnc2V0dGFibGViYWNrZ3JvdW5kJywgeyByZXBlYXQ6IHRydWUsIGNvbG9yTGlzdDogWycjYmJiJywgJyNjY2MnXSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnVuc2V0YmFja2dyb3VuZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnY2xlYXJ0YWJsZWJhY2tncm91bmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4ZWM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5leGVjQ29tbWFuZCgnY2xlYXJ0YWJsZWJhY2tncm91bmQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnJlZGFuZGJsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NldHRhYmxlYmFja2dyb3VuZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCdzZXR0YWJsZWJhY2tncm91bmQnLCB7IHJlcGVhdDogdHJ1ZSwgY29sb3JMaXN0OiBbJ3JlZCcsICdibHVlJ10gfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy50aHJlZWNvbG9yZ3JhZGllbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3NldHRhYmxlYmFja2dyb3VuZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhlYzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4ZWNDb21tYW5kKCdzZXR0YWJsZWJhY2tncm91bmQnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBlYXQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvckxpc3Q6IFsnI2FhYScsICcjYmJiJywgJyNjY2MnXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6IGxhbmcuYWxpZ250ZCxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogJ2FsaWdudGQnLFxuICAgICAgICAgICAgICAgICAgICBzdWJNZW51OiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAnbGVmdCcsIHZBbGlnbjogJ3RvcCcgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnY2VsbGFsaWdubWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHsgYWxpZ246ICdjZW50ZXInLCB2QWxpZ246ICd0b3AnIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAncmlnaHQnLCB2QWxpZ246ICd0b3AnIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAnbGVmdCcsIHZBbGlnbjogJ21pZGRsZScgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnY2VsbGFsaWdubWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHsgYWxpZ246ICdjZW50ZXInLCB2QWxpZ246ICdtaWRkbGUnIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAncmlnaHQnLCB2QWxpZ246ICdtaWRkbGUnIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAnbGVmdCcsIHZBbGlnbjogJ2JvdHRvbScgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAnY2VsbGFsaWdubWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHsgYWxpZ246ICdjZW50ZXInLCB2QWxpZ246ICdib3R0b20nIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NlbGxhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7IGFsaWduOiAncmlnaHQnLCB2QWxpZ246ICdib3R0b20nIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBncm91cDogbGFuZy5hbGlnbnRhYmxlLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnYWxpZ250YWJsZScsXG4gICAgICAgICAgICAgICAgICAgIHN1Yk1lbnU6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAndGFibGVhbGlnbm1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2xlZnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nLnRhYmxlbGVmdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ2xlZnQnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICd0YWJsZWFsaWdubWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy50YWJsZWNlbnRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ2NlbnRlcidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ3RhYmxlYWxpZ25tZW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdyaWdodCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmcudGFibGVyaWdodCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ3JpZ2h0J1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLScsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5pbnNlcnRwYXJhZ3JhcGhiZWZvcmUsXG4gICAgICAgICAgICAgICAgICAgIGNtZE5hbWU6ICdpbnNlcnRwYXJhZ3JhcGgnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGFuZy5pbnNlcnRwYXJhZ3JhcGhhZnRlcixcbiAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2luc2VydHBhcmFncmFwaCdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGxhbmdbJ2NvcHknXSxcbiAgICAgICAgICAgICAgICAgICAgY21kTmFtZTogJ2NvcHknXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBsYW5nWydwYXN0ZSddLFxuICAgICAgICAgICAgICAgICAgICBjbWROYW1lOiAncGFzdGUnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXTtcbiAgICAgICAgaWYgKCFpdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdWlVdGlscyA9IFVFLnVpLnVpVXRpbHM7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgdmFyIG9mZnNldCA9IHVpVXRpbHMuZ2V0Vmlld3BvcnRPZmZzZXRCeUV2ZW50KGV2dCk7XG4gICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2JlZm9yZXNlbGVjdGlvbmNoYW5nZScpO1xuICAgICAgICAgICAgaWYgKG1lbnUpIHtcbiAgICAgICAgICAgICAgICBtZW51LmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCB0aSwgY29udGV4dEl0ZW1zID0gW107ICh0aSA9IGl0ZW1zW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxhc3Q7XG4gICAgICAgICAgICAgICAgKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtID09ICctJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChsYXN0ID0gY29udGV4dEl0ZW1zW2NvbnRleHRJdGVtcy5sZW5ndGggLSAxXSkgJiYgbGFzdCAhPT0gJy0nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dEl0ZW1zLnB1c2goJy0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmhhc093blByb3BlcnR5KCdncm91cCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMCwgY2osIHN1Yk1lbnUgPSBbXTsgKGNqID0gaXRlbS5zdWJNZW51W2pdKTsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKGZ1bmN0aW9uIChzdWJJdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdWJJdGVtID09ICctJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChsYXN0ID0gc3ViTWVudVtzdWJNZW51Lmxlbmd0aCAtIDFdKSAmJiBsYXN0ICE9PSAnLScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJNZW51LnB1c2goJy0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViTWVudS5zcGxpY2Uoc3ViTWVudS5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAobWUuY29tbWFuZHNbc3ViSXRlbS5jbWROYW1lXSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVRS5jb21tYW5kc1tzdWJJdGVtLmNtZE5hbWVdIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ykl0ZW0ucXVlcnkpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHN1Ykl0ZW0ucXVlcnkgPyBzdWJJdGVtLnF1ZXJ5KCkgOiBtZS5xdWVyeUNvbW1hbmRTdGF0ZShzdWJJdGVtLmNtZE5hbWUpKSA+IC0xXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJNZW51LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ykl0ZW0ubGFiZWwgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmdldExhbmcoJ2NvbnRleHRNZW51LicgKyBzdWJJdGVtLmNtZE5hbWUgKyAoc3ViSXRlbS52YWx1ZSB8fCAnJykpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2VkdWktZm9yLScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ViSXRlbS5jbWROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzdWJJdGVtLmNsYXNzTmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJyBlZHVpLWZvci0nICsgc3ViSXRlbS5jbWROYW1lICsgJy0nICsgc3ViSXRlbS5jbGFzc05hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICcnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogc3ViSXRlbS5leGVjXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Ykl0ZW0uZXhlYy5jYWxsKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZChzdWJJdGVtLmNtZE5hbWUsIHN1Ykl0ZW0udmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KShjaik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3ViTWVudS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBnZXRMYWJlbCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChpdGVtLmljb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3RhYmxlJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWUuZ2V0TGFuZygnY29udGV4dE1lbnUudGFibGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2p1c3RpZnlqdXN0aWZ5JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWUuZ2V0TGFuZygnY29udGV4dE1lbnUucGFyYWdyYXBoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdhbGlnbnRkJzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWUuZ2V0TGFuZygnY29udGV4dE1lbnUuYWxpZ250ZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYWxpZ250YWJsZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1lLmdldExhbmcoJ2NvbnRleHRNZW51LmFsaWdudGFibGUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3RhYmxlc29ydCc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhbmcudGFibGVzb3J0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYm9yZGVyQmFjayc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGxhbmcuYm9yZGVyYms7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0SXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdG9kbyDkv67mraPmiJDoh6rliqjojrflj5bmlrnlvI9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGdldExhYmVsKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLScgKyBpdGVtLmljb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Yk1lbnU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBzdWJNZW51LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+acieWPr+iDvWNvbW1tYW5k5rKh5pyJ5Yqg6L295Y+z6ZSu5LiN6IO95Ye65p2l77yM5oiW6ICF5rKh5pyJY29tbWFuZOS5n+aDs+iDveWxleekuuWHuuadpea3u+WKoHF1ZXJ55pa55rOVXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG1lLmNvbW1hbmRzW2l0ZW0uY21kTmFtZV0gfHwgVUUuY29tbWFuZHNbaXRlbS5jbWROYW1lXSB8fCBpdGVtLnF1ZXJ5KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChpdGVtLnF1ZXJ5ID8gaXRlbS5xdWVyeS5jYWxsKG1lKSA6IG1lLnF1ZXJ5Q29tbWFuZFN0YXRlKGl0ZW0uY21kTmFtZSkpID4gLTFcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHRJdGVtcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0ZW0ubGFiZWwgfHwgbWUuZ2V0TGFuZygnY29udGV4dE1lbnUuJyArIGl0ZW0uY21kTmFtZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLScgKyAoaXRlbS5pY29uID8gaXRlbS5pY29uIDogaXRlbS5jbWROYW1lICsgKGl0ZW0udmFsdWUgfHwgJycpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogaXRlbS5leGVjXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZXhlYy5jYWxsKG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZChpdGVtLmNtZE5hbWUsIGl0ZW0udmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSh0aSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29udGV4dEl0ZW1zW2NvbnRleHRJdGVtcy5sZW5ndGggLSAxXSA9PSAnLScpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0SXRlbXMucG9wKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG1lbnUgPSBuZXcgVUUudWkuTWVudSh7XG4gICAgICAgICAgICAgICAgaXRlbXM6IGNvbnRleHRJdGVtcyxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWNvbnRleHRtZW51JyxcbiAgICAgICAgICAgICAgICBlZGl0b3I6IG1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG1lbnUucmVuZGVyKCk7XG4gICAgICAgICAgICBtZW51LnNob3dBdChvZmZzZXQpO1xuXG4gICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2FmdGVyc2hvd2NvbnRleHRtZW51JywgbWVudSk7XG5cbiAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGV2dCk7XG4gICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSkge1xuICAgICAgICAgICAgICAgIHZhciBpZVJhbmdlO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGllUmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0TmF0aXZlKCkuY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGllUmFuZ2UuaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBuZXcgZG9tLlJhbmdlKG1lLmRvY3VtZW50KTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0Tm9kZShpZVJhbmdlLml0ZW0oMCkpLnNlbGVjdCh0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIOa3u+WKoOWkjeWItueahGZsYXNo5oyJ6ZKuXG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdhZnRlcnNob3djb250ZXh0bWVudScsIGZ1bmN0aW9uICh0eXBlLCBtZW51KSB7XG4gICAgICAgICAgICBpZiAobWUuemVyb2NsaXBib2FyZCkge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtcyA9IG1lbnUuaXRlbXM7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGl0ZW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtc1trZXldLmNsYXNzTmFtZSA9PSAnZWR1aS1mb3ItY29weScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLnplcm9jbGlwYm9hcmQuY2xpcChpdGVtc1trZXldLmdldERvbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvc2hvcnRjdXRtZW51LmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9jb21tYW5kcyAgICAgICDlvLnlh7roj5zljZVcbiAgICAvLyBjb21tYW5kc05hbWUgIHBvcHVwbWVudVxuICAgIC8vL2NvbW1hbmRzVGl0bGUgIOW8ueWHuuiPnOWNlVxuICAgIC8qKlxuICAgICAqIOW8ueWHuuiPnOWNlVxuICAgICAqIEBmdW5jdGlvblxuICAgICAqIEBuYW1lIGJhaWR1LmVkaXRvci5wbHVnaW5zLnBvcHVwbWVudVxuICAgICAqIEBhdXRob3IgeHVoZW5nXG4gICAgICovXG5cbiAgICBVRS5wbHVnaW5zWydzaG9ydGN1dG1lbnUnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIG1lbnUsXG4gICAgICAgICAgICBpdGVtcyA9IG1lLm9wdGlvbnMuc2hvcnRjdXRNZW51IHx8IFtdO1xuXG4gICAgICAgIGlmICghaXRlbXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcignY29udGV4dG1lbnUgbW91c2V1cCcsIGZ1bmN0aW9uICh0eXBlLCBlKSB7XG4gICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgIGN1c3RvbUV2dCA9IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIHNjcmVlblg6IGUuc2NyZWVuWCxcbiAgICAgICAgICAgICAgICAgICAgc2NyZWVuWTogZS5zY3JlZW5ZLFxuICAgICAgICAgICAgICAgICAgICBjbGllbnRYOiBlLmNsaWVudFgsXG4gICAgICAgICAgICAgICAgICAgIGNsaWVudFk6IGUuY2xpZW50WVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAocm5nLmNvbGxhcHNlZCA9PT0gZmFsc2UgfHwgdHlwZSA9PSAnY29udGV4dG1lbnUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWVudSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVudSA9IG5ldyBiYWlkdS5lZGl0b3IudWkuU2hvcnRDdXRNZW51KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3I6IG1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBpdGVtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogbWUub3B0aW9ucy50aGVtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLXNob3J0Y3V0bWVudSdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBtZW51LnJlbmRlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdhZnRlcnJlbmRlcnNob3J0Y3V0bWVudScsIG1lbnUpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbWVudS5zaG93KGN1c3RvbUV2dCwgISFVRS5wbHVnaW5zWydjb250ZXh0bWVudSddKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHR5cGUgPT0gJ2NvbnRleHRtZW51Jykge1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGUpO1xuICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllOWJlbG93KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpZVJhbmdlO1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWVSYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXROYXRpdmUoKS5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGllUmFuZ2UuaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gbmV3IGRvbS5SYW5nZShtZS5kb2N1bWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKGllUmFuZ2UuaXRlbSgwKSkuc2VsZWN0KHRydWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZS5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PSAna2V5ZG93bicpIHtcbiAgICAgICAgICAgICAgICBtZW51ICYmICFtZW51LmlzSGlkZGVuICYmIG1lbnUuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9iYXNlc3R5bGUuanNcbiAgICAvKipcbiAgICAgKiBC44CBSeOAgXN1YuOAgXN1cGVy5ZG95Luk5pSv5oyBXG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgVUUucGx1Z2luc1snYmFzZXN0eWxlJ10gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiDlrZfkvZPliqDnspdcbiAgICAgICAgICogQGNvbW1hbmQgYm9sZFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZW1pbmQg5a+55bey5Yqg57KX55qE5paH5pys5YaF5a655omn6KGM6K+l5ZG95Luk77yMIOWwhuWPlua2iOWKoOeyl1xuICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogLy9lZGl0b3LmmK/nvJbovpHlmajlrp7kvotcbiAgICAgICAgICogLy/lr7nlvZPliY3pgInkuK3nmoTmlofmnKzlhoXlrrnmiafooYzliqDnspfmk43kvZxcbiAgICAgICAgICogLy/nrKzkuIDmrKHmiafooYzvvIwg5paH5pys5YaF5a655Yqg57KXXG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2JvbGQnICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8v56ys5LqM5qyh5omn6KGM77yMIOaWh+acrOWGheWuueWPlua2iOWKoOeyl1xuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdib2xkJyApO1xuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIOWtl+S9k+WAvuaWnFxuICAgICAgICAgKiBAY29tbWFuZCBpdGFsaWNcbiAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEByZW1pbmQg5a+55bey5YC+5pac55qE5paH5pys5YaF5a655omn6KGM6K+l5ZG95Luk77yMIOWwhuWPlua2iOWAvuaWnFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIC8vZWRpdG9y5piv57yW6L6R5Zmo5a6e5L6LXG4gICAgICAgICAqIC8v5a+55b2T5YmN6YCJ5Lit55qE5paH5pys5YaF5a655omn6KGM5pac5L2T5pON5L2cXG4gICAgICAgICAqIC8v56ys5LiA5qyh5pON5L2c77yMIOaWh+acrOWGheWuueWwhuWPmOaIkOaWnOS9k1xuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdpdGFsaWMnICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8v5YaN5qyh5a+55ZCM5LiA5paH5pys5YaF5a655omn6KGM77yMIOWImeaWh+acrOWGheWuueWwhuaBouWkjeato+W4uFxuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdpdGFsaWMnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5LiL5qCH5paH5pys77yM5LiO4oCcc3VwZXJzY3JpcHTigJ3lkb3ku6TkupLmlqVcbiAgICAgICAgICogQGNvbW1hbmQgc3Vic2NyaXB0XG4gICAgICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgICAgICogQHJlbWluZCAg5oqK6YCJ5Lit55qE5paH5pys5YaF5a655YiH5o2i5oiQ5LiL5qCH5paH5pys77yMIOWmguaenOW9k+WJjemAieS4reeahOaWh+acrOW3sue7j+aYr+S4i+agh++8jCDliJnor6Xmk43kvZzkvJrmiormlofmnKzlhoXlrrnov5jljp/miJDmraPluLjmlofmnKxcbiAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAqIC8vZWRpdG9y5piv57yW6L6R5Zmo5a6e5L6LXG4gICAgICAgICAqIC8v5a+55b2T5YmN6YCJ5Lit55qE5paH5pys5YaF5a655omn6KGM5LiL5qCH5pON5L2cXG4gICAgICAgICAqIC8v56ys5LiA5qyh5pON5L2c77yMIOaWh+acrOWGheWuueWwhuWPmOaIkOS4i+agh+aWh+acrFxuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdzdWJzY3JpcHQnICk7XG4gICAgICAgICAqXG4gICAgICAgICAqIC8v5YaN5qyh5a+55ZCM5LiA5paH5pys5YaF5a655omn6KGM77yMIOWImeaWh+acrOWGheWuueWwhuaBouWkjeato+W4uFxuICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdzdWJzY3JpcHQnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cblxuICAgICAgICAvKipcbiAgICAgICAgICog5LiK5qCH5paH5pys77yM5LiO4oCcc3Vic2NyaXB04oCd5ZG95Luk5LqS5palXG4gICAgICAgICAqIEBjb21tYW5kIHN1cGVyc2NyaXB0XG4gICAgICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgICAgICogQHJlbWluZCDmiorpgInkuK3nmoTmlofmnKzlhoXlrrnliIfmjaLmiJDkuIrmoIfmlofmnKzvvIwg5aaC5p6c5b2T5YmN6YCJ5Lit55qE5paH5pys5bey57uP5piv5LiK5qCH77yMIOWImeivpeaTjeS9nOS8muaKiuaWh+acrOWGheWuuei/mOWOn+aIkOato+W4uOaWh+acrFxuICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICogLy9lZGl0b3LmmK/nvJbovpHlmajlrp7kvotcbiAgICAgICAgICogLy/lr7nlvZPliY3pgInkuK3nmoTmlofmnKzlhoXlrrnmiafooYzkuIrmoIfmk43kvZxcbiAgICAgICAgICogLy/nrKzkuIDmrKHmk43kvZzvvIwg5paH5pys5YaF5a655bCG5Y+Y5oiQ5LiK5qCH5paH5pysXG4gICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3N1cGVyc2NyaXB0JyApO1xuICAgICAgICAgKlxuICAgICAgICAgKiAvL+WGjeasoeWvueWQjOS4gOaWh+acrOWGheWuueaJp+ihjO+8jCDliJnmlofmnKzlhoXlrrnlsIbmgaLlpI3mraPluLhcbiAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnc3VwZXJzY3JpcHQnICk7XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIGJhc2VzdHlsZXMgPSB7XG4gICAgICAgICAgICAgICAgYm9sZDogWydzdHJvbmcnLCAnYiddLFxuICAgICAgICAgICAgICAgIGl0YWxpYzogWydlbScsICdpJ10sXG4gICAgICAgICAgICAgICAgc3Vic2NyaXB0OiBbJ3N1YiddLFxuICAgICAgICAgICAgICAgIHN1cGVyc2NyaXB0OiBbJ3N1cCddXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0T2JqID0gZnVuY3Rpb24gKGVkaXRvciwgdGFnTmFtZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuZmlsdGVyTm9kZUxpc3QoZWRpdG9yLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCksIHRhZ05hbWVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZSA9IHRoaXM7XG4gICAgICAgIC8v5re75Yqg5b+r5o236ZSuXG4gICAgICAgIG1lLmFkZHNob3J0Y3V0a2V5KHtcbiAgICAgICAgICAgIEJvbGQ6ICdjdHJsKzY2JywgLy9eQlxuICAgICAgICAgICAgSXRhbGljOiAnY3RybCs3MycsIC8vXklcbiAgICAgICAgICAgIFVuZGVybGluZTogJ2N0cmwrODUnIC8vXlVcbiAgICAgICAgfSk7XG4gICAgICAgIG1lLmFkZElucHV0UnVsZShmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCdiIGknKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG5vZGUudGFnTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdiJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUudGFnTmFtZSA9ICdzdHJvbmcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2knOlxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS50YWdOYW1lID0gJ2VtJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZvciAodmFyIHN0eWxlIGluIGJhc2VzdHlsZXMpIHtcbiAgICAgICAgICAgIChmdW5jdGlvbiAoY21kLCB0YWdOYW1lcykge1xuICAgICAgICAgICAgICAgIG1lLmNvbW1hbmRzW2NtZF0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqID0gZ2V0T2JqKHRoaXMsIHRhZ05hbWVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXBUZXh0ID0gbWUuZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHRtcFRleHQpLnJlbW92ZUlubGluZVN0eWxlKHRhZ05hbWVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUodG1wVGV4dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZSh0bXBUZXh0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wTm9kZSA9IHJhbmdlLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZXNbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY21kTmFtZSA9PSAnc3VwZXJzY3JpcHQnIHx8IGNtZE5hbWUgPT0gJ3N1YnNjcmlwdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFRleHQgPSBtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pbnNlcnROb2RlKHRtcFRleHQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUlubGluZVN0eWxlKFsnc3ViJywgJ3N1cCddKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zZXRTdGFydEJlZm9yZSh0bXBUZXh0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKHRtcE5vZGUpLnNldFN0YXJ0KHRtcE5vZGUsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNtZE5hbWUgPT0gJ3N1cGVyc2NyaXB0JyB8fCBjbWROYW1lID09ICdzdWJzY3JpcHQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JqIHx8IG9iai50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT0gY21kTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UucmVtb3ZlSW5saW5lU3R5bGUoWydzdWInLCAnc3VwJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iaiA/IHJhbmdlLnJlbW92ZUlubGluZVN0eWxlKHRhZ05hbWVzKSA6IHJhbmdlLmFwcGx5SW5saW5lU3R5bGUodGFnTmFtZXNbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0T2JqKHRoaXMsIHRhZ05hbWVzKSA/IDEgOiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pKHN0eWxlLCBiYXNlc3R5bGVzW3N0eWxlXSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gcGx1Z2lucy9lbGVtZW50cGF0aC5qc1xuICAgIC8qKlxuICAgICAqIOmAieWPlui3r+W+hOWRveS7pFxuICAgICAqIEBmaWxlXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snZWxlbWVudHBhdGgnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRMZXZlbCxcbiAgICAgICAgICAgIHRhZ05hbWVzLFxuICAgICAgICAgICAgbWUgPSB0aGlzO1xuICAgICAgICBtZS5zZXRPcHQoJ2VsZW1lbnRQYXRoRW5hYmxlZCcsIHRydWUpO1xuICAgICAgICBpZiAoIW1lLm9wdGlvbnMuZWxlbWVudFBhdGhFbmFibGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbWUuY29tbWFuZHNbJ2VsZW1lbnRwYXRoJ10gPSB7XG4gICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZE5hbWUsIGxldmVsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gdGFnTmFtZXNbbGV2ZWxdLFxuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRMZXZlbCA9IGxldmVsICogMTtcbiAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKHN0YXJ0KS5zZWxlY3QoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRWYWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8v5Lqn55Sf5LiA5Liq5Ymv5pys77yM5LiN6IO95L+u5pS55Y6f5p2l55qEc3RhcnRFbGVtZW50UGF0aDtcbiAgICAgICAgICAgICAgICB2YXIgcGFyZW50cyA9IFtdLmNvbmNhdCh0aGlzLnNlbGVjdGlvbi5nZXRTdGFydEVsZW1lbnRQYXRoKCkpLnJldmVyc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZXMgPSBbXTtcbiAgICAgICAgICAgICAgICB0YWdOYW1lcyA9IHBhcmVudHM7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBwYXJlbnRzW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaS5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IGNpLnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT0gJ2ltZycgJiYgY2kuZ2V0QXR0cmlidXRlKCdhbmNob3JuYW1lJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPSAnYW5jaG9yJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBuYW1lc1tpXSA9IG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50TGV2ZWwgPT0gaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudExldmVsID0gLTE7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvZm9ybWF0bWF0Y2guanNcbiAgICAvKipcbiAgICAgKiDmoLzlvI/liLfvvIzlj6rmoLzlvI9pbmxpbmXnmoRcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjIuNi4xXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiDmoLzlvI/liLdcbiAgICAgKiBAY29tbWFuZCBmb3JtYXRtYXRjaFxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcmVtaW5kIOivpeaTjeS9nOS4jeiDveWkjeWItuauteiQveagvOW8j1xuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiAvL2VkaXRvcuaYr+e8lui+keWZqOWunuS+i1xuICAgICAqIC8v6I635Y+W5qC85byP5Yi3XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnZm9ybWF0bWF0Y2gnICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snZm9ybWF0bWF0Y2gnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIGxpc3QgPSBbXSxcbiAgICAgICAgICAgIGltZyxcbiAgICAgICAgICAgIGZsYWcgPSAwO1xuXG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdyZXNldCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxpc3QgPSBbXTtcbiAgICAgICAgICAgIGZsYWcgPSAwO1xuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBhZGRMaXN0KHR5cGUsIGV2dCkge1xuICAgICAgICAgICAgaWYgKGJyb3dzZXIud2Via2l0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGV2dC50YXJnZXQudGFnTmFtZSA9PSAnSU1HJyA/IGV2dC50YXJnZXQgOiBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBhZGRGb3JtYXQocmFuZ2UpIHtcbiAgICAgICAgICAgICAgICBpZiAodGV4dCkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKHRleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmFuZ2UuYXBwbHlJbmxpbmVTdHlsZShsaXN0W2xpc3QubGVuZ3RoIC0gMV0udGFnTmFtZSwgbnVsbCwgbGlzdCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG1lLnVuZG9NYW5nZXIgJiYgbWUudW5kb01hbmdlci5zYXZlKCk7XG5cbiAgICAgICAgICAgIHZhciByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgIGltZ1QgPSB0YXJnZXQgfHwgcmFuZ2UuZ2V0Q2xvc2VkTm9kZSgpO1xuICAgICAgICAgICAgaWYgKGltZyAmJiBpbWdUICYmIGltZ1QudGFnTmFtZSA9PSAnSU1HJykge1xuICAgICAgICAgICAgICAgIC8vdHJhY2U6OTY0XG5cbiAgICAgICAgICAgICAgICBpbWdULnN0eWxlLmNzc1RleHQgKz1cbiAgICAgICAgICAgICAgICAgICAgJztmbG9hdDonICtcbiAgICAgICAgICAgICAgICAgICAgKGltZy5zdHlsZS5jc3NGbG9hdCB8fCBpbWcuc3R5bGUuc3R5bGVGbG9hdCB8fCAnbm9uZScpICtcbiAgICAgICAgICAgICAgICAgICAgJztkaXNwbGF5OicgK1xuICAgICAgICAgICAgICAgICAgICAoaW1nLnN0eWxlLmRpc3BsYXkgfHwgJ2lubGluZScpO1xuXG4gICAgICAgICAgICAgICAgaW1nID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpbWcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbGxhcHNlZCA9IHJhbmdlLmNvbGxhcHNlZDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRleHQgPSBtZS5kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnbWF0Y2gnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLmluc2VydE5vZGUodGV4dCkuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbWUuX19oYXNFbnRlckV4ZWNDb21tYW5kID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgLy/kuI3og73miopibG9ja+S4iueahOWxnuaAp+W5suaOiVxuICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjE1NTNcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlbW92ZUZvcm1hdEF0dHJpYnV0ZXMgPSBtZS5vcHRpb25zLnJlbW92ZUZvcm1hdEF0dHJpYnV0ZXM7XG4gICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMucmVtb3ZlRm9ybWF0QXR0cmlidXRlcyA9ICcnO1xuICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgncmVtb3ZlZm9ybWF0Jyk7XG4gICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMucmVtb3ZlRm9ybWF0QXR0cmlidXRlcyA9IHJlbW92ZUZvcm1hdEF0dHJpYnV0ZXM7XG4gICAgICAgICAgICAgICAgICAgIG1lLl9faGFzRW50ZXJFeGVjQ29tbWFuZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjk2OVxuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEZvcm1hdChyYW5nZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0QmVmb3JlKHRleHQpLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0ICYmIGRvbVV0aWxzLnJlbW92ZSh0ZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG1lLnVuZG9NYW5nZXIgJiYgbWUudW5kb01hbmdlci5zYXZlKCk7XG4gICAgICAgICAgICBtZS5yZW1vdmVMaXN0ZW5lcignbW91c2V1cCcsIGFkZExpc3QpO1xuICAgICAgICAgICAgZmxhZyA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBtZS5jb21tYW5kc1snZm9ybWF0bWF0Y2gnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgIGlmIChmbGFnKSB7XG4gICAgICAgICAgICAgICAgICAgIGZsYWcgPSAwO1xuICAgICAgICAgICAgICAgICAgICBsaXN0ID0gW107XG4gICAgICAgICAgICAgICAgICAgIG1lLnJlbW92ZUxpc3RlbmVyKCdtb3VzZXVwJywgYWRkTGlzdCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpbWcgPSByYW5nZS5nZXRDbG9zZWROb2RlKCk7XG4gICAgICAgICAgICAgICAgaWYgKCFpbWcgfHwgaW1nLnRhZ05hbWUgIT0gJ0lNRycpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSkuc2hyaW5rQm91bmRhcnkoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICAgICAgICAgIGxpc3QgPSBkb21VdGlscy5maW5kUGFyZW50cyhzdGFydCwgdHJ1ZSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhZG9tVXRpbHMuaXNCbG9ja0VsbShub2RlKSAmJiBub2RlLm5vZGVUeXBlID09IDE7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAvL2HkuI3og73liqDlhaXmoLzlvI/liLcsIOW5tuS4lOWFi+mahuiKgueCuVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGxpc3RbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaS50YWdOYW1lID09ICdBJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Quc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ21vdXNldXAnLCBhZGRMaXN0KTtcbiAgICAgICAgICAgICAgICBmbGFnID0gMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmbGFnO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5vdE5lZWRVbmRvOiAxXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvc2VhcmNocmVwbGFjZS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vY29tbWFuZHMg5p+l5om+5pu/5o2iXG4gICAgLy8vY29tbWFuZHNOYW1lICBTZWFyY2hSZXBsYWNlXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5p+l6K+i5pu/5o2iXG4gICAgLy8vY29tbWFuZHNEaWFsb2cgIGRpYWxvZ3NcXHNlYXJjaHJlcGxhY2VcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24g5p+l5om+5pu/5o2iXG4gICAgICogQGF1dGhvciB6aGFueWlcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbi5yZWdpc3Rlcignc2VhcmNocmVwbGFjZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcblxuICAgICAgICB2YXIgX2Jsb2NrRWxtID0geyB0YWJsZTogMSwgdGJvZHk6IDEsIHRyOiAxLCBvbDogMSwgdWw6IDEgfTtcblxuICAgICAgICBmdW5jdGlvbiBmaW5kVGV4dEluU3RyaW5nKHRleHRDb250ZW50LCBvcHQsIGN1cnJlbnRJbmRleCkge1xuICAgICAgICAgICAgdmFyIHN0ciA9IG9wdC5zZWFyY2hTdHI7XG4gICAgICAgICAgICBpZiAob3B0LmRpciA9PSAtMSkge1xuICAgICAgICAgICAgICAgIHRleHRDb250ZW50ID0gdGV4dENvbnRlbnQuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTtcbiAgICAgICAgICAgICAgICBzdHIgPSBzdHIuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTtcbiAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggPSB0ZXh0Q29udGVudC5sZW5ndGggLSBjdXJyZW50SW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcmVnID0gbmV3IFJlZ0V4cChzdHIsICdnJyArIChvcHQuY2FzZXNlbnNpdGl2ZSA/ICcnIDogJ2knKSksXG4gICAgICAgICAgICAgICAgbWF0Y2g7XG5cbiAgICAgICAgICAgIHdoaWxlICgobWF0Y2ggPSByZWcuZXhlYyh0ZXh0Q29udGVudCkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoLmluZGV4ID49IGN1cnJlbnRJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3B0LmRpciA9PSAtMSA/IHRleHRDb250ZW50Lmxlbmd0aCAtIG1hdGNoLmluZGV4IC0gb3B0LnNlYXJjaFN0ci5sZW5ndGggOiBtYXRjaC5pbmRleDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmluZFRleHRCbG9ja0VsbShub2RlLCBjdXJyZW50SW5kZXgsIG9wdCkge1xuICAgICAgICAgICAgdmFyIHRleHRDb250ZW50LFxuICAgICAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgICAgICAgIG1ldGhvZE5hbWUgPSBvcHQuYWxsIHx8IG9wdC5kaXIgPT0gMSA/ICdnZXROZXh0RG9tTm9kZScgOiAnZ2V0UHJlRG9tTm9kZSc7XG4gICAgICAgICAgICBpZiAoZG9tVXRpbHMuaXNCb2R5KG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgbm9kZSA9IG5vZGUuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBmaXJzdCA9IDE7XG4gICAgICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgICAgIHRleHRDb250ZW50ID0gbm9kZS5ub2RlVHlwZSA9PSAzID8gbm9kZS5ub2RlVmFsdWUgOiBub2RlW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddO1xuICAgICAgICAgICAgICAgIGluZGV4ID0gZmluZFRleHRJblN0cmluZyh0ZXh0Q29udGVudCwgb3B0LCBjdXJyZW50SW5kZXgpO1xuICAgICAgICAgICAgICAgIGZpcnN0ID0gMDtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGU6IG5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXhcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbm9kZSA9IGRvbVV0aWxzW21ldGhvZE5hbWVdKG5vZGUpO1xuICAgICAgICAgICAgICAgIHdoaWxlIChub2RlICYmIF9ibG9ja0VsbVtub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBkb21VdGlsc1ttZXRob2ROYW1lXShub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4ID1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdC5kaXIgPT0gLTFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IChub2RlLm5vZGVUeXBlID09IDMgPyBub2RlLm5vZGVWYWx1ZSA6IG5vZGVbYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J10pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmluZE5UZXh0SW5CbG9ja0VsbShub2RlLCBpbmRleCwgc3RyKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gMCxcbiAgICAgICAgICAgICAgICBjdXJyZW50Tm9kZSA9IG5vZGUuZmlyc3RDaGlsZCxcbiAgICAgICAgICAgICAgICBjdXJyZW50Tm9kZUxlbmd0aCA9IDAsXG4gICAgICAgICAgICAgICAgcmVzdWx0O1xuICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnROb2RlLm5vZGVUeXBlID09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudE5vZGVMZW5ndGggPSBjdXJyZW50Tm9kZS5ub2RlVmFsdWUucmVwbGFjZSgvKF5bXFx0XFxyXFxuXSspfChbXFx0XFxyXFxuXSskKS8sICcnKS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCArPSBjdXJyZW50Tm9kZUxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJbmRleCA+PSBpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlOiBjdXJyZW50Tm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleDogY3VycmVudE5vZGVMZW5ndGggLSAoY3VycmVudEluZGV4IC0gaW5kZXgpXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghZHRkLiRlbXB0eVtjdXJyZW50Tm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50Tm9kZUxlbmd0aCA9IGN1cnJlbnROb2RlW2Jyb3dzZXIuaWUgPyAnaW5uZXJUZXh0JyA6ICd0ZXh0Q29udGVudCddLnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICAgICAgICAvKF5bXFx0XFxyXFxuXSspfChbXFx0XFxyXFxuXSskKS8sXG4gICAgICAgICAgICAgICAgICAgICAgICAnJ1xuICAgICAgICAgICAgICAgICAgICApLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4ICs9IGN1cnJlbnROb2RlTGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudEluZGV4ID49IGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBmaW5kTlRleHRJbkJsb2NrRWxtKGN1cnJlbnROb2RlLCBjdXJyZW50Tm9kZUxlbmd0aCAtIChjdXJyZW50SW5kZXggLSBpbmRleCksIHN0cik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjdXJyZW50Tm9kZSA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGN1cnJlbnROb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHNlYXJjaFJlcGxhY2UobWUsIG9wdCkge1xuICAgICAgICAgICAgdmFyIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgIHN0YXJ0QmxvY2tOb2RlLFxuICAgICAgICAgICAgICAgIHNlYXJjaFN0ciA9IG9wdC5zZWFyY2hTdHIsXG4gICAgICAgICAgICAgICAgc3BhbiA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgICAgICAgIHNwYW4uaW5uZXJIVE1MID0gJyQkdWVkaXRvcl9zZWFyY2hyZXBsYWNlX2tleSQkJztcblxuICAgICAgICAgICAgcm5nLnNocmlua0JvdW5kYXJ5KHRydWUpO1xuXG4gICAgICAgICAgICAvL+WIpOaWreaYr+S4jeaYr+esrOS4gOasoemAieS4rVxuICAgICAgICAgICAgaWYgKCFybmcuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgcm5nLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIHZhciBybmdUZXh0ID0gbWUuc2VsZWN0aW9uLmdldFRleHQoKTtcbiAgICAgICAgICAgICAgICBpZiAobmV3IFJlZ0V4cCgnXicgKyBvcHQuc2VhcmNoU3RyICsgJyQnLCBvcHQuY2FzZXNlbnNpdGl2ZSA/ICcnIDogJ2knKS50ZXN0KHJuZ1RleHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHQucmVwbGFjZVN0ciAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VUZXh0KHJuZywgb3B0LnJlcGxhY2VTdHIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm5nLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBybmcuY29sbGFwc2Uob3B0LmRpciA9PSAtMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJuZy5pbnNlcnROb2RlKHNwYW4pO1xuICAgICAgICAgICAgcm5nLmVubGFyZ2VUb0Jsb2NrRWxtKHRydWUpO1xuICAgICAgICAgICAgc3RhcnRCbG9ja05vZGUgPSBybmcuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gc3RhcnRCbG9ja05vZGVbYnJvd3Nlci5pZSA/ICdpbm5lclRleHQnIDogJ3RleHRDb250ZW50J10uaW5kZXhPZihcbiAgICAgICAgICAgICAgICAnJCR1ZWRpdG9yX3NlYXJjaHJlcGxhY2Vfa2V5JCQnXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgcm5nLnNldFN0YXJ0QmVmb3JlKHNwYW4pO1xuICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHNwYW4pO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGZpbmRUZXh0QmxvY2tFbG0oc3RhcnRCbG9ja05vZGUsIGN1cnJlbnRJbmRleCwgb3B0KTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcm5nU3RhcnQgPSBmaW5kTlRleHRJbkJsb2NrRWxtKHJlc3VsdC5ub2RlLCByZXN1bHQuaW5kZXgsIHNlYXJjaFN0cik7XG4gICAgICAgICAgICAgICAgdmFyIHJuZ0VuZCA9IGZpbmROVGV4dEluQmxvY2tFbG0ocmVzdWx0Lm5vZGUsIHJlc3VsdC5pbmRleCArIHNlYXJjaFN0ci5sZW5ndGgsIHNlYXJjaFN0cik7XG4gICAgICAgICAgICAgICAgcm5nLnNldFN0YXJ0KHJuZ1N0YXJ0Lm5vZGUsIHJuZ1N0YXJ0LmluZGV4KS5zZXRFbmQocm5nRW5kLm5vZGUsIHJuZ0VuZC5pbmRleCk7XG5cbiAgICAgICAgICAgICAgICBpZiAob3B0LnJlcGxhY2VTdHIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICByZXBsYWNlVGV4dChybmcsIG9wdC5yZXBsYWNlU3RyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcm5nLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBybmcuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmVwbGFjZVRleHQocm5nLCBzdHIpIHtcbiAgICAgICAgICAgIHN0ciA9IG1lLmRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHN0cik7XG4gICAgICAgICAgICBybmcuZGVsZXRlQ29udGVudHMoKS5pbnNlcnROb2RlKHN0cik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgICAgICAgICAgc2VhcmNocmVwbGFjZToge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZE5hbWUsIG9wdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZXh0ZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2VzZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXI6IDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbnVtID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuYWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJuZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdCA9IG1lLmJvZHkuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlyc3QgJiYgZmlyc3Qubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuc2V0U3RhcnQoZmlyc3QsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBybmcuc2hyaW5rQm91bmRhcnkodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChmaXJzdC5ub2RlVHlwZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5zZXRTdGFydEJlZm9yZShmaXJzdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJuZy5jb2xsYXBzZSh0cnVlKS5zZWxlY3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdC5yZXBsYWNlU3RyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHNlYXJjaFJlcGxhY2UodGhpcywgb3B0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW0rKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdC5yZXBsYWNlU3RyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzYXZlU2NlbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlYXJjaFJlcGxhY2UodGhpcywgb3B0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW0rKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3NhdmVTY2VuZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbm90TmVlZFVuZG86IDFcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL2N1c3RvbXN0eWxlLmpzXG4gICAgLyoqXG4gICAgICog6Ieq5a6a5LmJ5qC35byPXG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5qC55o2uY29uZmln6YWN572u5paH5Lu26YeM4oCcY3VzdG9tc3R5bGXigJ3pgInpobnnmoTlgLzlr7nljLnphY3nmoTmoIfnrb7miafooYzmoLflvI/mm7/mjaLjgIJcbiAgICAgKiBAY29tbWFuZCBjdXN0b21zdHlsZVxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnY3VzdG9tc3R5bGUnICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgVUUucGx1Z2luc1snY3VzdG9tc3R5bGUnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgbWUuc2V0T3B0KHtcbiAgICAgICAgICAgIGN1c3RvbXN0eWxlOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0YWc6ICdoMScsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICd0YycsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnZm9udC1zaXplOjMycHg7Zm9udC13ZWlnaHQ6Ym9sZDtib3JkZXItYm90dG9tOiNjY2MgMnB4IHNvbGlkO3BhZGRpbmc6MCA0cHggMCAwO3RleHQtYWxpZ246Y2VudGVyO21hcmdpbjowIDAgMjBweCAwOydcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGFnOiAnaDEnLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAndGwnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2ZvbnQtc2l6ZTozMnB4O2ZvbnQtd2VpZ2h0OmJvbGQ7Ym9yZGVyLWJvdHRvbTojY2NjIDJweCBzb2xpZDtwYWRkaW5nOjAgNHB4IDAgMDt0ZXh0LWFsaWduOmxlZnQ7bWFyZ2luOjAgMCAxMHB4IDA7J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0YWc6ICdzcGFuJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltJyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdmb250LXNpemU6MTZweDtmb250LXN0eWxlOml0YWxpYztmb250LXdlaWdodDpib2xkO2xpbmUtaGVpZ2h0OjE4cHg7J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0YWc6ICdzcGFuJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2hpJyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdmb250LXNpemU6MTZweDtmb250LXN0eWxlOml0YWxpYztmb250LXdlaWdodDpib2xkO2NvbG9yOnJnYig1MSwgMTUzLCAyMDQpO2xpbmUtaGVpZ2h0OjE4cHg7J1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSk7XG4gICAgICAgIG1lLmNvbW1hbmRzWydjdXN0b21zdHlsZSddID0ge1xuICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCBvYmopIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICB0YWdOYW1lID0gb2JqLnRhZyxcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0QXR0cmlidXRlKCdsYWJlbCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICAgICAgICAgIGJrLFxuICAgICAgICAgICAgICAgICAgICB0bXBPYmogPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIG9iaikge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2JqW3BdICE9PSB1bmRlZmluZWQpIHRtcE9ialtwXSA9IG9ialtwXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVsZXRlIHRtcE9iai50YWc7XG4gICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoJ2xhYmVsJykgPT0gb2JqLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gdGhpcy5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgYmsgPSByYW5nZS5jcmVhdGVCb29rbWFyaygpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3RyYWNlOjE3MzIg5Yig5o6J6Ieq5a6a5LmJ5qCH562+77yM6KaB5pyJcOadpeWbnuWhq+ermeS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kYmxvY2tbbm9kZS50YWdOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaWxsTm9kZSA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5tb3ZlQ2hpbGQobm9kZSwgZmlsbE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZmlsbE5vZGUsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbW1vbiA9IGRvbVV0aWxzLmdldENvbW1vbkFuY2VzdG9yKGJrLnN0YXJ0LCBiay5lbmQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoY29tbW9uLCB0YWdOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXcgUmVnRXhwKHRhZ05hbWUsICdpJykudGVzdChjb21tb24udGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2Rlcy5wdXNoKGNvbW1vbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbmk7IChuaSA9IG5vZGVzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmkuZ2V0QXR0cmlidXRlKCdsYWJlbCcpID09IG9iai5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHMgPSBkb21VdGlscy5nZXRQb3NpdGlvbihuaSwgYmsuc3RhcnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGUgPSBkb21VdGlscy5nZXRQb3NpdGlvbihuaSwgYmsuZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHBzICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HIHx8IHBzICYgZG9tVXRpbHMuUE9TSVRJT05fQ09OVEFJTlMpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGUgJiBkb21VdGlscy5QT1NJVElPTl9QUkVDRURJTkcgfHwgcGUgJiBkb21VdGlscy5QT1NJVElPTl9DT05UQUlOUylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kYmxvY2tbdGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsbE5vZGUgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMubW92ZUNoaWxkKG5pLCBmaWxsTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmkucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZmlsbE5vZGUsIG5pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5pLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0QXR0cmlidXRlKCdsYWJlbCcpID09IG9iai5sYWJlbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShub2RlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGR0ZC4kYmxvY2tbdGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhlY0NvbW1hbmQoJ3BhcmFncmFwaCcsIHRhZ05hbWUsIHRtcE9iaiwgJ2N1c3RvbXN0eWxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyYW5nZS5jb2xsYXBzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5jb2xsYXBzZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSBkb21VdGlscy5maW5kUGFyZW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLmdldEF0dHJpYnV0ZSgnbGFiZWwnKSA9PSBvYmoubGFiZWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwTm9kZSA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pbnNlcnRBZnRlcihub2RlLCBwTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHBOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5zZXRTdGFydChwTm9kZSwgMCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnNldEF0dHJpYnV0ZXMobm9kZSwgdG1wT2JqKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5pbnNlcnROb2RlKG5vZGUpLnNldFN0YXJ0KG5vZGUsIDApLnNldEN1cnNvcigpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBiayA9IHJhbmdlLmNyZWF0ZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5hcHBseUlubGluZVN0eWxlKHRhZ05hbWUsIHRtcE9iaikubW92ZVRvQm9va21hcmsoYmspLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudCA9IGRvbVV0aWxzLmZpbHRlck5vZGVMaXN0KHRoaXMuc2VsZWN0aW9uLmdldFN0YXJ0RWxlbWVudFBhdGgoKSwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0QXR0cmlidXRlKCdsYWJlbCcpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnQgPyBwYXJlbnQuZ2V0QXR0cmlidXRlKCdsYWJlbCcpIDogJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIC8v5b2T5Y675o6JY3VzdG9tc3R5bGXmmK/vvIzlpoLmnpzmmK/lnZflhYPntKDvvIznlKhw5Luj5pu/XG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBrZXlDb2RlID0gZXZ0LmtleUNvZGUgfHwgZXZ0LndoaWNoO1xuXG4gICAgICAgICAgICBpZiAoa2V5Q29kZSA9PSAzMiB8fCBrZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGRvbVV0aWxzLmZpbmRQYXJlbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3Rpb24uZ2V0U3RhcnQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0QXR0cmlidXRlKCdsYWJlbCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgJiYgZHRkLiRibG9ja1tub2RlLnRhZ05hbWVdICYmIGRvbVV0aWxzLmlzRW1wdHlOb2RlKG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmluc2VydEFmdGVyKG5vZGUsIHApO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuZmlsbE5vZGUobWUuZG9jdW1lbnQsIHApO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQocCwgMCkuc2V0Q3Vyc29yKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL2NhdGNocmVtb3RlaW1hZ2UuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2NvbW1hbmRzIOi/nOeoi+WbvueJh+aKk+WPllxuICAgIC8vL2NvbW1hbmRzTmFtZSAgY2F0Y2hSZW1vdGVJbWFnZSxjYXRjaHJlbW90ZWltYWdlZW5hYmxlXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg6L+c56iL5Zu+54mH5oqT5Y+WXG4gICAgLyoqXG4gICAgICog6L+c56iL5Zu+54mH5oqT5Y+WLOW9k+W8gOWQr+acrOaPkuS7tuaXtuaJgOacieS4jeespuWQiOacrOWcsOWfn+WQjeeahOWbvueJh+mDveWwhuiiq+aKk+WPluaIkOS4uuacrOWcsOacjeWKoeWZqOS4iueahOWbvueJh1xuICAgICAqL1xuICAgIFVFLnBsdWdpbnNbJ2NhdGNocmVtb3RlaW1hZ2UnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgIGFqYXggPSBVRS5hamF4O1xuXG4gICAgICAgIC8qIOiuvue9rum7mOiupOWAvCAqL1xuICAgICAgICBpZiAobWUub3B0aW9ucy5jYXRjaFJlbW90ZUltYWdlRW5hYmxlID09PSBmYWxzZSkgcmV0dXJuO1xuICAgICAgICBtZS5zZXRPcHQoe1xuICAgICAgICAgICAgY2F0Y2hSZW1vdGVJbWFnZUVuYWJsZTogZmFsc2VcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2FmdGVycGFzdGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvL+aaguaXtuS4jeW8gOWQryBkdWFuanVuXG4gICAgICAgICAgICAvL21lLmZpcmVFdmVudChcImNhdGNoUmVtb3RlSW1hZ2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG1lLmFkZExpc3RlbmVyKCdjYXRjaFJlbW90ZUltYWdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNhdGNoZXJMb2NhbERvbWFpbiA9IG1lLmdldE9wdCgnY2F0Y2hlckxvY2FsRG9tYWluJyksXG4gICAgICAgICAgICAgICAgY2F0Y2hlckFjdGlvblVybCA9IG1lLmdldEFjdGlvblVybChtZS5nZXRPcHQoJ2NhdGNoZXJBY3Rpb25OYW1lJykpLFxuICAgICAgICAgICAgICAgIGNhdGNoZXJVcmxQcmVmaXggPSBtZS5nZXRPcHQoJ2NhdGNoZXJVcmxQcmVmaXgnKSxcbiAgICAgICAgICAgICAgICBjYXRjaGVyRmllbGROYW1lID0gbWUuZ2V0T3B0KCdjYXRjaGVyRmllbGROYW1lJyk7XG5cbiAgICAgICAgICAgIHZhciByZW1vdGVJbWFnZXMgPSBbXSxcbiAgICAgICAgICAgICAgICBpbWdzID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobWUuZG9jdW1lbnQsICdpbWcnKSxcbiAgICAgICAgICAgICAgICB0ZXN0ID0gZnVuY3Rpb24gKHNyYywgdXJscykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3JjLmluZGV4T2YobG9jYXRpb24uaG9zdCkgIT0gLTEgfHwgLyheXFwuKXwoXlxcLykvLnRlc3Qoc3JjKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHVybHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwLCB1cmw7ICh1cmwgPSB1cmxzW2orK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3JjLmluZGV4T2YodXJsKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGltZ3NbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIGlmIChjaS5nZXRBdHRyaWJ1dGUoJ3dvcmRfaW1nJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBzcmMgPSBjaS5nZXRBdHRyaWJ1dGUoJ19zcmMnKSB8fCBjaS5zcmMgfHwgJyc7XG4gICAgICAgICAgICAgICAgaWYgKC9eKGh0dHBzP3xmdHApOi9pLnRlc3Qoc3JjKSAmJiAhdGVzdChzcmMsIGNhdGNoZXJMb2NhbERvbWFpbikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVtb3RlSW1hZ2VzLnB1c2goc3JjKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyZW1vdGVJbWFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY2F0Y2hyZW1vdGVpbWFnZShyZW1vdGVJbWFnZXMsIHtcbiAgICAgICAgICAgICAgICAgICAgLy/miJDlip/mipPlj5ZcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGluZm8gPSByLnN0YXRlICE9PSB1bmRlZmluZWQgPyByIDogZXZhbCgnKCcgKyByLnJlc3BvbnNlVGV4dCArICcpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiDojrflj5bmupDot6/lvoTlkozmlrDot6/lvoQgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGosXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2osXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2xkU3JjLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NyYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ID0gaW5mby5saXN0O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyAoY2kgPSBpbWdzW2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRTcmMgPSBjaS5nZXRBdHRyaWJ1dGUoJ19zcmMnKSB8fCBjaS5zcmMgfHwgJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChqID0gMDsgKGNqID0gbGlzdFtqKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbGRTcmMgPT0gY2ouc291cmNlICYmIGNqLnN0YXRlID09ICdTVUNDRVNTJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mipPlj5blpLHotKXml7bkuI3lgZrmm7/mjaLlpITnkIZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NyYyA9IGNhdGNoZXJVcmxQcmVmaXggKyBjai51cmw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5zZXRBdHRyaWJ1dGVzKGNpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBuZXdTcmMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3NyYzogbmV3U3JjXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdjYXRjaHJlbW90ZXN1Y2Nlc3MnKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLy/lm57osIPlpLHotKXvvIzmnKzmrKHor7fmsYLotoXml7ZcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY2F0Y2hyZW1vdGVlcnJvcicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGNhdGNocmVtb3RlaW1hZ2UoaW1ncywgY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IHV0aWxzLnNlcmlhbGl6ZVBhcmFtKG1lLnF1ZXJ5Q29tbWFuZFZhbHVlKCdzZXJ2ZXJwYXJhbScpKSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgdXJsID0gdXRpbHMuZm9ybWF0VXJsKFxuICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2hlckFjdGlvblVybCArIChjYXRjaGVyQWN0aW9uVXJsLmluZGV4T2YoJz8nKSA9PSAtMSA/ICc/JyA6ICcmJykgKyBwYXJhbXNcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgaXNKc29ucCA9IHV0aWxzLmlzQ3Jvc3NEb21haW5VcmwodXJsKSxcbiAgICAgICAgICAgICAgICAgICAgb3B0ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogaXNKc29ucCA/ICdqc29ucCcgOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDYwMDAwLCAvL+WNleS9je+8muavq+enku+8jOWbnuiwg+ivt+axgui2heaXtuiuvue9ruOAguebruagh+eUqOaIt+WmguaenOe9kemAn+S4jeaYr+W+iOW/q+eahOivneatpOWkhOW7uuiuruiuvue9ruS4gOS4qui+g+Wkp+eahOaVsOWAvFxuICAgICAgICAgICAgICAgICAgICAgICAgb25zdWNjZXNzOiBjYWxsYmFja3NbJ3N1Y2Nlc3MnXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uZXJyb3I6IGNhbGxiYWNrc1snZXJyb3InXVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG9wdFtjYXRjaGVyRmllbGROYW1lXSA9IGltZ3M7XG4gICAgICAgICAgICAgICAgYWpheC5yZXF1ZXN0KHVybCwgb3B0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvaW5zZXJ0cGFyYWdyYXBoLmpzXG4gICAgLyoqXG4gICAgICog5o+S5YWl5q616JC9XG4gICAgICogQGZpbGVcbiAgICAgKiBAc2luY2UgMS4yLjYuMVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICog5o+S5YWl5q616JC9XG4gICAgICogQGNvbW1hbmQgaW5zZXJ0cGFyYWdyYXBoXG4gICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiAvL2VkaXRvcuaYr+e8lui+keWZqOWunuS+i1xuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ2luc2VydHBhcmFncmFwaCcgKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cblxuICAgIFVFLmNvbW1hbmRzWydpbnNlcnRwYXJhZ3JhcGgnXSA9IHtcbiAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWROYW1lLCBmcm9udCkge1xuICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICByYW5nZSA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgICAgICAgIHN0YXJ0ID0gcmFuZ2Uuc3RhcnRDb250YWluZXIsXG4gICAgICAgICAgICAgICAgdG1wTm9kZTtcbiAgICAgICAgICAgIHdoaWxlIChzdGFydCkge1xuICAgICAgICAgICAgICAgIGlmIChkb21VdGlscy5pc0JvZHkoc3RhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0bXBOb2RlID0gc3RhcnQ7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRtcE5vZGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgcCA9IG1lLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgICAgICBpZiAoZnJvbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wTm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShwLCB0bXBOb2RlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0bXBOb2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHAsIHRtcE5vZGUubmV4dFNpYmxpbmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21VdGlscy5maWxsTm9kZShtZS5kb2N1bWVudCwgcCk7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQocCwgMCkuc2V0Q3Vyc29yKGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBwbHVnaW5zL3dlYmFwcC5qc1xuICAgIC8qKlxuICAgICAqIOeZvuW6puW6lOeUqFxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIOaPkuWFpeeZvuW6puW6lOeUqFxuICAgICAqIEBjb21tYW5kIHdlYmFwcFxuICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgKiBAcmVtaW5kIOmcgOimgeeZvuW6pkFQUEtleVxuICAgICAqIEByZW1pbmQg55m+5bqm5bqU55So5Li76aG177yaIDxhIGhyZWY9XCJodHRwOi8vYXBwLmJhaWR1LmNvbS9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5odHRwOi8vYXBwLmJhaWR1LmNvbS88L2E+XG4gICAgICogQHBhcmFtIHsgT2JqZWN0IH0gYXBwT3B0aW9ucyDlupTnlKjmiYDpnIDnmoTlj4LmlbDpobnvvIwg5pSv5oyB55qEa2V55pyJ77yaIHRpdGxlPT7lupTnlKjmoIfpopjvvIwgd2lkdGg9PuW6lOeUqOWuueWZqOWuveW6pu+8jFxuICAgICAqIGhlaWdodD0+5bqU55So5a655Zmo6auY5bqm77yMbG9nbz0+5bqU55SobG9nb++8jHVybD0+5bqU55So5Zyw5Z2AXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICogLy9lZGl0b3LmmK/nvJbovpHlmajlrp7kvotcbiAgICAgKiAvL+WcqOe8lui+keWZqOmHjOaPkuWFpeS4gOS4quKAnOakjeeJqeWkp+aImOWDteWwuOKAneeahEFQUFxuICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCggJ3dlYmFwcCcgLCB7XG4gICAgICogICAgIHRpdGxlOiAn5qSN54mp5aSn5oiY5YO15bC4JyxcbiAgICAgKiAgICAgd2lkdGg6IDU2MCxcbiAgICAgKiAgICAgaGVpZ2h0OiA0NjUsXG4gICAgICogICAgIGxvZ286ICflupTnlKjlsZXnpLrnmoTlm77niYcnLFxuICAgICAqICAgICB1cmw6ICfnmb7luqblupTnlKjnmoTlnLDlnYAnXG4gICAgICogfSApO1xuICAgICAqIGBgYFxuICAgICAqL1xuXG4gICAgLy9VRS5wbHVnaW5zWyd3ZWJhcHAnXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvLyAgICB2YXIgbWUgPSB0aGlzO1xuICAgIC8vICAgIGZ1bmN0aW9uIGNyZWF0ZUluc2VydFN0ciggb2JqLCB0b0lmcmFtZSwgYWRkUGFyYWdyYXBoICkge1xuICAgIC8vICAgICAgICByZXR1cm4gIXRvSWZyYW1lID9cbiAgICAvLyAgICAgICAgICAgICAgICAoYWRkUGFyYWdyYXBoID8gJzxwPicgOiAnJykgKyAnPGltZyB0aXRsZT1cIicrb2JqLnRpdGxlKydcIiB3aWR0aD1cIicgKyBvYmoud2lkdGggKyAnXCIgaGVpZ2h0PVwiJyArIG9iai5oZWlnaHQgKyAnXCInICtcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICcgc3JjPVwiJyArIG1lLm9wdGlvbnMuVUVESVRPUl9IT01FX1VSTCArICd0aGVtZXMvZGVmYXVsdC9pbWFnZXMvc3BhY2VyLmdpZlwiIHN0eWxlPVwiYmFja2dyb3VuZDp1cmwoJyArIG9iai5sb2dvKycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyOyBib3JkZXI6MXB4IHNvbGlkIGdyYXk7XCIgY2xhc3M9XCJlZHVpLWZha2VkLXdlYmFwcFwiIF91cmw9XCInICsgb2JqLnVybCArICdcIiAvPicgK1xuICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgKGFkZFBhcmFncmFwaCA/ICc8L3A+JyA6ICcnKVxuICAgIC8vICAgICAgICAgICAgICAgIDpcbiAgICAvLyAgICAgICAgICAgICAgICAnPGlmcmFtZSBjbGFzcz1cImVkdWktZmFrZWQtd2ViYXBwXCIgdGl0bGU9XCInK29iai50aXRsZSsnXCIgd2lkdGg9XCInICsgb2JqLndpZHRoICsgJ1wiIGhlaWdodD1cIicgKyBvYmouaGVpZ2h0ICsgJ1wiICBzY3JvbGxpbmc9XCJub1wiIGZyYW1lYm9yZGVyPVwiMFwiIHNyYz1cIicgKyBvYmoudXJsICsgJ1wiIGxvZ29fdXJsID0gJytvYmoubG9nbysnPjwvaWZyYW1lPic7XG4gICAgLy8gICAgfVxuICAgIC8vXG4gICAgLy8gICAgZnVuY3Rpb24gc3dpdGNoSW1nQW5kSWZyYW1lKCBpbWcyZnJhbWUgKSB7XG4gICAgLy8gICAgICAgIHZhciB0bXBkaXYsXG4gICAgLy8gICAgICAgICAgICAgICAgbm9kZXMgPSBkb21VdGlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSggbWUuZG9jdW1lbnQsICFpbWcyZnJhbWUgPyBcImlmcmFtZVwiIDogXCJpbWdcIiApO1xuICAgIC8vICAgICAgICBmb3IgKCB2YXIgaSA9IDAsIG5vZGU7IG5vZGUgPSBub2Rlc1tpKytdOyApIHtcbiAgICAvLyAgICAgICAgICAgIGlmICggbm9kZS5jbGFzc05hbWUgIT0gXCJlZHVpLWZha2VkLXdlYmFwcFwiICl7XG4gICAgLy8gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgLy8gICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICAgICB0bXBkaXYgPSBtZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG4gICAgLy8gICAgICAgICAgICB0bXBkaXYuaW5uZXJIVE1MID0gY3JlYXRlSW5zZXJ0U3RyKCBpbWcyZnJhbWUgPyB7dXJsOm5vZGUuZ2V0QXR0cmlidXRlKCBcIl91cmxcIiApLCB3aWR0aDpub2RlLndpZHRoLCBoZWlnaHQ6bm9kZS5oZWlnaHQsdGl0bGU6bm9kZS50aXRsZSxsb2dvOm5vZGUuc3R5bGUuYmFja2dyb3VuZEltYWdlLnJlcGxhY2UoXCJ1cmwoXCIsXCJcIikucmVwbGFjZShcIilcIixcIlwiKX0gOiB7dXJsOm5vZGUuZ2V0QXR0cmlidXRlKCBcInNyY1wiLCAyICksdGl0bGU6bm9kZS50aXRsZSwgd2lkdGg6bm9kZS53aWR0aCwgaGVpZ2h0Om5vZGUuaGVpZ2h0LGxvZ286bm9kZS5nZXRBdHRyaWJ1dGUoXCJsb2dvX3VybFwiKX0sIGltZzJmcmFtZSA/IHRydWUgOiBmYWxzZSxmYWxzZSApO1xuICAgIC8vICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZCggdG1wZGl2LmZpcnN0Q2hpbGQsIG5vZGUgKTtcbiAgICAvLyAgICAgICAgfVxuICAgIC8vICAgIH1cbiAgICAvL1xuICAgIC8vICAgIG1lLmFkZExpc3RlbmVyKCBcImJlZm9yZWdldGNvbnRlbnRcIiwgZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICAgICBzd2l0Y2hJbWdBbmRJZnJhbWUoIHRydWUgKTtcbiAgICAvLyAgICB9ICk7XG4gICAgLy8gICAgbWUuYWRkTGlzdGVuZXIoICdhZnRlcnNldGNvbnRlbnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgLy8gICAgICAgIHN3aXRjaEltZ0FuZElmcmFtZSggZmFsc2UgKTtcbiAgICAvLyAgICB9ICk7XG4gICAgLy8gICAgbWUuYWRkTGlzdGVuZXIoICdhZnRlcmdldGNvbnRlbnQnLCBmdW5jdGlvbiAoIGNtZE5hbWUgKSB7XG4gICAgLy8gICAgICAgIGlmICggY21kTmFtZSA9PSAnYWZ0ZXJnZXRjb250ZW50JyAmJiBtZS5xdWVyeUNvbW1hbmRTdGF0ZSggJ3NvdXJjZScgKSApe1xuICAgIC8vICAgICAgICAgICAgcmV0dXJuO1xuICAgIC8vICAgICAgICB9XG4gICAgLy8gICAgICAgIHN3aXRjaEltZ0FuZElmcmFtZSggZmFsc2UgKTtcbiAgICAvLyAgICB9ICk7XG4gICAgLy9cbiAgICAvLyAgICBtZS5jb21tYW5kc1snd2ViYXBwJ10gPSB7XG4gICAgLy8gICAgICAgIGV4ZWNDb21tYW5kOmZ1bmN0aW9uICggY21kLCBvYmogKSB7XG4gICAgLy8gICAgICAgICAgICBtZS5leGVjQ29tbWFuZCggXCJpbnNlcnRodG1sXCIsIGNyZWF0ZUluc2VydFN0ciggb2JqLCBmYWxzZSx0cnVlICkgKTtcbiAgICAvLyAgICAgICAgfVxuICAgIC8vICAgIH07XG4gICAgLy99O1xuXG4gICAgVUUucGx1Z2luLnJlZ2lzdGVyKCd3ZWJhcHAnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUluc2VydFN0cihvYmosIHRvRW1iZWQpIHtcbiAgICAgICAgICAgIHJldHVybiAhdG9FbWJlZFxuICAgICAgICAgICAgICAgID8gJzxpbWcgdGl0bGU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICBvYmoudGl0bGUgK1xuICAgICAgICAgICAgICAgICAgICAgICdcIiB3aWR0aD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgIG9iai53aWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiIGhlaWdodD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgIG9iai5oZWlnaHQgK1xuICAgICAgICAgICAgICAgICAgICAgICdcIicgK1xuICAgICAgICAgICAgICAgICAgICAgICcgc3JjPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgbWUub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMICtcbiAgICAgICAgICAgICAgICAgICAgICAndGhlbWVzL2RlZmF1bHQvaW1hZ2VzL3NwYWNlci5naWZcIiBfbG9nb191cmw9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICBvYmoubG9nbyArXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiIHN0eWxlPVwiYmFja2dyb3VuZDp1cmwoJyArXG4gICAgICAgICAgICAgICAgICAgICAgb2JqLmxvZ28gK1xuICAgICAgICAgICAgICAgICAgICAgICcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyOyBib3JkZXI6MXB4IHNvbGlkIGdyYXk7XCIgY2xhc3M9XCJlZHVpLWZha2VkLXdlYmFwcFwiIF91cmw9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICBvYmoudXJsICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgJyArXG4gICAgICAgICAgICAgICAgICAgICAgKG9iai5hbGlnbiAmJiAhb2JqLmNzc2Zsb2F0ID8gJ2FsaWduPVwiJyArIG9iai5hbGlnbiArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgIChvYmouY3NzZmxvYXQgPyAnc3R5bGU9XCJmbG9hdDonICsgb2JqLmNzc2Zsb2F0ICsgJ1wiJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgJy8+J1xuICAgICAgICAgICAgICAgIDogJzxpZnJhbWUgY2xhc3M9XCJlZHVpLWZha2VkLXdlYmFwcFwiIHRpdGxlPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgb2JqLnRpdGxlICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgJyArXG4gICAgICAgICAgICAgICAgICAgICAgKG9iai5hbGlnbiAmJiAhb2JqLmNzc2Zsb2F0ID8gJ2FsaWduPVwiJyArIG9iai5hbGlnbiArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgIChvYmouY3NzZmxvYXQgPyAnc3R5bGU9XCJmbG9hdDonICsgb2JqLmNzc2Zsb2F0ICsgJ1wiJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgb2JqLndpZHRoICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgaGVpZ2h0PVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgb2JqLmhlaWdodCArXG4gICAgICAgICAgICAgICAgICAgICAgJ1wiICBzY3JvbGxpbmc9XCJub1wiIGZyYW1lYm9yZGVyPVwiMFwiIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgIG9iai51cmwgK1xuICAgICAgICAgICAgICAgICAgICAgICdcIiBsb2dvX3VybCA9IFwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgb2JqLmxvZ28gK1xuICAgICAgICAgICAgICAgICAgICAgICdcIj48L2lmcmFtZT4nO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvdXRwdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgnaW1nJyksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBodG1sO1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5nZXRBdHRyKCdjbGFzcycpID09ICdlZHVpLWZha2VkLXdlYmFwcCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgPSBjcmVhdGVJbnNlcnRTdHIoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogbm9kZS5nZXRBdHRyKCd0aXRsZScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogbm9kZS5nZXRBdHRyKCd3aWR0aCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IG5vZGUuZ2V0QXR0cignaGVpZ2h0JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduOiBub2RlLmdldEF0dHIoJ2FsaWduJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzc2Zsb2F0OiBub2RlLmdldFN0eWxlKCdmbG9hdCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IG5vZGUuZ2V0QXR0cignX3VybCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dvOiBub2RlLmdldEF0dHIoJ19sb2dvX3VybCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVtYmVkID0gVUUudU5vZGUuY3JlYXRlRWxlbWVudChodG1sKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoZW1iZWQsIG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5wdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgnaWZyYW1lJyksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmdldEF0dHIoJ2NsYXNzJykgPT0gJ2VkdWktZmFrZWQtd2ViYXBwJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGltZyA9IFVFLnVOb2RlLmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlSW5zZXJ0U3RyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IG5vZGUuZ2V0QXR0cigndGl0bGUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IG5vZGUuZ2V0QXR0cignd2lkdGgnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBub2RlLmdldEF0dHIoJ2hlaWdodCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbjogbm9kZS5nZXRBdHRyKCdhbGlnbicpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3NmbG9hdDogbm9kZS5nZXRTdHlsZSgnZmxvYXQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBub2RlLmdldEF0dHIoJ3NyYycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dvOiBub2RlLmdldEF0dHIoJ2xvZ29fdXJsJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoaW1nLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICog5o+S5YWl55m+5bqm5bqU55SoXG4gICAgICAgICAgICAgICAgICogQGNvbW1hbmQgd2ViYXBwXG4gICAgICAgICAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgICAgICAgICAqIEByZW1pbmQg6ZyA6KaB55m+5bqmQVBQS2V5XG4gICAgICAgICAgICAgICAgICogQHJlbWluZCDnmb7luqblupTnlKjkuLvpobXvvJogPGEgaHJlZj1cImh0dHA6Ly9hcHAuYmFpZHUuY29tL1wiIHRhcmdldD1cIl9ibGFua1wiPmh0dHA6Ly9hcHAuYmFpZHUuY29tLzwvYT5cbiAgICAgICAgICAgICAgICAgKiBAcGFyYW0geyBPYmplY3QgfSBhcHBPcHRpb25zIOW6lOeUqOaJgOmcgOeahOWPguaVsOmhue+8jCDmlK/mjIHnmoRrZXnmnInvvJogdGl0bGU9PuW6lOeUqOagh+mimO+8jCB3aWR0aD0+5bqU55So5a655Zmo5a695bqm77yMXG4gICAgICAgICAgICAgICAgICogaGVpZ2h0PT7lupTnlKjlrrnlmajpq5jluqbvvIxsb2dvPT7lupTnlKhsb2dv77yMdXJsPT7lupTnlKjlnLDlnYBcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiAvL2VkaXRvcuaYr+e8lui+keWZqOWunuS+i1xuICAgICAgICAgICAgICAgICAqIC8v5Zyo57yW6L6R5Zmo6YeM5o+S5YWl5LiA5Liq4oCc5qSN54mp5aSn5oiY5YO15bC44oCd55qEQVBQXG4gICAgICAgICAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCAnd2ViYXBwJyAsIHtcbiAgICAgICAgICAgICAgICAgKiAgICAgdGl0bGU6ICfmpI3nianlpKfmiJjlg7XlsLgnLFxuICAgICAgICAgICAgICAgICAqICAgICB3aWR0aDogNTYwLFxuICAgICAgICAgICAgICAgICAqICAgICBoZWlnaHQ6IDQ2NSxcbiAgICAgICAgICAgICAgICAgKiAgICAgbG9nbzogJ+W6lOeUqOWxleekuueahOWbvueJhycsXG4gICAgICAgICAgICAgICAgICogICAgIHVybDogJ+eZvuW6puW6lOeUqOeahOWcsOWdgCdcbiAgICAgICAgICAgICAgICAgKiB9ICk7XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgd2ViYXBwOiB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBvYmopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyID0gY3JlYXRlSW5zZXJ0U3RyKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlscy5leHRlbmQob2JqLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbjogJ25vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5leGVjQ29tbWFuZCgnaW5zZXJ0aHRtbCcsIHN0cik7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZyA9IG1lLnNlbGVjdGlvbi5nZXRSYW5nZSgpLmdldENsb3NlZE5vZGUoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGFnID0gaW1nICYmIGltZy5jbGFzc05hbWUgPT0gJ2VkdWktZmFrZWQtd2ViYXBwJztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmbGFnID8gMSA6IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL3RlbXBsYXRlLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgcGx1Z2luc1xcaW5zZXJ0aHRtbC5qc1xuICAgIC8vL2ltcG9ydCBwbHVnaW5zXFxjbGVhcmRvYy5qc1xuICAgIC8vL2NvbW1hbmRzIOaooeadv1xuICAgIC8vL2NvbW1hbmRzTmFtZSAgdGVtcGxhdGVcbiAgICAvLy9jb21tYW5kc1RpdGxlICDmqKHmnb9cbiAgICAvLy9jb21tYW5kc0RpYWxvZyAgZGlhbG9nc1xcdGVtcGxhdGVcbiAgICBVRS5wbHVnaW5zWyd0ZW1wbGF0ZSddID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBVRS5jb21tYW5kc1sndGVtcGxhdGUnXSA9IHtcbiAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBvYmopIHtcbiAgICAgICAgICAgICAgICBvYmouaHRtbCAmJiB0aGlzLmV4ZWNDb21tYW5kKCdpbnNlcnRodG1sJywgb2JqLmh0bWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmFkZExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciBlbCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQsXG4gICAgICAgICAgICAgICAgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgICAgICAgdmFyIHRub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudChcbiAgICAgICAgICAgICAgICBlbCxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5jbGFzc05hbWUgJiYgZG9tVXRpbHMuaGFzQ2xhc3Mobm9kZSwgJ3VlX3QnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRydWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICB0bm9kZSAmJiByYW5nZS5zZWxlY3ROb2RlKHRub2RlKS5zaHJpbmtCb3VuZGFyeSgpLnNlbGVjdCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uICh0eXBlLCBldnQpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICBpZiAoIXJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgIGlmICghZXZ0LmN0cmxLZXkgJiYgIWV2dC5tZXRhS2V5ICYmICFldnQuc2hpZnRLZXkgJiYgIWV2dC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRub2RlID0gZG9tVXRpbHMuZmluZFBhcmVudChcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5jbGFzc05hbWUgJiYgZG9tVXRpbHMuaGFzQ2xhc3Mobm9kZSwgJ3VlX3QnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUNsYXNzZXModG5vZGUsIFsndWVfdCddKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIHBsdWdpbnMvbXVzaWMuanNcbiAgICAvKipcbiAgICAgKiDmj5LlhaXpn7PkuZDlkb3ku6RcbiAgICAgKiBAZmlsZVxuICAgICAqL1xuICAgIFVFLnBsdWdpbi5yZWdpc3RlcignbXVzaWMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0SW5zZXJ0U3RyKHVybCwgd2lkdGgsIGhlaWdodCwgYWxpZ24sIGNzc2Zsb2F0LCB0b0VtYmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gIXRvRW1iZWRcbiAgICAgICAgICAgICAgICA/ICc8aW1nICcgK1xuICAgICAgICAgICAgICAgICAgICAgIChhbGlnbiAmJiAhY3NzZmxvYXQgPyAnYWxpZ249XCInICsgYWxpZ24gKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAoY3NzZmxvYXQgPyAnc3R5bGU9XCJmbG9hdDonICsgY3NzZmxvYXQgKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAnIHdpZHRoPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGggK1xuICAgICAgICAgICAgICAgICAgICAgICdcIiBoZWlnaHQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQgK1xuICAgICAgICAgICAgICAgICAgICAgICdcIiBfdXJsPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgdXJsICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgY2xhc3M9XCJlZHVpLWZha2VkLW11c2ljXCInICtcbiAgICAgICAgICAgICAgICAgICAgICAnIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMubGFuZ1BhdGggK1xuICAgICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMubGFuZyArXG4gICAgICAgICAgICAgICAgICAgICAgJy9pbWFnZXMvbXVzaWMucG5nXCIgLz4nXG4gICAgICAgICAgICAgICAgOiAnPGVtYmVkIHR5cGU9XCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiIGNsYXNzPVwiZWR1aS1mYWtlZC1tdXNpY1wiIHBsdWdpbnNwYWdlPVwiaHR0cDovL3d3dy5tYWNyb21lZGlhLmNvbS9nby9nZXRmbGFzaHBsYXllclwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgJyBzcmM9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICB1cmwgK1xuICAgICAgICAgICAgICAgICAgICAgICdcIiB3aWR0aD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgaGVpZ2h0PVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0ICtcbiAgICAgICAgICAgICAgICAgICAgICAnXCIgJyArXG4gICAgICAgICAgICAgICAgICAgICAgKGFsaWduICYmICFjc3NmbG9hdCA/ICdhbGlnbj1cIicgKyBhbGlnbiArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgIChjc3NmbG9hdCA/ICdzdHlsZT1cImZsb2F0OicgKyBjc3NmbG9hdCArICdcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICcgd21vZGU9XCJ0cmFuc3BhcmVudFwiIHBsYXk9XCJ0cnVlXCIgbG9vcD1cImZhbHNlXCIgbWVudT1cImZhbHNlXCIgYWxsb3dzY3JpcHRhY2Nlc3M9XCJuZXZlclwiIGFsbG93ZnVsbHNjcmVlbj1cInRydWVcIiA+JztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb3V0cHV0UnVsZTogZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2ltZycpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHRtbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuZ2V0QXR0cignY2xhc3MnKSA9PSAnZWR1aS1mYWtlZC1tdXNpYycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjc3NmbG9hdCA9IG5vZGUuZ2V0U3R5bGUoJ2Zsb2F0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWxpZ24gPSBub2RlLmdldEF0dHIoJ2FsaWduJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sID0gY3JlYXRJbnNlcnRTdHIoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5nZXRBdHRyKCdfdXJsJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5nZXRBdHRyKCd3aWR0aCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuZ2V0QXR0cignaGVpZ2h0JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzZmxvYXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbWJlZCA9IFVFLnVOb2RlLmNyZWF0ZUVsZW1lbnQoaHRtbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGVtYmVkLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlucHV0UnVsZTogZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ2VtYmVkJyksIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmdldEF0dHIoJ2NsYXNzJykgPT0gJ2VkdWktZmFrZWQtbXVzaWMnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3NzZmxvYXQgPSBub2RlLmdldFN0eWxlKCdmbG9hdCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFsaWduID0gbm9kZS5nZXRBdHRyKCdhbGlnbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCA9IGNyZWF0SW5zZXJ0U3RyKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuZ2V0QXR0cignc3JjJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5nZXRBdHRyKCd3aWR0aCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuZ2V0QXR0cignaGVpZ2h0JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzZmxvYXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW1nID0gVUUudU5vZGUuY3JlYXRlRWxlbWVudChodG1sKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoaW1nLCBub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICog5o+S5YWl6Z+z5LmQXG4gICAgICAgICAgICAgICAgICogQGNvbW1hbmQgbXVzaWNcbiAgICAgICAgICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgT2JqZWN0IH0gbXVzaWNPcHRpb25zIOaPkuWFpemfs+S5kOeahOWPguaVsOmhue+8jCDmlK/mjIHnmoRrZXnmnInvvJogdXJsPT7pn7PkuZDlnLDlnYDvvJtcbiAgICAgICAgICAgICAgICAgKiB3aWR0aD0+6Z+z5LmQ5a655Zmo5a695bqm77ybaGVpZ2h0PT7pn7PkuZDlrrnlmajpq5jluqbvvJthbGlnbj0+6Z+z5LmQ5paH5Lu255qE5a+56b2Q5pa55byP77yMIOWPr+mAieWAvOaciTogbGVmdCwgY2VudGVyLCByaWdodCwgbm9uZVxuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIC8vZWRpdG9y5piv57yW6L6R5Zmo5a6e5L6LXG4gICAgICAgICAgICAgICAgICogLy/lnKjnvJbovpHlmajph4zmj5LlhaXkuIDkuKrigJzmpI3nianlpKfmiJjlg7XlsLjigJ3nmoRBUFBcbiAgICAgICAgICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoICdtdXNpYycgLCB7XG4gICAgICAgICAgICAgICAgICogICAgIHdpZHRoOiA0MDAsXG4gICAgICAgICAgICAgICAgICogICAgIGhlaWdodDogOTUsXG4gICAgICAgICAgICAgICAgICogICAgIGFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAqICAgICB1cmw6IFwi6Z+z5LmQ5Zyw5Z2AXCJcbiAgICAgICAgICAgICAgICAgKiB9ICk7XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgbXVzaWM6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIG11c2ljT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9IGNyZWF0SW5zZXJ0U3RyKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdXNpY09iai51cmwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11c2ljT2JqLndpZHRoIHx8IDQwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVzaWNPYmouaGVpZ2h0IHx8IDk1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbm9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRodG1sJywgc3RyKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlDb21tYW5kU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCkuZ2V0Q2xvc2VkTm9kZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYWcgPSBpbWcgJiYgaW1nLmNsYXNzTmFtZSA9PSAnZWR1aS1mYWtlZC1tdXNpYyc7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmxhZyA/IDEgOiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gcGx1Z2lucy9hdXRvdXBsb2FkLmpzXG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogMS7mi5bmlL7mlofku7bliLDnvJbovpHljLrln5/vvIzoh6rliqjkuIrkvKDlubbmj5LlhaXliLDpgInljLpcbiAgICAgKiAyLuaPkuWFpeeymOi0tOadv+eahOWbvueJh++8jOiHquWKqOS4iuS8oOW5tuaPkuWFpeWIsOmAieWMulxuICAgICAqIEBhdXRob3IgSmlucW5cbiAgICAgKiBAZGF0ZSAyMDEzLTEwLTE0XG4gICAgICovXG4gICAgVUUucGx1Z2luLnJlZ2lzdGVyKCdhdXRvdXBsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBzZW5kQW5kSW5zZXJ0RmlsZShmaWxlLCBlZGl0b3IpIHtcbiAgICAgICAgICAgIHZhciBtZSA9IGVkaXRvcjtcbiAgICAgICAgICAgIC8v5qih5ouf5pWw5o2uXG4gICAgICAgICAgICB2YXIgZmllbGROYW1lLFxuICAgICAgICAgICAgICAgIHVybFByZWZpeCxcbiAgICAgICAgICAgICAgICBtYXhTaXplLFxuICAgICAgICAgICAgICAgIGFsbG93RmlsZXMsXG4gICAgICAgICAgICAgICAgYWN0aW9uVXJsLFxuICAgICAgICAgICAgICAgIGxvYWRpbmdIdG1sLFxuICAgICAgICAgICAgICAgIGVycm9ySGFuZGxlcixcbiAgICAgICAgICAgICAgICBzdWNjZXNzSGFuZGxlcixcbiAgICAgICAgICAgICAgICBmaWxldHlwZSA9IC9pbWFnZVxcL1xcdysvaS50ZXN0KGZpbGUudHlwZSkgPyAnaW1hZ2UnIDogJ2ZpbGUnLFxuICAgICAgICAgICAgICAgIGxvYWRpbmdJZCA9ICdsb2FkaW5nXycgKyAoK25ldyBEYXRlKCkpLnRvU3RyaW5nKDM2KTtcblxuICAgICAgICAgICAgZmllbGROYW1lID0gbWUuZ2V0T3B0KGZpbGV0eXBlICsgJ0ZpZWxkTmFtZScpO1xuICAgICAgICAgICAgdXJsUHJlZml4ID0gbWUuZ2V0T3B0KGZpbGV0eXBlICsgJ1VybFByZWZpeCcpO1xuICAgICAgICAgICAgbWF4U2l6ZSA9IG1lLmdldE9wdChmaWxldHlwZSArICdNYXhTaXplJyk7XG4gICAgICAgICAgICBhbGxvd0ZpbGVzID0gbWUuZ2V0T3B0KGZpbGV0eXBlICsgJ0FsbG93RmlsZXMnKTtcbiAgICAgICAgICAgIGFjdGlvblVybCA9IG1lLmdldEFjdGlvblVybChtZS5nZXRPcHQoZmlsZXR5cGUgKyAnQWN0aW9uTmFtZScpKTtcbiAgICAgICAgICAgIGVycm9ySGFuZGxlciA9IGZ1bmN0aW9uICh0aXRsZSkge1xuICAgICAgICAgICAgICAgIHZhciBsb2FkZXIgPSBtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nSWQpO1xuICAgICAgICAgICAgICAgIGxvYWRlciAmJiBkb21VdGlscy5yZW1vdmUobG9hZGVyKTtcbiAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3Nob3dtZXNzYWdlJywge1xuICAgICAgICAgICAgICAgICAgICBpZDogbG9hZGluZ0lkLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNDAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKGZpbGV0eXBlID09ICdpbWFnZScpIHtcbiAgICAgICAgICAgICAgICBsb2FkaW5nSHRtbCA9XG4gICAgICAgICAgICAgICAgICAgICc8aW1nIGNsYXNzPVwibG9hZGluZ2NsYXNzXCIgaWQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ0lkICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICBtZS5vcHRpb25zLnRoZW1lUGF0aCArXG4gICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMudGhlbWUgK1xuICAgICAgICAgICAgICAgICAgICAnL2ltYWdlcy9zcGFjZXIuZ2lmXCIgdGl0bGU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgKG1lLmdldExhbmcoJ2F1dG91cGxvYWQubG9hZGluZycpIHx8ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICdcIiA+JztcbiAgICAgICAgICAgICAgICBzdWNjZXNzSGFuZGxlciA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsaW5rID0gdXJsUHJlZml4ICsgZGF0YS51cmwsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIgPSBtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nSWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobG9hZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCdzcmMnLCBsaW5rKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ19zcmMnLCBsaW5rKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgZGF0YS50aXRsZSB8fCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCdhbHQnLCBkYXRhLm9yaWdpbmFsIHx8ICcnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVDbGFzc2VzKGxvYWRlciwgJ2xvYWRpbmdjbGFzcycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9hZGluZ0h0bWwgPVxuICAgICAgICAgICAgICAgICAgICAnPHA+JyArXG4gICAgICAgICAgICAgICAgICAgICc8aW1nIGNsYXNzPVwibG9hZGluZ2NsYXNzXCIgaWQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ0lkICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICBtZS5vcHRpb25zLnRoZW1lUGF0aCArXG4gICAgICAgICAgICAgICAgICAgIG1lLm9wdGlvbnMudGhlbWUgK1xuICAgICAgICAgICAgICAgICAgICAnL2ltYWdlcy9zcGFjZXIuZ2lmXCIgdGl0bGU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgKG1lLmdldExhbmcoJ2F1dG91cGxvYWQubG9hZGluZycpIHx8ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICdcIiA+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L3A+JztcbiAgICAgICAgICAgICAgICBzdWNjZXNzSGFuZGxlciA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsaW5rID0gdXJsUHJlZml4ICsgZGF0YS51cmwsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIgPSBtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nSWQpO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBybmcgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJrID0gcm5nLmNyZWF0ZUJvb2ttYXJrKCk7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5zZWxlY3ROb2RlKGxvYWRlcikuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRmaWxlJywgeyB1cmw6IGxpbmsgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJuZy5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyog5o+S5YWlbG9hZGluZ+eahOWNoOS9jeespiAqL1xuICAgICAgICAgICAgbWUuZXhlY0NvbW1hbmQoJ2luc2VydGh0bWwnLCBsb2FkaW5nSHRtbCk7XG5cbiAgICAgICAgICAgIC8qIOWIpOaWreWQjuerr+mFjee9ruaYr+WQpuayoeacieWKoOi9veaIkOWKnyAqL1xuICAgICAgICAgICAgaWYgKCFtZS5nZXRPcHQoZmlsZXR5cGUgKyAnQWN0aW9uTmFtZScpKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyKG1lLmdldExhbmcoJ2F1dG91cGxvYWQuZXJyb3JMb2FkQ29uZmlnJykpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qIOWIpOaWreaWh+S7tuWkp+Wwj+aYr+WQpui2heWHuumZkOWItiAqL1xuICAgICAgICAgICAgaWYgKGZpbGUuc2l6ZSA+IG1heFNpemUpIHtcbiAgICAgICAgICAgICAgICBlcnJvckhhbmRsZXIobWUuZ2V0TGFuZygnYXV0b3VwbG9hZC5leGNlZWRTaXplRXJyb3InKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyog5Yik5pat5paH5Lu25qC85byP5piv5ZCm6LaF5Ye65YWB6K64ICovXG4gICAgICAgICAgICB2YXIgZmlsZWV4dCA9IGZpbGUubmFtZSA/IGZpbGUubmFtZS5zdWJzdHIoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykpIDogJyc7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgKGZpbGVleHQgJiYgZmlsZXR5cGUgIT0gJ2ltYWdlJykgfHxcbiAgICAgICAgICAgICAgICAoYWxsb3dGaWxlcyAmJiAoYWxsb3dGaWxlcy5qb2luKCcnKSArICcuJykuaW5kZXhPZihmaWxlZXh0LnRvTG93ZXJDYXNlKCkgKyAnLicpID09IC0xKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgZXJyb3JIYW5kbGVyKG1lLmdldExhbmcoJ2F1dG91cGxvYWQuZXhjZWVkVHlwZUVycm9yJykpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyog5Yib5bu6QWpheOW5tuaPkOS6pCAqL1xuICAgICAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpLFxuICAgICAgICAgICAgICAgIGZkID0gbmV3IEZvcm1EYXRhKCksXG4gICAgICAgICAgICAgICAgcGFyYW1zID0gdXRpbHMuc2VyaWFsaXplUGFyYW0obWUucXVlcnlDb21tYW5kVmFsdWUoJ3NlcnZlcnBhcmFtJykpIHx8ICcnLFxuICAgICAgICAgICAgICAgIHVybCA9IHV0aWxzLmZvcm1hdFVybChhY3Rpb25VcmwgKyAoYWN0aW9uVXJsLmluZGV4T2YoJz8nKSA9PSAtMSA/ICc/JyA6ICcmJykgKyBwYXJhbXMpO1xuXG4gICAgICAgICAgICBmZC5hcHBlbmQoZmllbGROYW1lLCBmaWxlLCBmaWxlLm5hbWUgfHwgJ2Jsb2IuJyArIGZpbGUudHlwZS5zdWJzdHIoJ2ltYWdlLycubGVuZ3RoKSk7XG4gICAgICAgICAgICBmZC5hcHBlbmQoJ3R5cGUnLCAnYWpheCcpO1xuICAgICAgICAgICAgeGhyLm9wZW4oJ3Bvc3QnLCB1cmwsIHRydWUpO1xuICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ1gtUmVxdWVzdGVkLVdpdGgnLCAnWE1MSHR0cFJlcXVlc3QnKTtcbiAgICAgICAgICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIganNvbiA9IG5ldyBGdW5jdGlvbigncmV0dXJuICcgKyB1dGlscy50cmltKGUudGFyZ2V0LnJlc3BvbnNlKSkoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGpzb24uc3RhdGUgPT0gJ1NVQ0NFU1MnICYmIGpzb24udXJsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzSGFuZGxlcihqc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9ySGFuZGxlcihqc29uLnN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGVycm9ySGFuZGxlcihtZS5nZXRMYW5nKCdhdXRvdXBsb2FkLmxvYWRFcnJvcicpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHhoci5zZW5kKGZkKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFBhc3RlSW1hZ2UoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGUuY2xpcGJvYXJkRGF0YSAmJlxuICAgICAgICAgICAgICAgIGUuY2xpcGJvYXJkRGF0YS5pdGVtcyAmJlxuICAgICAgICAgICAgICAgIGUuY2xpcGJvYXJkRGF0YS5pdGVtcy5sZW5ndGggPT0gMSAmJlxuICAgICAgICAgICAgICAgIC9eaW1hZ2VcXC8vLnRlc3QoZS5jbGlwYm9hcmREYXRhLml0ZW1zWzBdLnR5cGUpXG4gICAgICAgICAgICAgICAgPyBlLmNsaXBib2FyZERhdGEuaXRlbXNcbiAgICAgICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZ2V0RHJvcEltYWdlKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlLmRhdGFUcmFuc2ZlciAmJiBlLmRhdGFUcmFuc2Zlci5maWxlcyA/IGUuZGF0YVRyYW5zZmVyLmZpbGVzIDogbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvdXRwdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgnaW1nJyksIGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgvXFxiKGxvYWRlcnJvcmNsYXNzKXwoYmxvYWRlcnJvcmNsYXNzKVxcYi8udGVzdChuLmdldEF0dHIoJ2NsYXNzJykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB1dGlscy5lYWNoKHJvb3QuZ2V0Tm9kZXNCeVRhZ05hbWUoJ3AnKSwgZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKC9cXGJsb2FkcGFyYVxcYi8udGVzdChuLmdldEF0dHIoJ2NsYXNzJykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiaW5kRXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgLy/mj5LlhaXnspjotLTmnb/nmoTlm77niYfvvIzmi5bmlL7mj5LlhaXlm77niYdcbiAgICAgICAgICAgICAgICByZWFkeTogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5Gb3JtRGF0YSAmJiB3aW5kb3cuRmlsZVJlYWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUuYm9keSwgJ3Bhc3RlIGRyb3AnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBoYXNJbWcgPSBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/ojrflj5bnspjotLTmnb/mlofku7bliJfooajmiJbogIXmi5bmlL7mlofku7bliJfooahcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtcyA9IGUudHlwZSA9PSAncGFzdGUnID8gZ2V0UGFzdGVJbWFnZShlKSA6IGdldERyb3BJbWFnZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxlbiA9IGl0ZW1zLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChsZW4tLSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsZSA9IGl0ZW1zW2xlbl07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZS5nZXRBc0ZpbGUpIGZpbGUgPSBmaWxlLmdldEFzRmlsZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGUgJiYgZmlsZS5zaXplID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRBbmRJbnNlcnRGaWxlKGZpbGUsIG1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNJbWcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0ltZyAmJiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WPlua2iOaLluaUvuWbvueJh+aXtuWHuueOsOeahOaWh+Wtl+WFieagh+S9jee9ruaPkOekulxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24obWUuYm9keSwgJ2RyYWdvdmVyJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5kYXRhVHJhbnNmZXIudHlwZXNbMF0gPT0gJ0ZpbGVzJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8v6K6+572ubG9hZGluZ+eahOagt+W8j1xuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuY3NzUnVsZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbG9hZGluZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIubG9hZGluZ2NsYXNze2Rpc3BsYXk6aW5saW5lLWJsb2NrO2N1cnNvcjpkZWZhdWx0O2JhY2tncm91bmQ6IHVybCgnXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMudGhlbWVQYXRoICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnRoZW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIvaW1hZ2VzL2xvYWRpbmcuZ2lmJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgdHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCAjY2NjY2NjO21hcmdpbi1sZWZ0OjFweDtoZWlnaHQ6IDIycHg7d2lkdGg6IDIycHg7fVxcblwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIubG9hZGVycm9yY2xhc3N7ZGlzcGxheTppbmxpbmUtYmxvY2s7Y3Vyc29yOmRlZmF1bHQ7YmFja2dyb3VuZDogdXJsKCdcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy50aGVtZVBhdGggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMudGhlbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi9pbWFnZXMvbG9hZGVycm9yLnBuZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIHRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgI2NjY2NjYzttYXJnaW4tcmlnaHQ6MXB4O2hlaWdodDogMjJweDt3aWR0aDogMjJweDtcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd9JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gcGx1Z2lucy9hdXRvc2F2ZS5qc1xuICAgIFVFLnBsdWdpbi5yZWdpc3RlcignYXV0b3NhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAvL+aXoOmZkOW+queOr+S/neaKpFxuICAgICAgICAgICAgbGFzdFNhdmVUaW1lID0gbmV3IERhdGUoKSxcbiAgICAgICAgICAgIC8v5pyA5bCP5L+d5a2Y6Ze06ZqU5pe26Ze0XG4gICAgICAgICAgICBNSU5fVElNRSA9IDIwLFxuICAgICAgICAgICAgLy9hdXRvIHNhdmUga2V5XG4gICAgICAgICAgICBzYXZlS2V5ID0gbnVsbDtcblxuICAgICAgICBmdW5jdGlvbiBzYXZlKGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIHNhdmVEYXRhO1xuICAgICAgICAgICAgLy/kuI3oh6rliqjkv53lrZjvvIzlrpjnvZHmlofmoaPmnInkvYbov5nkuKrku6PnoIHph4zovrnnq5/nhLbmsqHmnIkgZHVhbmp1blxuICAgICAgICAgICAgaWYgKCFlZGl0b3Iub3B0aW9ucy5lbmFibGVBdXRvU2F2ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG5ldyBEYXRlKCkgLSBsYXN0U2F2ZVRpbWUgPCBNSU5fVElNRSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFlZGl0b3IuaGFzQ29udGVudHMoKSkge1xuICAgICAgICAgICAgICAgIC8v6L+Z6YeM5LiN6IO96LCD55So5ZG95Luk5p2l5Yig6Zmk77yMIOS8mumAoOaIkOS6i+S7tuatu+W+queOr1xuICAgICAgICAgICAgICAgIHNhdmVLZXkgJiYgbWUucmVtb3ZlUHJlZmVyZW5jZXMoc2F2ZUtleSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsYXN0U2F2ZVRpbWUgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgICAgICBlZGl0b3IuX3NhdmVGbGFnID0gbnVsbDtcblxuICAgICAgICAgICAgc2F2ZURhdGEgPSBtZS5ib2R5LmlubmVySFRNTDtcblxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ2JlZm9yZWF1dG9zYXZlJywge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBzYXZlRGF0YVxuICAgICAgICAgICAgICAgIH0pID09PSBmYWxzZVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBtZS5zZXRQcmVmZXJlbmNlcyhzYXZlS2V5LCBzYXZlRGF0YSk7XG5cbiAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ2FmdGVyYXV0b3NhdmUnLCB7XG4gICAgICAgICAgICAgICAgY29udGVudDogc2F2ZURhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgLy/pu5jorqTpl7TpmpTml7bpl7RcbiAgICAgICAgICAgICAgICBzYXZlSW50ZXJ2YWw6IDUwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJpbmRFdmVudHM6IHtcbiAgICAgICAgICAgICAgICByZWFkeTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgX3N1ZmZpeCA9ICctZHJhZnRzLWRhdGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gbnVsbDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAobWUua2V5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBtZS5rZXkgKyBfc3VmZml4O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gKG1lLmNvbnRhaW5lci5wYXJlbnROb2RlLmlkIHx8ICd1ZS1jb21tb24nKSArIF9zdWZmaXg7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL+mhtemdouWcsOWdgCvnvJbovpHlmahJRCDkv53mjIHllK/kuIBcbiAgICAgICAgICAgICAgICAgICAgc2F2ZUtleSA9IChsb2NhdGlvbi5wcm90b2NvbCArIGxvY2F0aW9uLmhvc3QgKyBsb2NhdGlvbi5wYXRobmFtZSkucmVwbGFjZSgvWy46XFwvXS9nLCAnXycpICsga2V5O1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBjb250ZW50Y2hhbmdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghc2F2ZUtleSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLl9zYXZlRmxhZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChtZS5fc2F2ZUZsYWcpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLm9wdGlvbnMuc2F2ZUludGVydmFsID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuX3NhdmVGbGFnID0gd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdmUobWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgbWUub3B0aW9ucy5zYXZlSW50ZXJ2YWwpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZShtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tbWFuZHM6IHtcbiAgICAgICAgICAgICAgICBjbGVhcmxvY2FsZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNhdmVLZXkgJiYgbWUuZ2V0UHJlZmVyZW5jZXMoc2F2ZUtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5yZW1vdmVQcmVmZXJlbmNlcyhzYXZlS2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbm90TmVlZFVuZG86IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGlnbm9yZUNvbnRlbnRDaGFuZ2U6IHRydWVcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgZ2V0bG9jYWxkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2F2ZUtleSA/IG1lLmdldFByZWZlcmVuY2VzKHNhdmVLZXkpIHx8ICcnIDogJyc7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG5vdE5lZWRVbmRvOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBpZ25vcmVDb250ZW50Q2hhbmdlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIGRyYWZ0czoge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNhdmVLZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5ib2R5LmlubmVySFRNTCA9IG1lLmdldFByZWZlcmVuY2VzKHNhdmVLZXkpIHx8ICc8cD4nICsgZG9tVXRpbHMuZmlsbEh0bWwgKyAnPC9wPic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZm9jdXModHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2F2ZUtleSA/IChtZS5nZXRQcmVmZXJlbmNlcyhzYXZlS2V5KSA9PT0gbnVsbCA/IC0xIDogMCkgOiAtMTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbm90TmVlZFVuZG86IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGlnbm9yZUNvbnRlbnRDaGFuZ2U6IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL2NoYXJ0cy5qc1xuICAgIFVFLnBsdWdpbi5yZWdpc3RlcignY2hhcnRzJywgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBiaW5kRXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgY2hhcnRzZXJyb3I6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tbWFuZHM6IHtcbiAgICAgICAgICAgICAgICBjaGFydHM6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0YWJsZU5vZGUgPSBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGFibGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGFnVGV4dCA9IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZyA9IHt9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRhYmxlTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF2YWxpZERhdGEodGFibGVOb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgnY2hhcnRzZXJyb3InKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZy50aXRsZSA9IGRhdGEudGl0bGUgfHwgJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWcuc3ViVGl0bGUgPSBkYXRhLnN1YlRpdGxlIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLnhUaXRsZSA9IGRhdGEueFRpdGxlIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLnlUaXRsZSA9IGRhdGEueVRpdGxlIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLnN1ZmZpeCA9IGRhdGEuc3VmZml4IHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLnRpcCA9IGRhdGEudGlwIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/mlbDmja7lr7npvZDmlrnlvI9cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZy5kYXRhRm9ybWF0ID0gZGF0YS50YWJsZURhdGFGb3JtYXQgfHwgJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WbvuihqOexu+Wei1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLmNoYXJ0VHlwZSA9IGRhdGEuY2hhcnRUeXBlIHx8IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBjb25maWcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbmZpZy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYWdUZXh0LnB1c2goa2V5ICsgJzonICsgY29uZmlnW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZU5vZGUuc2V0QXR0cmlidXRlKCdkYXRhLWNoYXJ0JywgZmxhZ1RleHQuam9pbignOycpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLmFkZENsYXNzKHRhYmxlTm9kZSwgJ2VkdWktY2hhcnRzLXRhYmxlJyk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFN0YXRlOiBmdW5jdGlvbiAoY21kLCBuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGFibGVOb2RlID0gZG9tVXRpbHMuZmluZFBhcmVudEJ5VGFnTmFtZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnN0YXJ0Q29udGFpbmVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0YWJsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YWJsZU5vZGUgJiYgdmFsaWREYXRhKHRhYmxlTm9kZSkgPyAwIDogLTE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5wdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgndGFibGUnKSwgZnVuY3Rpb24gKHRhYmxlTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFibGVOb2RlLmdldEF0dHIoJ2RhdGEtY2hhcnQnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZU5vZGUuc2V0QXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG91dHB1dFJ1bGU6IGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgdXRpbHMuZWFjaChyb290LmdldE5vZGVzQnlUYWdOYW1lKCd0YWJsZScpLCBmdW5jdGlvbiAodGFibGVOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0YWJsZU5vZGUuZ2V0QXR0cignZGF0YS1jaGFydCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlTm9kZS5zZXRBdHRyKCdzdHlsZScsICdkaXNwbGF5OiBub25lOycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gdmFsaWREYXRhKHRhYmxlKSB7XG4gICAgICAgICAgICB2YXIgZmlyc3RSb3dzID0gbnVsbCxcbiAgICAgICAgICAgICAgICBjZWxsQ291bnQgPSAwO1xuXG4gICAgICAgICAgICAvL+ihjOaVsOS4jeWkn1xuICAgICAgICAgICAgaWYgKHRhYmxlLnJvd3MubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy/liJfmlbDkuI3lpJ9cbiAgICAgICAgICAgIGlmICh0YWJsZS5yb3dzWzBdLmNlbGxzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8v56ys5LiA6KGM5omA5pyJY2VsbOW/hemhu+aYr3RoXG4gICAgICAgICAgICBmaXJzdFJvd3MgPSB0YWJsZS5yb3dzWzBdLmNlbGxzO1xuICAgICAgICAgICAgY2VsbENvdW50ID0gZmlyc3RSb3dzLmxlbmd0aDtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNlbGw7IChjZWxsID0gZmlyc3RSb3dzW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNlbGwudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAndGgnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAxLCByb3c7IChyb3cgPSB0YWJsZS5yb3dzW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgLy/mr4/ooYzljZXlhYPmoLzmlbDkuI3ljLnphY3vvIwg6L+U5ZueZmFsc2VcbiAgICAgICAgICAgICAgICBpZiAocm93LmNlbGxzLmxlbmd0aCAhPSBjZWxsQ291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8v56ys5LiA5YiX5LiN5pivdGjkuZ/ov5Tlm55mYWxzZVxuICAgICAgICAgICAgICAgIGlmIChyb3cuY2VsbHNbMF0udGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAndGgnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMSwgY2VsbDsgKGNlbGwgPSByb3cuY2VsbHNbal0pOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdXRpbHMudHJpbShjZWxsLmlubmVyVGV4dCB8fCBjZWxsLnRleHRDb250ZW50IHx8ICcnKTtcblxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UobmV3IFJlZ0V4cChVRS5kb20uZG9tVXRpbHMuZmlsbENoYXIsICdnJyksICcnKS5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/lv4XpobvmmK/mlbDlrZdcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEvXlxcZCpcXC4/XFxkKyQvLnRlc3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL3NlY3Rpb24uanNcbiAgICAvKipcbiAgICAgKiDnm67lvZXlpKfnurLmlK/mjIHmj5Lku7ZcbiAgICAgKiBAZmlsZVxuICAgICAqIEBzaW5jZSAxLjMuMFxuICAgICAqL1xuICAgIFVFLnBsdWdpbi5yZWdpc3Rlcignc2VjdGlvbicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLyog55uu5b2V6IqC54K55a+56LGhICovXG4gICAgICAgIGZ1bmN0aW9uIFNlY3Rpb24ob3B0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnRhZyA9ICcnO1xuICAgICAgICAgICAgKHRoaXMubGV2ZWwgPSAtMSksICh0aGlzLmRvbSA9IG51bGwpO1xuICAgICAgICAgICAgdGhpcy5uZXh0U2VjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLnByZXZpb3VzU2VjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLnBhcmVudFNlY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5zdGFydEFkZHJlc3MgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuZW5kQWRkcmVzcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldFNlY3Rpb24ob3B0aW9uKSB7XG4gICAgICAgICAgICB2YXIgc2VjdGlvbiA9IG5ldyBTZWN0aW9uKCk7XG4gICAgICAgICAgICByZXR1cm4gdXRpbHMuZXh0ZW5kKHNlY3Rpb24sIG9wdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZ2V0Tm9kZUZyb21BZGRyZXNzKHN0YXJ0QWRkcmVzcywgcm9vdCkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSByb290O1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGFydEFkZHJlc3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIWN1cnJlbnQuY2hpbGROb2RlcykgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQuY2hpbGROb2Rlc1tzdGFydEFkZHJlc3NbaV1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBiaW5kTXVsdGlFdmVudHM6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnYWZ0ZXJzZXRjb250ZW50IGFmdGVyc2NlbmNlcmVzdG9yZScsXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3VwZGF0ZVNlY3Rpb25zJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJpbmRFdmVudHM6IHtcbiAgICAgICAgICAgICAgICAvKiDliJ3lp4vljJbjgIHmi5bmi73jgIHnspjotLTjgIHmiafooYxzZXRjb250ZW505LmL5ZCOICovXG4gICAgICAgICAgICAgICAgcmVhZHk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd1cGRhdGVTZWN0aW9ucycpO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihtZS5ib2R5LCAnZHJvcCBwYXN0ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgndXBkYXRlU2VjdGlvbnMnKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAvKiDmiafooYxwYXJhZ3JhcGjlkb3ku6TkuYvlkI4gKi9cbiAgICAgICAgICAgICAgICBhZnRlcmV4ZWNjb21tYW5kOiBmdW5jdGlvbiAodHlwZSwgY21kKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjbWQgPT0gJ3BhcmFncmFwaCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmZpcmVFdmVudCgndXBkYXRlU2VjdGlvbnMnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgLyog6YOo5YiG6ZSu55uY5pON5L2c77yM6Kem5Y+RdXBkYXRlU2VjdGlvbnPkuovku7YgKi9cbiAgICAgICAgICAgICAgICBrZXl1cDogZnVuY3Rpb24gKHR5cGUsIGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyYW5nZS5jb2xsYXBzZWQgIT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd1cGRhdGVTZWN0aW9ucycpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGtleUNvZGUgPSBlLmtleUNvZGUgfHwgZS53aGljaDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXlDb2RlID09IDEzIHx8IGtleUNvZGUgPT0gOCB8fCBrZXlDb2RlID09IDQ2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd1cGRhdGVTZWN0aW9ucycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbW1hbmRzOiB7XG4gICAgICAgICAgICAgICAgZ2V0c2VjdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIGxldmVscykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxldmVsRm4gPSBsZXZlbHMgfHwgWydoMScsICdoMicsICdoMycsICdoNCcsICdoNScsICdoNiddO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxldmVsRm4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGxldmVsRm5baV0gPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWxGbltpXSA9IChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBub2RlLnRhZ05hbWUgPT0gZm4udG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKGxldmVsRm5baV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGxldmVsRm5baV0gIT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXZlbEZuW2ldID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGdldFNlY3Rpb25MZXZlbChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZXZlbEZuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsZXZlbEZuW2ldKG5vZGUpKSByZXR1cm4gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIERpcmVjdG9yeSA9IGdldFNlY3Rpb24oeyBsZXZlbDogLTEsIHRpdGxlOiAncm9vdCcgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXMgPSBEaXJlY3Rvcnk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHRyYXZlcnNhbChub2RlLCBEaXJlY3RvcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGV2ZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFNlY3Rpb24gPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbiA9IG5vZGUuY2hpbGROb2RlcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZHJlbltpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWwgPSBnZXRTZWN0aW9uTGV2ZWwoY2hpbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobGV2ZWwgPj0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFkZHJlc3MgPSBtZS5zZWxlY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmdldFJhbmdlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNlbGVjdE5vZGUoY2hpbGQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jcmVhdGVBZGRyZXNzKHRydWUpLnN0YXJ0QWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZ2V0U2VjdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZzogY2hpbGQudGFnTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGNoaWxkLmlubmVyVGV4dCB8fCBjaGlsZC50ZXh0Q29udGVudCB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb206IGNoaWxkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydEFkZHJlc3M6IHV0aWxzLmNsb25lKGFkZHJlc3MsIFtdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kQWRkcmVzczogdXRpbHMuY2xvbmUoYWRkcmVzcywgW10pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW11cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzLm5leHRTZWN0aW9uID0gY3VycmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQucHJldmlvdXNTZWN0aW9uID0gcHJldmlvdXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSBwcmV2aW91cztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChsZXZlbCA8PSBwYXJlbnQubGV2ZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50U2VjdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQucGFyZW50U2VjdGlvbiA9IHBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudC5jaGlsZHJlbi5wdXNoKGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wU2VjdGlvbiA9IHByZXZpb3VzID0gY3VycmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkLm5vZGVUeXBlID09PSAxICYmIHRyYXZlcnNhbChjaGlsZCwgRGlyZWN0b3J5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcFNlY3Rpb24gJiYgdG1wU2VjdGlvbi5lbmRBZGRyZXNzW3RtcFNlY3Rpb24uZW5kQWRkcmVzcy5sZW5ndGggLSAxXSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhdmVyc2FsKG1lLmJvZHksIERpcmVjdG9yeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGlyZWN0b3J5O1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBub3ROZWVkVW5kbzogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbW92ZXNlY3Rpb246IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIHNvdXJjZVNlY3Rpb24sIHRhcmdldFNlY3Rpb24sIGlzQWZ0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0QWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc291cmNlU2VjdGlvbiB8fCAhdGFyZ2V0U2VjdGlvbiB8fCB0YXJnZXRTZWN0aW9uLmxldmVsID09IC0xKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldEFkZHJlc3MgPSBpc0FmdGVyID8gdGFyZ2V0U2VjdGlvbi5lbmRBZGRyZXNzIDogdGFyZ2V0U2VjdGlvbi5zdGFydEFkZHJlc3M7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBnZXROb2RlRnJvbUFkZHJlc3ModGFyZ2V0QWRkcmVzcywgbWUuYm9keSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIOWIpOaWreebruagh+WcsOWdgOaYr+WQpuiiq+a6kOeroOiKguWMheWQqyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF0YXJnZXRBZGRyZXNzIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXRhcmdldCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQ29udGFpbnNBZGRyZXNzKHNvdXJjZVNlY3Rpb24uc3RhcnRBZGRyZXNzLCBzb3VyY2VTZWN0aW9uLmVuZEFkZHJlc3MsIHRhcmdldEFkZHJlc3MpXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnROb2RlID0gZ2V0Tm9kZUZyb21BZGRyZXNzKHNvdXJjZVNlY3Rpb24uc3RhcnRBZGRyZXNzLCBtZS5ib2R5KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmROb2RlID0gZ2V0Tm9kZUZyb21BZGRyZXNzKHNvdXJjZVNlY3Rpb24uZW5kQWRkcmVzcywgbWUuYm9keSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQWZ0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gZW5kTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIShkb21VdGlscy5nZXRQb3NpdGlvbihzdGFydE5vZGUsIGN1cnJlbnQpICYgZG9tVXRpbHMuUE9TSVRJT05fRk9MTE9XSU5HKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0Tm9kZSA9IGN1cnJlbnQucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pbnNlcnRBZnRlcih0YXJnZXQsIGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudCA9PSBzdGFydE5vZGUpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gbmV4dE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gc3RhcnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICYmICEoZG9tVXRpbHMuZ2V0UG9zaXRpb24oY3VycmVudCwgZW5kTm9kZSkgJiBkb21VdGlscy5QT1NJVElPTl9GT0xMT1dJTkcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHROb2RlID0gY3VycmVudC5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGN1cnJlbnQsIHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50ID09IGVuZE5vZGUpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gbmV4dE5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ3VwZGF0ZVNlY3Rpb25zJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIOiOt+WPluWcsOWdgOeahOWMheWQq+WFs+ezuyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gaXNDb250YWluc0FkZHJlc3Moc3RhcnRBZGRyZXNzLCBlbmRBZGRyZXNzLCBhZGRyZXNzVGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlzQWZ0ZXJTdGFydEFkZHJlc3MgPSBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNCZWZvcmVFbmRBZGRyZXNzID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGFydEFkZHJlc3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPj0gYWRkcmVzc1RhcmdldC5sZW5ndGgpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWRkcmVzc1RhcmdldFtpXSA+IHN0YXJ0QWRkcmVzc1tpXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNBZnRlclN0YXJ0QWRkcmVzcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhZGRyZXNzVGFyZ2V0W2ldIDwgc3RhcnRBZGRyZXNzW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVuZEFkZHJlc3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGkgPj0gYWRkcmVzc1RhcmdldC5sZW5ndGgpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWRkcmVzc1RhcmdldFtpXSA8IHN0YXJ0QWRkcmVzc1tpXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNCZWZvcmVFbmRBZGRyZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGFkZHJlc3NUYXJnZXRbaV0gPiBzdGFydEFkZHJlc3NbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc0FmdGVyU3RhcnRBZGRyZXNzICYmIGlzQmVmb3JlRW5kQWRkcmVzcztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGVsZXRlc2VjdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICBleGVjQ29tbWFuZDogZnVuY3Rpb24gKGNtZCwgc2VjdGlvbiwga2VlcENoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNlY3Rpb24pIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZ2V0Tm9kZUZyb21BZGRyZXNzKHN0YXJ0QWRkcmVzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50ID0gbWUuYm9keTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YXJ0QWRkcmVzcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWN1cnJlbnQuY2hpbGROb2RlcykgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LmNoaWxkTm9kZXNbc3RhcnRBZGRyZXNzW2ldXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydE5vZGUgPSBnZXROb2RlRnJvbUFkZHJlc3Moc2VjdGlvbi5zdGFydEFkZHJlc3MpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZE5vZGUgPSBnZXROb2RlRnJvbUFkZHJlc3Moc2VjdGlvbi5lbmRBZGRyZXNzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gc3RhcnROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHROb2RlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWtlZXBDaGlsZHJlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5pbkRvYyhlbmROb2RlLCBtZS5kb2N1bWVudCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIShkb21VdGlscy5nZXRQb3NpdGlvbihjdXJyZW50LCBlbmROb2RlKSAmIGRvbVV0aWxzLlBPU0lUSU9OX0ZPTExPV0lORylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dE5vZGUgPSBjdXJyZW50Lm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBuZXh0Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZShjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCd1cGRhdGVTZWN0aW9ucycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZWxlY3RzZWN0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBzZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNlY3Rpb24gJiYgIXNlY3Rpb24uZG9tKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhbmdlID0gbWUuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRBZGRyZXNzOiB1dGlscy5jbG9uZShzZWN0aW9uLnN0YXJ0QWRkcmVzcywgW10pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRBZGRyZXNzOiB1dGlscy5jbG9uZShzZWN0aW9uLmVuZEFkZHJlc3MsIFtdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzLmVuZEFkZHJlc3NbYWRkcmVzcy5lbmRBZGRyZXNzLmxlbmd0aCAtIDFdKys7XG4gICAgICAgICAgICAgICAgICAgICAgICByYW5nZS5tb3ZlVG9BZGRyZXNzKGFkZHJlc3MpLnNlbGVjdCgpLnNjcm9sbFRvVmlldygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG5vdE5lZWRVbmRvOiB0cnVlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzY3JvbGx0b3NlY3Rpb246IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjbWQsIHNlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2VjdGlvbiAmJiAhc2VjdGlvbi5kb20pIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UgPSBtZS5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydEFkZHJlc3M6IHNlY3Rpb24uc3RhcnRBZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRBZGRyZXNzOiBzZWN0aW9uLmVuZEFkZHJlc3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzcy5lbmRBZGRyZXNzW2FkZHJlc3MuZW5kQWRkcmVzcy5sZW5ndGggLSAxXSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UubW92ZVRvQWRkcmVzcyhhZGRyZXNzKS5zY3JvbGxUb1ZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBub3ROZWVkVW5kbzogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KTtcblxuICAgIC8vIHBsdWdpbnMvc2ltcGxldXBsb2FkLmpzXG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICog566A5Y2V5LiK5LygOueCueWHu+aMiemSriznm7TmjqXpgInmi6nmlofku7bkuIrkvKBcbiAgICAgKiBAYXV0aG9yIEppbnFuXG4gICAgICogQGRhdGUgMjAxNC0wMy0zMVxuICAgICAqL1xuICAgIFVFLnBsdWdpbi5yZWdpc3Rlcignc2ltcGxldXBsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgaXNMb2FkZWQgPSBmYWxzZSxcbiAgICAgICAgICAgIGNvbnRhaW5lckJ0bixcbiAgICAgICAgICAgIGN1c3RvbVVwbG9hZGVyID0gbWUub3B0aW9ucy5jdXN0b21VcGxvYWRlcixcbiAgICAgICAgICAgIHVwbG9hZGVyT3B0aW9ucyA9IG1lLm9wdGlvbnMudXBsb2FkZXJPcHRpb25zIHx8IHt9O1xuXG4gICAgICAgIGZ1bmN0aW9uIGFkZElucHV0KCkge1xuICAgICAgICAgICAgdmFyIHcgPSBjb250YWluZXJCdG4ub2Zmc2V0V2lkdGggfHwgMjA7XG4gICAgICAgICAgICB2YXIgaCA9IGNvbnRhaW5lckJ0bi5vZmZzZXRIZWlnaHQgfHwgMjA7XG4gICAgICAgICAgICB2YXIgZmlsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgICAgIHZhciBpbnB1dFN0eWxlID1cbiAgICAgICAgICAgICAgICAnZGlzcGxheTpibG9jazt3aWR0aDonICtcbiAgICAgICAgICAgICAgICB3ICtcbiAgICAgICAgICAgICAgICAncHg7aGVpZ2h0OicgK1xuICAgICAgICAgICAgICAgIGggK1xuICAgICAgICAgICAgICAgICdweDtvdmVyZmxvdzpoaWRkZW47Ym9yZGVyOjA7bWFyZ2luOjA7cGFkZGluZzowO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtmaWx0ZXI6YWxwaGEob3BhY2l0eT0wKTstbW96LW9wYWNpdHk6MDsta2h0bWwtb3BhY2l0eTogMDtvcGFjaXR5OiAwO2N1cnNvcjpwb2ludGVyOyc7XG4gICAgICAgICAgICB2YXIgdGltZXN0cmFwID0gKCtuZXcgRGF0ZSgpKS50b1N0cmluZygzNik7XG5cbiAgICAgICAgICAgIGZpbGVJbnB1dC5pZCA9ICdlZHVpX2lucHV0XycgKyB0aW1lc3RyYXA7XG4gICAgICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgICAgICAgIGZpbGVJbnB1dC5hY2NlcHQgPSAnaW1hZ2UvcG5nLCBpbWFnZS9qcGVnLCBpbWFnZS9naWYnO1xuICAgICAgICAgICAgZmlsZUlucHV0LnN0eWxlLmNzc1RleHQgPSBpbnB1dFN0eWxlO1xuICAgICAgICAgICAgY29udGFpbmVyQnRuLmFwcGVuZENoaWxkKGZpbGVJbnB1dCk7XG4gICAgICAgICAgICByZXR1cm4gZmlsZUlucHV0O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2hvd0Vycm9yTG9hZGVyKHRpdGxlLCBsb2FkaW5nSWQpIHtcbiAgICAgICAgICAgIGlmIChsb2FkaW5nSWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbG9hZGVyID0gbWUuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobG9hZGluZ0lkKTtcbiAgICAgICAgICAgICAgICBsb2FkZXIgJiYgZG9tVXRpbHMucmVtb3ZlKGxvYWRlcik7XG4gICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdzaG93bWVzc2FnZScsIHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGxvYWRpbmdJZCxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDQwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vRVhJRiBqcyDlj6/ku6Xor7vlj5blm77niYfnmoTlhYPkv6Hmga8gIGh0dHBzOi8vZ2l0aHViLmNvbS9leGlmLWpzL2V4aWYtanNcbiAgICAgICAgZnVuY3Rpb24gZ2V0SW1nRGVncmVlKGZpbGUpIHtcbiAgICAgICAgICAgIHZhciBkZWdyZWUgPSAwO1xuICAgICAgICAgICAgRVhJRi5nZXREYXRhKGZpbGUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgb3JpZW50YXRpb24gPSBFWElGLmdldFRhZyh0aGlzLCAnT3JpZW50YXRpb24nKTtcbiAgICAgICAgICAgICAgICBkZWdyZWUgPSB7XG4gICAgICAgICAgICAgICAgICAgIDM6ICcxODAnLFxuICAgICAgICAgICAgICAgICAgICA2OiAnOTAnLFxuICAgICAgICAgICAgICAgICAgICA4OiAnMjcwJ1xuICAgICAgICAgICAgICAgIH1bb3JpZW50YXRpb25dO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZGVncmVlO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdXBsb2FkKGZpbGUsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHZhciBsb2FkaW5nSWQgPSAnbG9hZGluZ18nICsgKCtuZXcgRGF0ZSgpKS50b1N0cmluZygzNik7XG4gICAgICAgICAgICB2YXIgbWF4RmlsZVNpemUgPSAnMTBNJztcbiAgICAgICAgICAgIGN1c3RvbVVwbG9hZGVyKGZpbGUsIHtcbiAgICAgICAgICAgICAgICBtYXhGaWxlU2l6ZTogbWF4RmlsZVNpemUsXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiB1cGxvYWRlck9wdGlvbnMuc2lnbmF0dXJlLFxuICAgICAgICAgICAgICAgIG9uT3Zlck1heFNpemU6IChmdW5jdGlvbiAoX3RoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vX3RoaXMuY2FuY2VsKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG92ZXJNYXhTaXplTXNnID0gbWUuZ2V0TGFuZygnc2ltcGxldXBsb2FkLm92ZXJNYXhTaXplJykucmVwbGFjZSgve21heFNpemV9LywgbWF4RmlsZVNpemUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUudHJpZ2dlcignY3VzdG9tZUV2ZW50LmN1c3RvbVVwbG9hZGVyLm92ZXJNYXhTaXplJywgeyBtc2c6IG92ZXJNYXhTaXplTXNnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWxlcnQob3Zlck1heFNpemVNc2cpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pKHRoaXMpLFxuICAgICAgICAgICAgICAgIGJlZm9yZVVwbG9hZDogKGZ1bmN0aW9uIChfdGhpcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbnNlcnRodG1sJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGltZyBjbGFzcz1cImxvYWRpbmdjbGFzc1wiIGlkPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRpbmdJZCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiBzcmM9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUub3B0aW9ucy50aGVtZVBhdGggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5vcHRpb25zLnRoZW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy9pbWFnZXMvc3BhY2VyLmdpZlwiIHRpdGxlPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtZS5nZXRMYW5nKCdzaW1wbGV1cGxvYWQubG9hZGluZycpIHx8ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiA+J1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pKHRoaXMpLFxuICAgICAgICAgICAgICAgIHByb2dyZXNzOiAoZnVuY3Rpb24gKF90aGlzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8qcmV0dXJuIGZ1bmN0aW9uIChyZXMpIHsqL1xuICAgICAgICAgICAgICAgICAgICAvL2lmICghcmVzLmxlbmd0aENvbXB1dGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9yZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIC8vfVxuICAgICAgICAgICAgICAgICAgICAvL3JldHVybiBfdGhpcy50cmlnZ2VyKCd1cGxvYWRwcm9ncmVzcycsIFtmaWxlLCByZXMubG9hZGVkLCByZXMudG90YWxdKTtcbiAgICAgICAgICAgICAgICAgICAgLyp9OyovXG4gICAgICAgICAgICAgICAgfSkodGhpcyksXG4gICAgICAgICAgICAgICAgc3VjY2VzczogKGZ1bmN0aW9uIChfdGhpcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHJlcywgcGF5TG9hZERhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v55m+5bqm5LqR5paH5Lu25LiK5Lyg5bqV5bGC5L+u5pS55LqG77yM5omA5Lul6L+Z5Liq5Zyw5pa55YW85a655LiL44CCXG4gICAgICAgICAgICAgICAgICAgICAgICAvL+eZvuW6puWbvueJh+iwg+aVtOWRveS7pFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5LiN5aSE55CG5Zu+54mH55qE5a695bqmIOi/geenu+WIsOiFvuiur+S6kUBkYW95dVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGlzRnJvbUFXUyA9IC9hbWF6b25hd3NcXC5jb20vaS50ZXN0KHBheUxvYWREYXRhLnBhdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGJhc2VDb21tYW5kID0gJ0BsXzEsZl9wbmcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGZpbGVQYXRoID0gcGF5TG9hZERhdGEucGF0aCArIGJhc2VDb21tYW5kICsgJyx3XzEyMDAnO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaWYgKGlzRnJvbUFXUykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGZpbGVQYXRoID0gcGF5TG9hZERhdGEucGF0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZhciBkZWdyZWUgPSBnZXRJbWdEZWdyZWUoZmlsZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgbG9hZGVyID0gbWUuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobG9hZGluZ0lkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZhciBleHQgPSBmaWxlLm5hbWUgPyBmaWxlLm5hbWUuc3BsaXQoJy4nKS5wb3AoKS50b0xvd2VyQ2FzZSgpIDogJyc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmICghaXNGcm9tQVdTICYmIGRlZ3JlZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGZpbGVQYXRoICs9ICcsYV8nICsgZGVncmVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgLy/ov5nnp43mmK/lm6DkuLrmnI3liqHlmajmsqHmnInlgZrlm77niYfnn6vmraMs5omA5Lul5omL5Yqo5qCh5q2jXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgaWYgKGRlZ3JlZSA9PSA5MCB8fCBkZWdyZWUgPT0gMjcwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIGZpbGVQYXRoID0gcGF5TG9hZERhdGEucGF0aCArIGJhc2VDb21tYW5kICsgJyxoXzYwMCxhXycgKyBkZWdyZWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgZGVncmVlID0gZ2V0SW1nRGVncmVlKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gLy9naWYg5LiN6IO95Yqg55m+5bqm6L2s56CB5oyH5LukXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpZiAoZXh0ID09PSAnZ2lmJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGZpbGVQYXRoID0gcGF5TG9hZERhdGEucGF0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxvYWRlciA9IG1lLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxvYWRpbmdJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlUGF0aCA9IHBheUxvYWREYXRhLnBhdGg7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ3NyYycsIGZpbGVQYXRoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ19zcmMnLCBmaWxlUGF0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCd0aXRsZScsIGZpbGUubmFtZSB8fCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCdhbHQnLCBmaWxlLm5hbWUgfHwgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGVyLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnJlbW92ZUNsYXNzZXMobG9hZGVyLCAnbG9hZGluZ2NsYXNzJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIHRoaXMuaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCd3aWR0aCcsIHRoaXMud2lkdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVuYWJsZUF1dG9IZWlnaHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5maXJlRXZlbnQoJ2NvbnRlbnRjaGFuZ2UnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSkodGhpcyksXG4gICAgICAgICAgICAgICAgZXJyb3I6IChmdW5jdGlvbiAoX3RoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dFcnJvckxvYWRlciAmJiBzaG93RXJyb3JMb2FkZXIobWUuZ2V0TGFuZygnc2ltcGxldXBsb2FkLmxvYWRFcnJvcicpLCBsb2FkaW5nSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLypfdGhpcy5jYW5jZWwoZmlsZSk7Ki9cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vX3RoaXMuZmlsZXMucG9wKGZpbGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLypyZXR1cm4gX3RoaXMudHJpZ2dlcigndXBsb2FkZXJyb3InLCBbZmlsZSwgcmVzXSk7Ki9cbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9KSh0aGlzKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBpbml0VXBsb2FkQnRuKCkge1xuICAgICAgICAgICAgdmFyIGZpbGVJbnB1dCA9IGFkZElucHV0KCk7XG4gICAgICAgICAgICBkb21VdGlscy5vbihmaWxlSW5wdXQsICdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdXBsb2FkKGZpbGVJbnB1dC5maWxlc1swXSk7XG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpc0xvYWRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgLypmdW5jdGlvbiBpbml0VXBsb2FkQnRuKCl7Ki9cbiAgICAgICAgLy92YXIgdyA9IGNvbnRhaW5lckJ0bi5vZmZzZXRXaWR0aCB8fCAyMCxcbiAgICAgICAgLy9oID0gY29udGFpbmVyQnRuLm9mZnNldEhlaWdodCB8fCAyMCxcbiAgICAgICAgLy9idG5JZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKSxcbiAgICAgICAgLy9idG5TdHlsZSA9ICdkaXNwbGF5OmJsb2NrO3dpZHRoOicgKyB3ICsgJ3B4O2hlaWdodDonICsgaCArICdweDtvdmVyZmxvdzpoaWRkZW47Ym9yZGVyOjA7bWFyZ2luOjA7cGFkZGluZzowO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtmaWx0ZXI6YWxwaGEob3BhY2l0eT0wKTstbW96LW9wYWNpdHk6MDsta2h0bWwtb3BhY2l0eTogMDtvcGFjaXR5OiAwO2N1cnNvcjpwb2ludGVyOyc7XG5cbiAgICAgICAgLy9kb21VdGlscy5vbihidG5JZnJhbWUsICdsb2FkJywgZnVuY3Rpb24oKXtcblxuICAgICAgICAvL3ZhciB0aW1lc3RyYXAgPSAoK25ldyBEYXRlKCkpLnRvU3RyaW5nKDM2KSxcbiAgICAgICAgLy93cmFwcGVyLFxuICAgICAgICAvL2J0bklmcmFtZURvYyxcbiAgICAgICAgLy9idG5JZnJhbWVCb2R5O1xuXG4gICAgICAgIC8vYnRuSWZyYW1lRG9jID0gKGJ0bklmcmFtZS5jb250ZW50RG9jdW1lbnQgfHwgYnRuSWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpO1xuICAgICAgICAvL2J0bklmcmFtZUJvZHkgPSBidG5JZnJhbWVEb2MuYm9keTtcbiAgICAgICAgLy93cmFwcGVyID0gYnRuSWZyYW1lRG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgIC8vd3JhcHBlci5pbm5lckhUTUwgPSAnPGZvcm0gaWQ9XCJlZHVpX2Zvcm1fJyArIHRpbWVzdHJhcCArICdcIiB0YXJnZXQ9XCJlZHVpX2lmcmFtZV8nICsgdGltZXN0cmFwICsgJ1wiIG1ldGhvZD1cIlBPU1RcIiBlbmN0eXBlPVwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiIGFjdGlvbj1cIicgKyBtZS5nZXRPcHQoJ3NlcnZlclVybCcpICsgJ1wiICcgK1xuICAgICAgICAvLydzdHlsZT1cIicgKyBidG5TdHlsZSArICdcIj4nICtcbiAgICAgICAgLy8nPGlucHV0IGlkPVwiZWR1aV9pbnB1dF8nICsgdGltZXN0cmFwICsgJ1wiIHR5cGU9XCJmaWxlXCIgYWNjZXB0PVwiaW1hZ2UvcG5nLCBpbWFnZS9qcGVnLCBpbWFnZS9naWZcIiBuYW1lPVwiJyArIG1lLm9wdGlvbnMuaW1hZ2VGaWVsZE5hbWUgKyAnXCIgJyArXG4gICAgICAgIC8vJ3N0eWxlPVwiJyArIGJ0blN0eWxlICsgJ1wiPicgK1xuICAgICAgICAvLyc8L2Zvcm0+JyArXG4gICAgICAgIC8vJzxpZnJhbWUgaWQ9XCJlZHVpX2lmcmFtZV8nICsgdGltZXN0cmFwICsgJ1wiIG5hbWU9XCJlZHVpX2lmcmFtZV8nICsgdGltZXN0cmFwICsgJ1wiIHN0eWxlPVwiZGlzcGxheTpub25lO3dpZHRoOjA7aGVpZ2h0OjA7Ym9yZGVyOjA7bWFyZ2luOjA7cGFkZGluZzowO3Bvc2l0aW9uOmFic29sdXRlO1wiPjwvaWZyYW1lPic7XG5cbiAgICAgICAgLy93cmFwcGVyLmNsYXNzTmFtZSA9ICdlZHVpLScgKyBtZS5vcHRpb25zLnRoZW1lO1xuICAgICAgICAvL3dyYXBwZXIuaWQgPSBtZS51aS5pZCArICdfaWZyYW1ldXBsb2FkJztcbiAgICAgICAgLy9idG5JZnJhbWVCb2R5LnN0eWxlLmNzc1RleHQgPSBidG5TdHlsZTtcbiAgICAgICAgLy9idG5JZnJhbWVCb2R5LnN0eWxlLndpZHRoID0gdyArICdweCc7XG4gICAgICAgIC8vYnRuSWZyYW1lQm9keS5zdHlsZS5oZWlnaHQgPSBoICsgJ3B4JztcbiAgICAgICAgLy9idG5JZnJhbWVCb2R5LmFwcGVuZENoaWxkKHdyYXBwZXIpO1xuXG4gICAgICAgIC8vaWYgKGJ0bklmcmFtZUJvZHkucGFyZW50Tm9kZSkge1xuICAgICAgICAvL2J0bklmcmFtZUJvZHkucGFyZW50Tm9kZS5zdHlsZS53aWR0aCA9IHcgKyAncHgnO1xuICAgICAgICAvL2J0bklmcmFtZUJvZHkucGFyZW50Tm9kZS5zdHlsZS5oZWlnaHQgPSB3ICsgJ3B4JztcbiAgICAgICAgLy99XG5cbiAgICAgICAgLy92YXIgZm9ybSA9IGJ0bklmcmFtZURvYy5nZXRFbGVtZW50QnlJZCgnZWR1aV9mb3JtXycgKyB0aW1lc3RyYXApO1xuICAgICAgICAvL3ZhciBpbnB1dCA9IGJ0bklmcmFtZURvYy5nZXRFbGVtZW50QnlJZCgnZWR1aV9pbnB1dF8nICsgdGltZXN0cmFwKTtcbiAgICAgICAgLy92YXIgaWZyYW1lID0gYnRuSWZyYW1lRG9jLmdldEVsZW1lbnRCeUlkKCdlZHVpX2lmcmFtZV8nICsgdGltZXN0cmFwKTtcblxuICAgICAgICAvL2RvbVV0aWxzLm9uKGlucHV0LCAnY2hhbmdlJywgZnVuY3Rpb24oKXtcbiAgICAgICAgLy9pZighaW5wdXQudmFsdWUpIHJldHVybjtcbiAgICAgICAgLy92YXIgbG9hZGluZ0lkID0gJ2xvYWRpbmdfJyArICgrbmV3IERhdGUoKSkudG9TdHJpbmcoMzYpO1xuICAgICAgICAvL3ZhciBwYXJhbXMgPSB1dGlscy5zZXJpYWxpemVQYXJhbShtZS5xdWVyeUNvbW1hbmRWYWx1ZSgnc2VydmVycGFyYW0nKSkgfHwgJyc7XG5cbiAgICAgICAgLy92YXIgaW1hZ2VBY3Rpb25VcmwgPSBtZS5nZXRBY3Rpb25VcmwobWUuZ2V0T3B0KCdpbWFnZUFjdGlvbk5hbWUnKSk7XG4gICAgICAgIC8vdmFyIGFsbG93RmlsZXMgPSBtZS5nZXRPcHQoJ2ltYWdlQWxsb3dGaWxlcycpO1xuXG4gICAgICAgIC8vbWUuZm9jdXMoKTtcbiAgICAgICAgLy9tZS5leGVjQ29tbWFuZCgnaW5zZXJ0aHRtbCcsICc8aW1nIGNsYXNzPVwibG9hZGluZ2NsYXNzXCIgaWQ9XCInICsgbG9hZGluZ0lkICsgJ1wiIHNyYz1cIicgKyBtZS5vcHRpb25zLnRoZW1lUGF0aCArIG1lLm9wdGlvbnMudGhlbWUgKycvaW1hZ2VzL3NwYWNlci5naWZcIiB0aXRsZT1cIicgKyAobWUuZ2V0TGFuZygnc2ltcGxldXBsb2FkLmxvYWRpbmcnKSB8fCAnJykgKyAnXCIgPicpO1xuXG4gICAgICAgIC8vZnVuY3Rpb24gY2FsbGJhY2soKXtcbiAgICAgICAgLy90cnl7XG4gICAgICAgIC8vdmFyIGxpbmssIGpzb24sIGxvYWRlcixcbiAgICAgICAgLy9ib2R5ID0gKGlmcmFtZS5jb250ZW50RG9jdW1lbnQgfHwgaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpLmJvZHksXG4gICAgICAgIC8vcmVzdWx0ID0gYm9keS5pbm5lclRleHQgfHwgYm9keS50ZXh0Q29udGVudCB8fCAnJztcbiAgICAgICAgLy9qc29uID0gKG5ldyBGdW5jdGlvbihcInJldHVybiBcIiArIHJlc3VsdCkpKCk7XG4gICAgICAgIC8vbGluayA9IG1lLm9wdGlvbnMuaW1hZ2VVcmxQcmVmaXggKyBqc29uLnVybDtcbiAgICAgICAgLy9pZihqc29uLnN0YXRlID09ICdTVUNDRVNTJyAmJiBqc29uLnVybCkge1xuICAgICAgICAvL2xvYWRlciA9IG1lLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxvYWRpbmdJZCk7XG4gICAgICAgIC8vbG9hZGVyLnNldEF0dHJpYnV0ZSgnc3JjJywgbGluayk7XG4gICAgICAgIC8vbG9hZGVyLnNldEF0dHJpYnV0ZSgnX3NyYycsIGxpbmspO1xuICAgICAgICAvL2xvYWRlci5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywganNvbi50aXRsZSB8fCAnJyk7XG4gICAgICAgIC8vbG9hZGVyLnNldEF0dHJpYnV0ZSgnYWx0JywganNvbi5vcmlnaW5hbCB8fCAnJyk7XG4gICAgICAgIC8vbG9hZGVyLnJlbW92ZUF0dHJpYnV0ZSgnaWQnKTtcbiAgICAgICAgLy9kb21VdGlscy5yZW1vdmVDbGFzc2VzKGxvYWRlciwgJ2xvYWRpbmdjbGFzcycpO1xuICAgICAgICAvL30gZWxzZSB7XG4gICAgICAgIC8vc2hvd0Vycm9yTG9hZGVyICYmIHNob3dFcnJvckxvYWRlcihqc29uLnN0YXRlKTtcbiAgICAgICAgLy99XG4gICAgICAgIC8vfWNhdGNoKGVyKXtcbiAgICAgICAgLy9zaG93RXJyb3JMb2FkZXIgJiYgc2hvd0Vycm9yTG9hZGVyKG1lLmdldExhbmcoJ3NpbXBsZXVwbG9hZC5sb2FkRXJyb3InKSk7XG4gICAgICAgIC8vfVxuICAgICAgICAvL2Zvcm0ucmVzZXQoKTtcbiAgICAgICAgLy9kb21VdGlscy5vbihpZnJhbWUsICdsb2FkJywgY2FsbGJhY2spO1xuICAgICAgICAvL31cbiAgICAgICAgLy9mdW5jdGlvbiBzaG93RXJyb3JMb2FkZXIodGl0bGUpe1xuICAgICAgICAvL2lmKGxvYWRpbmdJZCkge1xuICAgICAgICAvL3ZhciBsb2FkZXIgPSBtZS5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FkaW5nSWQpO1xuICAgICAgICAvL2xvYWRlciAmJiBkb21VdGlscy5yZW1vdmUobG9hZGVyKTtcbiAgICAgICAgLy9tZS5maXJlRXZlbnQoJ3Nob3dtZXNzYWdlJywge1xuICAgICAgICAvLydpZCc6IGxvYWRpbmdJZCxcbiAgICAgICAgLy8nY29udGVudCc6IHRpdGxlLFxuICAgICAgICAvLyd0eXBlJzogJ2Vycm9yJyxcbiAgICAgICAgLy8ndGltZW91dCc6IDQwMDBcbiAgICAgICAgLy99KTtcbiAgICAgICAgLy99XG4gICAgICAgIC8vfVxuXG4gICAgICAgIC8vWz4g5Yik5pat5ZCO56uv6YWN572u5piv5ZCm5rKh5pyJ5Yqg6L295oiQ5YqfIDxdXG4gICAgICAgIC8vaWYgKCFtZS5nZXRPcHQoJ2ltYWdlQWN0aW9uTmFtZScpKSB7XG4gICAgICAgIC8vZXJyb3JIYW5kbGVyKG1lLmdldExhbmcoJ2F1dG91cGxvYWQuZXJyb3JMb2FkQ29uZmlnJykpO1xuICAgICAgICAvL3JldHVybjtcbiAgICAgICAgLy99XG4gICAgICAgIC8vLy8g5Yik5pat5paH5Lu25qC85byP5piv5ZCm6ZSZ6K+vXG4gICAgICAgIC8vdmFyIGZpbGVuYW1lID0gaW5wdXQudmFsdWUsXG4gICAgICAgIC8vZmlsZWV4dCA9IGZpbGVuYW1lID8gZmlsZW5hbWUuc3Vic3RyKGZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykpOicnO1xuICAgICAgICAvL2lmICghZmlsZWV4dCB8fCAoYWxsb3dGaWxlcyAmJiAoYWxsb3dGaWxlcy5qb2luKCcnKSArICcuJykuaW5kZXhPZihmaWxlZXh0LnRvTG93ZXJDYXNlKCkgKyAnLicpID09IC0xKSkge1xuICAgICAgICAvL3Nob3dFcnJvckxvYWRlcihtZS5nZXRMYW5nKCdzaW1wbGV1cGxvYWQuZXhjZWVkVHlwZUVycm9yJykpO1xuICAgICAgICAvL3JldHVybjtcbiAgICAgICAgLy99XG5cbiAgICAgICAgLy9kb21VdGlscy5vbihpZnJhbWUsICdsb2FkJywgY2FsbGJhY2spO1xuICAgICAgICAvL2Zvcm0uYWN0aW9uID0gdXRpbHMuZm9ybWF0VXJsKGltYWdlQWN0aW9uVXJsICsgKGltYWdlQWN0aW9uVXJsLmluZGV4T2YoJz8nKSA9PSAtMSA/ICc/JzonJicpICsgcGFyYW1zKTtcbiAgICAgICAgLy9mb3JtLnN1Ym1pdCgpO1xuICAgICAgICAvL30pO1xuXG4gICAgICAgIC8vdmFyIHN0YXRlVGltZXI7XG4gICAgICAgIC8vbWUuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy9jbGVhclRpbWVvdXQoc3RhdGVUaW1lcik7XG4gICAgICAgIC8vc3RhdGVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vdmFyIHN0YXRlID0gbWUucXVlcnlDb21tYW5kU3RhdGUoJ3NpbXBsZXVwbG9hZCcpO1xuICAgICAgICAvL2lmIChzdGF0ZSA9PSAtMSkge1xuICAgICAgICAvL2lucHV0LmRpc2FibGVkID0gJ2Rpc2FibGVkJztcbiAgICAgICAgLy99IGVsc2Uge1xuICAgICAgICAvL2lucHV0LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIC8vfVxuICAgICAgICAvL30sIDQwMCk7XG4gICAgICAgIC8vfSk7XG4gICAgICAgIC8vaXNMb2FkZWQgPSB0cnVlO1xuICAgICAgICAvL30pO1xuXG4gICAgICAgIC8vYnRuSWZyYW1lLnN0eWxlLmNzc1RleHQgPSBidG5TdHlsZTtcbiAgICAgICAgLy9jb250YWluZXJCdG4uYXBwZW5kQ2hpbGQoYnRuSWZyYW1lKTtcbiAgICAgICAgLyp9Ki9cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYmluZEV2ZW50czoge1xuICAgICAgICAgICAgICAgIHJlYWR5OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8v6K6+572ubG9hZGluZ+eahOagt+W8j1xuICAgICAgICAgICAgICAgICAgICB1dGlscy5jc3NSdWxlKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xvYWRpbmcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIubG9hZGluZ2NsYXNze2Rpc3BsYXk6aW5saW5lLWJsb2NrO2N1cnNvcjpkZWZhdWx0O2JhY2tncm91bmQ6IHVybCgnXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy50aGVtZVBhdGggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3B0aW9ucy50aGVtZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIvaW1hZ2VzL2xvYWRpbmcuZ2lmJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgdHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCAjY2NjY2NjO21hcmdpbi1yaWdodDoxcHg7aGVpZ2h0OiAyMnB4O3dpZHRoOiAyMnB4O31cXG5cIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIubG9hZGVycm9yY2xhc3N7ZGlzcGxheTppbmxpbmUtYmxvY2s7Y3Vyc29yOmRlZmF1bHQ7YmFja2dyb3VuZDogdXJsKCdcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnRoZW1lUGF0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnRoZW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi9pbWFnZXMvbG9hZGVycm9yLnBuZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyIHRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgI2NjY2NjYzttYXJnaW4tcmlnaHQ6MXB4O2hlaWdodDogMjJweDt3aWR0aDogMjJweDtcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ30nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgLyog5Yid5aeL5YyW566A5Y2V5LiK5Lyg5oyJ6ZKuICovXG4gICAgICAgICAgICAgICAgc2ltcGxldXBsb2FkYnRucmVhZHk6IGZ1bmN0aW9uICh0eXBlLCBjb250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyQnRuID0gY29udGFpbmVyO1xuICAgICAgICAgICAgICAgICAgICBtZS5hZnRlckNvbmZpZ1JlYWR5KGluaXRVcGxvYWRCdG4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvdXRwdXRSdWxlOiBmdW5jdGlvbiAocm9vdCkge1xuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2gocm9vdC5nZXROb2Rlc0J5VGFnTmFtZSgnaW1nJyksIGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgvXFxiKGxvYWRlcnJvcmNsYXNzKXwoYmxvYWRlcnJvcmNsYXNzKVxcYi8udGVzdChuLmdldEF0dHIoJ2NsYXNzJykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb21tYW5kczoge1xuICAgICAgICAgICAgICAgIHNpbXBsZXVwbG9hZDoge1xuICAgICAgICAgICAgICAgICAgICBxdWVyeUNvbW1hbmRTdGF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzTG9hZGVkID8gMCA6IC0xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gcGx1Z2lucy9zZXJ2ZXJwYXJhbS5qc1xuICAgIC8qKlxuICAgICAqIOacjeWKoeWZqOaPkOS6pOeahOmineWkluWPguaVsOWIl+ihqOiuvue9ruaPkuS7tlxuICAgICAqIEBmaWxlXG4gICAgICogQHNpbmNlIDEuMi42LjFcbiAgICAgKi9cbiAgICBVRS5wbHVnaW4ucmVnaXN0ZXIoJ3NlcnZlcnBhcmFtJywgZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbWUgPSB0aGlzLFxuICAgICAgICAgICAgc2VydmVyUGFyYW0gPSB7fTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29tbWFuZHM6IHtcbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiDkv67mlLnmnI3liqHlmajmj5DkuqTnmoTpop3lpJblj4LmlbDliJfooags5riF6Zmk5omA5pyJ6aG5XG4gICAgICAgICAgICAgICAgICogQGNvbW1hbmQgc2VydmVycGFyYW1cbiAgICAgICAgICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCgnc2VydmVycGFyYW0nKTtcbiAgICAgICAgICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ3NlcnZlcnBhcmFtJyk7IC8v6L+U5Zue56m6XG4gICAgICAgICAgICAgICAgICogYGBgXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICog5L+u5pS55pyN5Yqh5Zmo5o+Q5Lqk55qE6aKd5aSW5Y+C5pWw5YiX6KGoLOWIoOmZpOaMh+WumumhuVxuICAgICAgICAgICAgICAgICAqIEBjb21tYW5kIHNlcnZlcnBhcmFtXG4gICAgICAgICAgICAgICAgICogQG1ldGhvZCBleGVjQ29tbWFuZFxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBrZXkg6KaB5riF6Zmk55qE5bGe5oCnXG4gICAgICAgICAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICAgICAgICAgKiBgYGBqYXZhc2NyaXB0XG4gICAgICAgICAgICAgICAgICogZWRpdG9yLmV4ZWNDb21tYW5kKCdzZXJ2ZXJwYXJhbScsICduYW1lJyk7IC8v5Yig6Zmk5bGe5oCnbmFtZVxuICAgICAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIOS/ruaUueacjeWKoeWZqOaPkOS6pOeahOmineWkluWPguaVsOWIl+ihqCzkvb/nlKjplK7lgLzmt7vliqDpoblcbiAgICAgICAgICAgICAgICAgKiBAY29tbWFuZCBzZXJ2ZXJwYXJhbVxuICAgICAgICAgICAgICAgICAqIEBtZXRob2QgZXhlY0NvbW1hbmRcbiAgICAgICAgICAgICAgICAgKiBAcGFyYW0geyBTdHJpbmcgfSBjbWQg5ZG95Luk5a2X56ym5LiyXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0ga2V5IOimgea3u+WKoOeahOWxnuaAp1xuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IHZhbHVlIOimgea3u+WKoOWxnuaAp+eahOWAvFxuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCgnc2VydmVycGFyYW0nLCAnbmFtZScsICdoZWxsbycpO1xuICAgICAgICAgICAgICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSgnc2VydmVycGFyYW0nKTsgLy/ov5Tlm57lr7nosaEgeyduYW1lJzogJ2hlbGxvJ31cbiAgICAgICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiDkv67mlLnmnI3liqHlmajmj5DkuqTnmoTpop3lpJblj4LmlbDliJfooags5Lyg5YWl6ZSu5YC85a+55a+56LGh5re75Yqg5aSa6aG5XG4gICAgICAgICAgICAgICAgICogQGNvbW1hbmQgc2VydmVycGFyYW1cbiAgICAgICAgICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IE9iamVjdCB9IGtleSDkvKDlhaXnmoTplK7lgLzlr7nlr7nosaFcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiBlZGl0b3IuZXhlY0NvbW1hbmQoJ3NlcnZlcnBhcmFtJywgeyduYW1lJzogJ2hlbGxvJ30pO1xuICAgICAgICAgICAgICAgICAqIGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSgnc2VydmVycGFyYW0nKTsgLy/ov5Tlm57lr7nosaEgeyduYW1lJzogJ2hlbGxvJ31cbiAgICAgICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiDkv67mlLnmnI3liqHlmajmj5DkuqTnmoTpop3lpJblj4LmlbDliJfooags5L2/55So6Ieq5a6a5LmJ5Ye95pWw5re75Yqg5aSa6aG5XG4gICAgICAgICAgICAgICAgICogQGNvbW1hbmQgc2VydmVycGFyYW1cbiAgICAgICAgICAgICAgICAgKiBAbWV0aG9kIGV4ZWNDb21tYW5kXG4gICAgICAgICAgICAgICAgICogQHBhcmFtIHsgU3RyaW5nIH0gY21kIOWRveS7pOWtl+espuS4slxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IEZ1bmN0aW9uIH0ga2V5IOiHquWumuS5ieiOt+WPluWPguaVsOeahOWHveaVsFxuICAgICAgICAgICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAgICAgICAgICogYGBgamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAqIGVkaXRvci5leGVjQ29tbWFuZCgnc2VydmVycGFyYW0nLCBmdW5jdGlvbihlZGl0b3Ipe1xuICAgICAgICAgICAgICAgICAqICAgICByZXR1cm4geydrZXknOiAndmFsdWUnfTtcbiAgICAgICAgICAgICAgICAgKiB9KTtcbiAgICAgICAgICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ3NlcnZlcnBhcmFtJyk7IC8v6L+U5Zue5a+56LGhIHsna2V5JzogJ3ZhbHVlJ31cbiAgICAgICAgICAgICAgICAgKiBgYGBcbiAgICAgICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIOiOt+WPluacjeWKoeWZqOaPkOS6pOeahOmineWkluWPguaVsOWIl+ihqFxuICAgICAgICAgICAgICAgICAqIEBjb21tYW5kIHNlcnZlcnBhcmFtXG4gICAgICAgICAgICAgICAgICogQG1ldGhvZCBxdWVyeUNvbW1hbmRWYWx1ZVxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7IFN0cmluZyB9IGNtZCDlkb3ku6TlrZfnrKbkuLJcbiAgICAgICAgICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgICAgICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgICAgICAgICAgICAgKiBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoICdzZXJ2ZXJwYXJhbScgKTsgLy/ov5Tlm57lr7nosaEgeydrZXknOiAndmFsdWUnfVxuICAgICAgICAgICAgICAgICAqIGBgYFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHNlcnZlcnBhcmFtOiB7XG4gICAgICAgICAgICAgICAgICAgIGV4ZWNDb21tYW5kOiBmdW5jdGlvbiAoY21kLCBrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSB1bmRlZmluZWQgfHwga2V5ID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/kuI3kvKDlj4LmlbAs5riF56m65YiX6KGoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUGFyYW0gPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNTdHJpbmcoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Lyg5YWl6ZSu5YC8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHNlcnZlclBhcmFtW2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUGFyYW1ba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3Qoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Lyg5YWl5a+56LGhLOimhuebluWIl+ihqOmhuVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmV4dGVuZChzZXJ2ZXJQYXJhbSwga2V5LCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNGdW5jdGlvbihrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/kvKDlhaXlh73mlbAs5re75Yqg5YiX6KGo6aG5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHMuZXh0ZW5kKHNlcnZlclBhcmFtLCBrZXkoKSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5Q29tbWFuZFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VydmVyUGFyYW0gfHwge307XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL2luc2VydGZpbGUuanNcbiAgICAvKipcbiAgICAgKiDmj5LlhaXpmYTku7ZcbiAgICAgKi9cbiAgICBVRS5wbHVnaW4ucmVnaXN0ZXIoJ2luc2VydGZpbGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0RmlsZUljb24odXJsKSB7XG4gICAgICAgICAgICB2YXIgZXh0ID0gdXJsLnN1YnN0cih1cmwubGFzdEluZGV4T2YoJy4nKSArIDEpLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgICAgICAgbWFwcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgcmFyOiAnaWNvbl9yYXIuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgemlwOiAnaWNvbl9yYXIuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgdGFyOiAnaWNvbl9yYXIuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgZ3o6ICdpY29uX3Jhci5naWYnLFxuICAgICAgICAgICAgICAgICAgICBiejI6ICdpY29uX3Jhci5naWYnLFxuICAgICAgICAgICAgICAgICAgICBkb2M6ICdpY29uX2RvYy5naWYnLFxuICAgICAgICAgICAgICAgICAgICBkb2N4OiAnaWNvbl9kb2MuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgcGRmOiAnaWNvbl9wZGYuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgbXAzOiAnaWNvbl9tcDMuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgeGxzOiAnaWNvbl94bHMuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgY2htOiAnaWNvbl9jaG0uZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgcHB0OiAnaWNvbl9wcHQuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgcHB0eDogJ2ljb25fcHB0LmdpZicsXG4gICAgICAgICAgICAgICAgICAgIGF2aTogJ2ljb25fbXYuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgcm12YjogJ2ljb25fbXYuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgd212OiAnaWNvbl9tdi5naWYnLFxuICAgICAgICAgICAgICAgICAgICBmbHY6ICdpY29uX212LmdpZicsXG4gICAgICAgICAgICAgICAgICAgIHN3ZjogJ2ljb25fbXYuZ2lmJyxcbiAgICAgICAgICAgICAgICAgICAgcm06ICdpY29uX212LmdpZicsXG4gICAgICAgICAgICAgICAgICAgIGV4ZTogJ2ljb25fZXhlLmdpZicsXG4gICAgICAgICAgICAgICAgICAgIHBzZDogJ2ljb25fcHNkLmdpZicsXG4gICAgICAgICAgICAgICAgICAgIHR4dDogJ2ljb25fdHh0LmdpZicsXG4gICAgICAgICAgICAgICAgICAgIGpwZzogJ2ljb25fanBnLmdpZicsXG4gICAgICAgICAgICAgICAgICAgIHBuZzogJ2ljb25fanBnLmdpZicsXG4gICAgICAgICAgICAgICAgICAgIGpwZWc6ICdpY29uX2pwZy5naWYnLFxuICAgICAgICAgICAgICAgICAgICBnaWY6ICdpY29uX2pwZy5naWYnLFxuICAgICAgICAgICAgICAgICAgICBpY286ICdpY29uX2pwZy5naWYnLFxuICAgICAgICAgICAgICAgICAgICBibXA6ICdpY29uX2pwZy5naWYnXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBtYXBzW2V4dF0gPyBtYXBzW2V4dF0gOiBtYXBzWyd0eHQnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb21tYW5kczoge1xuICAgICAgICAgICAgICAgIGluc2VydGZpbGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uIChjb21tYW5kLCBmaWxlbGlzdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZWxpc3QgPSB1dGlscy5pc0FycmF5KGZpbGVsaXN0KSA/IGZpbGVsaXN0IDogW2ZpbGVsaXN0XTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgPSAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVUkwgPSBtZS5nZXRPcHQoJ1VFRElUT1JfSE9NRV9VUkwnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uRGlyID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVVJMICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFVSTC5zdWJzdHIoVVJMLmxlbmd0aCAtIDEpID09ICcvJyA/ICcnIDogJy8nKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkaWFsb2dzL2F0dGFjaG1lbnQvZmlsZVR5cGVJbWFnZXMvJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBmaWxlbGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSBmaWxlbGlzdFtpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uID0gaWNvbkRpciArIGdldEZpbGVJY29uKGl0ZW0udXJsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSA9IGl0ZW0udGl0bGUgfHwgaXRlbS51cmwuc3Vic3RyKGl0ZW0udXJsLmxhc3RJbmRleE9mKCcvJykgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sICs9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cCBzdHlsZT1cImxpbmUtaGVpZ2h0OiAxNnB4O1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGltZyBzdHlsZT1cInZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IG1hcmdpbi1yaWdodDogMnB4O1wiIHNyYz1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIF9zcmM9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiAvPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGEgc3R5bGU9XCJmb250LXNpemU6MTJweDsgY29sb3I6IzAwNjZjYztcIiBocmVmPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0udXJsICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiIHRpdGxlPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2E+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3A+JztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmV4ZWNDb21tYW5kKCdpbnNlcnRIdG1sJywgaHRtbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBwbHVnaW5zL3hzc0ZpbHRlci5qc1xuICAgIC8qKlxuICAgICAqIEBmaWxlIHhzc0ZpbHRlci5qc1xuICAgICAqIEBkZXNjIHhzc+i/h+a7pOWZqFxuICAgICAqIEBhdXRob3Igcm9iYmVubXVcbiAgICAgKi9cblxuICAgIFVFLnBsdWdpbnMueHNzRmlsdGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29uZmlnID0gVUVESVRPUl9DT05GSUc7XG4gICAgICAgIHZhciB3aGl0TGlzdCA9IGNvbmZpZy53aGl0TGlzdDtcblxuICAgICAgICBmdW5jdGlvbiBmaWx0ZXIobm9kZSkge1xuICAgICAgICAgICAgdmFyIHRhZ05hbWUgPSBub2RlLnRhZ05hbWU7XG4gICAgICAgICAgICB2YXIgYXR0cnMgPSBub2RlLmF0dHJzO1xuXG4gICAgICAgICAgICBpZiAoIXdoaXRMaXN0Lmhhc093blByb3BlcnR5KHRhZ05hbWUpKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgVUUudXRpbHMuZWFjaChhdHRycywgZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHdoaXRMaXN0W3RhZ05hbWVdLmluZGV4T2Yoa2V5KSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyKGtleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyDmt7vliqBpbnNlcnRodG1sXFxwYXN0ZeetieaTjeS9nOeUqOeahOi/h+a7pOinhOWImVxuICAgICAgICBpZiAod2hpdExpc3QgJiYgY29uZmlnLnhzc0ZpbHRlclJ1bGVzKSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuZmlsdGVyUnVsZXMgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB7fTtcblxuICAgICAgICAgICAgICAgIFVFLnV0aWxzLmVhY2god2hpdExpc3QsIGZ1bmN0aW9uICh2YWwsIGtleSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmlsdGVyKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH0pKCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGFnTGlzdCA9IFtdO1xuXG4gICAgICAgIFVFLnV0aWxzLmVhY2god2hpdExpc3QsIGZ1bmN0aW9uICh2YWwsIGtleSkge1xuICAgICAgICAgICAgdGFnTGlzdC5wdXNoKGtleSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIOa3u+WKoGlucHV06L+H5ruk6KeE5YiZXG4gICAgICAgIC8vXG4gICAgICAgIGlmICh3aGl0TGlzdCAmJiBjb25maWcuaW5wdXRYc3NGaWx0ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuYWRkSW5wdXRSdWxlKGZ1bmN0aW9uIChyb290KSB7XG4gICAgICAgICAgICAgICAgcm9vdC50cmF2ZXJzYWwoZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUudHlwZSAhPT0gJ2VsZW1lbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZmlsdGVyKG5vZGUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8g5re75Yqgb3V0cHV06L+H5ruk6KeE5YiZXG4gICAgICAgIC8vXG4gICAgICAgIGlmICh3aGl0TGlzdCAmJiBjb25maWcub3V0cHV0WHNzRmlsdGVyKSB7XG4gICAgICAgICAgICB0aGlzLmFkZE91dHB1dFJ1bGUoZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgICAgICAgICByb290LnRyYXZlcnNhbChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS50eXBlICE9PSAnZWxlbWVudCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXIobm9kZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyB1aS91aS5qc1xuICAgIHZhciBiYWlkdSA9IGJhaWR1IHx8IHt9O1xuICAgIGJhaWR1LmVkaXRvciA9IGJhaWR1LmVkaXRvciB8fCB7fTtcbiAgICBVRS51aSA9IGJhaWR1LmVkaXRvci51aSA9IHt9O1xuXG4gICAgLy8gdWkvdWl1dGlscy5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBicm93c2VyID0gYmFpZHUuZWRpdG9yLmJyb3dzZXIsXG4gICAgICAgICAgICBkb21VdGlscyA9IGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHM7XG5cbiAgICAgICAgdmFyIG1hZ2ljID0gJyRFRElUT1JVSSc7XG4gICAgICAgIHZhciByb290ID0gKHdpbmRvd1ttYWdpY10gPSB7fSk7XG4gICAgICAgIHZhciB1aWRNYWdpYyA9ICdJRCcgKyBtYWdpYztcbiAgICAgICAgdmFyIHVpZENvdW50ID0gMDtcblxuICAgICAgICB2YXIgdWlVdGlscyA9IChiYWlkdS5lZGl0b3IudWkudWlVdGlscyA9IHtcbiAgICAgICAgICAgIHVpZDogZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmogPyBvYmpbdWlkTWFnaWNdIHx8IChvYmpbdWlkTWFnaWNdID0gKyt1aWRDb3VudCkgOiArK3VpZENvdW50O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhvb2s6IGZ1bmN0aW9uIChmbiwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICB2YXIgZGc7XG4gICAgICAgICAgICAgICAgaWYgKGZuICYmIGZuLl9jYWxsYmFja3MpIHtcbiAgICAgICAgICAgICAgICAgICAgZGcgPSBmbjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBkZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBxO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FsbGJhY2tzID0gZGcuX2NhbGxiYWNrcztcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBrID0gY2FsbGJhY2tzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlIChrLS0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgciA9IGNhbGxiYWNrc1trXS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHE7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIGRnLl9jYWxsYmFja3MgPSBbXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGcuX2NhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGc7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3JlYXRlRWxlbWVudEJ5SHRtbDogZnVuY3Rpb24gKGh0bWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICBlbC5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgICAgICAgICAgIGVsID0gZWwuZmlyc3RDaGlsZDtcbiAgICAgICAgICAgICAgICBlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0Vmlld3BvcnRFbGVtZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJyb3dzZXIuaWUgJiYgYnJvd3Nlci5xdWlya3MgPyBkb2N1bWVudC5ib2R5IDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldENsaWVudFJlY3Q6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgdmFyIGJjcjtcbiAgICAgICAgICAgICAgICAvL3RyYWNlICBJRTbkuIvlnKjmjqfliLbnvJbovpHlmajmmL7pmpDml7blj6/og73kvJrmiqXplJnvvIxjYXRjaOS4gOS4i1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGJjciA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBiY3IgPSB7IGxlZnQ6IDAsIHRvcDogMCwgaGVpZ2h0OiAwLCB3aWR0aDogMCB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgcmVjdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogTWF0aC5yb3VuZChiY3IubGVmdCksXG4gICAgICAgICAgICAgICAgICAgIHRvcDogTWF0aC5yb3VuZChiY3IudG9wKSxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBNYXRoLnJvdW5kKGJjci5ib3R0b20gLSBiY3IudG9wKSxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IE1hdGgucm91bmQoYmNyLnJpZ2h0IC0gYmNyLmxlZnQpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgZG9jO1xuICAgICAgICAgICAgICAgIHdoaWxlICgoZG9jID0gZWxlbWVudC5vd25lckRvY3VtZW50KSAhPT0gZG9jdW1lbnQgJiYgKGVsZW1lbnQgPSBkb21VdGlscy5nZXRXaW5kb3coZG9jKS5mcmFtZUVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJjciA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIHJlY3QubGVmdCArPSBiY3IubGVmdDtcbiAgICAgICAgICAgICAgICAgICAgcmVjdC50b3AgKz0gYmNyLnRvcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gPSByZWN0LnRvcCArIHJlY3QuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIHJlY3QucmlnaHQgPSByZWN0LmxlZnQgKyByZWN0LndpZHRoO1xuICAgICAgICAgICAgICAgIHJldHVybiByZWN0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFZpZXdwb3J0UmVjdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB2aWV3cG9ydEVsID0gdWlVdGlscy5nZXRWaWV3cG9ydEVsZW1lbnQoKTtcbiAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSAod2luZG93LmlubmVyV2lkdGggfHwgdmlld3BvcnRFbC5jbGllbnRXaWR0aCkgfCAwO1xuICAgICAgICAgICAgICAgIHZhciBoZWlnaHQgPSAod2luZG93LmlubmVySGVpZ2h0IHx8IHZpZXdwb3J0RWwuY2xpZW50SGVpZ2h0KSB8IDA7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgICAgICAgICBib3R0b206IGhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IHdpZHRoXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRWaWV3cG9ydE9mZnNldDogZnVuY3Rpb24gKGVsZW1lbnQsIG9mZnNldCkge1xuICAgICAgICAgICAgICAgIHZhciByZWN0O1xuICAgICAgICAgICAgICAgIHZhciBmaXhlZExheWVyID0gdWlVdGlscy5nZXRGaXhlZExheWVyKCk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQucGFyZW50Tm9kZSA9PT0gZml4ZWRMYXllcikge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLmxlZnQgPSBvZmZzZXQubGVmdCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUudG9wID0gb2Zmc2V0LnRvcCArICdweCc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuc2V0Vmlld3BvcnRPZmZzZXQoZWxlbWVudCwgb2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0RXZlbnRPZmZzZXQ6IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWwgPSBldnQudGFyZ2V0IHx8IGV2dC5zcmNFbGVtZW50O1xuICAgICAgICAgICAgICAgIHZhciByZWN0ID0gdWlVdGlscy5nZXRDbGllbnRSZWN0KGVsKTtcbiAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0ID0gdWlVdGlscy5nZXRWaWV3cG9ydE9mZnNldEJ5RXZlbnQoZXZ0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBvZmZzZXQubGVmdCAtIHJlY3QubGVmdCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiBvZmZzZXQudG9wIC0gcmVjdC50b3BcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFZpZXdwb3J0T2Zmc2V0QnlFdmVudDogZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgICAgIHZhciBlbCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgdmFyIGZyYW1lRWwgPSBkb21VdGlscy5nZXRXaW5kb3coZWwpLmZyYW1lRWxlbWVudDtcbiAgICAgICAgICAgICAgICB2YXIgb2Zmc2V0ID0ge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBldnQuY2xpZW50WCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiBldnQuY2xpZW50WVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKGZyYW1lRWwgJiYgZWwub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlY3QgPSB1aVV0aWxzLmdldENsaWVudFJlY3QoZnJhbWVFbCk7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldC5sZWZ0ICs9IHJlY3QubGVmdDtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LnRvcCArPSByZWN0LnRvcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9mZnNldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRHbG9iYWw6IGZ1bmN0aW9uIChpZCwgb2JqKSB7XG4gICAgICAgICAgICAgICAgcm9vdFtpZF0gPSBvYmo7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hZ2ljICsgJ1tcIicgKyBpZCArICdcIl0nO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVuc2V0R2xvYmFsOiBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgcm9vdFtpZF07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29weUF0dHJpYnV0ZXM6IGZ1bmN0aW9uICh0Z3QsIHNyYykge1xuICAgICAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gc3JjLmF0dHJpYnV0ZXM7XG4gICAgICAgICAgICAgICAgdmFyIGsgPSBhdHRyaWJ1dGVzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICB3aGlsZSAoay0tKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhdHRyTm9kZSA9IGF0dHJpYnV0ZXNba107XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJOb2RlLm5vZGVOYW1lICE9ICdzdHlsZScgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJOb2RlLm5vZGVOYW1lICE9ICdjbGFzcycgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICghYnJvd3Nlci5pZSB8fCBhdHRyTm9kZS5zcGVjaWZpZWQpXG4gICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGd0LnNldEF0dHJpYnV0ZShhdHRyTm9kZS5ub2RlTmFtZSwgYXR0ck5vZGUubm9kZVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3JjLmNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5hZGRDbGFzcyh0Z3QsIHNyYy5jbGFzc05hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3JjLnN0eWxlLmNzc1RleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGd0LnN0eWxlLmNzc1RleHQgKz0gJzsnICsgc3JjLnN0eWxlLmNzc1RleHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbW92ZVN0eWxlOiBmdW5jdGlvbiAoZWwsIHN0eWxlTmFtZSkge1xuICAgICAgICAgICAgICAgIGlmIChlbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShzdHlsZU5hbWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZWwuc3R5bGUucmVtb3ZlQXR0cmlidXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsLnN0eWxlLnJlbW92ZUF0dHJpYnV0ZShzdHlsZU5hbWUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB0aHJvdyAnJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb250YWluczogZnVuY3Rpb24gKGVsQSwgZWxCKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgZWxBICYmXG4gICAgICAgICAgICAgICAgICAgIGVsQiAmJlxuICAgICAgICAgICAgICAgICAgICAoZWxBID09PSBlbEIgPyBmYWxzZSA6IGVsQS5jb250YWlucyA/IGVsQS5jb250YWlucyhlbEIpIDogZWxBLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGVsQikgJiAxNilcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YXJ0RHJhZzogZnVuY3Rpb24gKGV2dCwgY2FsbGJhY2tzLCBkb2MpIHtcbiAgICAgICAgICAgICAgICB2YXIgZG9jID0gZG9jIHx8IGRvY3VtZW50O1xuICAgICAgICAgICAgICAgIHZhciBzdGFydFggPSBldnQuY2xpZW50WDtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnRZID0gZXZ0LmNsaWVudFk7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gaGFuZGxlTW91c2VNb3ZlKGV2dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgeCA9IGV2dC5jbGllbnRYIC0gc3RhcnRYO1xuICAgICAgICAgICAgICAgICAgICB2YXIgeSA9IGV2dC5jbGllbnRZIC0gc3RhcnRZO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFja3Mub25kcmFnbW92ZSh4LCB5LCBldnQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0LnN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LmNhbmNlbEJ1YmJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRvYy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGhhbmRsZU1vdXNlVXAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXAsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzLm9uZHJhZ3N0b3AoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwLCB0cnVlKTtcblxuICAgICAgICAgICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxtID0gZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgICAgIGVsbS5zZXRDYXB0dXJlKCk7XG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHJlbGVhc2VDYXB0cnVlKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLnJlbGVhc2VDYXB0dXJlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG0uZGV0YWNoRXZlbnQoJ29ubW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5kZXRhY2hFdmVudCgnb25tb3VzZXVwJywgcmVsZWFzZUNhcHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLmRldGFjaEV2ZW50KCdvbmxvc2VjYXB0cnVlJywgcmVsZWFzZUNhcHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tzLm9uZHJhZ3N0b3AoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbG0uYXR0YWNoRXZlbnQoJ29ubW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTtcbiAgICAgICAgICAgICAgICAgICAgZWxtLmF0dGFjaEV2ZW50KCdvbm1vdXNldXAnLCByZWxlYXNlQ2FwdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGVsbS5hdHRhY2hFdmVudCgnb25sb3NlY2FwdHJ1ZScsIHJlbGVhc2VDYXB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgZXZ0LnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhbGxiYWNrcy5vbmRyYWdzdGFydCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEZpeGVkTGF5ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGF5ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZWR1aV9maXhlZGxheWVyJyk7XG4gICAgICAgICAgICAgICAgaWYgKGxheWVyID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbGF5ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgICAgICAgICAgbGF5ZXIuaWQgPSAnZWR1aV9maXhlZGxheWVyJztcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsYXllcik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmllICYmIGJyb3dzZXIudmVyc2lvbiA8PSA4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXllci5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBiaW5kRml4ZWRMYXllcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCh1cGRhdGVGaXhlZE9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXllci5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGF5ZXIuc3R5bGUubGVmdCA9ICcwJztcbiAgICAgICAgICAgICAgICAgICAgbGF5ZXIuc3R5bGUudG9wID0gJzAnO1xuICAgICAgICAgICAgICAgICAgICBsYXllci5zdHlsZS53aWR0aCA9ICcwJztcbiAgICAgICAgICAgICAgICAgICAgbGF5ZXIuc3R5bGUuaGVpZ2h0ID0gJzAnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbGF5ZXI7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWFrZVVuc2VsZWN0YWJsZTogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5vcGVyYSB8fCAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPCA5KSkge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnVuc2VsZWN0YWJsZSA9ICdvbic7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5jaGlsZE5vZGVzW2ldLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWlVdGlscy5tYWtlVW5zZWxlY3RhYmxlKGVsZW1lbnQuY2hpbGROb2Rlc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuc3R5bGUuTW96VXNlclNlbGVjdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLk1velVzZXJTZWxlY3QgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC5zdHlsZS5XZWJraXRVc2VyU2VsZWN0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuV2Via2l0VXNlclNlbGVjdCA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LnN0eWxlLktodG1sVXNlclNlbGVjdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnN0eWxlLktodG1sVXNlclNlbGVjdCA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZUZpeGVkT2Zmc2V0KCkge1xuICAgICAgICAgICAgdmFyIGxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VkdWlfZml4ZWRsYXllcicpO1xuICAgICAgICAgICAgdWlVdGlscy5zZXRWaWV3cG9ydE9mZnNldChsYXllciwge1xuICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgdG9wOiAwXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vICAgICAgICBsYXllci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgLy8gICAgICAgIGxheWVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gICAgICAgICAgICAvLyN0cmFjZTogMTM1NFxuICAgICAgICAgICAgLy8gICAgICAgIHNldFRpbWVvdXQodXBkYXRlRml4ZWRPZmZzZXQpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJpbmRGaXhlZExheWVyKGFkak9mZnNldCkge1xuICAgICAgICAgICAgZG9tVXRpbHMub24od2luZG93LCAnc2Nyb2xsJywgdXBkYXRlRml4ZWRPZmZzZXQpO1xuICAgICAgICAgICAgZG9tVXRpbHMub24od2luZG93LCAncmVzaXplJywgYmFpZHUuZWRpdG9yLnV0aWxzLmRlZmVyKHVwZGF0ZUZpeGVkT2Zmc2V0LCAwLCB0cnVlKSk7XG4gICAgICAgIH1cbiAgICB9KSgpO1xuXG4gICAgLy8gdWkvdWliYXNlLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgdWlVdGlscyA9IGJhaWR1LmVkaXRvci51aS51aVV0aWxzLFxuICAgICAgICAgICAgRXZlbnRCYXNlID0gYmFpZHUuZWRpdG9yLkV2ZW50QmFzZSxcbiAgICAgICAgICAgIFVJQmFzZSA9IChiYWlkdS5lZGl0b3IudWkuVUlCYXNlID0gZnVuY3Rpb24gKCkge30pO1xuXG4gICAgICAgIFVJQmFzZS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBjbGFzc05hbWU6ICcnLFxuICAgICAgICAgICAgdWlOYW1lOiAnJyxcbiAgICAgICAgICAgIGluaXRPcHRpb25zOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgayBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lW2tdID0gb3B0aW9uc1trXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pZCA9IHRoaXMuaWQgfHwgJ2VkdWknICsgdWlVdGlscy51aWQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0VUlCYXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZ2xvYmFsS2V5ID0gdXRpbHMudW5odG1sKHVpVXRpbHMuc2V0R2xvYmFsKHRoaXMuaWQsIHRoaXMpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIChob2xkZXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IHRoaXMucmVuZGVySHRtbCgpO1xuICAgICAgICAgICAgICAgIHZhciBlbCA9IHVpVXRpbHMuY3JlYXRlRWxlbWVudEJ5SHRtbChodG1sKTtcblxuICAgICAgICAgICAgICAgIC8vYnkgeHVoZW5nIOe7meavj+S4qm5vZGXmt7vliqBjbGFzc1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoZWwsICcqJyk7XG4gICAgICAgICAgICAgICAgdmFyIHRoZW1lID0gJ2VkdWktJyArICh0aGlzLnRoZW1lIHx8IHRoaXMuZWRpdG9yLm9wdGlvbnMudGhlbWUpO1xuICAgICAgICAgICAgICAgIHZhciBsYXllciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZHVpX2ZpeGVkbGF5ZXInKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbm9kZTsgKG5vZGUgPSBsaXN0W2krK10pOyApIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3Mobm9kZSwgdGhlbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21VdGlscy5hZGRDbGFzcyhlbCwgdGhlbWUpO1xuICAgICAgICAgICAgICAgIGlmIChsYXllcikge1xuICAgICAgICAgICAgICAgICAgICBsYXllci5jbGFzc05hbWUgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3MobGF5ZXIsIHRoZW1lKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgc2VhdEVsID0gdGhpcy5nZXREb20oKTtcbiAgICAgICAgICAgICAgICBpZiAoc2VhdEVsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VhdEVsLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGVsLCBzZWF0RWwpO1xuICAgICAgICAgICAgICAgICAgICB1aVV0aWxzLmNvcHlBdHRyaWJ1dGVzKGVsLCBzZWF0RWwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaG9sZGVyID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBob2xkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChob2xkZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGhvbGRlciA9IGhvbGRlciB8fCB1aVV0aWxzLmdldEZpeGVkTGF5ZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3MoaG9sZGVyLCB0aGVtZSk7XG4gICAgICAgICAgICAgICAgICAgIGhvbGRlci5hcHBlbmRDaGlsZChlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucG9zdFJlbmRlcigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldERvbTogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkICsgJ18nICsgbmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgncG9zdHJlbmRlcicpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZm9ybWF0SHRtbDogZnVuY3Rpb24gKHRwbCkge1xuICAgICAgICAgICAgICAgIHZhciBwcmVmaXggPSAnZWR1aS0nICsgdGhpcy51aU5hbWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRwbFxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvIyMvZywgdGhpcy5pZClcbiAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyUlLS9nLCB0aGlzLnVpTmFtZSA/IHByZWZpeCArICctJyA6ICcnKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvJSUvZywgKHRoaXMudWlOYW1lID8gcHJlZml4IDogJycpICsgJyAnICsgdGhpcy5jbGFzc05hbWUpXG4gICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXCRcXCQvZywgdGhpcy5fZ2xvYmFsS2V5KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW5kZXJIdG1sOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0SHRtbCh0aGlzLmdldEh0bWxUcGwoKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGlzcG9zZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBib3ggPSB0aGlzLmdldERvbSgpO1xuICAgICAgICAgICAgICAgIGlmIChib3gpIGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHMucmVtb3ZlKGJveCk7XG4gICAgICAgICAgICAgICAgdWlVdGlscy51bnNldEdsb2JhbCh0aGlzLmlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoVUlCYXNlLCBFdmVudEJhc2UpO1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9zZXBhcmF0b3IuanNcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlLFxuICAgICAgICAgICAgU2VwYXJhdG9yID0gKGJhaWR1LmVkaXRvci51aS5TZXBhcmF0b3IgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0U2VwYXJhdG9yKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgU2VwYXJhdG9yLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIHVpTmFtZTogJ3NlcGFyYXRvcicsXG4gICAgICAgICAgICBpbml0U2VwYXJhdG9yOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0SHRtbFRwbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnPGRpdiBpZD1cIiMjXCIgY2xhc3M9XCJlZHVpLWJveCAlJVwiPjwvZGl2Pic7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFNlcGFyYXRvciwgVUlCYXNlKTtcbiAgICB9KSgpO1xuXG4gICAgLy8gdWkvbWFzay5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHVpY29yZVxuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIGRvbVV0aWxzID0gYmFpZHUuZWRpdG9yLmRvbS5kb21VdGlscyxcbiAgICAgICAgICAgIFVJQmFzZSA9IGJhaWR1LmVkaXRvci51aS5VSUJhc2UsXG4gICAgICAgICAgICB1aVV0aWxzID0gYmFpZHUuZWRpdG9yLnVpLnVpVXRpbHM7XG5cbiAgICAgICAgdmFyIE1hc2sgPSAoYmFpZHUuZWRpdG9yLnVpLk1hc2sgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuaW5pdFVJQmFzZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgTWFzay5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cImVkdWktbWFzayAlJVwiIG9uY2xpY2s9XCJyZXR1cm4gJCQuX29uQ2xpY2soZXZlbnQsIHRoaXMpO1wiIG9ubW91c2Vkb3duPVwicmV0dXJuICQkLl9vbk1vdXNlRG93bihldmVudCwgdGhpcyk7XCI+PC9kaXY+JztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbih3aW5kb3csICdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtZS5pc0hpZGRlbigpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX2ZpbGwoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvdzogZnVuY3Rpb24gKHpJbmRleCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2ZpbGwoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgpLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgpLnN0eWxlLnpJbmRleCA9IHpJbmRleDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuc3R5bGUuekluZGV4ID0gJyc7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNIaWRkZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXREb20oKS5zdHlsZS5kaXNwbGF5ID09ICdub25lJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25Nb3VzZURvd246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uQ2xpY2s6IGZ1bmN0aW9uIChlLCB0YXJnZXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgnY2xpY2snLCBlLCB0YXJnZXQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9maWxsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGVsID0gdGhpcy5nZXREb20oKTtcbiAgICAgICAgICAgICAgICB2YXIgdnBSZWN0ID0gdWlVdGlscy5nZXRWaWV3cG9ydFJlY3QoKTtcbiAgICAgICAgICAgICAgICBlbC5zdHlsZS53aWR0aCA9IHZwUmVjdC53aWR0aCArICdweCc7XG4gICAgICAgICAgICAgICAgZWwuc3R5bGUuaGVpZ2h0ID0gdnBSZWN0LmhlaWdodCArICdweCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKE1hc2ssIFVJQmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL3BvcHVwLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgdWlVdGlscyA9IGJhaWR1LmVkaXRvci51aS51aVV0aWxzLFxuICAgICAgICAgICAgZG9tVXRpbHMgPSBiYWlkdS5lZGl0b3IuZG9tLmRvbVV0aWxzLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZSxcbiAgICAgICAgICAgIFBvcHVwID0gKGJhaWR1LmVkaXRvci51aS5Qb3B1cCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRQb3B1cCgpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGFsbFBvcHVwcyA9IFtdO1xuICAgICAgICBmdW5jdGlvbiBjbG9zZUFsbFBvcHVwKGV2dCwgZWwpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsUG9wdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvcCA9IGFsbFBvcHVwc1tpXTtcbiAgICAgICAgICAgICAgICBpZiAoIXBvcC5pc0hpZGRlbigpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3AucXVlcnlBdXRvSGlkZShlbCkgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZ0ICYmIC9zY3JvbGwvZ2kudGVzdChldnQudHlwZSkgJiYgcG9wLmNsYXNzTmFtZSA9PSAnZWR1aS13b3JkcGFzdGVwb3AnKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3AuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoYWxsUG9wdXBzLmxlbmd0aCkgcG9wLmVkaXRvci5maXJlRXZlbnQoJ2FmdGVyaGlkZXBvcCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgUG9wdXAucG9zdEhpZGUgPSBjbG9zZUFsbFBvcHVwO1xuXG4gICAgICAgIHZhciBBTkNIT1JfQ0xBU1NFUyA9IFtcbiAgICAgICAgICAgICdlZHVpLWFuY2hvci10b3BsZWZ0JyxcbiAgICAgICAgICAgICdlZHVpLWFuY2hvci10b3ByaWdodCcsXG4gICAgICAgICAgICAnZWR1aS1hbmNob3ItYm90dG9tbGVmdCcsXG4gICAgICAgICAgICAnZWR1aS1hbmNob3ItYm90dG9tcmlnaHQnXG4gICAgICAgIF07XG4gICAgICAgIFBvcHVwLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIFNIQURPV19SQURJVVM6IDUsXG4gICAgICAgICAgICBjb250ZW50OiBudWxsLFxuICAgICAgICAgICAgX2hpZGRlbjogZmFsc2UsXG4gICAgICAgICAgICBhdXRvUmVuZGVyOiB0cnVlLFxuICAgICAgICAgICAgY2FuU2lkZUxlZnQ6IHRydWUsXG4gICAgICAgICAgICBjYW5TaWRlVXA6IHRydWUsXG4gICAgICAgICAgICBpbml0UG9wdXA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRVSUJhc2UoKTtcbiAgICAgICAgICAgICAgICBhbGxQb3B1cHMucHVzaCh0aGlzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI1wiIGNsYXNzPVwiZWR1aS1wb3B1cCAlJVwiIG9ubW91c2Vkb3duPVwicmV0dXJuIGZhbHNlO1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAnIDxkaXYgaWQ9XCIjI19ib2R5XCIgY2xhc3M9XCJlZHVpLXBvcHVwLWJvZHlcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJyA8aWZyYW1lIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDotMTtsZWZ0OjA7dG9wOjA7YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XCIgZnJhbWVib3JkZXI9XCIwXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiIHNyYz1cImFib3V0OmJsYW5rXCI+PC9pZnJhbWU+JyArXG4gICAgICAgICAgICAgICAgICAgICcgPGRpdiBjbGFzcz1cImVkdWktc2hhZG93XCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICcgPGRpdiBpZD1cIiMjX2NvbnRlbnRcIiBjbGFzcz1cImVkdWktcG9wdXAtY29udGVudFwiPicgK1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldENvbnRlbnRIdG1sVHBsKCkgK1xuICAgICAgICAgICAgICAgICAgICAnICA8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJyA8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldENvbnRlbnRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuY29udGVudCA9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50LnJlbmRlckh0bWwoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9VSUJhc2VfcG9zdFJlbmRlcjogVUlCYXNlLnByb3RvdHlwZS5wb3N0UmVuZGVyLFxuICAgICAgICAgICAgcG9zdFJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnQgaW5zdGFuY2VvZiBVSUJhc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZW50LnBvc3RSZW5kZXIoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL+aNleiOt+m8oOagh+a7mui9rlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhcHR1cmVXaGVlbCAmJiAhdGhpcy5jYXB0dXJlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNhcHR1cmVkID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgd2luSGVpZ2h0ID0gKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQpIC0gODAsXG4gICAgICAgICAgICAgICAgICAgICAgICBfaGVpZ2h0ID0gdGhpcy5nZXREb20oKS5vZmZzZXRIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICBfdG9wID0gdWlVdGlscy5nZXRDbGllbnRSZWN0KHRoaXMuY29tYm94LmdldERvbSgpKS50b3AsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gdGhpcy5nZXREb20oJ2NvbnRlbnQnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmciA9IHRoaXMuZ2V0RG9tKCdib2R5JykuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lmcmFtZScpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWUgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmci5sZW5ndGggJiYgKGlmciA9IGlmclswXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKF90b3AgKyBfaGVpZ2h0ID4gd2luSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfaGVpZ2h0IC09IDMwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuaGVpZ2h0ID0gX2hlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIC8v5ZCM5q2l5pu05pS5aWZyYW1l6auY5bqmXG4gICAgICAgICAgICAgICAgICAgIGlmciAmJiAoaWZyLnN0eWxlLmhlaWdodCA9IF9oZWlnaHQgKyAncHgnKTtcblxuICAgICAgICAgICAgICAgICAgICAvL+mYu+atouWcqGNvbWJveOS4iueahOm8oOagh+a7mui9ruS6i+S7tiwg6Ziy5q2i55So5oi355qE5q2j5bi45pON5L2c6KKr6K+v6KejXG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWE1MSHR0cFJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29ubW91c2V3aGVlbCcgaW4gZG9jdW1lbnQuYm9keSA/ICdtb3VzZXdoZWVsJyA6ICdET01Nb3VzZVNjcm9sbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLndoZWVsRGVsdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc2Nyb2xsVG9wIC09IChlLndoZWVsRGVsdGEgLyAxMjApICogNjA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnNjcm9sbFRvcCAtPSAoZS5kZXRhaWwgLyAtMykgKiA2MDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2llNlxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24odGhpcy5nZXREb20oKSwgJ21vdXNld2hlZWwnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmdldERvbSgnY29udGVudCcpLnNjcm9sbFRvcCAtPSAoZS53aGVlbERlbHRhIC8gMTIwKSAqIDYwO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ3Bvc3RSZW5kZXJBZnRlcicpO1xuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9VSUJhc2VfcG9zdFJlbmRlcigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9kb0F1dG9SZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZ2V0RG9tKCkgJiYgdGhpcy5hdXRvUmVuZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1lc3VyZVNpemU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYm94ID0gdGhpcy5nZXREb20oJ2NvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdWlVdGlscy5nZXRDbGllbnRSZWN0KGJveCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZml0U2l6ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhcHR1cmVXaGVlbCAmJiB0aGlzLnNpemVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9fc2l6ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zaXplZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdmFyIHBvcEJvZHlFbCA9IHRoaXMuZ2V0RG9tKCdib2R5Jyk7XG4gICAgICAgICAgICAgICAgcG9wQm9keUVsLnN0eWxlLndpZHRoID0gJyc7XG4gICAgICAgICAgICAgICAgcG9wQm9keUVsLnN0eWxlLmhlaWdodCA9ICcnO1xuICAgICAgICAgICAgICAgIHZhciBzaXplID0gdGhpcy5tZXN1cmVTaXplKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY2FwdHVyZVdoZWVsKSB7XG4gICAgICAgICAgICAgICAgICAgIHBvcEJvZHlFbC5zdHlsZS53aWR0aCA9IC0oLTIwIC0gc2l6ZS53aWR0aCkgKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaGVpZ2h0ID0gcGFyc2VJbnQodGhpcy5nZXREb20oJ2NvbnRlbnQnKS5zdHlsZS5oZWlnaHQsIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgIXdpbmRvdy5pc05hTihoZWlnaHQpICYmIChzaXplLmhlaWdodCA9IGhlaWdodCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9wQm9keUVsLnN0eWxlLndpZHRoID0gc2l6ZS53aWR0aCArICdweCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBvcEJvZHlFbC5zdHlsZS5oZWlnaHQgPSBzaXplLmhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgdGhpcy5fX3NpemUgPSBzaXplO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FwdHVyZVdoZWVsICYmICh0aGlzLmdldERvbSgnY29udGVudCcpLnN0eWxlLm92ZXJmbG93ID0gJ2F1dG8nKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93QW5jaG9yOiBmdW5jdGlvbiAoZWxlbWVudCwgaG96KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93QW5jaG9yUmVjdCh1aVV0aWxzLmdldENsaWVudFJlY3QoZWxlbWVudCksIGhveik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvd0FuY2hvclJlY3Q6IGZ1bmN0aW9uIChyZWN0LCBob3osIGFkaikge1xuICAgICAgICAgICAgICAgIHRoaXMuX2RvQXV0b1JlbmRlcigpO1xuICAgICAgICAgICAgICAgIHZhciB2cFJlY3QgPSB1aVV0aWxzLmdldFZpZXdwb3J0UmVjdCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3coKTtcbiAgICAgICAgICAgICAgICB2YXIgcG9wU2l6ZSA9IHRoaXMuZml0U2l6ZSgpO1xuXG4gICAgICAgICAgICAgICAgdmFyIHNpZGVMZWZ0LCBzaWRlVXAsIGxlZnQsIHRvcDtcbiAgICAgICAgICAgICAgICBpZiAoaG96KSB7XG4gICAgICAgICAgICAgICAgICAgIHNpZGVMZWZ0ID1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuU2lkZUxlZnQgJiYgcmVjdC5yaWdodCArIHBvcFNpemUud2lkdGggPiB2cFJlY3QucmlnaHQgJiYgcmVjdC5sZWZ0ID4gcG9wU2l6ZS53aWR0aDtcbiAgICAgICAgICAgICAgICAgICAgc2lkZVVwID1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2FuU2lkZVVwICYmIHJlY3QudG9wICsgcG9wU2l6ZS5oZWlnaHQgPiB2cFJlY3QuYm90dG9tICYmIHJlY3QuYm90dG9tID4gcG9wU2l6ZS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQgPSBzaWRlTGVmdCA/IHJlY3QubGVmdCAtIHBvcFNpemUud2lkdGggOiByZWN0LnJpZ2h0O1xuICAgICAgICAgICAgICAgICAgICB0b3AgPSBzaWRlVXAgPyByZWN0LmJvdHRvbSAtIHBvcFNpemUuaGVpZ2h0IDogcmVjdC50b3A7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2lkZUxlZnQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5TaWRlTGVmdCAmJiByZWN0LnJpZ2h0ICsgcG9wU2l6ZS53aWR0aCA+IHZwUmVjdC5yaWdodCAmJiByZWN0LmxlZnQgPiBwb3BTaXplLndpZHRoO1xuICAgICAgICAgICAgICAgICAgICBzaWRlVXAgPVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW5TaWRlVXAgJiYgcmVjdC50b3AgKyBwb3BTaXplLmhlaWdodCA+IHZwUmVjdC5ib3R0b20gJiYgcmVjdC5ib3R0b20gPiBwb3BTaXplLmhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgbGVmdCA9IHNpZGVMZWZ0ID8gcmVjdC5yaWdodCAtIHBvcFNpemUud2lkdGggOiByZWN0LmxlZnQ7XG4gICAgICAgICAgICAgICAgICAgIHRvcCA9IHNpZGVVcCA/IHJlY3QudG9wIC0gcG9wU2l6ZS5oZWlnaHQgOiByZWN0LmJvdHRvbTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgcG9wRWwgPSB0aGlzLmdldERvbSgpO1xuICAgICAgICAgICAgICAgIHVpVXRpbHMuc2V0Vmlld3BvcnRPZmZzZXQocG9wRWwsIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogbGVmdCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiB0b3BcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVDbGFzc2VzKHBvcEVsLCBBTkNIT1JfQ0xBU1NFUyk7XG4gICAgICAgICAgICAgICAgcG9wRWwuY2xhc3NOYW1lICs9ICcgJyArIEFOQ0hPUl9DTEFTU0VTWyhzaWRlVXAgPyAxIDogMCkgKiAyICsgKHNpZGVMZWZ0ID8gMSA6IDApXTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lZGl0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9wRWwuc3R5bGUuekluZGV4ID0gdGhpcy5lZGl0b3IuY29udGFpbmVyLnN0eWxlLnpJbmRleCAqIDEgKyAxMDtcbiAgICAgICAgICAgICAgICAgICAgYmFpZHUuZWRpdG9yLnVpLnVpVXRpbHMuZ2V0Rml4ZWRMYXllcigpLnN0eWxlLnpJbmRleCA9IHBvcEVsLnN0eWxlLnpJbmRleCAtIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93QXQ6IGZ1bmN0aW9uIChvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdCA9IG9mZnNldC5sZWZ0O1xuICAgICAgICAgICAgICAgIHZhciB0b3AgPSBvZmZzZXQudG9wO1xuICAgICAgICAgICAgICAgIHZhciByZWN0ID0ge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgICAgICAgICAgICAgICB0b3A6IHRvcCxcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IGxlZnQsXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogdG9wLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dBbmNob3JSZWN0KHJlY3QsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfc2hvdzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9oaWRkZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJveCA9IHRoaXMuZ2V0RG9tKCk7XG4gICAgICAgICAgICAgICAgICAgIGJveC5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hpZGRlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBpZiAoYm94LnNldEFjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgYm94LnNldEFjdGl2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdzaG93Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzSGlkZGVuOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2hpZGRlbjtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZG9BdXRvUmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2hvdygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhpZGU6IGZ1bmN0aW9uIChub3ROb2ZpdHkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX2hpZGRlbiAmJiB0aGlzLmdldERvbSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFub3ROb2ZpdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlBdXRvSGlkZTogZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICFlbCB8fCAhdWlVdGlscy5jb250YWlucyh0aGlzLmdldERvbSgpLCBlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFBvcHVwLCBVSUJhc2UpO1xuXG4gICAgICAgIGRvbVV0aWxzLm9uKGRvY3VtZW50LCAnbW91c2Vkb3duJywgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgdmFyIGVsID0gZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudDtcbiAgICAgICAgICAgIGNsb3NlQWxsUG9wdXAoZXZ0LCBlbCk7XG4gICAgICAgIH0pO1xuICAgICAgICBkb21VdGlscy5vbih3aW5kb3csICdzY3JvbGwnLCBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgY2xvc2VBbGxQb3B1cChldnQsIGVsKTtcbiAgICAgICAgfSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL2NvbG9ycGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZSxcbiAgICAgICAgICAgIENvbG9yUGlja2VyID0gKGJhaWR1LmVkaXRvci51aS5Db2xvclBpY2tlciA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLm5vQ29sb3JUZXh0ID0gdGhpcy5ub0NvbG9yVGV4dCB8fCB0aGlzLmVkaXRvci5nZXRMYW5nKCdjbGVhckNvbG9yJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBDb2xvclBpY2tlci5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdlbkNvbG9yUGlja2VyKHRoaXMubm9Db2xvclRleHQsIHRoaXMuZWRpdG9yKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25UYWJsZUNsaWNrOiBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRndCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgdmFyIGNvbG9yID0gdGd0LmdldEF0dHJpYnV0ZSgnZGF0YS1jb2xvcicpO1xuICAgICAgICAgICAgICAgIGlmIChjb2xvcikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgncGlja2NvbG9yJywgY29sb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25UYWJsZU92ZXI6IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGd0ID0gZXZ0LnRhcmdldCB8fCBldnQuc3JjRWxlbWVudDtcbiAgICAgICAgICAgICAgICB2YXIgY29sb3IgPSB0Z3QuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbG9yJyk7XG4gICAgICAgICAgICAgICAgaWYgKGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCdwcmV2aWV3Jykuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gY29sb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9vblRhYmxlT3V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ3ByZXZpZXcnKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25QaWNrTm9Db2xvcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdwaWNrbm9jb2xvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhDb2xvclBpY2tlciwgVUlCYXNlKTtcblxuICAgICAgICB2YXIgQ09MT1JTID0gKFxuICAgICAgICAgICAgJ2ZmZmZmZiwwMDAwMDAsZWVlY2UxLDFmNDk3ZCw0ZjgxYmQsYzA1MDRkLDliYmI1OSw4MDY0YTIsNGJhY2M2LGY3OTY0NiwnICtcbiAgICAgICAgICAgICdmMmYyZjIsN2Y3ZjdmLGRkZDljMyxjNmQ5ZjAsZGJlNWYxLGYyZGNkYixlYmYxZGQsZTVlMGVjLGRiZWVmMyxmZGVhZGEsJyArXG4gICAgICAgICAgICAnZDhkOGQ4LDU5NTk1OSxjNGJkOTcsOGRiM2UyLGI4Y2NlNCxlNWI5YjcsZDdlM2JjLGNjYzFkOSxiN2RkZTgsZmJkNWI1LCcgK1xuICAgICAgICAgICAgJ2JmYmZiZiwzZjNmM2YsOTM4OTUzLDU0OGRkNCw5NWIzZDcsZDk5Njk0LGMzZDY5YixiMmEyYzcsOTJjZGRjLGZhYzA4ZiwnICtcbiAgICAgICAgICAgICdhNWE1YTUsMjYyNjI2LDQ5NDQyOSwxNzM2NWQsMzY2MDkyLDk1MzczNCw3NjkyM2MsNWY0OTdhLDMxODU5YixlMzZjMDksJyArXG4gICAgICAgICAgICAnN2Y3ZjdmLDBjMGMwYywxZDFiMTAsMGYyNDNlLDI0NDA2MSw2MzI0MjMsNGY2MTI4LDNmMzE1MSwyMDU4NjcsOTc0ODA2LCcgK1xuICAgICAgICAgICAgJzIzYTU2NSxmZmE3MjYsZTc1YTJkLDAzYTlmNCxmZjdkN2EsMDA4Y2Q0LDY3M2FiNywyMTk2ZjMsZjU5NmFhLDNmNTFiNSdcbiAgICAgICAgKS5zcGxpdCgnLCcpO1xuXG4gICAgICAgIGZ1bmN0aW9uIGdlbkNvbG9yUGlja2VyKG5vQ29sb3JUZXh0LCBlZGl0b3IpIHtcbiAgICAgICAgICAgIHZhciBodG1sID1cbiAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjXCIgY2xhc3M9XCJlZHVpLWNvbG9ycGlja2VyICUlXCI+JyArXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWNvbG9ycGlja2VyLXRvcGJhciBlZHVpLWNsZWFyZml4XCI+JyArXG4gICAgICAgICAgICAgICAgJzxkaXYgdW5zZWxlY3RhYmxlPVwib25cIiBpZD1cIiMjX3ByZXZpZXdcIiBjbGFzcz1cImVkdWktY29sb3JwaWNrZXItcHJldmlld1wiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICc8ZGl2IHVuc2VsZWN0YWJsZT1cIm9uXCIgY2xhc3M9XCJlZHVpLWNvbG9ycGlja2VyLW5vY29sb3JcIiBvbmNsaWNrPVwiJCQuX29uUGlja05vQ29sb3IoZXZlbnQsIHRoaXMpO1wiPicgK1xuICAgICAgICAgICAgICAgIG5vQ29sb3JUZXh0ICtcbiAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICc8dGFibGUgIGNsYXNzPVwiZWR1aS1ib3hcIiBzdHlsZT1cImJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XCIgb25tb3VzZW92ZXI9XCIkJC5fb25UYWJsZU92ZXIoZXZlbnQsIHRoaXMpO1wiIG9ubW91c2VvdXQ9XCIkJC5fb25UYWJsZU91dChldmVudCwgdGhpcyk7XCIgb25jbGljaz1cInJldHVybiAkJC5fb25UYWJsZUNsaWNrKGV2ZW50LCB0aGlzKTtcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj4nICtcbiAgICAgICAgICAgICAgICAnPHRyIHN0eWxlPVwiYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7Zm9udC1zaXplOiAxM3B4O2xpbmUtaGVpZ2h0OiAyNXB4O2NvbG9yOiMzOUM7cGFkZGluZy10b3A6IDJweFwiPjx0ZCBjb2xzcGFuPVwiMTBcIj4nICtcbiAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygndGhlbWVDb2xvcicpICtcbiAgICAgICAgICAgICAgICAnPC90ZD4gPC90cj4nICtcbiAgICAgICAgICAgICAgICAnPHRyIGNsYXNzPVwiZWR1aS1jb2xvcnBpY2tlci10YWJsZWZpcnN0cm93XCIgPic7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IENPTE9SUy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChpICYmIGkgJSAxMCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBodG1sICs9XG4gICAgICAgICAgICAgICAgICAgICAgICAnPC90cj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChpID09IDYwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnPHRyIHN0eWxlPVwiYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7Zm9udC1zaXplOiAxM3B4O2xpbmUtaGVpZ2h0OiAyNXB4O2NvbG9yOiMzOUM7XCI+PHRkIGNvbHNwYW49XCIxMFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ3N0YW5kYXJkQ29sb3InKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC90ZD48L3RyPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPHRyJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAoaSA9PSA2MCA/ICcgY2xhc3M9XCJlZHVpLWNvbG9ycGlja2VyLXRhYmxlZmlyc3Ryb3dcIicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJz4nO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBodG1sICs9XG4gICAgICAgICAgICAgICAgICAgIGkgPCA3MFxuICAgICAgICAgICAgICAgICAgICAgICAgPyAnPHRkIHN0eWxlPVwicGFkZGluZzogMCAycHg7XCI+PGEgaGlkZWZvY3VzIHRpdGxlPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIENPTE9SU1tpXSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdcIiBvbmNsaWNrPVwicmV0dXJuIGZhbHNlO1wiIGhyZWY9XCJqYXZhc2NyaXB0OlwiIHVuc2VsZWN0YWJsZT1cIm9uXCIgY2xhc3M9XCJlZHVpLWJveCBlZHVpLWNvbG9ycGlja2VyLWNvbG9yY2VsbFwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcgZGF0YS1jb2xvcj1cIiMnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgQ09MT1JTW2ldICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICcgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiMnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgQ09MT1JTW2ldICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJztib3JkZXI6c29saWQgI2NjYzsnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKGkgPCAxMCB8fCBpID49IDYwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdib3JkZXItd2lkdGg6MXB4OydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogaSA+PSAxMCAmJiBpIDwgMjBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ2JvcmRlci13aWR0aDoxcHggMXB4IDAgMXB4OydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ2JvcmRlci13aWR0aDowIDFweCAwIDFweDsnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdcIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPjwvYT48L3RkPidcbiAgICAgICAgICAgICAgICAgICAgICAgIDogJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBodG1sICs9ICc8L3RyPjwvdGFibGU+PC9kaXY+JztcbiAgICAgICAgICAgIHJldHVybiBodG1sO1xuICAgICAgICB9XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL3RhYmxlcGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgdWlVdGlscyA9IGJhaWR1LmVkaXRvci51aS51aVV0aWxzLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZTtcblxuICAgICAgICB2YXIgVGFibGVQaWNrZXIgPSAoYmFpZHUuZWRpdG9yLnVpLlRhYmxlUGlja2VyID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmluaXRUYWJsZVBpY2tlcigpO1xuICAgICAgICB9KTtcbiAgICAgICAgVGFibGVQaWNrZXIucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgZGVmYXVsdE51bVJvd3M6IDEwLFxuICAgICAgICAgICAgZGVmYXVsdE51bUNvbHM6IDEwLFxuICAgICAgICAgICAgbWF4TnVtUm93czogMjAsXG4gICAgICAgICAgICBtYXhOdW1Db2xzOiAyMCxcbiAgICAgICAgICAgIG51bVJvd3M6IDEwLFxuICAgICAgICAgICAgbnVtQ29sczogMTAsXG4gICAgICAgICAgICBsZW5ndGhPZkNlbGxTaWRlOiAyMixcbiAgICAgICAgICAgIGluaXRUYWJsZVBpY2tlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFVJQmFzZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cImVkdWktdGFibGVwaWNrZXIgJSVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLXRhYmxlcGlja2VyLWJvZHlcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWluZm9hcmVhXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBpZD1cIiMjX2xhYmVsXCIgY2xhc3M9XCJlZHVpLWxhYmVsXCI+PC9zcGFuPicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1waWNrYXJlYVwiJyArXG4gICAgICAgICAgICAgICAgICAgICcgb25tb3VzZW1vdmU9XCIkJC5fb25Nb3VzZU1vdmUoZXZlbnQsIHRoaXMpO1wiJyArXG4gICAgICAgICAgICAgICAgICAgICcgb25tb3VzZW92ZXI9XCIkJC5fb25Nb3VzZU92ZXIoZXZlbnQsIHRoaXMpO1wiJyArXG4gICAgICAgICAgICAgICAgICAgICcgb25tb3VzZW91dD1cIiQkLl9vbk1vdXNlT3V0KGV2ZW50LCB0aGlzKTtcIicgK1xuICAgICAgICAgICAgICAgICAgICAnIG9uY2xpY2s9XCIkJC5fb25DbGljayhldmVudCwgdGhpcyk7XCInICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI19vdmVybGF5XCIgY2xhc3M9XCJlZHVpLW92ZXJsYXlcIj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfVUlCYXNlX3JlbmRlcjogVUlCYXNlLnByb3RvdHlwZS5yZW5kZXIsXG4gICAgICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIChob2xkZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9VSUJhc2VfcmVuZGVyKGhvbGRlcik7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2xhYmVsJykuaW5uZXJIVE1MID1cbiAgICAgICAgICAgICAgICAgICAgJzAnICsgdGhpcy5lZGl0b3IuZ2V0TGFuZygndF9yb3cnKSArICcgeCAwJyArIHRoaXMuZWRpdG9yLmdldExhbmcoJ3RfY29sJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX3RyYWNrOiBmdW5jdGlvbiAobnVtQ29scywgbnVtUm93cykge1xuICAgICAgICAgICAgICAgIHZhciBzdHlsZSA9IHRoaXMuZ2V0RG9tKCdvdmVybGF5Jykuc3R5bGU7XG4gICAgICAgICAgICAgICAgdmFyIHNpZGVMZW4gPSB0aGlzLmxlbmd0aE9mQ2VsbFNpZGU7XG4gICAgICAgICAgICAgICAgc3R5bGUud2lkdGggPSBudW1Db2xzICogc2lkZUxlbiArICdweCc7XG4gICAgICAgICAgICAgICAgc3R5bGUuaGVpZ2h0ID0gbnVtUm93cyAqIHNpZGVMZW4gKyAncHgnO1xuICAgICAgICAgICAgICAgIHZhciBsYWJlbCA9IHRoaXMuZ2V0RG9tKCdsYWJlbCcpO1xuICAgICAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9XG4gICAgICAgICAgICAgICAgICAgIG51bUNvbHMgKyB0aGlzLmVkaXRvci5nZXRMYW5nKCd0X2NvbCcpICsgJyB4ICcgKyBudW1Sb3dzICsgdGhpcy5lZGl0b3IuZ2V0TGFuZygndF9yb3cnKTtcbiAgICAgICAgICAgICAgICB0aGlzLm51bUNvbHMgPSBudW1Db2xzO1xuICAgICAgICAgICAgICAgIHRoaXMubnVtUm93cyA9IG51bVJvd3M7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uTW91c2VPdmVyOiBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgICAgIHZhciByZWwgPSBldnQucmVsYXRlZFRhcmdldCB8fCBldnQuZnJvbUVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKCF1aVV0aWxzLmNvbnRhaW5zKGVsLCByZWwpICYmIGVsICE9PSByZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2xhYmVsJykuaW5uZXJIVE1MID1cbiAgICAgICAgICAgICAgICAgICAgICAgICcwJyArIHRoaXMuZWRpdG9yLmdldExhbmcoJ3RfY29sJykgKyAnIHggMCcgKyB0aGlzLmVkaXRvci5nZXRMYW5nKCd0X3JvdycpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgnb3ZlcmxheScpLnN0eWxlLnZpc2liaWxpdHkgPSAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uTW91c2VPdXQ6IGZ1bmN0aW9uIChldnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlbCA9IGV2dC5yZWxhdGVkVGFyZ2V0IHx8IGV2dC50b0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKCF1aVV0aWxzLmNvbnRhaW5zKGVsLCByZWwpICYmIGVsICE9PSByZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2xhYmVsJykuaW5uZXJIVE1MID1cbiAgICAgICAgICAgICAgICAgICAgICAgICcwJyArIHRoaXMuZWRpdG9yLmdldExhbmcoJ3RfY29sJykgKyAnIHggMCcgKyB0aGlzLmVkaXRvci5nZXRMYW5nKCd0X3JvdycpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgnb3ZlcmxheScpLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uTW91c2VNb3ZlOiBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgICAgIHZhciBzdHlsZSA9IHRoaXMuZ2V0RG9tKCdvdmVybGF5Jykuc3R5bGU7XG4gICAgICAgICAgICAgICAgdmFyIG9mZnNldCA9IHVpVXRpbHMuZ2V0RXZlbnRPZmZzZXQoZXZ0KTtcbiAgICAgICAgICAgICAgICB2YXIgc2lkZUxlbiA9IHRoaXMubGVuZ3RoT2ZDZWxsU2lkZTtcbiAgICAgICAgICAgICAgICB2YXIgbnVtQ29scyA9IE1hdGguY2VpbChvZmZzZXQubGVmdCAvIHNpZGVMZW4pO1xuICAgICAgICAgICAgICAgIHZhciBudW1Sb3dzID0gTWF0aC5jZWlsKG9mZnNldC50b3AgLyBzaWRlTGVuKTtcbiAgICAgICAgICAgICAgICB0aGlzLl90cmFjayhudW1Db2xzLCBudW1Sb3dzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdwaWNrdGFibGUnLCB0aGlzLm51bUNvbHMsIHRoaXMubnVtUm93cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFRhYmxlUGlja2VyLCBVSUJhc2UpO1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9zdGF0ZWZ1bC5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBicm93c2VyID0gYmFpZHUuZWRpdG9yLmJyb3dzZXIsXG4gICAgICAgICAgICBkb21VdGlscyA9IGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHMsXG4gICAgICAgICAgICB1aVV0aWxzID0gYmFpZHUuZWRpdG9yLnVpLnVpVXRpbHM7XG5cbiAgICAgICAgdmFyIFRQTF9TVEFURUZVTCA9XG4gICAgICAgICAgICAnb25tb3VzZWRvd249XCIkJC5TdGF0ZWZ1bF9vbk1vdXNlRG93bihldmVudCwgdGhpcyk7XCInICtcbiAgICAgICAgICAgICcgb25tb3VzZXVwPVwiJCQuU3RhdGVmdWxfb25Nb3VzZVVwKGV2ZW50LCB0aGlzKTtcIicgK1xuICAgICAgICAgICAgKGJyb3dzZXIuaWVcbiAgICAgICAgICAgICAgICA/ICcgb25tb3VzZWVudGVyPVwiJCQuU3RhdGVmdWxfb25Nb3VzZUVudGVyKGV2ZW50LCB0aGlzKTtcIicgK1xuICAgICAgICAgICAgICAgICAgJyBvbm1vdXNlbGVhdmU9XCIkJC5TdGF0ZWZ1bF9vbk1vdXNlTGVhdmUoZXZlbnQsIHRoaXMpO1wiJ1xuICAgICAgICAgICAgICAgIDogJyBvbm1vdXNlb3Zlcj1cIiQkLlN0YXRlZnVsX29uTW91c2VPdmVyKGV2ZW50LCB0aGlzKTtcIicgK1xuICAgICAgICAgICAgICAgICAgJyBvbm1vdXNlb3V0PVwiJCQuU3RhdGVmdWxfb25Nb3VzZU91dChldmVudCwgdGhpcyk7XCInKTtcblxuICAgICAgICBiYWlkdS5lZGl0b3IudWkuU3RhdGVmdWwgPSB7XG4gICAgICAgICAgICBhbHdhbHlzSG92ZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHRhcmdldDogbnVsbCwgLy/nm67moIflhYPntKDlkox0aGlz5oyH5ZCRZG9t5LiN5LiA5qC3XG4gICAgICAgICAgICBTdGF0ZWZ1bF9pbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fU3RhdGVmdWxfZEdldEh0bWxUcGwgPSB0aGlzLmdldEh0bWxUcGw7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXRIdG1sVHBsID0gdGhpcy5TdGF0ZWZ1bF9nZXRIdG1sVHBsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFN0YXRlZnVsX2dldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGhpcy5fU3RhdGVmdWxfZEdldEh0bWxUcGwoKTtcbiAgICAgICAgICAgICAgICAvLyDkvb/nlKhmdW5jdGlvbumBv+WFjSTovazkuYlcbiAgICAgICAgICAgICAgICByZXR1cm4gdHBsLnJlcGxhY2UoL3N0YXRlZnVsL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRQTF9TVEFURUZVTDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBTdGF0ZWZ1bF9vbk1vdXNlRW50ZXI6IGZ1bmN0aW9uIChldnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50YXJnZXQgPSBlbDtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNEaXNhYmxlZCgpIHx8IHRoaXMuYWx3YWx5c0hvdmVyYWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdob3ZlcicpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgnb3ZlcicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBTdGF0ZWZ1bF9vbk1vdXNlTGVhdmU6IGZ1bmN0aW9uIChldnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRGlzYWJsZWQoKSB8fCB0aGlzLmFsd2FseXNIb3ZlcmFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVTdGF0ZSgnaG92ZXInKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVTdGF0ZSgnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdvdXQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgU3RhdGVmdWxfb25Nb3VzZU92ZXI6IGZ1bmN0aW9uIChldnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlbCA9IGV2dC5yZWxhdGVkVGFyZ2V0O1xuICAgICAgICAgICAgICAgIGlmICghdWlVdGlscy5jb250YWlucyhlbCwgcmVsKSAmJiBlbCAhPT0gcmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU3RhdGVmdWxfb25Nb3VzZUVudGVyKGV2dCwgZWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBTdGF0ZWZ1bF9vbk1vdXNlT3V0OiBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgICAgIHZhciByZWwgPSBldnQucmVsYXRlZFRhcmdldDtcbiAgICAgICAgICAgICAgICBpZiAoIXVpVXRpbHMuY29udGFpbnMoZWwsIHJlbCkgJiYgZWwgIT09IHJlbCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXRlZnVsX29uTW91c2VMZWF2ZShldnQsIGVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgU3RhdGVmdWxfb25Nb3VzZURvd246IGZ1bmN0aW9uIChldnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgU3RhdGVmdWxfb25Nb3VzZVVwOiBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0Rpc2FibGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVTdGF0ZSgnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFN0YXRlZnVsX3Bvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5oYXNTdGF0ZSgnZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoYXNTdGF0ZTogZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvbVV0aWxzLmhhc0NsYXNzKHRoaXMuZ2V0U3RhdGVEb20oKSwgJ2VkdWktc3RhdGUtJyArIHN0YXRlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZGRTdGF0ZTogZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc1N0YXRlKHN0YXRlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldFN0YXRlRG9tKCkuY2xhc3NOYW1lICs9ICcgZWR1aS1zdGF0ZS0nICsgc3RhdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlbW92ZVN0YXRlOiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNTdGF0ZShzdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQ2xhc3Nlcyh0aGlzLmdldFN0YXRlRG9tKCksIFsnZWR1aS1zdGF0ZS0nICsgc3RhdGVdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0U3RhdGVEb206IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXREb20oJ3N0YXRlJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNDaGVja2VkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGFzU3RhdGUoJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRDaGVja2VkOiBmdW5jdGlvbiAoY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0Rpc2FibGVkKCkgJiYgY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdjaGVja2VkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVTdGF0ZSgnY2hlY2tlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc0Rpc2FibGVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGFzU3RhdGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0RGlzYWJsZWQ6IGZ1bmN0aW9uIChkaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVN0YXRlKCdob3ZlcicpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVN0YXRlKCdjaGVja2VkJyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlU3RhdGUoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlU3RhdGUoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9idXR0b24uanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2ltcG9ydCB1aWNvcmVcbiAgICAvLy9pbXBvcnQgdWkvc3RhdGVmdWwuanNcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlLFxuICAgICAgICAgICAgU3RhdGVmdWwgPSBiYWlkdS5lZGl0b3IudWkuU3RhdGVmdWwsXG4gICAgICAgICAgICBCdXR0b24gPSAoYmFpZHUuZWRpdG9yLnVpLkJ1dHRvbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnRuTmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNzc1J1bGVzID0gb3B0aW9ucy5jc3NSdWxlcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFvcHRpb25zLmNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jbGFzc05hbWUgPSAnZWR1aS1mb3ItJyArIGJ0bk5hbWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jc3NSdWxlcyA9ICcuZWR1aS1kZWZhdWx0ICAuZWR1aS1mb3ItJyArIGJ0bk5hbWUgKyAnIC5lZHVpLWljb24geycgKyBjc3NSdWxlcyArICd9JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRCdXR0b24oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBCdXR0b24ucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgdWlOYW1lOiAnYnV0dG9uJyxcbiAgICAgICAgICAgIGxhYmVsOiAnJyxcbiAgICAgICAgICAgIHRpdGxlOiAnJyxcbiAgICAgICAgICAgIHNob3dJY29uOiB0cnVlLFxuICAgICAgICAgICAgc2hvd1RleHQ6IHRydWUsXG4gICAgICAgICAgICBjc3NSdWxlczogJycsXG4gICAgICAgICAgICBpbml0QnV0dG9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5TdGF0ZWZ1bF9pbml0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY3NzUnVsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdXRpbHMuY3NzUnVsZSgnZWR1aS1jdXN0b21pemUtJyArIHRoaXMubmFtZSArICctc3R5bGUnLCB0aGlzLmNzc1J1bGVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0SHRtbFRwbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cImVkdWktYm94ICUlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNfc3RhdGVcIiBzdGF0ZWZ1bD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCIlJS13cmFwXCI+PGRpdiBpZD1cIiMjX2JvZHlcIiB1bnNlbGVjdGFibGU9XCJvblwiICcgK1xuICAgICAgICAgICAgICAgICAgICAodGhpcy50aXRsZSA/ICd0aXRsZT1cIicgKyB0aGlzLnRpdGxlICsgJ1wiJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICcgY2xhc3M9XCIlJS1ib2R5XCIgb25tb3VzZWRvd249XCJyZXR1cm4gJCQuX29uTW91c2VEb3duKGV2ZW50LCB0aGlzKTtcIiBvbmNsaWNrPVwicmV0dXJuICQkLl9vbkNsaWNrKGV2ZW50LCB0aGlzKTtcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMuc2hvd0ljb24gPyAnPGRpdiBjbGFzcz1cImVkdWktYm94IGVkdWktaWNvblwiPjwvZGl2PicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAodGhpcy5zaG93VGV4dCA/ICc8ZGl2IGNsYXNzPVwiZWR1aS1ib3ggZWR1aS1sYWJlbFwiPicgKyB0aGlzLmxhYmVsICsgJzwvZGl2PicgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PjwvZGl2PidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlZnVsX3Bvc3RSZW5kZXIoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldERpc2FibGVkKHRoaXMuZGlzYWJsZWQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9vbk1vdXNlRG93bjogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICB0YWdOYW1lID0gdGFyZ2V0ICYmIHRhcmdldC50YWdOYW1lICYmIHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRhZ05hbWUgPT0gJ2lucHV0JyB8fCB0YWdOYW1lID09ICdvYmplY3QnIHx8IHRhZ05hbWUgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0Rpc2FibGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2NsaWNrJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldFRpdGxlOiBmdW5jdGlvbiAodGV4dCkge1xuICAgICAgICAgICAgICAgIHZhciBsYWJlbCA9IHRoaXMuZ2V0RG9tKCdsYWJlbCcpO1xuICAgICAgICAgICAgICAgIGxhYmVsLmlubmVySFRNTCA9IHRleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKEJ1dHRvbiwgVUlCYXNlKTtcbiAgICAgICAgdXRpbHMuZXh0ZW5kKEJ1dHRvbi5wcm90b3R5cGUsIFN0YXRlZnVsKTtcbiAgICB9KSgpO1xuXG4gICAgLy8gdWkvc3BsaXRidXR0b24uanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2ltcG9ydCB1aWNvcmVcbiAgICAvLy9pbXBvcnQgdWkvc3RhdGVmdWwuanNcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHMsXG4gICAgICAgICAgICB1aVV0aWxzID0gYmFpZHUuZWRpdG9yLnVpLnVpVXRpbHMsXG4gICAgICAgICAgICBkb21VdGlscyA9IGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlLFxuICAgICAgICAgICAgU3RhdGVmdWwgPSBiYWlkdS5lZGl0b3IudWkuU3RhdGVmdWwsXG4gICAgICAgICAgICBTcGxpdEJ1dHRvbiA9IChiYWlkdS5lZGl0b3IudWkuU3BsaXRCdXR0b24gPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0U3BsaXRCdXR0b24oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBTcGxpdEJ1dHRvbi5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBwb3B1cDogbnVsbCxcbiAgICAgICAgICAgIHVpTmFtZTogJ3NwbGl0YnV0dG9uJyxcbiAgICAgICAgICAgIHRpdGxlOiAnJyxcbiAgICAgICAgICAgIGluaXRTcGxpdEJ1dHRvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFVJQmFzZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGVmdWxfaW5pdCgpO1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucG9wdXAgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcG9wdXAgPSB0aGlzLnBvcHVwO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcHVwID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRQb3B1cChwb3B1cCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9VSUJhc2VfcG9zdFJlbmRlcjogVUlCYXNlLnByb3RvdHlwZS5wb3N0UmVuZGVyLFxuICAgICAgICAgICAgcG9zdFJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGVmdWxfcG9zdFJlbmRlcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuX1VJQmFzZV9wb3N0UmVuZGVyKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0UG9wdXA6IGZ1bmN0aW9uIChwb3B1cCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBvcHVwID09PSBwb3B1cCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBvcHVwICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3B1cC5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBvcHVwLmFkZExpc3RlbmVyKCdzaG93JywgdXRpbHMuYmluZCh0aGlzLl9vblBvcHVwU2hvdywgdGhpcykpO1xuICAgICAgICAgICAgICAgIHBvcHVwLmFkZExpc3RlbmVyKCdoaWRlJywgdXRpbHMuYmluZCh0aGlzLl9vblBvcHVwSGlkZSwgdGhpcykpO1xuICAgICAgICAgICAgICAgIHBvcHVwLmFkZExpc3RlbmVyKFxuICAgICAgICAgICAgICAgICAgICAncG9zdHJlbmRlcicsXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmJpbmQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9wdXBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZ2V0RG9tKCdib2R5JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpVXRpbHMuY3JlYXRlRWxlbWVudEJ5SHRtbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3B1cC5pZCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ19ib3JkZXJlcmFzZXJcIiBjbGFzcz1cImVkdWktYm9yZGVyZXJhc2VyIGVkdWktYmFja2dyb3VuZFwiIHN0eWxlPVwid2lkdGg6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHVpVXRpbHMuZ2V0Q2xpZW50UmVjdCh0aGlzLmdldERvbSgpKS53aWR0aCArIDIwKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3B4XCI+PC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwLmdldERvbSgpLmNsYXNzTmFtZSArPSAnICcgKyB0aGlzLmNsYXNzTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgfSwgdGhpcylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMucG9wdXAgPSBwb3B1cDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25Qb3B1cFNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFN0YXRlKCdvcGVuZWQnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25Qb3B1cEhpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVN0YXRlKCdvcGVuZWQnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI1wiIGNsYXNzPVwiZWR1aS1ib3ggJSVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgJyArXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnRpdGxlID8gJ3RpdGxlPVwiJyArIHRoaXMudGl0bGUgKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJyBpZD1cIiMjX3N0YXRlXCIgc3RhdGVmdWw+PGRpdiBjbGFzcz1cIiUlLWJvZHlcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI19idXR0b25fYm9keVwiIGNsYXNzPVwiZWR1aS1ib3ggZWR1aS1idXR0b24tYm9keVwiIG9uY2xpY2s9XCIkJC5fb25CdXR0b25DbGljayhldmVudCwgdGhpcyk7XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1ib3ggZWR1aS1pY29uXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWJveCBlZHVpLXNwbGl0Ym9yZGVyXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1ib3ggZWR1aS1hcnJvd1wiIG9uY2xpY2s9XCIkJC5fb25BcnJvd0NsaWNrKCk7XCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj48L2Rpdj48L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93UG9wdXA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyDlvZNwb3B1cOW+gOS4iuW8ueWHuueahOaXtuWAme+8jOWBmueJueauiuWkhOeQhlxuICAgICAgICAgICAgICAgIHZhciByZWN0ID0gdWlVdGlscy5nZXRDbGllbnRSZWN0KHRoaXMuZ2V0RG9tKCkpO1xuICAgICAgICAgICAgICAgIHJlY3QudG9wIC09IHRoaXMucG9wdXAuU0hBRE9XX1JBRElVUztcbiAgICAgICAgICAgICAgICByZWN0LmhlaWdodCArPSB0aGlzLnBvcHVwLlNIQURPV19SQURJVVM7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3B1cC5zaG93QW5jaG9yUmVjdChyZWN0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25BcnJvd0NsaWNrOiBmdW5jdGlvbiAoZXZlbnQsIGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dQb3B1cCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25CdXR0b25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0Rpc2FibGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2J1dHRvbmNsaWNrJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhTcGxpdEJ1dHRvbiwgVUlCYXNlKTtcbiAgICAgICAgdXRpbHMuZXh0ZW5kKFNwbGl0QnV0dG9uLnByb3RvdHlwZSwgU3RhdGVmdWwsIHRydWUpO1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9jb2xvcmJ1dHRvbi5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHVpY29yZVxuICAgIC8vL2ltcG9ydCB1aS9jb2xvcnBpY2tlci5qc1xuICAgIC8vL2ltcG9ydCB1aS9wb3B1cC5qc1xuICAgIC8vL2ltcG9ydCB1aS9zcGxpdGJ1dHRvbi5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIHVpVXRpbHMgPSBiYWlkdS5lZGl0b3IudWkudWlVdGlscyxcbiAgICAgICAgICAgIENvbG9yUGlja2VyID0gYmFpZHUuZWRpdG9yLnVpLkNvbG9yUGlja2VyLFxuICAgICAgICAgICAgUG9wdXAgPSBiYWlkdS5lZGl0b3IudWkuUG9wdXAsXG4gICAgICAgICAgICBTcGxpdEJ1dHRvbiA9IGJhaWR1LmVkaXRvci51aS5TcGxpdEJ1dHRvbixcbiAgICAgICAgICAgIENvbG9yQnV0dG9uID0gKGJhaWR1LmVkaXRvci51aS5Db2xvckJ1dHRvbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRDb2xvckJ1dHRvbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIENvbG9yQnV0dG9uLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGluaXRDb2xvckJ1dHRvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3B1cCA9IG5ldyBQb3B1cCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG5ldyBDb2xvclBpY2tlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBub0NvbG9yVGV4dDogbWUuZWRpdG9yLmdldExhbmcoJ2NsZWFyQ29sb3InKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvcjogbWUuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25waWNrY29sb3I6IGZ1bmN0aW9uICh0LCBjb2xvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9vblBpY2tDb2xvcihjb2xvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25waWNrbm9jb2xvcjogZnVuY3Rpb24gKHQsIGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX29uUGlja05vQ29sb3IoY29sb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBtZS5lZGl0b3JcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRTcGxpdEJ1dHRvbigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9TcGxpdEJ1dHRvbl9wb3N0UmVuZGVyOiBTcGxpdEJ1dHRvbi5wcm90b3R5cGUucG9zdFJlbmRlcixcbiAgICAgICAgICAgIHBvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9TcGxpdEJ1dHRvbl9wb3N0UmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2J1dHRvbl9ib2R5JykuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICAgICAgICAgIHVpVXRpbHMuY3JlYXRlRWxlbWVudEJ5SHRtbCgnPGRpdiBpZD1cIicgKyB0aGlzLmlkICsgJ19jb2xvcmx1bXBcIiBjbGFzcz1cImVkdWktY29sb3JsdW1wXCI+PC9kaXY+JylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuY2xhc3NOYW1lICs9ICcgZWR1aS1jb2xvcmJ1dHRvbic7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0Q29sb3I6IGZ1bmN0aW9uIChjb2xvcikge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCdjb2xvcmx1bXAnKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcjtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbG9yID0gY29sb3I7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uUGlja0NvbG9yOiBmdW5jdGlvbiAoY29sb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5maXJlRXZlbnQoJ3BpY2tjb2xvcicsIGNvbG9yKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb2xvcihjb2xvcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9wdXAuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25QaWNrTm9Db2xvcjogZnVuY3Rpb24gKGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlyZUV2ZW50KCdwaWNrbm9jb2xvcicpICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLmhpZGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKENvbG9yQnV0dG9uLCBTcGxpdEJ1dHRvbik7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL3RhYmxlYnV0dG9uLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgLy8vaW1wb3J0IHVpL3BvcHVwLmpzXG4gICAgLy8vaW1wb3J0IHVpL3RhYmxlcGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IHVpL3NwbGl0YnV0dG9uLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgUG9wdXAgPSBiYWlkdS5lZGl0b3IudWkuUG9wdXAsXG4gICAgICAgICAgICBUYWJsZVBpY2tlciA9IGJhaWR1LmVkaXRvci51aS5UYWJsZVBpY2tlcixcbiAgICAgICAgICAgIFNwbGl0QnV0dG9uID0gYmFpZHUuZWRpdG9yLnVpLlNwbGl0QnV0dG9uLFxuICAgICAgICAgICAgVGFibGVCdXR0b24gPSAoYmFpZHUuZWRpdG9yLnVpLlRhYmxlQnV0dG9uID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFRhYmxlQnV0dG9uKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgVGFibGVCdXR0b24ucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgaW5pdFRhYmxlQnV0dG9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwID0gbmV3IFBvcHVwKHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogbmV3IFRhYmxlUGlja2VyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvcjogbWUuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25waWNrdGFibGU6IGZ1bmN0aW9uICh0LCBudW1Db2xzLCBudW1Sb3dzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX29uUGlja1RhYmxlKG51bUNvbHMsIG51bVJvd3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBtZS5lZGl0b3JcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRTcGxpdEJ1dHRvbigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9vblBpY2tUYWJsZTogZnVuY3Rpb24gKG51bUNvbHMsIG51bVJvd3MpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5maXJlRXZlbnQoJ3BpY2t0YWJsZScsIG51bUNvbHMsIG51bVJvd3MpICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLmhpZGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFRhYmxlQnV0dG9uLCBTcGxpdEJ1dHRvbik7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL2F1dG90eXBlc2V0cGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZTtcblxuICAgICAgICB2YXIgQXV0b1R5cGVTZXRQaWNrZXIgPSAoYmFpZHUuZWRpdG9yLnVpLkF1dG9UeXBlU2V0UGlja2VyID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmluaXRBdXRvVHlwZVNldFBpY2tlcigpO1xuICAgICAgICB9KTtcbiAgICAgICAgQXV0b1R5cGVTZXRQaWNrZXIucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgaW5pdEF1dG9UeXBlU2V0UGlja2VyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0SHRtbFRwbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXMuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBvcHQgPSBtZS5vcHRpb25zLmF1dG90eXBlc2V0LFxuICAgICAgICAgICAgICAgICAgICBsYW5nID0gbWUuZ2V0TGFuZygnYXV0b1R5cGVTZXQnKTtcblxuICAgICAgICAgICAgICAgIHZhciB0ZXh0QWxpZ25JbnB1dE5hbWUgPSAndGV4dEFsaWduVmFsdWUnICsgbWUudWlkLFxuICAgICAgICAgICAgICAgICAgICBpbWFnZUJsb2NrSW5wdXROYW1lID0gJ2ltYWdlQmxvY2tMaW5lVmFsdWUnICsgbWUudWlkLFxuICAgICAgICAgICAgICAgICAgICBzeW1ib2xDb252ZXJJbnB1dE5hbWUgPSAnc3ltYm9sQ29udmVyVmFsdWUnICsgbWUudWlkO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI1wiIGNsYXNzPVwiZWR1aS1hdXRvdHlwZXNldHBpY2tlciAlJVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktYXV0b3R5cGVzZXRwaWNrZXItYm9keVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRhYmxlID4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0cj48dGQgbm93cmFwPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwibWVyZ2VFbXB0eWxpbmVcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsnbWVyZ2VFbXB0eWxpbmUnXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcubWVyZ2VMaW5lICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+PHRkIGNvbHNwYW49XCIyXCI+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJyZW1vdmVFbXB0eWxpbmVcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsncmVtb3ZlRW1wdHlsaW5lJ10gPyAnY2hlY2tlZCcgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPicgK1xuICAgICAgICAgICAgICAgICAgICBsYW5nLmRlbExpbmUgK1xuICAgICAgICAgICAgICAgICAgICAnPC90ZD48L3RyPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRyPjx0ZCBub3dyYXA+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJyZW1vdmVDbGFzc1wiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydyZW1vdmVDbGFzcyddID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbGFuZy5yZW1vdmVGb3JtYXQgK1xuICAgICAgICAgICAgICAgICAgICAnPC90ZD48dGQgY29sc3Bhbj1cIjJcIj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImluZGVudFwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydpbmRlbnQnXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcuaW5kZW50ICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+PC90cj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0cj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0ZCBub3dyYXA+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJ0ZXh0QWxpZ25cIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsndGV4dEFsaWduJ10gPyAnY2hlY2tlZCcgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPicgK1xuICAgICAgICAgICAgICAgICAgICBsYW5nLmFsaWdubWVudCArXG4gICAgICAgICAgICAgICAgICAgICc8L3RkPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRkIGNvbHNwYW49XCIyXCIgaWQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHZhbHVlPVwibGVmdFwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0Wyd0ZXh0QWxpZ24nXSAmJiBvcHRbJ3RleHRBbGlnbiddID09ICdsZWZ0JyA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIG1lLmdldExhbmcoJ2p1c3RpZnlsZWZ0JykgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHZhbHVlPVwiY2VudGVyXCIgJyArXG4gICAgICAgICAgICAgICAgICAgIChvcHRbJ3RleHRBbGlnbiddICYmIG9wdFsndGV4dEFsaWduJ10gPT0gJ2NlbnRlcicgPyAnY2hlY2tlZCcgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPicgK1xuICAgICAgICAgICAgICAgICAgICBtZS5nZXRMYW5nKCdqdXN0aWZ5Y2VudGVyJykgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHZhbHVlPVwicmlnaHRcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsndGV4dEFsaWduJ10gJiYgb3B0Wyd0ZXh0QWxpZ24nXSA9PSAncmlnaHQnID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbWUuZ2V0TGFuZygnanVzdGlmeXJpZ2h0JykgK1xuICAgICAgICAgICAgICAgICAgICAnPC90ZD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dGQgbm93cmFwPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiaW1hZ2VCbG9ja0xpbmVcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsnaW1hZ2VCbG9ja0xpbmUnXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcuaW1hZ2VGbG9hdCArXG4gICAgICAgICAgICAgICAgICAgICc8L3RkPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRkIG5vd3JhcCBpZD1cIicgK1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUJsb2NrSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VCbG9ja0lucHV0TmFtZSArXG4gICAgICAgICAgICAgICAgICAgICdcIiB2YWx1ZT1cIm5vbmVcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsnaW1hZ2VCbG9ja0xpbmUnXSAmJiBvcHRbJ2ltYWdlQmxvY2tMaW5lJ10gPT0gJ25vbmUnID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbWUuZ2V0TGFuZygnZGVmYXVsdCcpICtcbiAgICAgICAgICAgICAgICAgICAgJzxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwiJyArXG4gICAgICAgICAgICAgICAgICAgIGltYWdlQmxvY2tJbnB1dE5hbWUgK1xuICAgICAgICAgICAgICAgICAgICAnXCIgdmFsdWU9XCJsZWZ0XCIgJyArXG4gICAgICAgICAgICAgICAgICAgIChvcHRbJ2ltYWdlQmxvY2tMaW5lJ10gJiYgb3B0WydpbWFnZUJsb2NrTGluZSddID09ICdsZWZ0JyA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIG1lLmdldExhbmcoJ2p1c3RpZnlsZWZ0JykgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VCbG9ja0lucHV0TmFtZSArXG4gICAgICAgICAgICAgICAgICAgICdcIiB2YWx1ZT1cImNlbnRlclwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydpbWFnZUJsb2NrTGluZSddICYmIG9wdFsnaW1hZ2VCbG9ja0xpbmUnXSA9PSAnY2VudGVyJyA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIG1lLmdldExhbmcoJ2p1c3RpZnljZW50ZXInKSArXG4gICAgICAgICAgICAgICAgICAgICc8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cIicgK1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUJsb2NrSW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiIHZhbHVlPVwicmlnaHRcIiAnICtcbiAgICAgICAgICAgICAgICAgICAgKG9wdFsnaW1hZ2VCbG9ja0xpbmUnXSAmJiBvcHRbJ2ltYWdlQmxvY2tMaW5lJ10gPT0gJ3JpZ2h0JyA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIG1lLmdldExhbmcoJ2p1c3RpZnlyaWdodCcpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L3RyPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRyPjx0ZCBub3dyYXA+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJjbGVhckZvbnRTaXplXCIgJyArXG4gICAgICAgICAgICAgICAgICAgIChvcHRbJ2NsZWFyRm9udFNpemUnXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcucmVtb3ZlRm9udHNpemUgK1xuICAgICAgICAgICAgICAgICAgICAnPC90ZD48dGQgY29sc3Bhbj1cIjJcIj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cImNsZWFyRm9udEZhbWlseVwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydjbGVhckZvbnRGYW1pbHknXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcucmVtb3ZlRm9udEZhbWlseSArXG4gICAgICAgICAgICAgICAgICAgICc8L3RkPjwvdHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dHI+PHRkIG5vd3JhcCBjb2xzcGFuPVwiM1wiPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwicmVtb3ZlRW1wdHlOb2RlXCIgJyArXG4gICAgICAgICAgICAgICAgICAgIChvcHRbJ3JlbW92ZUVtcHR5Tm9kZSddID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbGFuZy5yZW1vdmVIdG1sICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+PC90cj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0cj48dGQgbm93cmFwIGNvbHNwYW49XCIzXCI+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJwYXN0ZUZpbHRlclwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydwYXN0ZUZpbHRlciddID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbGFuZy5wYXN0ZUZpbHRlciArXG4gICAgICAgICAgICAgICAgICAgICc8L3RkPjwvdHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dGQgbm93cmFwPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwic3ltYm9sQ29udmVyXCIgJyArXG4gICAgICAgICAgICAgICAgICAgIChvcHRbJ2JkYzJzYiddIHx8IG9wdFsndG9iZGMnXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcuc3ltYm9sICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dGQgaWQ9XCInICtcbiAgICAgICAgICAgICAgICAgICAgc3ltYm9sQ29udmVySW5wdXROYW1lICtcbiAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJiZGNcIiB2YWx1ZT1cImJkYzJzYlwiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0WydiZGMyc2InXSA/ICdjaGVja2VkJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc+JyArXG4gICAgICAgICAgICAgICAgICAgIGxhbmcuYmRjMnNiICtcbiAgICAgICAgICAgICAgICAgICAgJzxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwiYmRjXCIgdmFsdWU9XCJ0b2JkY1wiICcgK1xuICAgICAgICAgICAgICAgICAgICAob3B0Wyd0b2JkYyddID8gJ2NoZWNrZWQnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgbGFuZy50b2JkYyArXG4gICAgICAgICAgICAgICAgICAgICcnICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGQ+JyArXG4gICAgICAgICAgICAgICAgICAgICc8dGQgbm93cmFwIGFsaWduPVwicmlnaHRcIj48YnV0dG9uID4nICtcbiAgICAgICAgICAgICAgICAgICAgbGFuZy5ydW4gK1xuICAgICAgICAgICAgICAgICAgICAnPC9idXR0b24+PC90ZD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdHI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L3RhYmxlPicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfVUlCYXNlX3JlbmRlcjogVUlCYXNlLnByb3RvdHlwZS5yZW5kZXJcbiAgICAgICAgfTtcbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoQXV0b1R5cGVTZXRQaWNrZXIsIFVJQmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL2F1dG90eXBlc2V0YnV0dG9uLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgLy8vaW1wb3J0IHVpL3BvcHVwLmpzXG4gICAgLy8vaW1wb3J0IHVpL2F1dG90eXBlc2V0cGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IHVpL3NwbGl0YnV0dG9uLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgUG9wdXAgPSBiYWlkdS5lZGl0b3IudWkuUG9wdXAsXG4gICAgICAgICAgICBBdXRvVHlwZVNldFBpY2tlciA9IGJhaWR1LmVkaXRvci51aS5BdXRvVHlwZVNldFBpY2tlcixcbiAgICAgICAgICAgIFNwbGl0QnV0dG9uID0gYmFpZHUuZWRpdG9yLnVpLlNwbGl0QnV0dG9uLFxuICAgICAgICAgICAgQXV0b1R5cGVTZXRCdXR0b24gPSAoYmFpZHUuZWRpdG9yLnVpLkF1dG9UeXBlU2V0QnV0dG9uID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdEF1dG9UeXBlU2V0QnV0dG9uKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gZ2V0UGFyYShtZSkge1xuICAgICAgICAgICAgdmFyIG9wdCA9IHt9LFxuICAgICAgICAgICAgICAgIGNvbnQgPSBtZS5nZXREb20oKSxcbiAgICAgICAgICAgICAgICBlZGl0b3JJZCA9IG1lLmVkaXRvci51aWQsXG4gICAgICAgICAgICAgICAgaW5wdXRUeXBlID0gbnVsbCxcbiAgICAgICAgICAgICAgICBhdHRyTmFtZSA9IG51bGwsXG4gICAgICAgICAgICAgICAgaXB0cyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGNvbnQsICdpbnB1dCcpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IGlwdHMubGVuZ3RoIC0gMSwgaXB0OyAoaXB0ID0gaXB0c1tpLS1dKTsgKSB7XG4gICAgICAgICAgICAgICAgaW5wdXRUeXBlID0gaXB0LmdldEF0dHJpYnV0ZSgndHlwZScpO1xuICAgICAgICAgICAgICAgIGlmIChpbnB1dFR5cGUgPT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgICAgICAgICBhdHRyTmFtZSA9IGlwdC5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICAgICAgICAgICAgICAgICAgb3B0W2F0dHJOYW1lXSAmJiBkZWxldGUgb3B0W2F0dHJOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlwdC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXR0clZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYXR0ck5hbWUgKyAnVmFsdWUnICsgZWRpdG9ySWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgvaW5wdXQvZ2kudGVzdChhdHRyVmFsdWUudGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0W2F0dHJOYW1lXSA9IGF0dHJWYWx1ZS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXB0Q2hpbGRzID0gYXR0clZhbHVlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbnB1dCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gaXB0Q2hpbGRzLmxlbmd0aCAtIDEsIGlwdGNoaWxkOyAoaXB0Y2hpbGQgPSBpcHRDaGlsZHNbai0tXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlwdGNoaWxkLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRbYXR0ck5hbWVdID0gaXB0Y2hpbGQudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdFthdHRyTmFtZV0gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0W2F0dHJOYW1lXSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0W2lwdC5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJyldID0gaXB0LmNoZWNrZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgc2VsZWN0cyA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGNvbnQsICdzZWxlY3QnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBzaTsgKHNpID0gc2VsZWN0c1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgdmFyIGF0dHIgPSBzaS5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICAgICAgICAgICAgICBvcHRbYXR0cl0gPSBvcHRbYXR0cl0gPyBzaS52YWx1ZSA6ICcnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB1dGlscy5leHRlbmQobWUuZWRpdG9yLm9wdGlvbnMuYXV0b3R5cGVzZXQsIG9wdCk7XG5cbiAgICAgICAgICAgIG1lLmVkaXRvci5zZXRQcmVmZXJlbmNlcygnYXV0b3R5cGVzZXQnLCBvcHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgQXV0b1R5cGVTZXRCdXR0b24ucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgaW5pdEF1dG9UeXBlU2V0QnV0dG9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwID0gbmV3IFBvcHVwKHtcbiAgICAgICAgICAgICAgICAgICAgLy/kvKDlhaXphY3nva7lj4LmlbBcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogbmV3IEF1dG9UeXBlU2V0UGlja2VyKHsgZWRpdG9yOiBtZS5lZGl0b3IgfSksXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvcjogbWUuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX2hpZGRlbiAmJiB0aGlzLmdldERvbSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0UGFyYSh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgnaGlkZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyIGZsYWcgPSAwO1xuICAgICAgICAgICAgICAgIHRoaXMucG9wdXAuYWRkTGlzdGVuZXIoJ3Bvc3RSZW5kZXJBZnRlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvcHVwVUkgPSB0aGlzO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmxhZykgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29udCA9IHRoaXMuZ2V0RG9tKCksXG4gICAgICAgICAgICAgICAgICAgICAgICBidG4gPSBjb250LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdidXR0b24nKVswXTtcblxuICAgICAgICAgICAgICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmEocG9wdXBVSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5lZGl0b3IuZXhlY0NvbW1hbmQoJ2F1dG90eXBlc2V0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3B1cFVJLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihjb250LCAnY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3JJZCA9IG1lLmVkaXRvci51aWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0ICYmIHRhcmdldC50YWdOYW1lID09ICdJTlBVVCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDngrnlh7vlm77niYfmta7liqjnmoRjaGVja2JveCzljrvpmaTlr7nlupTnmoRyYWRpb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0Lm5hbWUgPT0gJ2ltYWdlQmxvY2tMaW5lJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQubmFtZSA9PSAndGV4dEFsaWduJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQubmFtZSA9PSAnc3ltYm9sQ29udmVyJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2tlZCA9IHRhcmdldC5jaGVja2VkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFkaW9UZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhcmdldC5uYW1lICsgJ1ZhbHVlJyArIGVkaXRvcklkKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhZGlvcyA9IHJhZGlvVGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2lucHV0JyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhbHV0U2VsZWN0ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlQmxvY2tMaW5lOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ltYm9sQ29udmVyOiAndG9iZGMnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmFkaW9zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyYWRpb3NbaV0udmFsdWUgPT0gZGVmYWx1dFNlbGVjdFt0YXJnZXQubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFkaW9zW2ldLmNoZWNrZWQgPSAnY2hlY2tlZCc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWRpb3NbaV0uY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOeCueWHu3JhZGlvLOmAieS4reWvueW6lOeahGNoZWNrYm94XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQubmFtZSA9PSAnaW1hZ2VCbG9ja0xpbmVWYWx1ZScgKyBlZGl0b3JJZCB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQubmFtZSA9PSAndGV4dEFsaWduVmFsdWUnICsgZWRpdG9ySWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0Lm5hbWUgPT0gJ2JkYydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoZWNrYm94cyA9IHRhcmdldC5wYXJlbnROb2RlLnByZXZpb3VzU2libGluZy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tib3hzICYmIChjaGVja2JveHNbMF0uY2hlY2tlZCA9IHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmEocG9wdXBVSSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGZsYWcgPSAxO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFNwbGl0QnV0dG9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKEF1dG9UeXBlU2V0QnV0dG9uLCBTcGxpdEJ1dHRvbik7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL2NlbGxhbGlnbnBpY2tlci5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHVpY29yZVxuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIFBvcHVwID0gYmFpZHUuZWRpdG9yLnVpLlBvcHVwLFxuICAgICAgICAgICAgU3RhdGVmdWwgPSBiYWlkdS5lZGl0b3IudWkuU3RhdGVmdWwsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiDor6Xlj4LmlbDlsIbmlrDlop7kuIDkuKrlj4LmlbDvvJogc2VsZWN0ZWTvvIwg5Y+C5pWw57G75Z6L5Li65LiA5LiqT2JqZWN077yMIOW9ouWmgnsgJ2FsaWduJzogJ2NlbnRlcicsICd2YWxpZ24nOiAndG9wJyB977yMIOihqOekuuWNleWFg+agvOeahOWIneWni1xuICAgICAgICAgKiDlr7npvZDnirbmgIHkuLrvvJog56uW55u05bGF5LiK77yM5rC05bmz5bGF5LitOyDlhbbkuK0gYWxpZ27nmoTlj5blgLzkuLrvvJonY2VudGVyJywgJ2xlZnQnLCAncmlnaHQnOyB2YWxpZ27nmoTlj5blgLzkuLo6ICd0b3AnLCAnbWlkZGxlJywgJ2JvdHRvbSdcbiAgICAgICAgICogQHVwZGF0ZSAyMDEzLzQvMiBoYW5jb25nMDNAYmFpZHUuY29tXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgQ2VsbEFsaWduUGlja2VyID0gKGJhaWR1LmVkaXRvci51aS5DZWxsQWxpZ25QaWNrZXIgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuaW5pdFNlbGVjdGVkKCk7XG4gICAgICAgICAgICB0aGlzLmluaXRDZWxsQWxpZ25QaWNrZXIoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIENlbGxBbGlnblBpY2tlci5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICAvL+WIneWni+WMlumAieS4reeKtuaAge+8jCDor6Xmlrnms5XlsIbmoLnmja7kvKDpgJLov5vmnaXnmoTlj4LmlbDojrflj5bliLDlupTor6XpgInkuK3nmoTlr7npvZDmlrnlvI/lm77moIfnmoTntKLlvJVcbiAgICAgICAgICAgIGluaXRTZWxlY3RlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0dXMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWlkZGxlOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudDogM1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSAtMTtcblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXMudmFsaWduW3RoaXMuc2VsZWN0ZWQudmFsaWduXSAqIHN0YXR1cy5jb3VudCArIHN0YXR1cy5hbGlnblt0aGlzLnNlbGVjdGVkLmFsaWduXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5pdENlbGxBbGlnblBpY2tlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFVJQmFzZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuU3RhdGVmdWxfaW5pdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWxpZ25UeXBlID0gWydsZWZ0JywgJ2NlbnRlcicsICdyaWdodCddLFxuICAgICAgICAgICAgICAgICAgICBDT1VOVCA9IDksXG4gICAgICAgICAgICAgICAgICAgIHRlbXBDbGFzc05hbWUgPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICB0ZW1wSW5kZXggPSAtMSxcbiAgICAgICAgICAgICAgICAgICAgdG1wbCA9IFtdO1xuXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBDT1VOVDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBDbGFzc05hbWUgPSB0aGlzLnNlbGVjdGVkSW5kZXggPT09IGkgPyAnIGNsYXNzPVwiZWR1aS1jZWxsYWxpZ24tc2VsZWN0ZWRcIiAnIDogJyc7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBJbmRleCA9IGkgJSAzO1xuXG4gICAgICAgICAgICAgICAgICAgIHRlbXBJbmRleCA9PT0gMCAmJiB0bXBsLnB1c2goJzx0cj4nKTtcblxuICAgICAgICAgICAgICAgICAgICB0bXBsLnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICAnPHRkIGluZGV4PVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFzc05hbWUgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgc3RhdGVmdWw+PGRpdiBjbGFzcz1cImVkdWktaWNvbiBlZHVpLScgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduVHlwZVt0ZW1wSW5kZXhdICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCI+PC9kaXY+PC90ZD4nXG4gICAgICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGVtcEluZGV4ID09PSAyICYmIHRtcGwucHVzaCgnPC90cj4nKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjXCIgY2xhc3M9XCJlZHVpLWNlbGxhbGlnbnBpY2tlciAlJVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktY2VsbGFsaWducGlja2VyLWJvZHlcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0YWJsZSBvbmNsaWNrPVwiJCQuX29uQ2xpY2soZXZlbnQpO1wiPicgK1xuICAgICAgICAgICAgICAgICAgICB0bXBsLmpvaW4oJycpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvdGFibGU+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFN0YXRlRG9tOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudGFyZ2V0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9vbkNsaWNrOiBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgaWYgKC9pY29uLy50ZXN0KHRhcmdldC5jbGFzc05hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNbdGFyZ2V0LnBhcmVudE5vZGUuZ2V0QXR0cmlidXRlKCdpbmRleCcpXS5vbmNsaWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIFBvcHVwLnBvc3RIaWRlKGV2dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9VSUJhc2VfcmVuZGVyOiBVSUJhc2UucHJvdG90eXBlLnJlbmRlclxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhDZWxsQWxpZ25QaWNrZXIsIFVJQmFzZSk7XG4gICAgICAgIHV0aWxzLmV4dGVuZChDZWxsQWxpZ25QaWNrZXIucHJvdG90eXBlLCBTdGF0ZWZ1bCwgdHJ1ZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL3Bhc3RlcGlja2VyLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgU3RhdGVmdWwgPSBiYWlkdS5lZGl0b3IudWkuU3RhdGVmdWwsXG4gICAgICAgICAgICB1aVV0aWxzID0gYmFpZHUuZWRpdG9yLnVpLnVpVXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlO1xuXG4gICAgICAgIHZhciBQYXN0ZVBpY2tlciA9IChiYWlkdS5lZGl0b3IudWkuUGFzdGVQaWNrZXIgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuaW5pdFBhc3RlUGlja2VyKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBQYXN0ZVBpY2tlci5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBpbml0UGFzdGVQaWNrZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRVSUJhc2UoKTtcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlZnVsX2luaXQoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLXBhc3RlaWNvblwiIG9uY2xpY2s9XCIkJC5fb25DbGljayh0aGlzKVwiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktcGFzdGVjb250YWluZXJcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLXRpdGxlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLmdldExhbmcoJ3Bhc3RlT3B0JykgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1idXR0b25cIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgdGl0bGU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZ2V0TGFuZygncGFzdGVTb3VyY2VGb3JtYXQnKSArXG4gICAgICAgICAgICAgICAgICAgICdcIiBvbmNsaWNrPVwiJCQuZm9ybWF0KGZhbHNlKVwiIHN0YXRlZnVsPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktcmljaHR4dGljb25cIj48L2Rpdj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgdGl0bGU9XCInICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZ2V0TGFuZygndGFnRm9ybWF0JykgK1xuICAgICAgICAgICAgICAgICAgICAnXCIgb25jbGljaz1cIiQkLmZvcm1hdCgyKVwiIHN0YXRlZnVsPicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktdGFnaWNvblwiPjwvZGl2PjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiB0aXRsZT1cIicgK1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5nZXRMYW5nKCdwYXN0ZVRleHRGb3JtYXQnKSArXG4gICAgICAgICAgICAgICAgICAgICdcIiBvbmNsaWNrPVwiJCQuZm9ybWF0KHRydWUpXCIgc3RhdGVmdWw+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1wbGFpbnR4dGljb25cIj48L2Rpdj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRTdGF0ZURvbTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRhcmdldDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmb3JtYXQ6IGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnVpLl9pc1RyYW5zZmVyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5maXJlRXZlbnQoJ3Bhc3RlVHJhbnNmZXInLCBwYXJhbSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uQ2xpY2s6IGZ1bmN0aW9uIChjdXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGRvbVV0aWxzLmdldE5leHREb21Ob2RlKGN1ciksXG4gICAgICAgICAgICAgICAgICAgIHNjcmVlbkh0ID0gdWlVdGlscy5nZXRWaWV3cG9ydFJlY3QoKS5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIHN1YlBvcCA9IHVpVXRpbHMuZ2V0Q2xpZW50UmVjdChub2RlKTtcblxuICAgICAgICAgICAgICAgIGlmIChzdWJQb3AudG9wICsgc3ViUG9wLmhlaWdodCA+IHNjcmVlbkh0KSBub2RlLnN0eWxlLnRvcCA9IC1zdWJQb3AuaGVpZ2h0IC0gY3VyLm9mZnNldEhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgZWxzZSBub2RlLnN0eWxlLnRvcCA9ICcnO1xuXG4gICAgICAgICAgICAgICAgaWYgKC9oaWRkZW4vZ2kudGVzdChkb21VdGlscy5nZXRDb21wdXRlZFN0eWxlKG5vZGUsICd2aXNpYmlsaXR5JykpKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3MoY3VyLCAnZWR1aS1zdGF0ZS1vcGVuZWQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQ2xhc3NlcyhjdXIsICdlZHVpLXN0YXRlLW9wZW5lZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfVUlCYXNlX3JlbmRlcjogVUlCYXNlLnByb3RvdHlwZS5yZW5kZXJcbiAgICAgICAgfTtcbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoUGFzdGVQaWNrZXIsIFVJQmFzZSk7XG4gICAgICAgIHV0aWxzLmV4dGVuZChQYXN0ZVBpY2tlci5wcm90b3R5cGUsIFN0YXRlZnVsLCB0cnVlKTtcbiAgICB9KSgpO1xuXG4gICAgLy8gdWkvdG9vbGJhci5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIHVpVXRpbHMgPSBiYWlkdS5lZGl0b3IudWkudWlVdGlscyxcbiAgICAgICAgICAgIFVJQmFzZSA9IGJhaWR1LmVkaXRvci51aS5VSUJhc2UsXG4gICAgICAgICAgICBUb29sYmFyID0gKGJhaWR1LmVkaXRvci51aS5Ub29sYmFyID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFRvb2xiYXIoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBUb29sYmFyLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGl0ZW1zOiBudWxsLFxuICAgICAgICAgICAgaW5pdFRvb2xiYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5pdGVtcyB8fCBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRVSUJhc2UoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZGQ6IGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpbmRleCwgMCwgaXRlbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYnVmZiA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBidWZmW2ldID0gdGhpcy5pdGVtc1tpXS5yZW5kZXJIdG1sKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cImVkdWktdG9vbGJhciAlJVwiIG9uc2VsZWN0c3RhcnQ9XCJyZXR1cm4gZmFsc2U7XCIgb25tb3VzZWRvd249XCJyZXR1cm4gJCQuX29uTW91c2VEb3duKGV2ZW50LCB0aGlzKTtcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgYnVmZi5qb2luKCcnKSArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJveCA9IHRoaXMuZ2V0RG9tKCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNbaV0ucG9zdFJlbmRlcigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB1aVV0aWxzLm1ha2VVbnNlbGVjdGFibGUoYm94KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfb25Nb3VzZURvd246IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgdGFnTmFtZSA9IHRhcmdldCAmJiB0YXJnZXQudGFnTmFtZSAmJiB0YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGlmICh0YWdOYW1lID09ICdpbnB1dCcgfHwgdGFnTmFtZSA9PSAnb2JqZWN0JyB8fCB0YWdOYW1lID09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFRvb2xiYXIsIFVJQmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL21lbnUuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2ltcG9ydCB1aWNvcmVcbiAgICAvLy9pbXBvcnQgdWlcXHBvcHVwLmpzXG4gICAgLy8vaW1wb3J0IHVpXFxzdGF0ZWZ1bC5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIGRvbVV0aWxzID0gYmFpZHUuZWRpdG9yLmRvbS5kb21VdGlscyxcbiAgICAgICAgICAgIHVpVXRpbHMgPSBiYWlkdS5lZGl0b3IudWkudWlVdGlscyxcbiAgICAgICAgICAgIFVJQmFzZSA9IGJhaWR1LmVkaXRvci51aS5VSUJhc2UsXG4gICAgICAgICAgICBQb3B1cCA9IGJhaWR1LmVkaXRvci51aS5Qb3B1cCxcbiAgICAgICAgICAgIFN0YXRlZnVsID0gYmFpZHUuZWRpdG9yLnVpLlN0YXRlZnVsLFxuICAgICAgICAgICAgQ2VsbEFsaWduUGlja2VyID0gYmFpZHUuZWRpdG9yLnVpLkNlbGxBbGlnblBpY2tlcixcbiAgICAgICAgICAgIE1lbnUgPSAoYmFpZHUuZWRpdG9yLnVpLk1lbnUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0TWVudSgpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIG1lbnVTZXBhcmF0b3IgPSB7XG4gICAgICAgICAgICByZW5kZXJIdG1sOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICc8ZGl2IGNsYXNzPVwiZWR1aS1tZW51aXRlbSBlZHVpLW1lbnVzZXBhcmF0b3JcIj48ZGl2IGNsYXNzPVwiZWR1aS1tZW51c2VwYXJhdG9yLWlubmVyXCI+PC9kaXY+PC9kaXY+JztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7fSxcbiAgICAgICAgICAgIHF1ZXJ5QXV0b0hpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgTWVudS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBpdGVtczogbnVsbCxcbiAgICAgICAgICAgIHVpTmFtZTogJ21lbnUnLFxuICAgICAgICAgICAgaW5pdE1lbnU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5pdGVtcyB8fCBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRQb3B1cCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdEl0ZW1zKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5pdEl0ZW1zOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gdGhpcy5pdGVtc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT0gJy0nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zW2ldID0gdGhpcy5nZXRTZXBhcmF0b3IoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICghKGl0ZW0gaW5zdGFuY2VvZiBNZW51SXRlbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnRoZW1lID0gdGhpcy5lZGl0b3Iub3B0aW9ucy50aGVtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNbaV0gPSB0aGlzLmNyZWF0ZUl0ZW0oaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0U2VwYXJhdG9yOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lbnVTZXBhcmF0b3I7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3JlYXRlSXRlbTogZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAvL+aWsOWinuS4gOS4quWPguaVsG1lbnUsIOivpeWPguaVsOWtmOWCqOS6hm1lbnVJdGVt5omA5a+55bqU55qEbWVudeW8leeUqFxuICAgICAgICAgICAgICAgIGl0ZW0ubWVudSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBNZW51SXRlbShpdGVtKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfUG9wdXBfZ2V0Q29udGVudEh0bWxUcGw6IFBvcHVwLnByb3RvdHlwZS5nZXRDb250ZW50SHRtbFRwbCxcbiAgICAgICAgICAgIGdldENvbnRlbnRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX1BvcHVwX2dldENvbnRlbnRIdG1sVHBsKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBidWZmID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpdGVtID0gdGhpcy5pdGVtc1tpXTtcbiAgICAgICAgICAgICAgICAgICAgYnVmZltpXSA9IGl0ZW0ucmVuZGVySHRtbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gJzxkaXYgY2xhc3M9XCIlJS1ib2R5XCI+JyArIGJ1ZmYuam9pbignJykgKyAnPC9kaXY+JztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfUG9wdXBfcG9zdFJlbmRlcjogUG9wdXAucHJvdG90eXBlLnBvc3RSZW5kZXIsXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLm93bmVyTWVudSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ucG9zdFJlbmRlcigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbih0aGlzLmdldERvbSgpLCAnbW91c2VvdmVyJywgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgICAgICAgICBldnQgPSBldnQgfHwgZXZlbnQ7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZWwgPSBldnQucmVsYXRlZFRhcmdldCB8fCBldnQuZnJvbUVsZW1lbnQ7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbCA9IG1lLmdldERvbSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXVpVXRpbHMuY29udGFpbnMoZWwsIHJlbCkgJiYgZWwgIT09IHJlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdvdmVyJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLl9Qb3B1cF9wb3N0UmVuZGVyKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcXVlcnlBdXRvSGlkZTogZnVuY3Rpb24gKGVsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh1aVV0aWxzLmNvbnRhaW5zKHRoaXMuZ2V0RG9tKCksIGVsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ucXVlcnlBdXRvSGlkZShlbCkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNsZWFySXRlbXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoaXRlbS5fc2hvd2luZ1RpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGl0ZW0uX2Nsb3NpbmdUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnN1Yk1lbnUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc3ViTWVudS5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXREb20oKSkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodGhpcy5nZXREb20oKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJJdGVtcygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc3Bvc2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoTWVudSwgUG9wdXApO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAdXBkYXRlIDIwMTMvMDQvMDMgaGFuY29uZzAzIOaWsOWinuS4gOS4quWPguaVsG1lbnUsIOivpeWPguaVsOWtmOWCqOS6hm1lbnVJdGVt5omA5a+55bqU55qEbWVudeW8leeUqFxuICAgICAgICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAgICAgICAqL1xuICAgICAgICB2YXIgTWVudUl0ZW0gPSAoYmFpZHUuZWRpdG9yLnVpLk1lbnVJdGVtID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmluaXRVSUJhc2UoKTtcbiAgICAgICAgICAgIHRoaXMuU3RhdGVmdWxfaW5pdCgpO1xuICAgICAgICAgICAgaWYgKHRoaXMuc3ViTWVudSAmJiAhKHRoaXMuc3ViTWVudSBpbnN0YW5jZW9mIE1lbnUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMuY2xhc3NOYW1lICYmIG9wdGlvbnMuY2xhc3NOYW1lLmluZGV4T2YoJ2FsaWdudGQnKSAhPSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgICAgIC8v6I635Y+W5Y2V5YWD5qC85a+56b2Q5Yid5aeL54q25oCBXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3ViTWVudS5zZWxlY3RlZCA9IHRoaXMuZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdjZWxsYWxpZ25tZW50Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJNZW51ID0gbmV3IFBvcHVwKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG5ldyBDZWxsQWxpZ25QaWNrZXIodGhpcy5zdWJNZW51KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudE1lbnU6IG1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBtZS5lZGl0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0RG9tKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKHRoaXMuZ2V0RG9tKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3ViTWVudS5hZGRMaXN0ZW5lcigncG9zdFJlbmRlckFmdGVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24odGhpcy5nZXREb20oKSwgJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5hZGRTdGF0ZSgnb3BlbmVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJNZW51ID0gbmV3IE1lbnUodGhpcy5zdWJNZW51KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBNZW51SXRlbS5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBsYWJlbDogJycsXG4gICAgICAgICAgICBzdWJNZW51OiBudWxsLFxuICAgICAgICAgICAgb3duZXJNZW51OiBudWxsLFxuICAgICAgICAgICAgdWlOYW1lOiAnbWVudWl0ZW0nLFxuICAgICAgICAgICAgYWx3YWx5c0hvdmVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjXCIgY2xhc3M9XCIlJVwiIHN0YXRlZnVsIG9uY2xpY2s9XCIkJC5fb25DbGljayhldmVudCwgdGhpcyk7XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiJSUtYm9keVwiPicgK1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckxhYmVsSHRtbCgpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcG9zdFJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcignb3ZlcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUub3duZXJNZW51LmZpcmVFdmVudCgnc3VibWVudW92ZXInLCBtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZS5zdWJNZW51KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5kZWxheVNob3dTdWJNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdWJNZW51KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuY2xhc3NOYW1lICs9ICcgZWR1aS1oYXNzdWJtZW51JztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJNZW51LnJlbmRlcigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZExpc3RlbmVyKCdvdXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5kZWxheUhpZGVTdWJNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Yk1lbnUuYWRkTGlzdGVuZXIoJ292ZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQobWUuX2Nsb3NpbmdUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5fY2xvc2luZ1RpbWVyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmFkZFN0YXRlKCdvcGVuZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3duZXJNZW51LmFkZExpc3RlbmVyKCdoaWRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuaGlkZVN1Yk1lbnUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3duZXJNZW51LmFkZExpc3RlbmVyKCdzdWJtZW51b3ZlcicsIGZ1bmN0aW9uICh0LCBzdWJNZW51KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3ViTWVudSAhPT0gbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5kZWxheUhpZGVTdWJNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN1Yk1lbnUuX2Jha1F1ZXJ5QXV0b0hpZGUgPSB0aGlzLnN1Yk1lbnUucXVlcnlBdXRvSGlkZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdWJNZW51LnF1ZXJ5QXV0b0hpZGUgPSBmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbCAmJiB1aVV0aWxzLmNvbnRhaW5zKG1lLmdldERvbSgpLCBlbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYmFrUXVlcnlBdXRvSGlkZShlbCk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCkuc3R5bGUudGFiSW5kZXggPSAnLTEnO1xuICAgICAgICAgICAgICAgIHVpVXRpbHMubWFrZVVuc2VsZWN0YWJsZSh0aGlzLmdldERvbSgpKTtcbiAgICAgICAgICAgICAgICB0aGlzLlN0YXRlZnVsX3Bvc3RSZW5kZXIoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZWxheVNob3dTdWJNZW51OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoIW1lLmlzRGlzYWJsZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICBtZS5hZGRTdGF0ZSgnb3BlbmVkJyk7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChtZS5fc2hvd2luZ1RpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KG1lLl9jbG9zaW5nVGltZXIpO1xuICAgICAgICAgICAgICAgICAgICBtZS5fY2xvc2luZ1RpbWVyID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgbWUuX3Nob3dpbmdUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2hvd1N1Yk1lbnUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMjUwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsYXlIaWRlU3ViTWVudTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgaWYgKCFtZS5pc0Rpc2FibGVkKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUucmVtb3ZlU3RhdGUoJ29wZW5lZCcpO1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQobWUuX3Nob3dpbmdUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWUuX2Nsb3NpbmdUaW1lcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuX2Nsb3NpbmdUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghbWUuaGFzU3RhdGUoJ29wZW5lZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmhpZGVTdWJNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9jbG9zaW5nVGltZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgNDAwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW5kZXJMYWJlbEh0bWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktYXJyb3dcIj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWJveCBlZHVpLWljb25cIj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWJveCBlZHVpLWxhYmVsICUlLWxhYmVsXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLmxhYmVsIHx8ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRTdGF0ZURvbTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldERvbSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHF1ZXJ5QXV0b0hpZGU6IGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN1Yk1lbnUgJiYgdGhpcy5oYXNTdGF0ZSgnb3BlbmVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3ViTWVudS5xdWVyeUF1dG9IaWRlKGVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uQ2xpY2s6IGZ1bmN0aW9uIChldmVudCwgdGhpc18pIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNTdGF0ZSgnZGlzYWJsZWQnKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZpcmVFdmVudCgnY2xpY2snLCBldmVudCwgdGhpc18pICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zdWJNZW51KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dTdWJNZW51KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBQb3B1cC5wb3N0SGlkZShldmVudCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvd1N1Yk1lbnU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVjdCA9IHVpVXRpbHMuZ2V0Q2xpZW50UmVjdCh0aGlzLmdldERvbSgpKTtcbiAgICAgICAgICAgICAgICByZWN0LnJpZ2h0IC09IDU7XG4gICAgICAgICAgICAgICAgcmVjdC5sZWZ0ICs9IDI7XG4gICAgICAgICAgICAgICAgcmVjdC53aWR0aCAtPSA3O1xuICAgICAgICAgICAgICAgIHJlY3QudG9wIC09IDQ7XG4gICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gKz0gNDtcbiAgICAgICAgICAgICAgICByZWN0LmhlaWdodCArPSA4O1xuICAgICAgICAgICAgICAgIHRoaXMuc3ViTWVudS5zaG93QW5jaG9yUmVjdChyZWN0LCB0cnVlLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWRlU3ViTWVudTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3ViTWVudS5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHV0aWxzLmluaGVyaXRzKE1lbnVJdGVtLCBVSUJhc2UpO1xuICAgICAgICB1dGlscy5leHRlbmQoTWVudUl0ZW0ucHJvdG90eXBlLCBTdGF0ZWZ1bCwgdHJ1ZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL2NvbWJveC5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHVpY29yZVxuICAgIC8vL2ltcG9ydCB1aS9tZW51LmpzXG4gICAgLy8vaW1wb3J0IHVpL3NwbGl0YnV0dG9uLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gdG9kbzogbWVudeWSjGl0ZW3mj5DmiJDpgJrnlKhsaXN0XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIHVpVXRpbHMgPSBiYWlkdS5lZGl0b3IudWkudWlVdGlscyxcbiAgICAgICAgICAgIE1lbnUgPSBiYWlkdS5lZGl0b3IudWkuTWVudSxcbiAgICAgICAgICAgIFNwbGl0QnV0dG9uID0gYmFpZHUuZWRpdG9yLnVpLlNwbGl0QnV0dG9uLFxuICAgICAgICAgICAgQ29tYm94ID0gKGJhaWR1LmVkaXRvci51aS5Db21ib3ggPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0Q29tYm94KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgQ29tYm94LnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIHVpTmFtZTogJ2NvbWJveCcsXG4gICAgICAgICAgICBvbmJ1dHRvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93UG9wdXAoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0Q29tYm94OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5pdGVtcyB8fCBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2ldO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnVpTmFtZSA9ICdsaXN0aXRlbSc7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaW5kZXggPSBpO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5zZWxlY3RCeUluZGV4KHRoaXMuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwID0gbmV3IE1lbnUoe1xuICAgICAgICAgICAgICAgICAgICBpdGVtczogdGhpcy5pdGVtcyxcbiAgICAgICAgICAgICAgICAgICAgdWlOYW1lOiAnbGlzdCcsXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvcjogdGhpcy5lZGl0b3IsXG4gICAgICAgICAgICAgICAgICAgIGNhcHR1cmVXaGVlbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY29tYm94OiB0aGlzXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmluaXRTcGxpdEJ1dHRvbigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9TcGxpdEJ1dHRvbl9wb3N0UmVuZGVyOiBTcGxpdEJ1dHRvbi5wcm90b3R5cGUucG9zdFJlbmRlcixcbiAgICAgICAgICAgIHBvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9TcGxpdEJ1dHRvbl9wb3N0UmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRMYWJlbCh0aGlzLmxhYmVsIHx8ICcnKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFZhbHVlKHRoaXMuaW5pdFZhbHVlIHx8ICcnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93UG9wdXA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVjdCA9IHVpVXRpbHMuZ2V0Q2xpZW50UmVjdCh0aGlzLmdldERvbSgpKTtcbiAgICAgICAgICAgICAgICByZWN0LnRvcCArPSAxO1xuICAgICAgICAgICAgICAgIHJlY3QuYm90dG9tIC09IDE7XG4gICAgICAgICAgICAgICAgcmVjdC5oZWlnaHQgLT0gMjtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLnNob3dBbmNob3JSZWN0KHJlY3QpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0VmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHRoaXMuaW5kZXhCeVZhbHVlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0TGFiZWwodGhpcy5pdGVtc1tpbmRleF0ubGFiZWwpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5pdGVtc1tpbmRleF0udmFsdWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gLTE7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0TGFiZWwodGhpcy5nZXRMYWJlbEZvclVua25vd1ZhbHVlKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0TGFiZWw6IGZ1bmN0aW9uIChsYWJlbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCdidXR0b25fYm9keScpLmlubmVySFRNTCA9IGxhYmVsO1xuICAgICAgICAgICAgICAgIHRoaXMubGFiZWwgPSBsYWJlbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRMYWJlbEZvclVua25vd1ZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5kZXhCeVZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IHRoaXMuaXRlbXNbaV0udmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRJdGVtOiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pdGVtc1tpbmRleF07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2VsZWN0QnlJbmRleDogZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKGluZGV4IDwgdGhpcy5pdGVtcy5sZW5ndGggJiYgdGhpcy5maXJlRXZlbnQoJ3NlbGVjdCcsIGluZGV4KSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLml0ZW1zW2luZGV4XS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRMYWJlbCh0aGlzLml0ZW1zW2luZGV4XS5sYWJlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhDb21ib3gsIFNwbGl0QnV0dG9uKTtcbiAgICB9KSgpO1xuXG4gICAgLy8gdWkvZGlhbG9nLmpzXG4gICAgLy8vaW1wb3J0IGNvcmVcbiAgICAvLy9pbXBvcnQgdWljb3JlXG4gICAgLy8vaW1wb3J0IHVpL21hc2suanNcbiAgICAvLy9pbXBvcnQgdWkvYnV0dG9uLmpzXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgZG9tVXRpbHMgPSBiYWlkdS5lZGl0b3IuZG9tLmRvbVV0aWxzLFxuICAgICAgICAgICAgdWlVdGlscyA9IGJhaWR1LmVkaXRvci51aS51aVV0aWxzLFxuICAgICAgICAgICAgTWFzayA9IGJhaWR1LmVkaXRvci51aS5NYXNrLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZSxcbiAgICAgICAgICAgIEJ1dHRvbiA9IGJhaWR1LmVkaXRvci51aS5CdXR0b24sXG4gICAgICAgICAgICBEaWFsb2cgPSAoYmFpZHUuZWRpdG9yLnVpLkRpYWxvZyA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNzc1J1bGVzID0gb3B0aW9ucy5jc3NSdWxlcztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFvcHRpb25zLmNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jbGFzc05hbWUgPSAnZWR1aS1mb3ItJyArIG5hbWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNzc1J1bGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmNzc1J1bGVzID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLmVkdWktZGVmYXVsdCAuZWR1aS1mb3ItJyArIG5hbWUgKyAnIC5lZHVpLWRpYWxvZy1jb250ZW50ICB7JyArIGNzc1J1bGVzICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMoXG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmV4dGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvUmVzZXQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ub2s6IGZ1bmN0aW9uICgpIHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2FuY2VsOiBmdW5jdGlvbiAoKSB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsb3NlOiBmdW5jdGlvbiAodCwgb2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9rID8gdGhpcy5vbm9rKCkgOiB0aGlzLm9uY2FuY2VsKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+aYr+WQpuaOp+WItmRpYWxvZ+S4reeahHNjcm9sbOS6i+S7tu+8jCDpu5jorqTkuLrkuI3pmLvmraJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2xkU2Nyb2xsOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0RGlhbG9nKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgdmFyIG1vZGFsTWFzaztcbiAgICAgICAgdmFyIGRyYWdNYXNrO1xuICAgICAgICB2YXIgYWN0aXZlRGlhbG9nO1xuICAgICAgICBEaWFsb2cucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHVpTmFtZTogJ2RpYWxvZycsXG4gICAgICAgICAgICBpbml0RGlhbG9nOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWUgPSB0aGlzLmVkaXRvci5vcHRpb25zLnRoZW1lO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNzc1J1bGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmNzc1J1bGUoJ2VkdWktY3VzdG9taXplLScgKyB0aGlzLm5hbWUgKyAnLXN0eWxlJywgdGhpcy5jc3NSdWxlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuaW5pdFVJQmFzZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMubW9kYWxNYXNrID1cbiAgICAgICAgICAgICAgICAgICAgbW9kYWxNYXNrIHx8XG4gICAgICAgICAgICAgICAgICAgIChtb2RhbE1hc2sgPSBuZXcgTWFzayh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWRpYWxvZy1tb2RhbG1hc2snLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZURpYWxvZyAmJiBhY3RpdmVEaWFsb2cuY2xvc2UoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgdGhpcy5kcmFnTWFzayA9XG4gICAgICAgICAgICAgICAgICAgIGRyYWdNYXNrIHx8XG4gICAgICAgICAgICAgICAgICAgIChkcmFnTWFzayA9IG5ldyBNYXNrKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZGlhbG9nLWRyYWdtYXNrJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZW1lOiB0aGVtZVxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZUJ1dHRvbiA9IG5ldyBCdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWRpYWxvZy1jbG9zZWJ1dHRvbicsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBtZS5jbG9zZURpYWxvZyxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWU6IHRoZW1lLFxuICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5jbG9zZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZnVsbHNjcmVlbiAmJiB0aGlzLmluaXRSZXNpemVFdmVudCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYnV0dG9ucykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYnV0dG9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEodGhpcy5idXR0b25zW2ldIGluc3RhbmNlb2YgQnV0dG9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uc1tpXSA9IG5ldyBCdXR0b24oXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmV4dGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uc1tpXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3I6IHRoaXMuZWRpdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbml0UmVzaXplRXZlbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuXG4gICAgICAgICAgICAgICAgZG9tVXRpbHMub24od2luZG93LCAncmVzaXplJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWUuX2hpZGRlbiB8fCBtZS5faGlkZGVuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChtZS5fX3Jlc2l6ZVRpbWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KG1lLl9fcmVzaXplVGltZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbWUuX19yZXNpemVUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLl9fcmVzaXplVGltZXIgPSBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlhbG9nV3JhcE5vZGUgPSBtZS5nZXREb20oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50Tm9kZSA9IG1lLmdldERvbSgnY29udGVudCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdyYXBSZWN0ID0gVUUudWkudWlVdGlscy5nZXRDbGllbnRSZWN0KGRpYWxvZ1dyYXBOb2RlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50UmVjdCA9IFVFLnVpLnVpVXRpbHMuZ2V0Q2xpZW50UmVjdChjb250ZW50Tm9kZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdnBSZWN0ID0gdWlVdGlscy5nZXRWaWV3cG9ydFJlY3QoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudE5vZGUuc3R5bGUud2lkdGggPSB2cFJlY3Qud2lkdGggLSB3cmFwUmVjdC53aWR0aCArIGNvbnRlbnRSZWN0LndpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnROb2RlLnN0eWxlLmhlaWdodCA9IHZwUmVjdC5oZWlnaHQgLSB3cmFwUmVjdC5oZWlnaHQgKyBjb250ZW50UmVjdC5oZWlnaHQgKyAncHgnO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2dXcmFwTm9kZS5zdHlsZS53aWR0aCA9IHZwUmVjdC53aWR0aCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2dXcmFwTm9kZS5zdHlsZS5oZWlnaHQgPSB2cFJlY3QuaGVpZ2h0ICsgJ3B4JztcblxuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZmlyZUV2ZW50KCdyZXNpemUnKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmaXRTaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBvcEJvZHlFbCA9IHRoaXMuZ2V0RG9tKCdib2R5Jyk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBpZiAoIShiYWlkdS5lZGl0b3IuYnJvd3Nlci5pZSAmJiBiYWlkdS5lZGl0b3IuYnJvd3Nlci52ZXJzaW9uID09IDcpKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgdWlVdGlscy5yZW1vdmVTdHlsZShwb3BCb2R5RWwsICd3aWR0aCcpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIHVpVXRpbHMucmVtb3ZlU3R5bGUocG9wQm9keUVsLCAnaGVpZ2h0Jyk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHNpemUgPSB0aGlzLm1lc3VyZVNpemUoKTtcbiAgICAgICAgICAgICAgICBwb3BCb2R5RWwuc3R5bGUud2lkdGggPSBzaXplLndpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICBwb3BCb2R5RWwuc3R5bGUuaGVpZ2h0ID0gc2l6ZS5oZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgICAgIHJldHVybiBzaXplO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNhZmVTZXRPZmZzZXQ6IGZ1bmN0aW9uIChvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWUgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBlbCA9IG1lLmdldERvbSgpO1xuICAgICAgICAgICAgICAgIHZhciB2cFJlY3QgPSB1aVV0aWxzLmdldFZpZXdwb3J0UmVjdCgpO1xuICAgICAgICAgICAgICAgIHZhciByZWN0ID0gdWlVdGlscy5nZXRDbGllbnRSZWN0KGVsKTtcbiAgICAgICAgICAgICAgICB2YXIgbGVmdCA9IG9mZnNldC5sZWZ0O1xuICAgICAgICAgICAgICAgIGlmIChsZWZ0ICsgcmVjdC53aWR0aCA+IHZwUmVjdC5yaWdodCkge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0ID0gdnBSZWN0LnJpZ2h0IC0gcmVjdC53aWR0aDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHRvcCA9IG9mZnNldC50b3A7XG4gICAgICAgICAgICAgICAgaWYgKHRvcCArIHJlY3QuaGVpZ2h0ID4gdnBSZWN0LmJvdHRvbSkge1xuICAgICAgICAgICAgICAgICAgICB0b3AgPSB2cFJlY3QuYm90dG9tIC0gcmVjdC5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsLnN0eWxlLmxlZnQgPSBNYXRoLm1heChsZWZ0LCAwKSArICdweCc7XG4gICAgICAgICAgICAgICAgZWwuc3R5bGUudG9wID0gTWF0aC5tYXgodG9wLCAwKSArICdweCc7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvd0F0Q2VudGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHZwUmVjdCA9IHVpVXRpbHMuZ2V0Vmlld3BvcnRSZWN0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZnVsbHNjcmVlbikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgpLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvcFNpemUgPSB0aGlzLmZpdFNpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRpdGxlSGVpZ2h0ID0gdGhpcy5nZXREb20oJ3RpdGxlYmFyJykub2Zmc2V0SGVpZ2h0IHwgMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxlZnQgPSB2cFJlY3Qud2lkdGggLyAyIC0gcG9wU2l6ZS53aWR0aCAvIDI7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b3AgPSB2cFJlY3QuaGVpZ2h0IC8gMiAtIChwb3BTaXplLmhlaWdodCAtIHRpdGxlSGVpZ2h0KSAvIDIgLSB0aXRsZUhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBvcEVsID0gdGhpcy5nZXREb20oKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zYWZlU2V0T2Zmc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IE1hdGgubWF4KGxlZnQgfCAwLCAwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogTWF0aC5tYXgodG9wIHwgMCwgMClcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZG9tVXRpbHMuaGFzQ2xhc3MocG9wRWwsICdlZHVpLXN0YXRlLWNlbnRlcmVkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcEVsLmNsYXNzTmFtZSArPSAnIGVkdWktc3RhdGUtY2VudGVyZWQnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpYWxvZ1dyYXBOb2RlID0gdGhpcy5nZXREb20oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnROb2RlID0gdGhpcy5nZXREb20oJ2NvbnRlbnQnKTtcblxuICAgICAgICAgICAgICAgICAgICBkaWFsb2dXcmFwTm9kZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblxuICAgICAgICAgICAgICAgICAgICB2YXIgd3JhcFJlY3QgPSBVRS51aS51aVV0aWxzLmdldENsaWVudFJlY3QoZGlhbG9nV3JhcE5vZGUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFJlY3QgPSBVRS51aS51aVV0aWxzLmdldENsaWVudFJlY3QoY29udGVudE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICBkaWFsb2dXcmFwTm9kZS5zdHlsZS5sZWZ0ID0gJy0xMDAwMDBweCc7XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGVudE5vZGUuc3R5bGUud2lkdGggPSB2cFJlY3Qud2lkdGggLSB3cmFwUmVjdC53aWR0aCArIGNvbnRlbnRSZWN0LndpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgY29udGVudE5vZGUuc3R5bGUuaGVpZ2h0ID0gdnBSZWN0LmhlaWdodCAtIHdyYXBSZWN0LmhlaWdodCArIGNvbnRlbnRSZWN0LmhlaWdodCArICdweCc7XG5cbiAgICAgICAgICAgICAgICAgICAgZGlhbG9nV3JhcE5vZGUuc3R5bGUud2lkdGggPSB2cFJlY3Qud2lkdGggKyAncHgnO1xuICAgICAgICAgICAgICAgICAgICBkaWFsb2dXcmFwTm9kZS5zdHlsZS5oZWlnaHQgPSB2cFJlY3QuaGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgZGlhbG9nV3JhcE5vZGUuc3R5bGUubGVmdCA9IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/kv53lrZjnjq/looPnmoRvdmVyZmxvd+WAvFxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vcmlnaW5hbENvbnRleHQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3dYOiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3dYLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93WTogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLm92ZXJmbG93WVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvd1g6IGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3dYLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93WTogZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvd1lcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3dYID0gJ2hpZGRlbic7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5vdmVyZmxvd1kgPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvd1ggPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvd1kgPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9zaG93KCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0Q29udGVudEh0bWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29udGVudEh0bWwgPSAnJztcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuY29udGVudCA9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50SHRtbCA9IHRoaXMuY29udGVudDtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaWZyYW1lVXJsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRIdG1sID1cbiAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBpZD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pZCArXG4gICAgICAgICAgICAgICAgICAgICAgICAnX2NvbnRtYXNrXCIgY2xhc3M9XCJkaWFsb2djb250bWFza1wiPjwvc3Bhbj48aWZyYW1lIGlkPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlkICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdfaWZyYW1lXCIgY2xhc3M9XCIlJS1pZnJhbWVcIiBoZWlnaHQ9XCIxMDAlXCIgd2lkdGg9XCIxMDAlXCIgZnJhbWVib3JkZXI9XCIwXCIgc3JjPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlmcmFtZVVybCArXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCI+PC9pZnJhbWU+JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnRIdG1sO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldEh0bWxUcGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZm9vdEh0bWwgPSAnJztcblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmJ1dHRvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJ1ZmYgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmJ1dHRvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZbaV0gPSB0aGlzLmJ1dHRvbnNbaV0ucmVuZGVySHRtbCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvb3RIdG1sID1cbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiJSUtZm9vdFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI19idXR0b25zXCIgY2xhc3M9XCIlJS1idXR0b25zXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmLmpvaW4oJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cIiUlXCI+PGRpdiAnICtcbiAgICAgICAgICAgICAgICAgICAgKCF0aGlzLmZ1bGxzY3JlZW4gPyAnY2xhc3M9XCIlJVwiJyA6ICdjbGFzcz1cIiUlLXdyYXAgZWR1aS1kaWFsb2ctZnVsbHNjcmVlbi1mbGFnXCInKSArXG4gICAgICAgICAgICAgICAgICAgICc+PGRpdiBpZD1cIiMjX2JvZHlcIiBjbGFzcz1cIiUlLWJvZHlcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCIlJS1zaGFkb3dcIj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI190aXRsZWJhclwiIGNsYXNzPVwiJSUtdGl0bGViYXJcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCIlJS1kcmFnaGFuZGxlXCIgb25tb3VzZWRvd249XCIkJC5fb25UaXRsZWJhck1vdXNlRG93bihldmVudCwgdGhpcyk7XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cIiUlLWNhcHRpb25cIj4nICtcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMudGl0bGUgfHwgJycpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlQnV0dG9uLnJlbmRlckh0bWwoKSArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI19jb250ZW50XCIgY2xhc3M9XCIlJS1jb250ZW50XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLmF1dG9SZXNldCA/ICcnIDogdGhpcy5nZXRDb250ZW50SHRtbCgpKSArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgZm9vdEh0bWwgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+PC9kaXY+PC9kaXY+J1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcG9zdFJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vIHRvZG86IOS/neaMgeWxheS4rS/orrDkvY/kuIrmrKHlhbPpl63kvY3nva7pgInpoblcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMubW9kYWxNYXNrLmdldERvbSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9kYWxNYXNrLnJlbmRlcigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1vZGFsTWFzay5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5kcmFnTWFzay5nZXREb20oKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYWdNYXNrLnJlbmRlcigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRyYWdNYXNrLmhpZGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLmFkZExpc3RlbmVyKCdzaG93JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBtZS5tb2RhbE1hc2suc2hvdyh0aGlzLmdldERvbSgpLnN0eWxlLnpJbmRleCAtIDIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkTGlzdGVuZXIoJ2hpZGUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLm1vZGFsTWFzay5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYnV0dG9ucykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYnV0dG9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idXR0b25zW2ldLnBvc3RSZW5kZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkb21VdGlscy5vbih3aW5kb3csICdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtZS5pc0hpZGRlbigpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2FmZVNldE9mZnNldCh1aVV0aWxzLmdldENsaWVudFJlY3QobWUuZ2V0RG9tKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvL2hvbGTkvY9zY3JvbGzkuovku7bvvIzpmLLmraJkaWFsb2fnmoTmu5rliqjlvbHlk43pobXpnaJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIGlmKCB0aGlzLmhvbGRTY3JvbGwgKSB7XG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBpZiggIW1lLmlmcmFtZVVybCApIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtZS5pZCArIFwiX2lmcmFtZVwiKSwgIWJyb3dzZXIuZ2Vja28gPyBcIm1vdXNld2hlZWxcIiA6IFwiRE9NTW91c2VTY3JvbGxcIiwgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChlKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgfSApO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdkaWFsb2dhZnRlcnJlc2V0JywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlmcmFtZVdpbmRvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtZS5pZCArIFwiX2lmcmFtZVwiKS5jb250ZW50V2luZG93O1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIGJyb3dzZXIuaWUgKSB7XG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRpbWVyID0gd2luZG93LnNldEludGVydmFsKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKCBpZnJhbWVXaW5kb3cuZG9jdW1lbnQgJiYgaWZyYW1lV2luZG93LmRvY3VtZW50LmJvZHkgKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFySW50ZXJ2YWwoIHRpbWVyICk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKCBpZnJhbWVXaW5kb3cuZG9jdW1lbnQuYm9keSwgIWJyb3dzZXIuZ2Vja28gPyBcIm1vdXNld2hlZWxcIiA6IFwiRE9NTW91c2VTY3JvbGxcIiwgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnByZXZlbnREZWZhdWx0KGUpO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oIGlmcmFtZVdpbmRvdywgIWJyb3dzZXIuZ2Vja28gPyBcIm1vdXNld2hlZWxcIiA6IFwiRE9NTW91c2VTY3JvbGxcIiwgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5wcmV2ZW50RGVmYXVsdChlKTtcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSApO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2hpZGUoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXN1cmVTaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJvZHkgPSB0aGlzLmdldERvbSgnYm9keScpO1xuICAgICAgICAgICAgICAgIHZhciB3aWR0aCA9IHVpVXRpbHMuZ2V0Q2xpZW50UmVjdCh0aGlzLmdldERvbSgnY29udGVudCcpKS53aWR0aDtcbiAgICAgICAgICAgICAgICB2YXIgZGlhbG9nQm9keVN0eWxlID0gYm9keS5zdHlsZTtcbiAgICAgICAgICAgICAgICBkaWFsb2dCb2R5U3R5bGUud2lkdGggPSB3aWR0aDtcbiAgICAgICAgICAgICAgICByZXR1cm4gdWlVdGlscy5nZXRDbGllbnRSZWN0KGJvZHkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9vblRpdGxlYmFyTW91c2VEb3duOiBmdW5jdGlvbiAoZXZ0LCBlbCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRyYWdnYWJsZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmVjdDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZwUmVjdCA9IHVpVXRpbHMuZ2V0Vmlld3BvcnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHVpVXRpbHMuc3RhcnREcmFnKGV2dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgb25kcmFnc3RhcnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0ID0gdWlVdGlscy5nZXRDbGllbnRSZWN0KG1lLmdldERvbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5nZXREb20oJ2NvbnRtYXNrJykuc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5kcmFnTWFzay5zaG93KG1lLmdldERvbSgpLnN0eWxlLnpJbmRleCAtIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uZHJhZ21vdmU6IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxlZnQgPSByZWN0LmxlZnQgKyB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0b3AgPSByZWN0LnRvcCArIHk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuc2FmZVNldE9mZnNldCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IGxlZnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdG9wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25kcmFnc3RvcDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmdldERvbSgnY29udG1hc2snKS5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlQ2xhc3NlcyhtZS5nZXREb20oKSwgWydlZHVpLXN0YXRlLWNlbnRlcmVkJ10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmRyYWdNYXNrLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2NvbnRlbnQnKS5pbm5lckhUTUwgPSB0aGlzLmdldENvbnRlbnRIdG1sKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2RpYWxvZ2FmdGVycmVzZXQnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfc2hvdzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9oaWRkZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oKS5zdHlsZS5kaXNwbGF5ID0gJyc7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/opoHpq5jov4fnvJbovpHlmajnmoR6aW5keGUg5Li76KaB5piv5by556qX5bGC57qn6KaB6auYZHVhbmp1biDkv67mlLnlop7liqAzMDAwXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLmNvbnRhaW5lci5zdHlsZS56SW5kZXggJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmdldERvbSgpLnN0eWxlLnpJbmRleCA9IHRoaXMuZWRpdG9yLmNvbnRhaW5lci5zdHlsZS56SW5kZXggKiAxICsgMzAwMCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hpZGRlbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpcmVFdmVudCgnc2hvdycpO1xuICAgICAgICAgICAgICAgICAgICBiYWlkdS5lZGl0b3IudWkudWlVdGlscy5nZXRGaXhlZExheWVyKCkuc3R5bGUuekluZGV4ID0gdGhpcy5nZXREb20oKS5zdHlsZS56SW5kZXggLSA0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc0hpZGRlbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9oaWRkZW47XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX2hpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX2hpZGRlbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgd3JhcE5vZGUgPSB0aGlzLmdldERvbSgpO1xuICAgICAgICAgICAgICAgICAgICB3cmFwTm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgICAgICB3cmFwTm9kZS5zdHlsZS56SW5kZXggPSAnJztcbiAgICAgICAgICAgICAgICAgICAgd3JhcE5vZGUuc3R5bGUud2lkdGggPSAnJztcbiAgICAgICAgICAgICAgICAgICAgd3JhcE5vZGUuc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdoaWRlJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9wZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5hdXRvUmVzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/mnInlj6/og73ov5jmsqHmnInmuLLmn5NcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0F0Q2VudGVyKCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaWZyYW1lVXJsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgnaWZyYW1lJykuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXgpIHt9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFjdGl2ZURpYWxvZyA9IHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX29uQ2xvc2VCdXR0b25DbGljazogZnVuY3Rpb24gKGV2dCwgZWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKGZhbHNlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZmlyZUV2ZW50KCdjbG9zZScsIG9rKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgLy/ov5jljp/njq/looNcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZnVsbHNjcmVlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLm92ZXJmbG93WCA9IHRoaXMuX29yaWdpbmFsQ29udGV4dC5odG1sLm92ZXJmbG93WDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5vdmVyZmxvd1kgPSB0aGlzLl9vcmlnaW5hbENvbnRleHQuaHRtbC5vdmVyZmxvd1k7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93WCA9IHRoaXMuX29yaWdpbmFsQ29udGV4dC5ib2R5Lm92ZXJmbG93WDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3dZID0gdGhpcy5fb3JpZ2luYWxDb250ZXh0LmJvZHkub3ZlcmZsb3dZO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXMuX29yaWdpbmFsQ29udGV4dDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9oaWRlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy/plIDmr4Fjb250ZW50XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gdGhpcy5nZXREb20oJ2NvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlmcmFtZSA9IHRoaXMuZ2V0RG9tKCdpZnJhbWUnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgaWZyYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZG9jID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudCB8fCBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYyAmJiAoZG9jLmJvZHkuaW5uZXJIVE1MID0gJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhEaWFsb2csIFVJQmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL21lbnVidXR0b24uanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2ltcG9ydCB1aWNvcmVcbiAgICAvLy9pbXBvcnQgdWkvbWVudS5qc1xuICAgIC8vL2ltcG9ydCB1aS9zcGxpdGJ1dHRvbi5qc1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIE1lbnUgPSBiYWlkdS5lZGl0b3IudWkuTWVudSxcbiAgICAgICAgICAgIFNwbGl0QnV0dG9uID0gYmFpZHUuZWRpdG9yLnVpLlNwbGl0QnV0dG9uLFxuICAgICAgICAgICAgTWVudUJ1dHRvbiA9IChiYWlkdS5lZGl0b3IudWkuTWVudUJ1dHRvbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRNZW51QnV0dG9uKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgTWVudUJ1dHRvbi5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBpbml0TWVudUJ1dHRvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdGhpcy51aU5hbWUgPSAnbWVudWJ1dHRvbic7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3B1cCA9IG5ldyBNZW51KHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbXM6IG1lLml0ZW1zLFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IG1lLmNsYXNzTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBtZS5lZGl0b3JcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLmFkZExpc3RlbmVyKCdzaG93JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdCA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5pdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5pdGVtc1tpXS5yZW1vdmVTdGF0ZSgnY2hlY2tlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpc3QuaXRlbXNbaV0udmFsdWUgPT0gbWUuX3ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC5pdGVtc1tpXS5hZGRTdGF0ZSgnY2hlY2tlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBtZS5fdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRTcGxpdEJ1dHRvbigpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldFZhbHVlOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhNZW51QnV0dG9uLCBTcGxpdEJ1dHRvbik7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL211bHRpTWVudS5qc1xuICAgIC8vL2ltcG9ydCBjb3JlXG4gICAgLy8vaW1wb3J0IHVpY29yZVxuICAgIC8vL2NvbW1hbmRzIOihqOaDhVxuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1dGlscyA9IGJhaWR1LmVkaXRvci51dGlscyxcbiAgICAgICAgICAgIFBvcHVwID0gYmFpZHUuZWRpdG9yLnVpLlBvcHVwLFxuICAgICAgICAgICAgU3BsaXRCdXR0b24gPSBiYWlkdS5lZGl0b3IudWkuU3BsaXRCdXR0b24sXG4gICAgICAgICAgICBNdWx0aU1lbnVQb3AgPSAoYmFpZHUuZWRpdG9yLnVpLk11bHRpTWVudVBvcCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRNdWx0aU1lbnUoKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIE11bHRpTWVudVBvcC5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBpbml0TXVsdGlNZW51OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwID0gbmV3IFBvcHVwKHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJycsXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvcjogbWUuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBpZnJhbWVfcmVuZGVyZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBvbnNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pZnJhbWVfcmVuZGVyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlmcmFtZV9yZW5kZXJlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oJ2NvbnRlbnQnKS5pbm5lckhUTUwgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGlmcmFtZSBpZD1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5pZCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdfaWZyYW1lXCIgc3JjPVwiJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmlmcmFtZVVybCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiBmcmFtZWJvcmRlcj1cIjBcIj48L2lmcmFtZT4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5jb250YWluZXIuc3R5bGUuekluZGV4ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmdldERvbSgpLnN0eWxlLnpJbmRleCA9IG1lLmVkaXRvci5jb250YWluZXIuc3R5bGUuekluZGV4ICogMSArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIGNhblNpZGVVcDpmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgLy8gY2FuU2lkZUxlZnQ6ZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLm9uYnV0dG9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd1BvcHVwKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRTcGxpdEJ1dHRvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHV0aWxzLmluaGVyaXRzKE11bHRpTWVudVBvcCwgU3BsaXRCdXR0b24pO1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9zaG9ydGN1dG1lbnUuanNcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgVUkgPSBiYWlkdS5lZGl0b3IudWksXG4gICAgICAgICAgICBVSUJhc2UgPSBVSS5VSUJhc2UsXG4gICAgICAgICAgICB1aVV0aWxzID0gVUkudWlVdGlscyxcbiAgICAgICAgICAgIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgZG9tVXRpbHMgPSBiYWlkdS5lZGl0b3IuZG9tLmRvbVV0aWxzO1xuXG4gICAgICAgIHZhciBhbGxNZW51cyA9IFtdLCAvL+WtmOWCqOaJgOacieW/q+aNt+iPnOWNlVxuICAgICAgICAgICAgdGltZUlELFxuICAgICAgICAgICAgaXNTdWJNZW51U2hvdyA9IGZhbHNlOyAvL+aYr+WQpuacieWtkHBvcOaYvuekulxuXG4gICAgICAgIHZhciBTaG9ydEN1dE1lbnUgPSAoVUkuU2hvcnRDdXRNZW51ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmluaXRTaG9ydEN1dE1lbnUoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgU2hvcnRDdXRNZW51LnBvc3RIaWRlID0gaGlkZUFsbE1lbnU7XG5cbiAgICAgICAgU2hvcnRDdXRNZW51LnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGlzSGlkZGVuOiB0cnVlLFxuICAgICAgICAgICAgU1BBQ0U6IDUsXG4gICAgICAgICAgICBpbml0U2hvcnRDdXRNZW51OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMgfHwgW107XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0SXRlbXMoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRFdmVudCgpO1xuICAgICAgICAgICAgICAgIGFsbE1lbnVzLnB1c2godGhpcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5pdEV2ZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgZG9jID0gbWUuZWRpdG9yLmRvY3VtZW50O1xuXG4gICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZG9jLCAnbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmlzSGlkZGVuID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/mnIlwb3DmmL7npLrlsLHkuI3pmpDol4/lv6vmjbfoj5zljZVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZS5nZXRTdWJNZW51TWFyaygpIHx8IG1lLmV2ZW50VHlwZSA9PSAnY29udGV4dG1lbnUnKSByZXR1cm47XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmbGFnID0gdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbCA9IG1lLmdldERvbSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHd0ID0gZWwub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHQgPSBlbC5vZmZzZXRIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdGFuY2VYID0gd3QgLyAyICsgbWUuU1BBQ0UsIC8v6Led56a75Lit5b+DWOagh+WHhlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RhbmNlWSA9IGh0IC8gMiwgLy/ot53nprvkuK3lv4NZ5qCH5YeGXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeCA9IE1hdGguYWJzKGUuc2NyZWVuWCAtIG1lLmxlZnQpLCAvL+emu+S4reW/g+i3neemu+aoquWdkOagh1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHkgPSBNYXRoLmFicyhlLnNjcmVlblkgLSBtZS50b3ApOyAvL+emu+S4reW/g+i3neemu+e6teWdkOagh1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZUlEKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVJRCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh5ID4gMCAmJiB5IDwgZGlzdGFuY2VZKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNldE9wYWNpdHkoZWwsICcxJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh5ID4gZGlzdGFuY2VZICYmIHkgPCBkaXN0YW5jZVkgKyA3MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5zZXRPcGFjaXR5KGVsLCAnMC41Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHkgPiBkaXN0YW5jZVkgKyA3MCAmJiB5IDwgZGlzdGFuY2VZICsgMTQwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmxhZyAmJiB4ID4gMCAmJiB4IDwgZGlzdGFuY2VYKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLnNldE9wYWNpdHkoZWwsICcxJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh4ID4gZGlzdGFuY2VYICYmIHggPCBkaXN0YW5jZVggKyA3MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5zZXRPcGFjaXR5KGVsLCAnMC41Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh4ID4gZGlzdGFuY2VYICsgNzAgJiYgeCA8IGRpc3RhbmNlWCArIDE0MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vaWVcXGZm5LiLIG1vdXNlb3V05LiN5YeGXG4gICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuY2hyb21lKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKGRvYywgJ21vdXNlb3V0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWxhdGVkVGd0ID0gZS5yZWxhdGVkVGFyZ2V0IHx8IGUudG9FbGVtZW50O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVsYXRlZFRndCA9PSBudWxsIHx8IHJlbGF0ZWRUZ3QudGFnTmFtZSA9PSAnSFRNTCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1lLmVkaXRvci5hZGRMaXN0ZW5lcignYWZ0ZXJoaWRlcG9wJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW1lLmlzSGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc1N1Yk1lbnVTaG93ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluaXRJdGVtczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh1dGlscy5pc0FycmF5KHRoaXMuaXRlbXMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLml0ZW1zLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHRoaXMuaXRlbXNbaV0udG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFVJW2l0ZW1dKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtc1tpXSA9IG5ldyBVSVtpdGVtXSh0aGlzLmVkaXRvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtc1tpXS5jbGFzc05hbWUgKz0gJyBlZHVpLXNob3J0Y3V0c3VibWVudSAnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldE9wYWNpdHk6IGZ1bmN0aW9uIChlbCwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5pZSAmJiBicm93c2VyLnZlcnNpb24gPCA5KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsLnN0eWxlLmZpbHRlciA9ICdhbHBoYShvcGFjaXR5ID0gJyArIHBhcnNlRmxvYXQodmFsdWUpICogMTAwICsgJyk7JztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZS5vcGFjaXR5ID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldFN1Yk1lbnVNYXJrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaXNTdWJNZW51U2hvdyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhciBsYXllckVsZSA9IHVpVXRpbHMuZ2V0Rml4ZWRMYXllcigpO1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ID0gZG9tVXRpbHMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobGF5ZXJFbGUsICdkaXYnLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9tVXRpbHMuaGFzQ2xhc3Mobm9kZSwgJ2VkdWktc2hvcnRjdXRzdWJtZW51IGVkdWktcG9wdXAnKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBub2RlOyAobm9kZSA9IGxpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5zdHlsZS5kaXNwbGF5ICE9ICdub25lJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNTdWJNZW51U2hvdyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU3ViTWVudVNob3c7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvdzogZnVuY3Rpb24gKGUsIGhhc0NvbnRleHRtZW51KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0ge30sXG4gICAgICAgICAgICAgICAgICAgIGVsID0gdGhpcy5nZXREb20oKSxcbiAgICAgICAgICAgICAgICAgICAgZml4ZWRsYXllciA9IHVpVXRpbHMuZ2V0Rml4ZWRMYXllcigpO1xuXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gc2V0UG9zKG9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2Zmc2V0LmxlZnQgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQubGVmdCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9mZnNldC50b3AgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQudG9wID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6JyArIG9mZnNldC5sZWZ0ICsgJ3B4O3RvcDonICsgb2Zmc2V0LnRvcCArICdweDsnO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNldFBvc0J5Q3h0TWVudShtZW51KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWVudS50YWdOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZW51ID0gbWVudS5nZXREb20oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQubGVmdCA9IHBhcnNlSW50KG1lbnUuc3R5bGUubGVmdCk7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldC50b3AgPSBwYXJzZUludChtZW51LnN0eWxlLnRvcCk7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldC50b3AgLT0gZWwub2Zmc2V0SGVpZ2h0ICsgMTU7XG4gICAgICAgICAgICAgICAgICAgIHNldFBvcyhvZmZzZXQpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG1lLmV2ZW50VHlwZSA9IGUudHlwZTtcbiAgICAgICAgICAgICAgICBlbC5zdHlsZS5jc3NUZXh0ID0gJ2Rpc3BsYXk6YmxvY2s7bGVmdDotOTk5OXB4JztcblxuICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgPT0gJ2NvbnRleHRtZW51JyAmJiBoYXNDb250ZXh0bWVudSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWVudSA9IGRvbVV0aWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKGZpeGVkbGF5ZXIsICdkaXYnLCAnZWR1aS1jb250ZXh0bWVudScpWzBdO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWVudSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0UG9zQnlDeHRNZW51KG1lbnUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZWRpdG9yLmFkZExpc3RlbmVyKCdhZnRlcnNob3djb250ZXh0bWVudScsIGZ1bmN0aW9uICh0eXBlLCBtZW51KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UG9zQnlDeHRNZW51KG1lbnUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSB1aVV0aWxzLmdldFZpZXdwb3J0T2Zmc2V0QnlFdmVudChlKTtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LnRvcCAtPSBlbC5vZmZzZXRIZWlnaHQgKyBtZS5TUEFDRTtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LmxlZnQgKz0gbWUuU1BBQ0UgKyAyMDtcbiAgICAgICAgICAgICAgICAgICAgc2V0UG9zKG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLnNldE9wYWNpdHkoZWwsIDAuMik7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbWUuaXNIaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBtZS5sZWZ0ID0gZS5zY3JlZW5YICsgZWwub2Zmc2V0V2lkdGggLyAyIC0gbWUuU1BBQ0U7XG4gICAgICAgICAgICAgICAgbWUudG9wID0gZS5zY3JlZW5ZIC0gZWwub2Zmc2V0SGVpZ2h0IC8gMiAtIG1lLlNQQUNFO1xuXG4gICAgICAgICAgICAgICAgaWYgKG1lLmVkaXRvcikge1xuICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZS56SW5kZXggPSBtZS5lZGl0b3IuY29udGFpbmVyLnN0eWxlLnpJbmRleCAqIDEgKyAxMDtcbiAgICAgICAgICAgICAgICAgICAgZml4ZWRsYXllci5zdHlsZS56SW5kZXggPSBlbC5zdHlsZS56SW5kZXggLSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0RG9tKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmlzSGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodGhpcy5pdGVtcykpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGl0ZW07IChpdGVtID0gdGhpcy5pdGVtc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnBvc3RSZW5kZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJ1ZmY7XG4gICAgICAgICAgICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodGhpcy5pdGVtcykpIHtcbiAgICAgICAgICAgICAgICAgICAgYnVmZiA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZbaV0gPSB0aGlzLml0ZW1zW2ldLnJlbmRlckh0bWwoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBidWZmID0gYnVmZi5qb2luKCcnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBidWZmID0gdGhpcy5pdGVtcztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjXCIgY2xhc3M9XCIlJSBlZHVpLXRvb2xiYXJcIiBkYXRhLXNyYz1cInNob3J0Y3V0bWVudVwiIG9ubW91c2Vkb3duPVwicmV0dXJuIGZhbHNlO1wiIG9uc2VsZWN0c3RhcnQ9XCJyZXR1cm4gZmFsc2U7XCIgPicgK1xuICAgICAgICAgICAgICAgICAgICBidWZmICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHV0aWxzLmluaGVyaXRzKFNob3J0Q3V0TWVudSwgVUlCYXNlKTtcblxuICAgICAgICBmdW5jdGlvbiBoaWRlQWxsTWVudShlKSB7XG4gICAgICAgICAgICB2YXIgdGd0ID0gZS50YXJnZXQgfHwgZS5zcmNFbGVtZW50LFxuICAgICAgICAgICAgICAgIGN1ciA9IGRvbVV0aWxzLmZpbmRQYXJlbnQoXG4gICAgICAgICAgICAgICAgICAgIHRndCxcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkb21VdGlscy5oYXNDbGFzcyhub2RlLCAnZWR1aS1zaG9ydGN1dG1lbnUnKSB8fCBkb21VdGlscy5oYXNDbGFzcyhub2RlLCAnZWR1aS1wb3B1cCcpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgaWYgKCFjdXIpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbWVudTsgKG1lbnUgPSBhbGxNZW51c1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lbnUuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGRvbVV0aWxzLm9uKGRvY3VtZW50LCAnbW91c2Vkb3duJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGhpZGVBbGxNZW51KGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICBkb21VdGlscy5vbih3aW5kb3csICdzY3JvbGwnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgaGlkZUFsbE1lbnUoZSk7XG4gICAgICAgIH0pO1xuICAgIH0pKCk7XG5cbiAgICAvLyB1aS9icmVha2xpbmUuanNcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlLFxuICAgICAgICAgICAgQnJlYWtsaW5lID0gKGJhaWR1LmVkaXRvci51aS5CcmVha2xpbmUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0U2VwYXJhdG9yKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgQnJlYWtsaW5lLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIHVpTmFtZTogJ0JyZWFrbGluZScsXG4gICAgICAgICAgICBpbml0U2VwYXJhdG9yOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0SHRtbFRwbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnPGJyLz4nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB1dGlscy5pbmhlcml0cyhCcmVha2xpbmUsIFVJQmFzZSk7XG4gICAgfSkoKTtcblxuICAgIC8vIHVpL21lc3NhZ2UuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2ltcG9ydCB1aWNvcmVcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHMsXG4gICAgICAgICAgICBkb21VdGlscyA9IGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHMsXG4gICAgICAgICAgICBVSUJhc2UgPSBiYWlkdS5lZGl0b3IudWkuVUlCYXNlLFxuICAgICAgICAgICAgTWVzc2FnZSA9IChiYWlkdS5lZGl0b3IudWkuTWVzc2FnZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRNZXNzYWdlKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBNZXNzYWdlLnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGluaXRNZXNzYWdlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0SHRtbFRwbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNcIiBjbGFzcz1cImVkdWktbWVzc2FnZSAlJVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAnIDxkaXYgaWQ9XCIjI19jbG9zZXJcIiBjbGFzcz1cImVkdWktbWVzc2FnZS1jbG9zZXJcIj7DlzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnIDxkaXYgaWQ9XCIjI19ib2R5XCIgY2xhc3M9XCJlZHVpLW1lc3NhZ2UtYm9keSBlZHVpLW1lc3NhZ2UtdHlwZS1pbmZvXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICcgPGlmcmFtZSBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6LTE7bGVmdDowO3RvcDowO2JhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1wiIGZyYW1lYm9yZGVyPVwiMFwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIiBzcmM9XCJhYm91dDpibGFua1wiPjwvaWZyYW1lPicgK1xuICAgICAgICAgICAgICAgICAgICAnIDxkaXYgY2xhc3M9XCJlZHVpLXNoYWRvd1wiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnIDxkaXYgaWQ9XCIjI19jb250ZW50XCIgY2xhc3M9XCJlZHVpLW1lc3NhZ2UtY29udGVudFwiPicgK1xuICAgICAgICAgICAgICAgICAgICAnICA8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJyA8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc2V0OiBmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcztcbiAgICAgICAgICAgICAgICBpZiAoIW9wdC5rZWVwc2hvdykge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgICAgICAgICAgICAgIG1lLnRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIG9wdC50aW1lb3V0IHx8IDQwMDApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIG9wdC5jb250ZW50ICE9PSB1bmRlZmluZWQgJiYgbWUuc2V0Q29udGVudChvcHQuY29udGVudCk7XG4gICAgICAgICAgICAgICAgb3B0LnR5cGUgIT09IHVuZGVmaW5lZCAmJiBtZS5zZXRUeXBlKG9wdC50eXBlKTtcblxuICAgICAgICAgICAgICAgIG1lLnNob3coKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwb3N0UmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1lID0gdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VyID0gdGhpcy5nZXREb20oJ2Nsb3NlcicpO1xuICAgICAgICAgICAgICAgIGNsb3NlciAmJlxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihjbG9zZXIsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0Q29udGVudDogZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgnY29udGVudCcpLmlubmVySFRNTCA9IGNvbnRlbnQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0VHlwZTogZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgICAgICB0eXBlID0gdHlwZSB8fCAnaW5mbyc7XG4gICAgICAgICAgICAgICAgdmFyIGJvZHkgPSB0aGlzLmdldERvbSgnYm9keScpO1xuICAgICAgICAgICAgICAgIGJvZHkuY2xhc3NOYW1lID0gYm9keS5jbGFzc05hbWUucmVwbGFjZSgvZWR1aS1tZXNzYWdlLXR5cGUtW1xcdy1dKy8sICdlZHVpLW1lc3NhZ2UtdHlwZS0nICsgdHlwZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0Q29udGVudDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldERvbSgnY29udGVudCcpLmlubmVySFRNTDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRUeXBlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFyciA9IHRoaXMuZ2V0RG9tKCdib2R5JykubWF0Y2goL2VkdWktbWVzc2FnZS10eXBlLShbXFx3LV0rKS8pO1xuICAgICAgICAgICAgICAgIHJldHVybiBhcnIgPyBhcnJbMV0gOiAnJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZXREb20oKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRvbSA9IHRoaXMuZ2V0RG9tKCk7XG4gICAgICAgICAgICAgICAgaWYgKGRvbSkge1xuICAgICAgICAgICAgICAgICAgICBkb20uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgZG9tLnBhcmVudE5vZGUgJiYgZG9tLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZG9tKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoTWVzc2FnZSwgVUlCYXNlKTtcbiAgICB9KSgpO1xuXG4gICAgLy8gYWRhcHRlci9lZGl0b3J1aS5qc1xuICAgIC8vdWnot5/nvJbovpHlmajnmoTpgILphY3lsaRcbiAgICAvL+mCo+S4quaMiemSruW8ueWHuuaYr2RpYWxvZ++8jOaYr+S4i+aLieetkOetiemDveaYr+WcqOi/meS4qmpz5Lit6YWN572uXG4gICAgLy/oh6rlt7HlhpnnmoR1aeS5n+imgeWcqOi/memHjOmFjee9ru+8jOaUvuWIsGJhaWR1LmVkaXRvci51aeS4i+i+ue+8jOW9k+e8lui+keWZqOWunuS+i+WMlueahOaXtuWAmeS8muagueaNrnVlZGl0b3IuY29uZmln5Lit55qEdG9vbGJhcnPmib7liLDnm7jlupTnmoTov5vooYzlrp7kvovljJZcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdXRpbHMgPSBiYWlkdS5lZGl0b3IudXRpbHM7XG4gICAgICAgIHZhciBlZGl0b3J1aSA9IGJhaWR1LmVkaXRvci51aTtcbiAgICAgICAgdmFyIF9EaWFsb2cgPSBlZGl0b3J1aS5EaWFsb2c7XG4gICAgICAgIGVkaXRvcnVpLmJ1dHRvbnMgPSB7fTtcblxuICAgICAgICBlZGl0b3J1aS5EaWFsb2cgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIGRpYWxvZyA9IG5ldyBfRGlhbG9nKG9wdGlvbnMpO1xuICAgICAgICAgICAgZGlhbG9nLmFkZExpc3RlbmVyKCdoaWRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChkaWFsb2cuZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlZGl0b3IgPSBkaWFsb2cuZWRpdG9yO1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuZ2Vja28pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgeSA9IGVkaXRvci53aW5kb3cuc2Nyb2xsWSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeCA9IGVkaXRvci53aW5kb3cuc2Nyb2xsWDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuYm9keS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci53aW5kb3cuc2Nyb2xsVG8oeCwgeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleCkge31cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBkaWFsb2c7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy/mi4bliLDnp4HmnInphY3nva7ph4zovrnkuoYgYnkgZHVhbmp1blxuICAgICAgICB2YXIgaWZyYW1lVXJsTWFwID0ge307XG4gICAgICAgIC8v5Li65bel5YW35qCP5re75Yqg5oyJ6ZKu77yM5Lul5LiL6YO95piv57uf5LiA55qE5oyJ6ZKu6Kem5Y+R5ZG95Luk77yM5omA5Lul5YaZ5Zyo5LiA6LW3XG4gICAgICAgIHZhciBidG5DbWRzID0gW1xuICAgICAgICAgICAgJ3VuZG8nLFxuICAgICAgICAgICAgJ3JlZG8nLFxuICAgICAgICAgICAgJ2Zvcm1hdG1hdGNoJyxcbiAgICAgICAgICAgICdib2xkJyxcbiAgICAgICAgICAgICdpdGFsaWMnLFxuICAgICAgICAgICAgJ3VuZGVybGluZScsXG4gICAgICAgICAgICAnZm9udGJvcmRlcicsXG4gICAgICAgICAgICAndG91cHBlcmNhc2UnLFxuICAgICAgICAgICAgJ3RvbG93ZXJjYXNlJyxcbiAgICAgICAgICAgICdzdHJpa2V0aHJvdWdoJyxcbiAgICAgICAgICAgICdzdWJzY3JpcHQnLFxuICAgICAgICAgICAgJ3N1cGVyc2NyaXB0JyxcbiAgICAgICAgICAgICdzb3VyY2UnLFxuICAgICAgICAgICAgJ2luZGVudCcsXG4gICAgICAgICAgICAnb3V0ZGVudCcsXG4gICAgICAgICAgICAnYmxvY2txdW90ZScsXG4gICAgICAgICAgICAncGFzdGVwbGFpbicsXG4gICAgICAgICAgICAncGFnZWJyZWFrJyxcbiAgICAgICAgICAgICdzZWxlY3RhbGwnLFxuICAgICAgICAgICAgJ3ByaW50JyxcbiAgICAgICAgICAgICdob3Jpem9udGFsJyxcbiAgICAgICAgICAgICdyZW1vdmVmb3JtYXQnLFxuICAgICAgICAgICAgJ3RpbWUnLFxuICAgICAgICAgICAgJ2RhdGUnLFxuICAgICAgICAgICAgJ3VubGluaycsXG4gICAgICAgICAgICAnaW5zZXJ0cGFyYWdyYXBoYmVmb3JldGFibGUnLFxuICAgICAgICAgICAgJ2luc2VydHJvdycsXG4gICAgICAgICAgICAnaW5zZXJ0Y29sJyxcbiAgICAgICAgICAgICdtZXJnZXJpZ2h0JyxcbiAgICAgICAgICAgICdtZXJnZWRvd24nLFxuICAgICAgICAgICAgJ2RlbGV0ZXJvdycsXG4gICAgICAgICAgICAnZGVsZXRlY29sJyxcbiAgICAgICAgICAgICdzcGxpdHRvcm93cycsXG4gICAgICAgICAgICAnc3BsaXR0b2NvbHMnLFxuICAgICAgICAgICAgJ3NwbGl0dG9jZWxscycsXG4gICAgICAgICAgICAnbWVyZ2VjZWxscycsXG4gICAgICAgICAgICAnZGVsZXRldGFibGUnLFxuICAgICAgICAgICAgJ2RyYWZ0cydcbiAgICAgICAgXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IGJ0bkNtZHNbaSsrXSk7ICkge1xuICAgICAgICAgICAgY2kgPSBjaS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgZWRpdG9ydWlbY2ldID0gKGZ1bmN0aW9uIChjbWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdWkgPSBuZXcgZWRpdG9ydWkuQnV0dG9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLScgKyBjbWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogZWRpdG9yLm9wdGlvbnMubGFiZWxNYXBbY21kXSB8fCBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAuJyArIGNtZCkgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKGNtZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IGVkaXRvci5vcHRpb25zLnRoZW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd1RleHQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBlZGl0b3J1aS5idXR0b25zW2NtZF0gPSB1aTtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAodHlwZSwgY2F1c2VCeVVpLCB1aVJlYWR5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoY21kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldENoZWNrZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXVpUmVhZHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRDaGVja2VkKHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdWk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pKGNpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8v5riF6Zmk5paH5qGjXG4gICAgICAgIGVkaXRvcnVpLmNsZWFyZG9jID0gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLkJ1dHRvbih7XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1mb3ItY2xlYXJkb2MnLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBlZGl0b3Iub3B0aW9ucy5sYWJlbE1hcC5jbGVhcmRvYyB8fCBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAuY2xlYXJkb2MnKSB8fCAnJyxcbiAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgb25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlybShlZGl0b3IuZ2V0TGFuZygnY29uZmlybUNsZWFyJykpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZXhlY0NvbW1hbmQoJ2NsZWFyZG9jJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbJ2NsZWFyZG9jJ10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnY2xlYXJkb2MnKSA9PSAtMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICAvL+aOkueJiO+8jOWbvueJh+aOkueJiO+8jOaWh+Wtl+aWueWQkVxuICAgICAgICB2YXIgdHlwZXNldCA9IHtcbiAgICAgICAgICAgIGp1c3RpZnk6IFsnbGVmdCcsICdyaWdodCcsICdjZW50ZXInLCAnanVzdGlmeSddLFxuICAgICAgICAgICAgaW1hZ2VmbG9hdDogWydub25lJywgJ2xlZnQnLCAnY2VudGVyJywgJ3JpZ2h0J10sXG4gICAgICAgICAgICBkaXJlY3Rpb25hbGl0eTogWydsdHInLCAncnRsJ11cbiAgICAgICAgfTtcblxuICAgICAgICBmb3IgKHZhciBwIGluIHR5cGVzZXQpIHtcbiAgICAgICAgICAgIChmdW5jdGlvbiAoY21kLCB2YWwpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHZhbFtpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoY21kMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWlbY21kLnJlcGxhY2UoJ2Zsb2F0JywgJycpICsgY21kMl0gPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLkJ1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLScgKyBjbWQucmVwbGFjZSgnZmxvYXQnLCAnJykgKyBjbWQyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5vcHRpb25zLmxhYmVsTWFwW2NtZC5yZXBsYWNlKCdmbG9hdCcsICcnKSArIGNtZDJdIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAuJyArIGNtZC5yZXBsYWNlKCdmbG9hdCcsICcnKSArIGNtZDIpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IGVkaXRvci5vcHRpb25zLnRoZW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZXhlY0NvbW1hbmQoY21kLCBjbWQyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbY21kXSA9IHVpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKHR5cGUsIGNhdXNlQnlVaSwgdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoY21kKSA9PSAtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldENoZWNrZWQoZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKGNtZCkgPT0gY21kMiAmJiAhdWlSZWFkeSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSkoY2kpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKHAsIHR5cGVzZXRbcF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy/lrZfkvZPpopzoibLlkozog4zmma/popzoibJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSBbJ2JhY2tjb2xvcicsICdmb3JlY29sb3InXVtpKytdKTsgKSB7XG4gICAgICAgICAgICBlZGl0b3J1aVtjaV0gPSAoZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5Db2xvckJ1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWZvci0nICsgY21kLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdkZWZhdWx0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBlZGl0b3Iub3B0aW9ucy5sYWJlbE1hcFtjbWRdIHx8IGVkaXRvci5nZXRMYW5nKCdsYWJlbE1hcC4nICsgY21kKSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvcjogZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25waWNrY29sb3I6IGZ1bmN0aW9uICh0LCBjb2xvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZChjbWQsIGNvbG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbnBpY2tub2NvbG9yOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKGNtZCwgJ2RlZmF1bHQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENvbG9yKCd0cmFuc3BhcmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29sb3IgPSAnZGVmYXVsdCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgb25idXR0b25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZChjbWQsIHRoaXMuY29sb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1tjbWRdID0gdWk7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKGNtZCkgPT0gLTEpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KShjaSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGlhbG9nQnRucyA9IHtcbiAgICAgICAgICAgIG5vT2s6IFsnc2VhcmNocmVwbGFjZScsICdoZWxwJywgJ3NwZWNoYXJzJywgJ3dlYmFwcCcsICdwcmV2aWV3J10sXG4gICAgICAgICAgICBvazogW1xuICAgICAgICAgICAgICAgICdhdHRhY2htZW50JyxcbiAgICAgICAgICAgICAgICAnYW5jaG9yJyxcbiAgICAgICAgICAgICAgICAnbGluaycsXG4gICAgICAgICAgICAgICAgJ2luc2VydGltYWdlJyxcbiAgICAgICAgICAgICAgICAnbWFwJyxcbiAgICAgICAgICAgICAgICAnZ21hcCcsXG4gICAgICAgICAgICAgICAgJ2luc2VydGZyYW1lJyxcbiAgICAgICAgICAgICAgICAnd29yZGltYWdlJyxcbiAgICAgICAgICAgICAgICAnaW5zZXJ0dmlkZW8nLFxuICAgICAgICAgICAgICAgICdpbnNlcnRmcmFtZScsXG4gICAgICAgICAgICAgICAgJ2VkaXR0aXAnLFxuICAgICAgICAgICAgICAgICdlZGl0dGFibGUnLFxuICAgICAgICAgICAgICAgICdlZGl0dGQnLFxuICAgICAgICAgICAgICAgICdzY3Jhd2wnLFxuICAgICAgICAgICAgICAgICd0ZW1wbGF0ZScsXG4gICAgICAgICAgICAgICAgJ211c2ljJyxcbiAgICAgICAgICAgICAgICAnYmFja2dyb3VuZCcsXG4gICAgICAgICAgICAgICAgJ2NoYXJ0cydcbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcblxuICAgICAgICBmb3IgKHZhciBwIGluIGRpYWxvZ0J0bnMpIHtcbiAgICAgICAgICAgIChmdW5jdGlvbiAodHlwZSwgdmFscykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdmFsc1tpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vdG9kbyBvcGVyYeS4i+WtmOWcqOmXrumimFxuICAgICAgICAgICAgICAgICAgICBpZiAoYnJvd3Nlci5vcGVyYSAmJiBjaSA9PT0gJ3NlYXJjaHJlcGxhY2UnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWlbY21kXSA9IGZ1bmN0aW9uIChlZGl0b3IsIGlmcmFtZVVybCwgdGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZnJhbWVVcmwgPSBpZnJhbWVVcmwgfHwgKGVkaXRvci5vcHRpb25zLmlmcmFtZVVybE1hcCB8fCB7fSlbY21kXSB8fCBpZnJhbWVVcmxNYXBbY21kXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSA9IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwW2NtZF0gfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLicgKyBjbWQpIHx8ICcnO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpYWxvZztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+ayoeaciWlmcmFtZVVybOS4jeWIm+W7umRpYWxvZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZnJhbWVVcmwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nID0gbmV3IGVkaXRvcnVpLkRpYWxvZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLmV4dGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmcmFtZVVybDogZWRpdG9yLnVpLm1hcFVybChpZnJhbWVVcmwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3I6IGVkaXRvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1mb3ItJyArIGNtZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2xkU2Nyb2xsOiBjbWQgPT09ICdpbnNlcnRpbWFnZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxzY3JlZW46IC9jaGFydHN8cHJldmlldy8udGVzdChjbWQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZURpYWxvZzogZWRpdG9yLmdldExhbmcoJ2Nsb3NlRGlhbG9nJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUgPT0gJ29rJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktb2tidXR0b24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBlZGl0b3IuZ2V0TGFuZygnb2snKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3I6IGVkaXRvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZy5jbG9zZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktY2FuY2VsYnV0dG9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogZWRpdG9yLmdldExhbmcoJ2NhbmNlbCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvcjogZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nLmNsb3NlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDoge31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudWkuX2RpYWxvZ3NbY21kICsgJ0RpYWxvZyddID0gZGlhbG9nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5CdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWZvci0nICsgY21kLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkaWFsb2cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGNtZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICd3b3JkaW1hZ2UnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGltYWdlcyA9IGVkaXRvci5leGVjQ29tbWFuZCgnd29yZGltYWdlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1hZ2VzICYmIGltYWdlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2cucmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nLm9wZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzY3Jhd2wnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnc2NyYXdsJykgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2cucmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nLm9wZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2cucmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2cub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlbWU6IGVkaXRvci5vcHRpb25zLnRoZW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbWQgPT0gJ3NjcmF3bCcgJiYgZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdzY3Jhd2wnKSA9PSAtMSkgfHwgY21kID09ICdjaGFydHMnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1tjbWRdID0gdWk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5Y+q5a2Y5Zyo5LqO5Y+z6ZSu6I+c5Y2V6ICM5peg5bel5YW35qCP5oyJ6ZKu55qEdWnkuI3pnIDopoHmo4DmtYvnirbmgIFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVuTmVlZENoZWNrU3RhdGUgPSB7IGVkaXR0YWJsZTogMSB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY21kIGluIHVuTmVlZENoZWNrU3RhdGUpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoY21kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVpLmdldERvbSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChzdGF0ZSA9PSAtMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRDaGVja2VkKHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSkoY2kudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkocCwgZGlhbG9nQnRuc1twXSk7XG4gICAgICAgIH1cblxuICAgICAgICBlZGl0b3J1aS5pbnNlcnRjb2RlID0gZnVuY3Rpb24gKGVkaXRvciwgbGlzdCwgdGl0bGUpIHtcbiAgICAgICAgICAgIGxpc3QgPSBlZGl0b3Iub3B0aW9uc1snaW5zZXJ0Y29kZSddIHx8IFtdO1xuICAgICAgICAgICAgdGl0bGUgPSBlZGl0b3Iub3B0aW9ucy5sYWJlbE1hcFsnaW5zZXJ0Y29kZSddIHx8IGVkaXRvci5nZXRMYW5nKCdsYWJlbE1hcC5pbnNlcnRjb2RlJykgfHwgJyc7XG4gICAgICAgICAgICAvLyBpZiAoIWxpc3QubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgaXRlbXMgPSBbXTtcbiAgICAgICAgICAgIHV0aWxzLmVhY2gobGlzdCwgZnVuY3Rpb24gKGtleSwgdmFsKSB7XG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBrZXksXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWwsXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiBlZGl0b3Iub3B0aW9ucy50aGVtZSxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyTGFiZWxIdG1sOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxkaXYgY2xhc3M9XCJlZHVpLWxhYmVsICUlLWxhYmVsXCIgPicgKyAodGhpcy5sYWJlbCB8fCAnJykgKyAnPC9kaXY+JztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5Db21ib3goe1xuICAgICAgICAgICAgICAgIGVkaXRvcjogZWRpdG9yLFxuICAgICAgICAgICAgICAgIGl0ZW1zOiBpdGVtcyxcbiAgICAgICAgICAgICAgICBvbnNlbGVjdDogZnVuY3Rpb24gKHQsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnaW5zZXJ0Y29kZScsIHRoaXMuaXRlbXNbaW5kZXhdLnZhbHVlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uYnV0dG9uY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93UG9wdXAoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICBpbml0VmFsdWU6IHRpdGxlLFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWluc2VydGNvZGUnLFxuICAgICAgICAgICAgICAgIGluZGV4QnlWYWx1ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpOyAoY2kgPSB0aGlzLml0ZW1zW2ldKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNpLnZhbHVlLmluZGV4T2YodmFsdWUpICE9IC0xKSByZXR1cm4gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbJ2luc2VydGNvZGUnXSA9IHVpO1xuICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAodHlwZSwgY2F1c2VCeVVpLCB1aVJlYWR5KSB7XG4gICAgICAgICAgICAgICAgaWYgKCF1aVJlYWR5KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnaW5zZXJ0Y29kZScpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdpbnNlcnRjb2RlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0VmFsdWUodGl0bGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdHJhY2U6MTg3MSBpZeS4i+S7jua6kOeggeaooeW8j+WIh+aNouWbnuadpeaXtu+8jOWtl+S9k+S8muW4puWNleW8leWPt++8jOiAjOS4lOS8muaciemAl+WPt1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgJiYgKHZhbHVlID0gdmFsdWUucmVwbGFjZSgvWydcIl0vZywgJycpLnNwbGl0KCcsJylbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0VmFsdWUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdWk7XG4gICAgICAgIH07XG4gICAgICAgIGVkaXRvcnVpLmZvbnRmYW1pbHkgPSBmdW5jdGlvbiAoZWRpdG9yLCBsaXN0LCB0aXRsZSkge1xuICAgICAgICAgICAgbGlzdCA9IGVkaXRvci5vcHRpb25zWydmb250ZmFtaWx5J10gfHwgW107XG4gICAgICAgICAgICB0aXRsZSA9IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydmb250ZmFtaWx5J10gfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLmZvbnRmYW1pbHknKSB8fCAnJztcbiAgICAgICAgICAgIGlmICghbGlzdC5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaSwgaXRlbXMgPSBbXTsgKGNpID0gbGlzdFtpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBsYW5nTGFiZWwgPSBlZGl0b3IuZ2V0TGFuZygnZm9udGZhbWlseScpW2NpLm5hbWVdIHx8ICcnO1xuICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDoga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZW1lOiBlZGl0b3Iub3B0aW9ucy50aGVtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbmRlckxhYmVsSHRtbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1sYWJlbCAlJS1sYWJlbFwiIHN0eWxlPVwiZm9udC1mYW1pbHk6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxzLnVuaHRtbCh0aGlzLnZhbHVlKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMubGFiZWwgfHwgJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KShjaS5sYWJlbCB8fCBsYW5nTGFiZWwsIGNpLnZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdWkgPSBuZXcgZWRpdG9ydWkuQ29tYm94KHtcbiAgICAgICAgICAgICAgICBlZGl0b3I6IGVkaXRvcixcbiAgICAgICAgICAgICAgICBpdGVtczogaXRlbXMsXG4gICAgICAgICAgICAgICAgb25zZWxlY3Q6IGZ1bmN0aW9uICh0LCBpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZXhlY0NvbW1hbmQoJ0ZvbnRGYW1pbHknLCB0aGlzLml0ZW1zW2luZGV4XS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbmJ1dHRvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd1BvcHVwKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICAgICAgaW5pdFZhbHVlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWZvci1mb250ZmFtaWx5JyxcbiAgICAgICAgICAgICAgICBpbmRleEJ5VmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gdGhpcy5pdGVtc1tpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaS52YWx1ZS5pbmRleE9mKHZhbHVlKSAhPSAtMSkgcmV0dXJuIGk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBlZGl0b3J1aS5idXR0b25zWydmb250ZmFtaWx5J10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKHR5cGUsIGNhdXNlQnlVaSwgdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgIGlmICghdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoJ0ZvbnRGYW1pbHknKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSgnRm9udEZhbWlseScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy90cmFjZToxODcxIGll5LiL5LuO5rqQ56CB5qih5byP5YiH5o2i5Zue5p2l5pe277yM5a2X5L2T5Lya5bim5Y2V5byV5Y+377yM6ICM5LiU5Lya5pyJ6YCX5Y+3XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSAmJiAodmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9bJ1wiXS9nLCAnJykuc3BsaXQoJywnKVswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRWYWx1ZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICBlZGl0b3J1aS5mb250c2l6ZSA9IGZ1bmN0aW9uIChlZGl0b3IsIGxpc3QsIHRpdGxlKSB7XG4gICAgICAgICAgICB0aXRsZSA9IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydmb250c2l6ZSddIHx8IGVkaXRvci5nZXRMYW5nKCdsYWJlbE1hcC5mb250c2l6ZScpIHx8ICcnO1xuICAgICAgICAgICAgbGlzdCA9IGxpc3QgfHwgZWRpdG9yLm9wdGlvbnNbJ2ZvbnRzaXplJ10gfHwgW107XG4gICAgICAgICAgICBpZiAoIWxpc3QubGVuZ3RoKSByZXR1cm47XG4gICAgICAgICAgICB2YXIgaXRlbXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzaXplID0gbGlzdFtpXSArICdweCc7XG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBzaXplLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgdGhlbWU6IGVkaXRvci5vcHRpb25zLnRoZW1lLFxuICAgICAgICAgICAgICAgICAgICByZW5kZXJMYWJlbEh0bWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlZHVpLWxhYmVsICUlLWxhYmVsXCIgc3R5bGU9XCJsaW5lLWhlaWdodDoxO2ZvbnQtc2l6ZTonICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZhbHVlICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMubGFiZWwgfHwgJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLkNvbWJveCh7XG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgaXRlbXM6IGl0ZW1zLFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICBpbml0VmFsdWU6IChsaXN0WzNdIHx8IDE0KSArICdweCcsIC8vZHVhbmp1buWIneWni+WAvOWbuuWumuS4gOS4quaVsOWAvFxuICAgICAgICAgICAgICAgIG9uc2VsZWN0OiBmdW5jdGlvbiAodCwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKCdGb250U2l6ZScsIHRoaXMuaXRlbXNbaW5kZXhdLnZhbHVlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uYnV0dG9uY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93UG9wdXAoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWZvbnRzaXplJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBlZGl0b3J1aS5idXR0b25zWydmb250c2l6ZSddID0gdWk7XG4gICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICh0eXBlLCBjYXVzZUJ5VWksIHVpUmVhZHkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXVpUmVhZHkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdGb250U2l6ZScpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0VmFsdWUoZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdGb250U2l6ZScpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGVkaXRvcnVpLnBhcmFncmFwaCA9IGZ1bmN0aW9uIChlZGl0b3IsIGxpc3QsIHRpdGxlKSB7XG4gICAgICAgICAgICB0aXRsZSA9IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydwYXJhZ3JhcGgnXSB8fCBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAucGFyYWdyYXBoJykgfHwgJyc7XG4gICAgICAgICAgICBsaXN0ID0gZWRpdG9yLm9wdGlvbnNbJ3BhcmFncmFwaCddIHx8IFtdO1xuICAgICAgICAgICAgaWYgKHV0aWxzLmlzRW1wdHlPYmplY3QobGlzdCkpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBpdGVtcyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBsaXN0KSB7XG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpLFxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogbGlzdFtpXSB8fCBlZGl0b3IuZ2V0TGFuZygncGFyYWdyYXBoJylbaV0sXG4gICAgICAgICAgICAgICAgICAgIHRoZW1lOiBlZGl0b3Iub3B0aW9ucy50aGVtZSxcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyTGFiZWxIdG1sOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1sYWJlbCAlJS1sYWJlbFwiPjxzcGFuIGNsYXNzPVwiZWR1aS1mb3ItJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy52YWx1ZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmxhYmVsIHx8ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj48L2Rpdj4nXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdWkgPSBuZXcgZWRpdG9ydWkuQ29tYm94KHtcbiAgICAgICAgICAgICAgICBlZGl0b3I6IGVkaXRvcixcbiAgICAgICAgICAgICAgICBpdGVtczogaXRlbXMsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICAgIGluaXRWYWx1ZTogdGl0bGUsXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1mb3ItcGFyYWdyYXBoJyxcbiAgICAgICAgICAgICAgICBvbnNlbGVjdDogZnVuY3Rpb24gKHQsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnUGFyYWdyYXBoJywgdGhpcy5pdGVtc1tpbmRleF0udmFsdWUpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25idXR0b25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dQb3B1cCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1sncGFyYWdyYXBoJ10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKHR5cGUsIGNhdXNlQnlVaSwgdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgIGlmICghdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoJ1BhcmFncmFwaCcpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdQYXJhZ3JhcGgnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IHVpLmluZGV4QnlWYWx1ZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRWYWx1ZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldFZhbHVlKHVpLmluaXRWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICAvL+iHquWumuS5ieagh+mimFxuICAgICAgICBlZGl0b3J1aS5jdXN0b21zdHlsZSA9IGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgICAgICAgIHZhciBsaXN0ID0gZWRpdG9yLm9wdGlvbnNbJ2N1c3RvbXN0eWxlJ10gfHwgW10sXG4gICAgICAgICAgICAgICAgdGl0bGUgPSBlZGl0b3Iub3B0aW9ucy5sYWJlbE1hcFsnY3VzdG9tc3R5bGUnXSB8fCBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAuY3VzdG9tc3R5bGUnKSB8fCAnJztcbiAgICAgICAgICAgIGlmICghbGlzdC5sZW5ndGgpIHJldHVybjtcbiAgICAgICAgICAgIHZhciBsYW5nQ3MgPSBlZGl0b3IuZ2V0TGFuZygnY3VzdG9tc3R5bGUnKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBpdGVtcyA9IFtdLCB0OyAodCA9IGxpc3RbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIChmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2sgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgY2subGFiZWwgPSB0LmxhYmVsID8gdC5sYWJlbCA6IGxhbmdDc1t0Lm5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBjay5zdHlsZSA9IHQuc3R5bGU7XG4gICAgICAgICAgICAgICAgICAgIGNrLmNsYXNzTmFtZSA9IHQuY2xhc3NOYW1lO1xuICAgICAgICAgICAgICAgICAgICBjay50YWcgPSB0LnRhZztcbiAgICAgICAgICAgICAgICAgICAgaXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogY2subGFiZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICByZW5kZXJMYWJlbEh0bWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktbGFiZWwgJSUtbGFiZWxcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2sudGFnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNrLmNsYXNzTmFtZSA/ICcgY2xhc3M9XCInICsgY2suY2xhc3NOYW1lICsgJ1wiJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjay5zdHlsZSA/ICcgc3R5bGU9XCInICsgY2suc3R5bGUgKyAnXCInIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2subGFiZWwgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC8nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2sudGFnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJz4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2PidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KSh0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLkNvbWJveCh7XG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgaXRlbXM6IGl0ZW1zLFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICBpbml0VmFsdWU6IHRpdGxlLFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWN1c3RvbXN0eWxlJyxcbiAgICAgICAgICAgICAgICBvbnNlbGVjdDogZnVuY3Rpb24gKHQsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnY3VzdG9tc3R5bGUnLCB0aGlzLml0ZW1zW2luZGV4XS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbmJ1dHRvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd1BvcHVwKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpbmRleEJ5VmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgdGk7ICh0aSA9IHRoaXMuaXRlbXNbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpLmxhYmVsID09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGkgLSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbJ2N1c3RvbXN0eWxlJ10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKHR5cGUsIGNhdXNlQnlVaSwgdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgIGlmICghdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoJ2N1c3RvbXN0eWxlJyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ2N1c3RvbXN0eWxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSB1aS5pbmRleEJ5VmFsdWUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ICE9IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0VmFsdWUodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRWYWx1ZSh1aS5pbml0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdWk7XG4gICAgICAgIH07XG4gICAgICAgIGVkaXRvcnVpLmluc2VydHRhYmxlID0gZnVuY3Rpb24gKGVkaXRvciwgaWZyYW1lVXJsLCB0aXRsZSkge1xuICAgICAgICAgICAgdGl0bGUgPSBlZGl0b3Iub3B0aW9ucy5sYWJlbE1hcFsnaW5zZXJ0dGFibGUnXSB8fCBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAuaW5zZXJ0dGFibGUnKSB8fCAnJztcbiAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5UYWJsZUJ1dHRvbih7XG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWluc2VydHRhYmxlJyxcbiAgICAgICAgICAgICAgICBvbnBpY2t0YWJsZTogZnVuY3Rpb24gKHQsIG51bUNvbHMsIG51bVJvd3MpIHtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKCdJbnNlcnRUYWJsZScsIHsgbnVtUm93czogbnVtUm93cywgbnVtQ29sczogbnVtQ29scywgYm9yZGVyOiAxIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25idXR0b25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dQb3B1cCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1snaW5zZXJ0dGFibGUnXSA9IHVpO1xuICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdpbnNlcnR0YWJsZScpID09IC0xKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGVkaXRvcnVpLmxpbmVoZWlnaHQgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICB2YXIgdmFsID0gZWRpdG9yLm9wdGlvbnMubGluZWhlaWdodCB8fCBbXTtcbiAgICAgICAgICAgIGlmICghdmFsLmxlbmd0aCkgcmV0dXJuO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNpLCBpdGVtcyA9IFtdOyAoY2kgPSB2YWxbaSsrXSk7ICkge1xuICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAvL3RvZG865YaZ5q275LqGXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBjaSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNpLFxuICAgICAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnbGluZWhlaWdodCcsIHRoaXMudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdWkgPSBuZXcgZWRpdG9ydWkuTWVudUJ1dHRvbih7XG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1mb3ItbGluZWhlaWdodCcsXG4gICAgICAgICAgICAgICAgdGl0bGU6IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydsaW5laGVpZ2h0J10gfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLmxpbmVoZWlnaHQnKSB8fCAnJyxcbiAgICAgICAgICAgICAgICBpdGVtczogaXRlbXMsXG4gICAgICAgICAgICAgICAgb25idXR0b25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ0xpbmVIZWlnaHQnKSB8fCB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZXhlY0NvbW1hbmQoJ0xpbmVIZWlnaHQnLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBlZGl0b3J1aS5idXR0b25zWydsaW5laGVpZ2h0J10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnTGluZUhlaWdodCcpO1xuICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZCh0cnVlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZSgnTGluZUhlaWdodCcpO1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSAmJiB1aS5zZXRWYWx1ZSgodmFsdWUgKyAnJykucmVwbGFjZSgvY20vLCAnJykpO1xuICAgICAgICAgICAgICAgICAgICB1aS5zZXRDaGVja2VkKHN0YXRlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgcm93c3BhY2luZ3MgPSBbJ3RvcCcsICdib3R0b20nXTtcbiAgICAgICAgZm9yICh2YXIgciA9IDAsIHJpOyAocmkgPSByb3dzcGFjaW5nc1tyKytdKTsgKSB7XG4gICAgICAgICAgICAoZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIGVkaXRvcnVpWydyb3dzcGFjaW5nJyArIGNtZF0gPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBlZGl0b3Iub3B0aW9uc1sncm93c3BhY2luZycgKyBjbWRdIHx8IFtdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbC5sZW5ndGgpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2ksIGl0ZW1zID0gW107IChjaSA9IHZhbFtpKytdKTsgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogY2ksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZW1lOiBlZGl0b3Iub3B0aW9ucy50aGVtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgncm93c3BhY2luZycsIHRoaXMudmFsdWUsIGNtZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLk1lbnVCdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWZvci1yb3dzcGFjaW5nJyArIGNtZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydyb3dzcGFjaW5nJyArIGNtZF0gfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygnbGFiZWxNYXAucm93c3BhY2luZycgKyBjbWQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtczogaXRlbXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmJ1dHRvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdyb3dzcGFjaW5nJywgY21kKSB8fCB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgncm93c3BhY2luZycsIHZhbHVlLCBjbWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1tjbWRdID0gdWk7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdyb3dzcGFjaW5nJywgY21kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFZhbHVlKCdyb3dzcGFjaW5nJywgY21kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSAmJiB1aS5zZXRWYWx1ZSgodmFsdWUgKyAnJykucmVwbGFjZSgvJS8sICcnKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0Q2hlY2tlZChzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdWk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pKHJpKTtcbiAgICAgICAgfVxuICAgICAgICAvL+acieW6j++8jOaXoOW6j+WIl+ihqFxuICAgICAgICB2YXIgbGlzdHMgPSBbJ2luc2VydG9yZGVyZWRsaXN0JywgJ2luc2VydHVub3JkZXJlZGxpc3QnXTtcbiAgICAgICAgZm9yICh2YXIgbCA9IDAsIGNsOyAoY2wgPSBsaXN0c1tsKytdKTsgKSB7XG4gICAgICAgICAgICAoZnVuY3Rpb24gKGNtZCkge1xuICAgICAgICAgICAgICAgIGVkaXRvcnVpW2NtZF0gPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWxzID0gZWRpdG9yLm9wdGlvbnNbY21kXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9vbk1lbnVDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZXhlY0NvbW1hbmQoY21kLCB0aGlzLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpIGluIHZhbHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiB2YWxzW2ldIHx8IGVkaXRvci5nZXRMYW5nKClbY21kXVtpXSB8fCAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljazogX29uTWVudUNsaWNrXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgdWkgPSBuZXcgZWRpdG9ydWkuTWVudUJ1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3I6IGVkaXRvcixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLScgKyBjbWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLicgKyBjbWQpIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6IGl0ZW1zLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25idXR0b25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZShjbWQpIHx8IHRoaXMudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKGNtZCwgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1tjbWRdID0gdWk7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKGNtZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRWYWx1ZShjbWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVpLnNldFZhbHVlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1aS5zZXRDaGVja2VkKHN0YXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSkoY2wpO1xuICAgICAgICB9XG5cbiAgICAgICAgZWRpdG9ydWkuZnVsbHNjcmVlbiA9IGZ1bmN0aW9uIChlZGl0b3IsIHRpdGxlKSB7XG4gICAgICAgICAgICB0aXRsZSA9IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydmdWxsc2NyZWVuJ10gfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLmZ1bGxzY3JlZW4nKSB8fCAnJztcbiAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5CdXR0b24oe1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWZ1bGxzY3JlZW4nLFxuICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgb25jbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWRpdG9yLnVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudWkuc2V0RnVsbFNjcmVlbighZWRpdG9yLnVpLmlzRnVsbFNjcmVlbigpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldENoZWNrZWQoZWRpdG9yLnVpLmlzRnVsbFNjcmVlbigpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbJ2Z1bGxzY3JlZW4nXSA9IHVpO1xuICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdmdWxsc2NyZWVuJyk7XG4gICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoc3RhdGUgPT0gLTEpO1xuICAgICAgICAgICAgICAgIHVpLnNldENoZWNrZWQoZWRpdG9yLnVpLmlzRnVsbFNjcmVlbigpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHVpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIOihqOaDhVxuICAgICAgICBlZGl0b3J1aVsnZW1vdGlvbiddID0gZnVuY3Rpb24gKGVkaXRvciwgaWZyYW1lVXJsKSB7XG4gICAgICAgICAgICB2YXIgY21kID0gJ2Vtb3Rpb24nO1xuICAgICAgICAgICAgdmFyIHVpID0gbmV3IGVkaXRvcnVpLk11bHRpTWVudVBvcCh7XG4gICAgICAgICAgICAgICAgdGl0bGU6IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwW2NtZF0gfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwLicgKyBjbWQgKyAnJykgfHwgJycsXG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1mb3ItJyArIGNtZCxcbiAgICAgICAgICAgICAgICBpZnJhbWVVcmw6IGVkaXRvci51aS5tYXBVcmwoaWZyYW1lVXJsIHx8IChlZGl0b3Iub3B0aW9ucy5pZnJhbWVVcmxNYXAgfHwge30pW2NtZF0gfHwgaWZyYW1lVXJsTWFwW2NtZF0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbY21kXSA9IHVpO1xuXG4gICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB1aS5zZXREaXNhYmxlZChlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoY21kKSA9PSAtMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICBlZGl0b3J1aS5hdXRvdHlwZXNldCA9IGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgICAgICAgIHZhciB1aSA9IG5ldyBlZGl0b3J1aS5BdXRvVHlwZVNldEJ1dHRvbih7XG4gICAgICAgICAgICAgICAgZWRpdG9yOiBlZGl0b3IsXG4gICAgICAgICAgICAgICAgdGl0bGU6IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwWydhdXRvdHlwZXNldCddIHx8IGVkaXRvci5nZXRMYW5nKCdsYWJlbE1hcC5hdXRvdHlwZXNldCcpIHx8ICcnLFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2VkdWktZm9yLWF1dG90eXBlc2V0JyxcbiAgICAgICAgICAgICAgICBvbmJ1dHRvbmNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnYXV0b3R5cGVzZXQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvcnVpLmJ1dHRvbnNbJ2F1dG90eXBlc2V0J10gPSB1aTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHVpLnNldERpc2FibGVkKGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnYXV0b3R5cGVzZXQnKSA9PSAtMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKiDnroDljZXkuIrkvKDmj5Lku7YgKi9cbiAgICAgICAgZWRpdG9ydWlbJ3NpbXBsZXVwbG9hZCddID0gZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICAgICAgdmFyIG5hbWUgPSAnc2ltcGxldXBsb2FkJyxcbiAgICAgICAgICAgICAgICB1aSA9IG5ldyBlZGl0b3J1aS5CdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdlZHVpLWZvci0nICsgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGVkaXRvci5vcHRpb25zLmxhYmVsTWFwW25hbWVdIHx8IGVkaXRvci5nZXRMYW5nKCdsYWJlbE1hcC4nICsgbmFtZSkgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uICgpIHt9LFxuICAgICAgICAgICAgICAgICAgICB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUsXG4gICAgICAgICAgICAgICAgICAgIHNob3dUZXh0OiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWRpdG9ydWkuYnV0dG9uc1tuYW1lXSA9IHVpO1xuICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdyZWFkeScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYiA9IHVpLmdldERvbSgnYm9keScpLFxuICAgICAgICAgICAgICAgICAgICBpY29uU3BhbiA9IGIuY2hpbGRyZW5bMF07XG4gICAgICAgICAgICAgICAgZWRpdG9yLmZpcmVFdmVudCgnc2ltcGxldXBsb2FkYnRucmVhZHknLCBpY29uU3Bhbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKHR5cGUsIGNhdXNlQnlVaSwgdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZShuYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIHVpLnNldENoZWNrZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdWlSZWFkeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0RGlzYWJsZWQoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdWkuc2V0Q2hlY2tlZChzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB1aTtcbiAgICAgICAgfTtcbiAgICB9KSgpO1xuXG4gICAgLy8gYWRhcHRlci9lZGl0b3IuanNcbiAgICAvLy9pbXBvcnQgY29yZVxuICAgIC8vL2NvbW1hbmRzIOWFqOWxj1xuICAgIC8vL2NvbW1hbmRzTmFtZSBGdWxsU2NyZWVuXG4gICAgLy8vY29tbWFuZHNUaXRsZSAg5YWo5bGPXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHV0aWxzID0gYmFpZHUuZWRpdG9yLnV0aWxzLFxuICAgICAgICAgICAgdWlVdGlscyA9IGJhaWR1LmVkaXRvci51aS51aVV0aWxzLFxuICAgICAgICAgICAgVUlCYXNlID0gYmFpZHUuZWRpdG9yLnVpLlVJQmFzZSxcbiAgICAgICAgICAgIGRvbVV0aWxzID0gYmFpZHUuZWRpdG9yLmRvbS5kb21VdGlscztcbiAgICAgICAgdmFyIG5vZGVTdGFjayA9IFtdO1xuXG4gICAgICAgIGZ1bmN0aW9uIEVkaXRvclVJKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdE9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB0aGlzLmluaXRFZGl0b3JVSSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgRWRpdG9yVUkucHJvdG90eXBlID0ge1xuICAgICAgICAgICAgdWlOYW1lOiAnZWRpdG9yJyxcbiAgICAgICAgICAgIGluaXRFZGl0b3JVSTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnVpID0gdGhpcztcbiAgICAgICAgICAgICAgICB0aGlzLl9kaWFsb2dzID0ge307XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VUlCYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5faW5pdFRvb2xiYXJzKCk7XG4gICAgICAgICAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBtZSA9IHRoaXM7XG5cbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ3JlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAvL+aPkOS+m2dldERpYWxvZ+aWueazlVxuICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0RGlhbG9nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlZGl0b3IudWkuX2RpYWxvZ3NbbmFtZSArICdEaWFsb2cnXTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZWRpdG9yLndpbmRvdywgJ3Njcm9sbCcsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhaWR1LmVkaXRvci51aS5Qb3B1cC5wb3N0SGlkZShldnQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy/mj5DkvpvnvJbovpHlmajlrp7ml7blrr3pq5go5YWo5bGP5pe25a696auY5LiN5Y+Y5YyWKVxuICAgICAgICAgICAgICAgICAgICBlZGl0b3IudWkuX2FjdHVhbEZyYW1lV2lkdGggPSBlZGl0b3Iub3B0aW9ucy5pbml0aWFsRnJhbWVXaWR0aDtcblxuICAgICAgICAgICAgICAgICAgICBVRS5icm93c2VyLmllICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBVRS5icm93c2VyLnZlcnNpb24gPT09IDYgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5jb250YWluZXIub3duZXJEb2N1bWVudC5leGVjQ29tbWFuZCgnQmFja2dyb3VuZEltYWdlQ2FjaGUnLCBmYWxzZSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9kaXNwbGF5IGJvdHRvbS1iYXIgbGFiZWwgYmFzZWQgb24gY29uZmlnXG4gICAgICAgICAgICAgICAgICAgIGlmIChlZGl0b3Iub3B0aW9ucy5lbGVtZW50UGF0aEVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5nZXREb20oJ2VsZW1lbnRwYXRoJykuaW5uZXJIVE1MID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVkdWktZWRpdG9yLWJyZWFkY3J1bWJcIj4nICsgZWRpdG9yLmdldExhbmcoJ2VsZW1lbnRQYXRoVGlwJykgKyAnOjwvZGl2Pic7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudWkuZ2V0RG9tKCdlbGVtZW50cGF0aCcpLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZWRpdG9yLm9wdGlvbnMud29yZENvdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBjb3VudEZuKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldENvdW50KGVkaXRvciwgbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuKGVkaXRvci5kb2N1bWVudCwgJ2NsaWNrJywgYXJndW1lbnRzLmNhbGxlZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihlZGl0b3IuZG9jdW1lbnQsICdjbGljaycsIGNvdW50Rm4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLmdldERvbSgnd29yZGNvdW50JykuaW5uZXJIVE1MID0gZWRpdG9yLmdldExhbmcoJ3dvcmRDb3VudFRpcCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLmdldERvbSgnd29yZGNvdW50Jykuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5fc2NhbGUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5vcHRpb25zLnNjYWxlRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5hdXRvSGVpZ2h0RW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5kaXNhYmxlQXV0b0hlaWdodCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZW5hYmxlU2NhbGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5nZXREb20oJ3NjYWxlJykuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWUuZGlzYWJsZVNjYWxlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgIWVkaXRvci5vcHRpb25zLmVsZW1lbnRQYXRoRW5hYmxlZCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIWVkaXRvci5vcHRpb25zLndvcmRDb3VudCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIWVkaXRvci5vcHRpb25zLnNjYWxlRW5hYmxlZFxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5nZXREb20oJ2VsZW1lbnRwYXRoJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5nZXREb20oJ3dvcmRjb3VudCcpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IudWkuZ2V0RG9tKCdzY2FsZScpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIWVkaXRvci5zZWxlY3Rpb24uaXNGb2N1cygpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ3NlbGVjdGlvbmNoYW5nZScsIGZhbHNlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKHQsIGV2dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWwgPSBldnQudGFyZ2V0IHx8IGV2dC5zcmNFbGVtZW50O1xuICAgICAgICAgICAgICAgICAgICBiYWlkdS5lZGl0b3IudWkuUG9wdXAucG9zdEhpZGUoZXZ0LCBlbCk7XG4gICAgICAgICAgICAgICAgICAgIGJhaWR1LmVkaXRvci51aS5TaG9ydEN1dE1lbnUucG9zdEhpZGUoZXZ0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ2RlbGNlbGxzJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoVUUudWlbJ2VkaXR0aXAnXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IFVFLnVpWydlZGl0dGlwJ10oZWRpdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0RGlhbG9nKCdlZGl0dGlwJykub3BlbigpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgdmFyIHBhc3RlUG9wLFxuICAgICAgICAgICAgICAgICAgICBpc1Bhc3RlID0gZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVyO1xuICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignYWZ0ZXJwYXN0ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgncGFzdGVwbGFpbicpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIGlmIChiYWlkdS5lZGl0b3IudWkuUGFzdGVQaWNrZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vZHVhbmp1biDnspjotLTkuYvlkI7moLflvI/pl67popjlhYjlubLmjolcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qcGFzdGVQb3AgPSBuZXcgYmFpZHUuZWRpdG9yLnVpLlBvcHVwKHsqL1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb250ZW50Om5ldyBiYWlkdS5lZGl0b3IudWkuUGFzdGVQaWNrZXIoe2VkaXRvcjplZGl0b3J9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vZWRpdG9yOmVkaXRvcixcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vY2xhc3NOYW1lOidlZHVpLXdvcmRwYXN0ZXBvcCdcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvKnBhc3RlUG9wLnJlbmRlcigpOyovXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaXNQYXN0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ2FmdGVyaW5zZXJ0aHRtbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXN0ZVBvcCAmJiAoaXNQYXN0ZSB8fCBlZGl0b3IudWkuX2lzVHJhbnNmZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhc3RlUG9wLmlzSGlkZGVuKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNwYW4gPSBkb21VdGlscy5jcmVhdGVFbGVtZW50KGVkaXRvci5kb2N1bWVudCwgJ3NwYW4nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdsaW5lLWhlaWdodDowcHg7JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbm5lckhUTUw6ICdcXHVmZWZmJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IGVkaXRvci5zZWxlY3Rpb24uZ2V0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShzcGFuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcCA9IGdldERvbU5vZGUoc3BhbiwgJ2ZpcnN0Q2hpbGQnLCAncHJldmlvdXNTaWJsaW5nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRtcCAmJiBwYXN0ZVBvcC5zaG93QW5jaG9yKHRtcC5ub2RlVHlwZSA9PSAzID8gdG1wLnBhcmVudE5vZGUgOiB0bXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUoc3Bhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzdGVQb3Auc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgZWRpdG9yLnVpLl9pc1RyYW5zZmVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzUGFzdGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24gKHQsIGV2dCkge1xuICAgICAgICAgICAgICAgICAgICBiYWlkdS5lZGl0b3IudWkuUG9wdXAucG9zdEhpZGUoZXZ0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAodCwgZXZ0KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXN0ZVBvcCkgcGFzdGVQb3AuZGlzcG9zZShldnQpO1xuICAgICAgICAgICAgICAgICAgICB2YXIga2V5Q29kZSA9IGV2dC5rZXlDb2RlIHx8IGV2dC53aGljaDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV2dC5hbHRLZXkgJiYga2V5Q29kZSA9PSA5MCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgVUUudWkuYnV0dG9uc1snZnVsbHNjcmVlbiddLm9uY2xpY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignd29yZGNvdW50JywgZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q291bnQodGhpcywgbWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHNldENvdW50KGVkaXRvciwgdWkpIHtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnNldE9wdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICB3b3JkQ291bnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhpbXVtV29yZHM6IDEwMDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgd29yZENvdW50TXNnOiBlZGl0b3Iub3B0aW9ucy53b3JkQ291bnRNc2cgfHwgZWRpdG9yLmdldExhbmcoJ3dvcmRDb3VudE1zZycpLFxuICAgICAgICAgICAgICAgICAgICAgICAgd29yZE92ZXJGbG93TXNnOiBlZGl0b3Iub3B0aW9ucy53b3JkT3ZlckZsb3dNc2cgfHwgZWRpdG9yLmdldExhbmcoJ3dvcmRPdmVyRmxvd01zZycpXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgb3B0ID0gZWRpdG9yLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXggPSBvcHQubWF4aW11bVdvcmRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgbXNnID0gb3B0LndvcmRDb3VudE1zZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVyck1zZyA9IG9wdC53b3JkT3ZlckZsb3dNc2csXG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudERvbSA9IHVpLmdldERvbSgnd29yZGNvdW50Jyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghb3B0LndvcmRDb3VudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb3VudCA9IGVkaXRvci5nZXRDb250ZW50TGVuZ3RoKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY291bnQgPiBtYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50RG9tLmlubmVySFRNTCA9IGVyck1zZztcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ3dvcmRjb3VudG92ZXJmbG93Jyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudERvbS5pbm5lckhUTUwgPSBtc2cucmVwbGFjZSgneyNsZWF2ZX0nLCBtYXggLSBjb3VudCkucmVwbGFjZSgneyNjb3VudH0nLCBjb3VudCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBlZGl0b3IuYWRkTGlzdGVuZXIoJ3NlbGVjdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5vcHRpb25zLmVsZW1lbnRQYXRoRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVbKGVkaXRvci5xdWVyeUNvbW1hbmRTdGF0ZSgnZWxlbWVudHBhdGgnKSA9PSAtMSA/ICdkaXMnIDogJ2VuJykgKyAnYWJsZUVsZW1lbnRQYXRoJ10oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZWRpdG9yLm9wdGlvbnMuc2NhbGVFbmFibGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZVsoZWRpdG9yLnF1ZXJ5Q29tbWFuZFN0YXRlKCdzY2FsZScpID09IC0xID8gJ2RpcycgOiAnZW4nKSArICdhYmxlU2NhbGUnXSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyIHBvcHVwID0gbmV3IGJhaWR1LmVkaXRvci51aS5Qb3B1cCh7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvcjogZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnJyxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiAnZWR1aS1idWJibGUnLFxuICAgICAgICAgICAgICAgICAgICBfb25FZGl0QnV0dG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLl9kaWFsb2dzLmxpbmtEaWFsb2cub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBfb25JbWdFZGl0QnV0dG9uQ2xpY2s6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5fZGlhbG9nc1tuYW1lXSAmJiBlZGl0b3IudWkuX2RpYWxvZ3NbbmFtZV0ub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBfb25JbWdTZXRGbG9hdDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5leGVjQ29tbWFuZCgnaW1hZ2VmbG9hdCcsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgX3NldElmcmFtZUFsaWduOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmcmFtZSA9IHBvcHVwLmFuY2hvckVsO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5ld0ZyYW1lID0gZnJhbWUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgLTI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0ZyYW1lLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgLTE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0ZyYW1lLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCAnbGVmdCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0ZyYW1lLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCAncmlnaHQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFtZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXdGcmFtZSwgZnJhbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMucmVtb3ZlKGZyYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwLmFuY2hvckVsID0gbmV3RnJhbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5zaG93QW5jaG9yKHBvcHVwLmFuY2hvckVsKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgX3VwZGF0ZUlmcmFtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZyYW1lID0gKGVkaXRvci5faWZyYW1lID0gcG9wdXAuYW5jaG9yRWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRvbVV0aWxzLmhhc0NsYXNzKGZyYW1lLCAndWVkaXRvcl9iYWlkdW1hcCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnNlbGVjdGlvbi5nZXRSYW5nZSgpLnNlbGVjdE5vZGUoZnJhbWUpLnNlbGVjdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci51aS5fZGlhbG9ncy5tYXBEaWFsb2cub3BlbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLl9kaWFsb2dzLmluc2VydGZyYW1lRGlhbG9nLm9wZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF9vblJlbW92ZUJ1dHRvbkNsaWNrOiBmdW5jdGlvbiAoY21kTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmV4ZWNDb21tYW5kKGNtZE5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5QXV0b0hpZGU6IGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsICYmIGVsLm93bmVyRG9jdW1lbnQgPT0gZWRpdG9yLmRvY3VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsLnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PSAnaW1nJyB8fCBkb21VdGlscy5maW5kUGFyZW50QnlUYWdOYW1lKGVsLCAnYScsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbCAhPT0gcG9wdXAuYW5jaG9yRWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGJhaWR1LmVkaXRvci51aS5Qb3B1cC5wcm90b3R5cGUucXVlcnlBdXRvSGlkZS5jYWxsKHRoaXMsIGVsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHBvcHVwLnJlbmRlcigpO1xuICAgICAgICAgICAgICAgIGlmIChlZGl0b3Iub3B0aW9ucy5pbWFnZVBvcHVwKSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5hZGRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24gKHQsIGV2dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0ID0gZXZ0IHx8IHdpbmRvdy5ldmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlbCA9IGV2dC50YXJnZXQgfHwgZXZ0LnNyY0VsZW1lbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWRpdG9yLnVpLl9kaWFsb2dzLmluc2VydGZyYW1lRGlhbG9nICYmIC9pZnJhbWUvZ2kudGVzdChlbC50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBodG1sID0gcG9wdXAuZm9ybWF0SHRtbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxub2JyPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ3Byb3BlcnR5JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzogPHNwYW4gb25jbGljaz0kJC5fc2V0SWZyYW1lQWxpZ24oLTIpIGNsYXNzPVwiZWR1aS1jbGlja2FibGVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdkZWZhdWx0JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4mbmJzcDsmbmJzcDs8c3BhbiBvbmNsaWNrPSQkLl9zZXRJZnJhbWVBbGlnbigtMSkgY2xhc3M9XCJlZHVpLWNsaWNrYWJsZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ2p1c3RpZnlsZWZ0JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4mbmJzcDsmbmJzcDs8c3BhbiBvbmNsaWNrPSQkLl9zZXRJZnJhbWVBbGlnbigxKSBjbGFzcz1cImVkdWktY2xpY2thYmxlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygnanVzdGlmeXJpZ2h0JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4mbmJzcDsmbmJzcDsnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcgPHNwYW4gb25jbGljaz1cIiQkLl91cGRhdGVJZnJhbWUoIHRoaXMpO1wiIGNsYXNzPVwiZWR1aS1jbGlja2FibGVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdtb2RpZnknKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9zcGFuPjwvbm9icj4nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaHRtbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5nZXREb20oJ2NvbnRlbnQnKS5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5hbmNob3JFbCA9IGVsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5zaG93QW5jaG9yKHBvcHVwLmFuY2hvckVsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmFkZExpc3RlbmVyKCdzZWxlY3Rpb25jaGFuZ2UnLCBmdW5jdGlvbiAodCwgY2F1c2VCeVVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNhdXNlQnlVaSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWwgPSAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHIgPSAnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWcgPSBlZGl0b3Iuc2VsZWN0aW9uLmdldFJhbmdlKCkuZ2V0Q2xvc2VkTm9kZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ3MgPSBlZGl0b3IudWkuX2RpYWxvZ3M7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nICYmIGltZy50YWdOYW1lID09ICdJTUcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpYWxvZ05hbWUgPSAnaW5zZXJ0aW1hZ2VEaWFsb2cnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLWZha2VkLXZpZGVvJykgIT0gLTEgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLXVwbG9hZC12aWRlbycpICE9IC0xXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ05hbWUgPSAnaW5zZXJ0dmlkZW9EaWFsb2cnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLWZha2VkLXdlYmFwcCcpICE9IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpYWxvZ05hbWUgPSAnd2ViYXBwRGlhbG9nJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltZy5zcmMuaW5kZXhPZignaHR0cDovL2FwaS5tYXAuYmFpZHUuY29tJykgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nTmFtZSA9ICdtYXBEaWFsb2cnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nLmNsYXNzTmFtZS5pbmRleE9mKCdlZHVpLWZha2VkLW11c2ljJykgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nTmFtZSA9ICdtdXNpY0RpYWxvZyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWcuc3JjLmluZGV4T2YoJ2h0dHA6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcy9hcGkvc3RhdGljbWFwJykgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nTmFtZSA9ICdnbWFwRGlhbG9nJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltZy5nZXRBdHRyaWJ1dGUoJ2FuY2hvcm5hbWUnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2dOYW1lID0gJ2FuY2hvckRpYWxvZyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgPSBwb3B1cC5mb3JtYXRIdG1sKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxub2JyPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdwcm9wZXJ0eScpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnOiA8c3BhbiBvbmNsaWNrPSQkLl9vbkltZ0VkaXRCdXR0b25DbGljayhcImFuY2hvckRpYWxvZ1wiKSBjbGFzcz1cImVkdWktY2xpY2thYmxlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ21vZGlmeScpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9zcGFuPiZuYnNwOyZuYnNwOycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBvbmNsaWNrPSQkLl9vblJlbW92ZUJ1dHRvbkNsaWNrKFxcJ2FuY2hvclxcJykgY2xhc3M9XCJlZHVpLWNsaWNrYWJsZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdkZWxldGUnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj48L25vYnI+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nLmdldEF0dHJpYnV0ZSgnd29yZF9pbWcnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3RvZG8g5pS+5YiwZGlhbG9n5Y675YGa5p+l6K+iXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci53b3JkX2ltZyA9IFtpbWcuZ2V0QXR0cmlidXRlKCd3b3JkX2ltZycpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlhbG9nTmFtZSA9ICd3b3JkaW1hZ2VEaWFsb2cnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9tVXRpbHMuaGFzQ2xhc3MoaW1nLCAnbG9hZGluZ2NsYXNzJykgfHwgZG9tVXRpbHMuaGFzQ2xhc3MoaW1nLCAnbG9hZGVycm9yY2xhc3MnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2dOYW1lID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZGlhbG9nc1tkaWFsb2dOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ciA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8bm9icj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ3Byb3BlcnR5JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnOiAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIG9uY2xpY2s9JCQuX29uSW1nU2V0RmxvYXQoXCJub25lXCIpIGNsYXNzPVwiZWR1aS1jbGlja2FibGVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ2RlZmF1bHQnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBvbmNsaWNrPSQkLl9vbkltZ1NldEZsb2F0KFwibGVmdFwiKSBjbGFzcz1cImVkdWktY2xpY2thYmxlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdqdXN0aWZ5bGVmdCcpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4mbmJzcDsmbmJzcDsnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIG9uY2xpY2s9JCQuX29uSW1nU2V0RmxvYXQoXCJyaWdodFwiKSBjbGFzcz1cImVkdWktY2xpY2thYmxlXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdqdXN0aWZ5cmlnaHQnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBvbmNsaWNrPSQkLl9vbkltZ1NldEZsb2F0KFwiY2VudGVyXCIpIGNsYXNzPVwiZWR1aS1jbGlja2FibGVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ2p1c3RpZnljZW50ZXInKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+Jm5ic3A7Jm5ic3A7JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8c3BhbiBvbmNsaWNrPVwiJCQuX29uSW1nRWRpdEJ1dHRvbkNsaWNrKFxcJycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWFsb2dOYW1lICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1xcJyk7XCIgY2xhc3M9XCJlZHVpLWNsaWNrYWJsZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygnbW9kaWZ5JykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9zcGFuPjwvbm9icj4nO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIWh0bWwgJiYgKGh0bWwgPSBwb3B1cC5mb3JtYXRIdG1sKHN0cikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci51aS5fZGlhbG9ncy5saW5rRGlhbG9nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxpbmsgPSBlZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ2xpbmsnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsaW5rICYmICh1cmwgPSBsaW5rLmdldEF0dHJpYnV0ZSgnX2hyZWYnKSB8fCBsaW5rLmdldEF0dHJpYnV0ZSgnaHJlZicsIDIpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHh0ID0gdXJsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodXJsLmxlbmd0aCA+IDMwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eHQgPSB1cmwuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChodG1sKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8ZGl2IHN0eWxlPVwiaGVpZ2h0OjVweDtcIj48L2Rpdj4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gcG9wdXAuZm9ybWF0SHRtbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8bm9icj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0TGFuZygnYW50aG9yTXNnJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc6IDxhIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIiB0aXRsZT1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1wiID4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eHQgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L2E+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyA8c3BhbiBjbGFzcz1cImVkdWktY2xpY2thYmxlXCIgb25jbGljaz1cIiQkLl9vbkVkaXRCdXR0b25DbGljaygpO1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRMYW5nKCdtb2RpZnknKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzwvc3Bhbj4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIDxzcGFuIGNsYXNzPVwiZWR1aS1jbGlja2FibGVcIiBvbmNsaWNrPVwiJCQuX29uUmVtb3ZlQnV0dG9uQ2xpY2soXFwndW5saW5rXFwnKTtcIj4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmdldExhbmcoJ2NsZWFyJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+PC9ub2JyPidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9wdXAuc2hvd0FuY2hvcihsaW5rKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChodG1sKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9wdXAuZ2V0RG9tKCdjb250ZW50JykuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5hbmNob3JFbCA9IGltZyB8fCBsaW5rO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwLnNob3dBbmNob3IocG9wdXAuYW5jaG9yRWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1cC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfaW5pdFRvb2xiYXJzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgICAgICAgICAgICAgIHZhciB0b29sYmFycyA9IHRoaXMudG9vbGJhcnMgfHwgW107XG4gICAgICAgICAgICAgICAgdmFyIHRvb2xiYXJVaXMgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRvb2xiYXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b29sYmFyID0gdG9vbGJhcnNbaV07XG4gICAgICAgICAgICAgICAgICAgIHZhciB0b29sYmFyVWkgPSBuZXcgYmFpZHUuZWRpdG9yLnVpLlRvb2xiYXIoeyB0aGVtZTogZWRpdG9yLm9wdGlvbnMudGhlbWUgfSk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdG9vbGJhci5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRvb2xiYXJJdGVtID0gdG9vbGJhcltqXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0b29sYmFySXRlbVVpID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdG9vbGJhckl0ZW0gPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFySXRlbSA9IHRvb2xiYXJJdGVtLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRvb2xiYXJJdGVtID09ICd8Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFySXRlbSA9ICdTZXBhcmF0b3InO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9vbGJhckl0ZW0gPT0gJ3x8Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFySXRlbSA9ICdCcmVha2xpbmUnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFpZHUuZWRpdG9yLnVpW3Rvb2xiYXJJdGVtXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFySXRlbVVpID0gbmV3IGJhaWR1LmVkaXRvci51aVt0b29sYmFySXRlbV0oZWRpdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2Z1bGxzY3JlZW7ov5nph4zljZXni6zlpITnkIbkuIDkuIvvvIzmlL7liLDpppbooYzljrtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9vbGJhckl0ZW0gPT0gJ2Z1bGxzY3JlZW4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0b29sYmFyVWlzICYmIHRvb2xiYXJVaXNbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xiYXJVaXNbMF0uaXRlbXMuc3BsaWNlKDAsIDAsIHRvb2xiYXJJdGVtVWkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbGJhckl0ZW1VaSAmJiB0b29sYmFyVWkuaXRlbXMuc3BsaWNlKDAsIDAsIHRvb2xiYXJJdGVtVWkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFySXRlbVVpID0gdG9vbGJhckl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9vbGJhckl0ZW1VaSAmJiB0b29sYmFySXRlbVVpLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbGJhclVpLmFkZCh0b29sYmFySXRlbVVpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyVWlzW2ldID0gdG9vbGJhclVpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8v5o6l5Y+X5aSW6YOo5a6a5Yi255qEVUlcblxuICAgICAgICAgICAgICAgIHV0aWxzLmVhY2goVUUuX2N1c3RvbWl6ZVVJLCBmdW5jdGlvbiAob2JqLCBrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1VSSwgaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvYmouaWQgJiYgb2JqLmlkICE9IGVkaXRvci5rZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpdGVtVUkgPSBvYmouZXhlY0ZuLmNhbGwoZWRpdG9yLCBlZGl0b3IsIGtleSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtVUkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gb2JqLmluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHRvb2xiYXJVaS5pdGVtcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sYmFyVWkuYWRkKGl0ZW1VSSwgaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnRvb2xiYXJzID0gdG9vbGJhclVpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRIdG1sVHBsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI1wiIGNsYXNzPVwiJSVcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCIjI190b29sYmFyYm94XCIgY2xhc3M9XCIlJS10b29sYmFyYm94XCI+JyArXG4gICAgICAgICAgICAgICAgICAgICh0aGlzLnRvb2xiYXJzLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAgICAgPyAnPGRpdiBpZD1cIiMjX3Rvb2xiYXJib3hvdXRlclwiIGNsYXNzPVwiJSUtdG9vbGJhcmJveG91dGVyXCI+PGRpdiBjbGFzcz1cIiUlLXRvb2xiYXJib3hpbm5lclwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlclRvb2xiYXJCb3hIdG1sKCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnPC9kaXY+PC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjX3Rvb2xiYXJtc2dcIiBjbGFzcz1cIiUlLXRvb2xiYXJtc2dcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQgPSBcIiMjX3VwbG9hZF9kaWFsb2dcIiBjbGFzcz1cIiUlLXRvb2xiYXJtc2ctdXBsb2FkXCIgb25jbGljaz1cIiQkLnNob3dXb3JkSW1hZ2VEaWFsb2coKTtcIj4nICtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZ2V0TGFuZygnY2xpY2tUb1VwbG9hZCcpICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cIiUlLXRvb2xiYXJtc2ctY2xvc2VcIiBvbmNsaWNrPVwiJCQuaGlkZVRvb2xiYXJNc2coKTtcIj54PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNfdG9vbGJhcm1zZ19sYWJlbFwiIGNsYXNzPVwiJSUtdG9vbGJhcm1zZy1sYWJlbFwiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBzdHlsZT1cImhlaWdodDowO292ZXJmbG93OmhpZGRlbjtjbGVhcjpib3RoO1wiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNfbWVzc2FnZV9ob2xkZXJcIiBjbGFzcz1cIiUlLW1lc3NhZ2Vob2xkZXJcIj48L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjX2lmcmFtZWhvbGRlclwiIGNsYXNzPVwiJSUtaWZyYW1laG9sZGVyXCI+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgICAgICAgICAgICAgLy9tb2RpZnkgd2Rjb3VudCBieSBtYXRhb1xuICAgICAgICAgICAgICAgICAgICAnPGRpdiBpZD1cIiMjX2JvdHRvbWJhclwiIGNsYXNzPVwiJSUtYm90dG9tQ29udGFpbmVyXCI+PHRhYmxlPjx0cj4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0ZCBpZD1cIiMjX2VsZW1lbnRwYXRoXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCIgY2xhc3M9XCIlJS1ib3R0b21iYXJcIj48L3RkPicgK1xuICAgICAgICAgICAgICAgICAgICAnPHRkIGlkPVwiIyNfd29yZGNvdW50XCIgIHN0eWxlPVwiZGlzcGxheTpub25lO1wiIGNsYXNzPVwiJSUtd29yZGNvdW50XCI+PC90ZD4nICtcbiAgICAgICAgICAgICAgICAgICAgJzx0ZCBpZD1cIiMjX3NjYWxlXCIgIHN0eWxlPVwiZGlzcGxheTpub25lO1wiIGNsYXNzPVwiJSUtc2NhbGVcIj48ZGl2IGNsYXNzPVwiJSUtaWNvblwiPjwvZGl2PjwvdGQ+JyArXG4gICAgICAgICAgICAgICAgICAgICc8L3RyPjwvdGFibGU+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGlkPVwiIyNfc2NhbGVsYXllclwiPjwvZGl2PicgK1xuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+J1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2hvd1dvcmRJbWFnZURpYWxvZzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2RpYWxvZ3NbJ3dvcmRpbWFnZURpYWxvZyddLm9wZW4oKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW5kZXJUb29sYmFyQm94SHRtbDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBidWZmID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRvb2xiYXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmYucHVzaCh0aGlzLnRvb2xiYXJzW2ldLnJlbmRlckh0bWwoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBidWZmLmpvaW4oJycpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldEZ1bGxTY3JlZW46IGZ1bmN0aW9uIChmdWxsc2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgdmFyIGVkaXRvciA9IHRoaXMuZWRpdG9yLFxuICAgICAgICAgICAgICAgICAgICBjb250YWluZXIgPSBlZGl0b3IuY29udGFpbmVyLnBhcmVudE5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZnVsbHNjcmVlbiAhPSBmdWxsc2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2Z1bGxzY3JlZW4gPSBmdWxsc2NyZWVuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5maXJlRXZlbnQoJ2JlZm9yZWZ1bGxzY3JlZW5jaGFuZ2UnLCBmdWxsc2NyZWVuKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJhaWR1LmVkaXRvci5icm93c2VyLmdlY2tvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYmsgPSBlZGl0b3Iuc2VsZWN0aW9uLmdldFJhbmdlKCkuY3JlYXRlQm9va21hcmsoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZnVsbHNjcmVlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGNvbnRhaW5lci50YWdOYW1lICE9ICdCT0RZJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IGJhaWR1LmVkaXRvci5kb20uZG9tVXRpbHMuZ2V0Q29tcHV0ZWRTdHlsZShjb250YWluZXIsICdwb3NpdGlvbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVTdGFjay5wdXNoKHBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAnc3RhdGljJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250YWluZXIgPSBjb250YWluZXIucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Jha0h0bWxPdmVyZmxvdyA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5vdmVyZmxvdztcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Jha0JvZHlPdmVyZmxvdyA9IGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYWtBdXRvSGVpZ2h0ID0gdGhpcy5lZGl0b3IuYXV0b0hlaWdodEVuYWJsZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYWtTY3JvbGxUb3AgPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wLCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2Jha0VkaXRvckNvbnRhbmluZXJXaWR0aCA9IGVkaXRvci5pZnJhbWUucGFyZW50Tm9kZS5vZmZzZXRXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9iYWtBdXRvSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lvZPlhajlsY/ml7bkuI3og73miafooYzoh6rliqjplb/pq5hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuYXV0b0hlaWdodEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5kaXNhYmxlQXV0b0hlaWdodCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5L+u5aSN77yM5rua5Yqo5p2h5LiN5pS26LW355qE6Zeu6aKYXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCB3aW5kb3cuc2Nyb2xsWSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYWtDc3NUZXh0ID0gdGhpcy5nZXREb20oKS5zdHlsZS5jc3NUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fYmFrQ3NzVGV4dDEgPSB0aGlzLmdldERvbSgnaWZyYW1laG9sZGVyJykuc3R5bGUuY3NzVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5pZnJhbWUucGFyZW50Tm9kZS5zdHlsZS53aWR0aCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fdXBkYXRlRnVsbFNjcmVlbigpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGNvbnRhaW5lci50YWdOYW1lICE9ICdCT0RZJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9IG5vZGVTdGFjay5zaGlmdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lciA9IGNvbnRhaW5lci5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXREb20oKS5zdHlsZS5jc3NUZXh0ID0gdGhpcy5fYmFrQ3NzVGV4dDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCdpZnJhbWVob2xkZXInKS5zdHlsZS5jc3NUZXh0ID0gdGhpcy5fYmFrQ3NzVGV4dDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYmFrQXV0b0hlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5hdXRvSGVpZ2h0RW5hYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZW5hYmxlQXV0b0hlaWdodCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSB0aGlzLl9iYWtIdG1sT3ZlcmZsb3c7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gdGhpcy5fYmFrQm9keU92ZXJmbG93O1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmlmcmFtZS5wYXJlbnROb2RlLnN0eWxlLndpZHRoID0gdGhpcy5fYmFrRWRpdG9yQ29udGFuaW5lcldpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCB0aGlzLl9iYWtTY3JvbGxUb3ApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmdlY2tvICYmIGVkaXRvci5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuYm9keS5jb250ZW50RWRpdGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5maXJlRXZlbnQoJ2Z1bGxzY3JlZW5jaGFuZ2VkJywgZnVsbHNjcmVlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5zZWxlY3Rpb24uZ2V0UmFuZ2UoKS5tb3ZlVG9Cb29rbWFyayhiaykuc2VsZWN0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWlkdS5lZGl0b3IuZG9tLmRvbVV0aWxzLnJlbW92ZShpbnB1dCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxzY3JlZW4gJiYgd2luZG93LnNjcm9sbCgwLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGVkaXRvci5ib2R5LmNvbnRlbnRFZGl0YWJsZSA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5maXJlRXZlbnQoJ2Z1bGxzY3JlZW5jaGFuZ2VkJywgZnVsbHNjcmVlbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXJMYXlvdXQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfdXBkYXRlRnVsbFNjcmVlbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9mdWxsc2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2cFJlY3QgPSB1aVV0aWxzLmdldFZpZXdwb3J0UmVjdCgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgpLnN0eWxlLmNzc1RleHQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgJ2JvcmRlcjowO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5lZGl0b3Iub3B0aW9ucy50b3BPZmZzZXQgfHwgMCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3B4O3dpZHRoOicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgdnBSZWN0LndpZHRoICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdweDtoZWlnaHQ6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICB2cFJlY3QuaGVpZ2h0ICtcbiAgICAgICAgICAgICAgICAgICAgICAgICdweDt6LWluZGV4OicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMuZ2V0RG9tKCkuc3R5bGUuekluZGV4ICogMSArIDEwMCk7XG4gICAgICAgICAgICAgICAgICAgIHVpVXRpbHMuc2V0Vmlld3BvcnRPZmZzZXQodGhpcy5nZXREb20oKSwgeyBsZWZ0OiAwLCB0b3A6IHRoaXMuZWRpdG9yLm9wdGlvbnMudG9wT2Zmc2V0IHx8IDAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnNldEhlaWdodChcbiAgICAgICAgICAgICAgICAgICAgICAgIHZwUmVjdC5oZWlnaHQgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCd0b29sYmFyYm94Jykub2Zmc2V0SGVpZ2h0IC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldERvbSgnYm90dG9tYmFyJykub2Zmc2V0SGVpZ2h0IC1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5lZGl0b3Iub3B0aW9ucy50b3BPZmZzZXQgfHwgMCksXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIC8v5LiN5omL5Yqo6LCD5LiA5LiL77yM5Lya5a+86Ie05YWo5bGP5aSx5pWIXG4gICAgICAgICAgICAgICAgICAgIGlmIChicm93c2VyLmdlY2tvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vbnJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBfdXBkYXRlRWxlbWVudFBhdGg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYm90dG9tID0gdGhpcy5nZXREb20oJ2VsZW1lbnRwYXRoJyksXG4gICAgICAgICAgICAgICAgICAgIGxpc3Q7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudFBhdGhFbmFibGVkICYmIChsaXN0ID0gdGhpcy5lZGl0b3IucXVlcnlDb21tYW5kVmFsdWUoJ2VsZW1lbnRwYXRoJykpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBidWZmID0gW107XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gbGlzdFtpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZltpXSA9IHRoaXMuZm9ybWF0SHRtbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4gdW5zZWxlY3RhYmxlPVwib25cIiBvbmNsaWNrPVwiJCQuZWRpdG9yLmV4ZWNDb21tYW5kKCZxdW90O2VsZW1lbnRwYXRoJnF1b3Q7LCAmcXVvdDsnICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcmcXVvdDspO1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8L3NwYW4+J1xuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBib3R0b20uaW5uZXJIVE1MID1cbiAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZWR1aS1lZGl0b3ItYnJlYWRjcnVtYlwiIG9ubW91c2Vkb3duPVwicmV0dXJuIGZhbHNlO1wiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZ2V0TGFuZygnZWxlbWVudFBhdGhUaXAnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnOiAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmYuam9pbignICZndDsgJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzwvZGl2Pic7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpc2FibGVFbGVtZW50UGF0aDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBib3R0b20gPSB0aGlzLmdldERvbSgnZWxlbWVudHBhdGgnKTtcbiAgICAgICAgICAgICAgICBib3R0b20uaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgYm90dG9tLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50UGF0aEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbmFibGVFbGVtZW50UGF0aDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBib3R0b20gPSB0aGlzLmdldERvbSgnZWxlbWVudHBhdGgnKTtcbiAgICAgICAgICAgICAgICBib3R0b20uc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudFBhdGhFbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLl91cGRhdGVFbGVtZW50UGF0aCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9zY2FsZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBkb2MgPSBkb2N1bWVudCxcbiAgICAgICAgICAgICAgICAgICAgZWRpdG9yID0gdGhpcy5lZGl0b3IsXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvckhvbGRlciA9IGVkaXRvci5jb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvckRvY3VtZW50ID0gZWRpdG9yLmRvY3VtZW50LFxuICAgICAgICAgICAgICAgICAgICB0b29sYmFyQm94ID0gdGhpcy5nZXREb20oJ3Rvb2xiYXJib3gnKSxcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tYmFyID0gdGhpcy5nZXREb20oJ2JvdHRvbWJhcicpLFxuICAgICAgICAgICAgICAgICAgICBzY2FsZSA9IHRoaXMuZ2V0RG9tKCdzY2FsZScpLFxuICAgICAgICAgICAgICAgICAgICBzY2FsZWxheWVyID0gdGhpcy5nZXREb20oJ3NjYWxlbGF5ZXInKTtcblxuICAgICAgICAgICAgICAgIHZhciBpc01vdXNlTW92ZSA9IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1pbkVkaXRvckhlaWdodCA9IDAsXG4gICAgICAgICAgICAgICAgICAgIG1pbkVkaXRvcldpZHRoID0gZWRpdG9yLm9wdGlvbnMubWluRnJhbWVXaWR0aCxcbiAgICAgICAgICAgICAgICAgICAgcGFnZVggPSAwLFxuICAgICAgICAgICAgICAgICAgICBwYWdlWSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlV2lkdGggPSAwLFxuICAgICAgICAgICAgICAgICAgICBzY2FsZUhlaWdodCA9IDA7XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBkb3duKCkge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IGRvbVV0aWxzLmdldFhZKGVkaXRvckhvbGRlcik7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFtaW5FZGl0b3JIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbkVkaXRvckhlaWdodCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLm9wdGlvbnMubWluRnJhbWVIZWlnaHQgKyB0b29sYmFyQm94Lm9mZnNldEhlaWdodCArIGJvdHRvbWJhci5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBzY2FsZWxheWVyLnN0eWxlLmNzc1RleHQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgJ3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDtkaXNwbGF5Ojt0b3A6MDtiYWNrZ3JvdW5kLWNvbG9yOiM0MUFCRkY7b3BhY2l0eTowLjQ7ZmlsdGVyOiBBbHBoYShvcGFjaXR5PTQwKTt3aWR0aDonICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvckhvbGRlci5vZmZzZXRXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAncHg7aGVpZ2h0OicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9ySG9sZGVyLm9mZnNldEhlaWdodCArXG4gICAgICAgICAgICAgICAgICAgICAgICAncHg7ei1pbmRleDonICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChlZGl0b3Iub3B0aW9ucy56SW5kZXggKyAxKTtcblxuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihkb2MsICdtb3VzZW1vdmUnLCBtb3ZlKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMub24oZWRpdG9yRG9jdW1lbnQsICdtb3VzZXVwJywgdXApO1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5vbihkb2MsICdtb3VzZXVwJywgdXApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgLy9ieSB4dWhlbmcg5YWo5bGP5pe25YWz5o6J57yp5pS+XG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuYWRkTGlzdGVuZXIoJ2Z1bGxzY3JlZW5jaGFuZ2VkJywgZnVuY3Rpb24gKGUsIGZ1bGxTY3JlZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bGxTY3JlZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lLmRpc2FibGVTY2FsZSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lLmVkaXRvci5vcHRpb25zLnNjYWxlRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVuYWJsZVNjYWxlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRtcE5vZGUgPSBtZS5lZGl0b3IuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5ib2R5LmFwcGVuZENoaWxkKHRtcE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lLmVkaXRvci5ib2R5LnN0eWxlLmhlaWdodCA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgubWF4KGRvbVV0aWxzLmdldFhZKHRtcE5vZGUpLnksIG1lLmVkaXRvci5pZnJhbWUub2Zmc2V0SGVpZ2h0IC0gMjApICsgJ3B4JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmUodG1wTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBtb3ZlKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyU2VsZWN0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlID0gZXZlbnQgfHwgd2luZG93LmV2ZW50O1xuICAgICAgICAgICAgICAgICAgICBwYWdlWCA9IGUucGFnZVggfHwgZG9jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0ICsgZS5jbGllbnRYO1xuICAgICAgICAgICAgICAgICAgICBwYWdlWSA9IGUucGFnZVkgfHwgZG9jLmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgKyBlLmNsaWVudFk7XG4gICAgICAgICAgICAgICAgICAgIHNjYWxlV2lkdGggPSBwYWdlWCAtIHBvc2l0aW9uLng7XG4gICAgICAgICAgICAgICAgICAgIHNjYWxlSGVpZ2h0ID0gcGFnZVkgLSBwb3NpdGlvbi55O1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChzY2FsZVdpZHRoID49IG1pbkVkaXRvcldpZHRoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc01vdXNlTW92ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZWxheWVyLnN0eWxlLndpZHRoID0gc2NhbGVXaWR0aCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHNjYWxlSGVpZ2h0ID49IG1pbkVkaXRvckhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNNb3VzZU1vdmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVsYXllci5zdHlsZS5oZWlnaHQgPSBzY2FsZUhlaWdodCArICdweCc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB1cCgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTW91c2VNb3ZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpc01vdXNlTW92ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLl9hY3R1YWxGcmFtZVdpZHRoID0gc2NhbGVsYXllci5vZmZzZXRXaWR0aCAtIDI7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3JIb2xkZXIuc3R5bGUud2lkdGggPSBlZGl0b3IudWkuX2FjdHVhbEZyYW1lV2lkdGggKyAncHgnO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3Iuc2V0SGVpZ2h0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlbGF5ZXIub2Zmc2V0SGVpZ2h0IC0gYm90dG9tYmFyLm9mZnNldEhlaWdodCAtIHRvb2xiYXJCb3gub2Zmc2V0SGVpZ2h0IC0gMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChzY2FsZWxheWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY2FsZWxheWVyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2xlYXJTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMudW4oZG9jLCAnbW91c2Vtb3ZlJywgbW92ZSk7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLnVuKGVkaXRvckRvY3VtZW50LCAnbW91c2V1cCcsIHVwKTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMudW4oZG9jLCAnbW91c2V1cCcsIHVwKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmdW5jdGlvbiBjbGVhclNlbGVjdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJyb3dzZXIuaWUpIGRvYy5zZWxlY3Rpb24uY2xlYXIoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCkucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5lbmFibGVTY2FsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy90cmFjZToyODY4XG4gICAgICAgICAgICAgICAgICAgIGlmIChlZGl0b3IucXVlcnlDb21tYW5kU3RhdGUoJ3NvdXJjZScpID09IDEpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgc2NhbGUuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNjYWxlRW5hYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKHNjYWxlLCAnbW91c2Vkb3duJywgZG93bik7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVTY2FsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2NhbGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2FsZUVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMudW4oc2NhbGUsICdtb3VzZWRvd24nLCBkb3duKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzRnVsbFNjcmVlbjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9mdWxsc2NyZWVuO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBvc3RSZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBVSUJhc2UucHJvdG90eXBlLnBvc3RSZW5kZXIuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMudG9vbGJhcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50b29sYmFyc1tpXS5wb3N0UmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtZSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgdmFyIHRpbWVySWQsXG4gICAgICAgICAgICAgICAgICAgIGRvbVV0aWxzID0gYmFpZHUuZWRpdG9yLmRvbS5kb21VdGlscyxcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRnVsbFNjcmVlblRpbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lcklkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWUuX3VwZGF0ZUZ1bGxTY3JlZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGRvbVV0aWxzLm9uKHdpbmRvdywgJ3Jlc2l6ZScsIHVwZGF0ZUZ1bGxTY3JlZW5UaW1lKTtcblxuICAgICAgICAgICAgICAgIG1lLmFkZExpc3RlbmVyKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBkb21VdGlscy51bih3aW5kb3csICdyZXNpemUnLCB1cGRhdGVGdWxsU2NyZWVuVGltZSk7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzaG93VG9vbGJhck1zZzogZnVuY3Rpb24gKG1zZywgZmxhZykge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCd0b29sYmFybXNnX2xhYmVsJykuaW5uZXJIVE1MID0gbXNnO1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCd0b29sYmFybXNnJykuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgaWYgKCFmbGFnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB3ID0gdGhpcy5nZXREb20oJ3VwbG9hZF9kaWFsb2cnKTtcbiAgICAgICAgICAgICAgICAgICAgdy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaWRlVG9vbGJhck1zZzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2V0RG9tKCd0b29sYmFybXNnJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtYXBVcmw6IGZ1bmN0aW9uICh1cmwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXJsID8gdXJsLnJlcGxhY2UoJ34vJywgdGhpcy5lZGl0b3Iub3B0aW9ucy5VRURJVE9SX0hPTUVfVVJMIHx8ICcnKSA6ICcnO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRyaWdnZXJMYXlvdXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZG9tID0gdGhpcy5nZXREb20oKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9tLnN0eWxlLnpvb20gPT0gJzEnKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbS5zdHlsZS56b29tID0gJzEwMCUnO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbS5zdHlsZS56b29tID0gJzEnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdXRpbHMuaW5oZXJpdHMoRWRpdG9yVUksIGJhaWR1LmVkaXRvci51aS5VSUJhc2UpO1xuXG4gICAgICAgIHZhciBpbnN0YW5jZXMgPSB7fTtcblxuICAgICAgICBVRS51aS5FZGl0b3IgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIGVkaXRvciA9IG5ldyBVRS5FZGl0b3Iob3B0aW9ucyk7XG4gICAgICAgICAgICBlZGl0b3Iub3B0aW9ucy5lZGl0b3IgPSBlZGl0b3I7XG4gICAgICAgICAgICB1dGlscy5sb2FkRmlsZShkb2N1bWVudCwge1xuICAgICAgICAgICAgICAgIGhyZWY6IGVkaXRvci5vcHRpb25zLnRoZW1lQ3NzLFxuICAgICAgICAgICAgICAgIHRhZzogJ2xpbmsnLFxuICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0L2NzcycsXG4gICAgICAgICAgICAgICAgcmVsOiAnc3R5bGVzaGVldCdcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB2YXIgb2xkUmVuZGVyID0gZWRpdG9yLnJlbmRlcjtcbiAgICAgICAgICAgIGVkaXRvci5yZW5kZXIgPSBmdW5jdGlvbiAoaG9sZGVyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhvbGRlci5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5rZXkgPSBob2xkZXI7XG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlc1tob2xkZXJdID0gZWRpdG9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB1dGlscy5kb21SZWFkeShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGVkaXRvci5sYW5nSXNSZWFkeSA/IHJlbmRlclVJKCkgOiBlZGl0b3IuYWRkTGlzdGVuZXIoJ2xhbmdSZWFkeScsIHJlbmRlclVJKTtcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gcmVuZGVyVUkoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3Iuc2V0T3B0KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbE1hcDogZWRpdG9yLm9wdGlvbnMubGFiZWxNYXAgfHwgZWRpdG9yLmdldExhbmcoJ2xhYmVsTWFwJylcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEVkaXRvclVJKGVkaXRvci5vcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChob2xkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaG9sZGVyLmNvbnN0cnVjdG9yID09PSBTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaG9sZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9sZGVyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvbGRlci5nZXRBdHRyaWJ1dGUoJ25hbWUnKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZWRpdG9yLm9wdGlvbnMudGV4dGFyZWEgPSBob2xkZXIuZ2V0QXR0cmlidXRlKCduYW1lJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChob2xkZXIgJiYgL3NjcmlwdHx0ZXh0YXJlYS9naS50ZXN0KGhvbGRlci50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV3RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvbGRlci5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXdEaXYsIGhvbGRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjb250ID0gaG9sZGVyLnZhbHVlIHx8IGhvbGRlci5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5vcHRpb25zLmluaXRpYWxDb250ZW50ID0gL15bXFx0XFxyXFxuIF0qJC8udGVzdChjb250KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBlZGl0b3Iub3B0aW9ucy5pbml0aWFsQ29udGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjb250XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvPltcXG5cXHJcXHRdKyhbIF17NH0pKy9nLCAnPicpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvW1xcblxcclxcdF0rKFsgXXs0fSkrPC9nLCAnPCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvPltcXG5cXHJcXHRdKzwvZywgJz48Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvbGRlci5jbGFzc05hbWUgJiYgKG5ld0Rpdi5jbGFzc05hbWUgPSBob2xkZXIuY2xhc3NOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9sZGVyLnN0eWxlLmNzc1RleHQgJiYgKG5ld0Rpdi5zdHlsZS5jc3NUZXh0ID0gaG9sZGVyLnN0eWxlLmNzc1RleHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoL3RleHRhcmVhL2kudGVzdChob2xkZXIudGFnTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci50ZXh0YXJlYSA9IGhvbGRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci50ZXh0YXJlYS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9sZGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaG9sZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaG9sZGVyLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdEaXYuaWQgPSBob2xkZXIuaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21VdGlscy5yZW1vdmVBdHRyaWJ1dGVzKGhvbGRlciwgJ2lkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaG9sZGVyID0gbmV3RGl2O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2xkZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZG9tVXRpbHMuYWRkQ2xhc3MoaG9sZGVyLCAnZWR1aS0nICsgZWRpdG9yLm9wdGlvbnMudGhlbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLnVpLnJlbmRlcihob2xkZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG9wdCA9IGVkaXRvci5vcHRpb25zO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy/nu5nlrp7kvovmt7vliqDkuIDkuKrnvJbovpHlmajnmoTlrrnlmajlvJXnlKhcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5jb250YWluZXIgPSBlZGl0b3IudWkuZ2V0RG9tKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50cyA9IGRvbVV0aWxzLmZpbmRQYXJlbnRzKGhvbGRlciwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlzcGxheXMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjaTsgKGNpID0gcGFyZW50c1tpXSk7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlzW2ldID0gY2kuc3R5bGUuZGlzcGxheTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuaW5pdGlhbEZyYW1lV2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHQubWluRnJhbWVXaWR0aCA9IG9wdC5pbml0aWFsRnJhbWVXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Lm1pbkZyYW1lV2lkdGggPSBvcHQuaW5pdGlhbEZyYW1lV2lkdGggPSBob2xkZXIub2Zmc2V0V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0eWxlV2lkdGggPSBob2xkZXIuc3R5bGUud2lkdGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKC8lJC8udGVzdChzdHlsZVdpZHRoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHQuaW5pdGlhbEZyYW1lV2lkdGggPSBzdHlsZVdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuaW5pdGlhbEZyYW1lSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0Lm1pbkZyYW1lSGVpZ2h0ID0gb3B0LmluaXRpYWxGcmFtZUhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0LmluaXRpYWxGcmFtZUhlaWdodCA9IG9wdC5taW5GcmFtZUhlaWdodCA9IGhvbGRlci5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgY2k7IChjaSA9IHBhcmVudHNbaV0pOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaS5zdHlsZS5kaXNwbGF5ID0gZGlzcGxheXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+e8lui+keWZqOacgOWkluWuueWZqOiuvue9ruS6humrmOW6pu+8jOS8muWvvOiHtO+8jOe8lui+keWZqOS4jeWNoOS9jVxuICAgICAgICAgICAgICAgICAgICAgICAgLy90b2RvIOWFiOWOu+aOie+8jOayoeacieaJvuWIsOWOn+WboFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhvbGRlci5zdHlsZS5oZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob2xkZXIuc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuY29udGFpbmVyLnN0eWxlLndpZHRoID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHQuaW5pdGlhbEZyYW1lV2lkdGggKyAoLyUkLy50ZXN0KG9wdC5pbml0aWFsRnJhbWVXaWR0aCkgPyAnJyA6ICdweCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWRpdG9yLmNvbnRhaW5lci5zdHlsZS56SW5kZXggPSBvcHQuekluZGV4O1xuICAgICAgICAgICAgICAgICAgICAgICAgb2xkUmVuZGVyLmNhbGwoZWRpdG9yLCBlZGl0b3IudWkuZ2V0RG9tKCdpZnJhbWVob2xkZXInKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZmlyZUV2ZW50KCdhZnRlcnVpcmVhZHknKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBlZGl0b3I7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBmaWxlXG4gICAgICAgICAqIEBuYW1lIFVFXG4gICAgICAgICAqIEBzaG9ydCBVRVxuICAgICAgICAgKiBAZGVzYyBVRWRpdG9y55qE6aG26YOo5ZG95ZCN56m66Ze0XG4gICAgICAgICAqL1xuICAgICAgICAvKipcbiAgICAgICAgICogQG5hbWUgZ2V0RWRpdG9yXG4gICAgICAgICAqIEBzaW5jZSAxLjIuNCtcbiAgICAgICAgICogQGdyYW1tYXIgVUUuZ2V0RWRpdG9yKGlkLFtvcHRdKSAgPT4gIEVkaXRvcuWunuS+i1xuICAgICAgICAgKiBAZGVzYyDmj5DkvpvkuIDkuKrlhajlsYDnmoTmlrnms5XlvpfliLDnvJbovpHlmajlrp7kvotcbiAgICAgICAgICpcbiAgICAgICAgICogKiAnJ2lkJycgIOaUvue9rue8lui+keWZqOeahOWuueWZqGlkLCDlpoLmnpzlrrnlmajkuIvnmoTnvJbovpHlmajlt7Lnu4/lrZjlnKjvvIzlsLHnm7TmjqXov5Tlm55cbiAgICAgICAgICogKiAnJ29wdCcnIOe8lui+keWZqOeahOWPr+mAieWPguaVsFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgVUUuZ2V0RWRpdG9yKCdjb250YWluZXJJZCcse29ucmVhZHk6ZnVuY3Rpb24oKXsvL+WIm+W7uuS4gOS4que8lui+keWZqOWunuS+i1xuICAgICAgICAgKiAgICAgIHRoaXMuc2V0Q29udGVudCgnaGVsbG8nKVxuICAgICAgICAgKiAgfX0pO1xuICAgICAgICAgKiAgVUUuZ2V0RWRpdG9yKCdjb250YWluZXJJZCcpOyAvL+i/lOWbnuWImuWIm+W7uueahOWunuS+i1xuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgVUUuZ2V0RWRpdG9yID0gZnVuY3Rpb24gKGlkLCBvcHQpIHtcbiAgICAgICAgICAgIHZhciBlZGl0b3IgPSBpbnN0YW5jZXNbaWRdO1xuICAgICAgICAgICAgaWYgKCFlZGl0b3IpIHtcbiAgICAgICAgICAgICAgICBlZGl0b3IgPSBpbnN0YW5jZXNbaWRdID0gbmV3IFVFLnVpLkVkaXRvcihvcHQpO1xuICAgICAgICAgICAgICAgIGVkaXRvci5yZW5kZXIoaWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGVkaXRvcjtcbiAgICAgICAgfTtcblxuICAgICAgICBVRS5kZWxFZGl0b3IgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgIHZhciBlZGl0b3I7XG4gICAgICAgICAgICBpZiAoKGVkaXRvciA9IGluc3RhbmNlc1tpZF0pKSB7XG4gICAgICAgICAgICAgICAgZWRpdG9yLmtleSAmJiBlZGl0b3IuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBpbnN0YW5jZXNbaWRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIFVFLnJlZ2lzdGVyVUkgPSBmdW5jdGlvbiAodWlOYW1lLCBmbiwgaW5kZXgsIGVkaXRvcklkKSB7XG4gICAgICAgICAgICB1dGlscy5lYWNoKHVpTmFtZS5zcGxpdCgvXFxzKy8pLCBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgICAgIFVFLl9jdXN0b21pemVVSVtuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGVkaXRvcklkLFxuICAgICAgICAgICAgICAgICAgICBleGVjRm46IGZuLFxuICAgICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXhcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIC8vIGFkYXB0ZXIvbWVzc2FnZS5qc1xuICAgIFVFLnJlZ2lzdGVyVUkoJ21lc3NhZ2UnLCBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICAgIHZhciBlZGl0b3J1aSA9IGJhaWR1LmVkaXRvci51aTtcbiAgICAgICAgdmFyIE1lc3NhZ2UgPSBlZGl0b3J1aS5NZXNzYWdlO1xuICAgICAgICB2YXIgaG9sZGVyO1xuICAgICAgICB2YXIgX21lc3NhZ2VJdGVtcyA9IFtdO1xuICAgICAgICB2YXIgbWUgPSBlZGl0b3I7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3JlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaG9sZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWUudWkuaWQgKyAnX21lc3NhZ2VfaG9sZGVyJyk7XG4gICAgICAgICAgICB1cGRhdGVIb2xkZXJQb3MoKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHVwZGF0ZUhvbGRlclBvcygpO1xuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3Nob3dtZXNzYWdlJywgZnVuY3Rpb24gKHR5cGUsIG9wdCkge1xuICAgICAgICAgICAgb3B0ID0gdXRpbHMuaXNTdHJpbmcob3B0KVxuICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG9wdFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogb3B0O1xuICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBuZXcgTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IG9wdC50aW1lb3V0LFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBvcHQudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogb3B0LmNvbnRlbnQsXG4gICAgICAgICAgICAgICAgICAgIGtlZXBzaG93OiBvcHQua2VlcHNob3csXG4gICAgICAgICAgICAgICAgICAgIGVkaXRvcjogbWVcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBtaWQgPSBvcHQuaWQgfHwgJ21zZ18nICsgKCtuZXcgRGF0ZSgpKS50b1N0cmluZygzNik7XG4gICAgICAgICAgICBtZXNzYWdlLnJlbmRlcihob2xkZXIpO1xuICAgICAgICAgICAgX21lc3NhZ2VJdGVtc1ttaWRdID0gbWVzc2FnZTtcbiAgICAgICAgICAgIG1lc3NhZ2UucmVzZXQob3B0KTtcbiAgICAgICAgICAgIHVwZGF0ZUhvbGRlclBvcygpO1xuICAgICAgICAgICAgcmV0dXJuIG1pZDtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ3VwZGF0ZW1lc3NhZ2UnLCBmdW5jdGlvbiAodHlwZSwgaWQsIG9wdCkge1xuICAgICAgICAgICAgb3B0ID0gdXRpbHMuaXNTdHJpbmcob3B0KVxuICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG9wdFxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogb3B0O1xuICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBfbWVzc2FnZUl0ZW1zW2lkXTtcbiAgICAgICAgICAgIG1lc3NhZ2UucmVuZGVyKGhvbGRlcik7XG4gICAgICAgICAgICBtZXNzYWdlICYmIG1lc3NhZ2UucmVzZXQob3B0KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWUuYWRkTGlzdGVuZXIoJ2hpZGVtZXNzYWdlJywgZnVuY3Rpb24gKHR5cGUsIGlkKSB7XG4gICAgICAgICAgICB2YXIgbWVzc2FnZSA9IF9tZXNzYWdlSXRlbXNbaWRdO1xuICAgICAgICAgICAgbWVzc2FnZSAmJiBtZXNzYWdlLmhpZGUoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlSG9sZGVyUG9zKCkge1xuICAgICAgICAgICAgaWYgKCFtZS51aSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0b29sYmFyYm94ID0gbWUudWkuZ2V0RG9tKCd0b29sYmFyYm94Jyk7XG4gICAgICAgICAgICBpZiAodG9vbGJhcmJveCkge1xuICAgICAgICAgICAgICAgIGhvbGRlci5zdHlsZS50b3AgPSB0b29sYmFyYm94Lm9mZnNldEhlaWdodCArIDMgKyAncHgnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaG9sZGVyLnN0eWxlLnpJbmRleCA9IE1hdGgubWF4KG1lLm9wdGlvbnMuekluZGV4LCBtZS5pZnJhbWUuc3R5bGUuekluZGV4KSArIDE7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIGFkYXB0ZXIvYXV0b3NhdmUuanNcbiAgICBVRS5yZWdpc3RlclVJKCdhdXRvc2F2ZScsIGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgICAgdmFyIHRpbWVyID0gbnVsbCxcbiAgICAgICAgICAgIHVpZCA9IG51bGw7XG4gICAgICAgIGVkaXRvci5vbignYWZ0ZXJhdXRvc2F2ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG5cbiAgICAgICAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHVpZCkge1xuICAgICAgICAgICAgICAgICAgICBlZGl0b3IudHJpZ2dlcignaGlkZW1lc3NhZ2UnLCB1aWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB1aWQgPSBlZGl0b3IudHJpZ2dlcignc2hvd21lc3NhZ2UnLCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGVkaXRvci5nZXRMYW5nKCdhdXRvc2F2ZS5zdWNjZXNzJyksXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDIwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn0pKCk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/vendor/editor/ueditor.all.js\n");

/***/ }),

/***/ "./src/vendor/editor/ueditor.config.js":
/***/ (function(module, exports) {

eval("/**\n * ueditor完整配置项\n * 可以在这里配置整个编辑器的特性\n */\n/**************************提示********************************\n * 所有被注释的配置项均为UEditor默认值。\n * 修改默认配置请首先确保已经完全明确该参数的真实用途。\n * 主要有两种修改方案，一种是取消此处注释，然后修改成对应参数；另一种是在实例化编辑器时传入对应参数。\n * 当升级编辑器时，可直接使用旧版配置文件替换新版配置文件,不用担心旧版配置文件中因缺少新功能所需的参数而导致脚本报错。\n **************************提示********************************/\n\n(function () {\n    /**\n     * 编辑器资源文件根路径。它所表示的含义是：以编辑器实例化页面为当前路径，指向编辑器资源文件（即dialog等文件夹）的路径。\n     * 鉴于很多同学在使用编辑器的时候出现的种种路径问题，此处强烈建议大家使用\"相对于网站根目录的相对路径\"进行配置。\n     * \"相对于网站根目录的相对路径\"也就是以斜杠开头的形如\"/myProject/ueditor/\"这样的路径。\n     * 如果站点中有多个不在同一层级的页面需要实例化编辑器，且引用了同一UEditor的时候，此处的URL可能不适用于每个页面的编辑器。\n     * 因此，UEditor提供了针对不同页面的编辑器可单独配置的根路径，具体来说，在需要实例化编辑器的页面最顶部写上如下代码即可。当然，需要令此处的URL等于对应的配置。\n     * window.UEDITOR_HOME_URL = \"/xxxx/xxxx/\";\n     */\n    var URL = window.UEDITOR_HOME_URL || getUEBasePath();\n\n    /**\n     * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。\n     */\n    window.UEDITOR_CONFIG = {\n        //为编辑器实例添加一个路径，这个不能被注释\n        UEDITOR_HOME_URL: URL,\n\n        // 服务器统一请求接口路径\n        serverUrl: URL + 'php/controller.php',\n\n        //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义\n        toolbars: [\n            [\n                'fullscreen',\n                'source',\n                '|',\n                'undo',\n                'redo',\n                '|',\n                'bold',\n                'italic',\n                'underline',\n                'fontborder',\n                'strikethrough',\n                'superscript',\n                'subscript',\n                'removeformat',\n                'formatmatch',\n                'autotypeset',\n                'blockquote',\n                'pasteplain',\n                '|',\n                'forecolor',\n                'backcolor',\n                'insertorderedlist',\n                'insertunorderedlist',\n                'selectall',\n                'cleardoc',\n                '|',\n                'rowspacingtop',\n                'rowspacingbottom',\n                'lineheight',\n                '|',\n                'customstyle',\n                'paragraph',\n                'fontfamily',\n                'fontsize',\n                '|',\n                'directionalityltr',\n                'directionalityrtl',\n                'indent',\n                '|',\n                'justifyleft',\n                'justifycenter',\n                'justifyright',\n                'justifyjustify',\n                '|',\n                'touppercase',\n                'tolowercase',\n                '|',\n                'link',\n                'unlink',\n                'anchor',\n                '|',\n                'imagenone',\n                'imageleft',\n                'imageright',\n                'imagecenter',\n                '|',\n                'simpleupload',\n                'insertimage',\n                'emotion',\n                'scrawl',\n                'insertvideo',\n                'music',\n                'attachment',\n                'map',\n                'gmap',\n                'insertframe',\n                'insertcode',\n                'webapp',\n                'pagebreak',\n                'template',\n                'background',\n                '|',\n                'horizontal',\n                'date',\n                'time',\n                'spechars',\n                'snapscreen',\n                'wordimage',\n                '|',\n                'inserttable',\n                'deletetable',\n                'insertparagraphbeforetable',\n                'insertrow',\n                'deleterow',\n                'insertcol',\n                'deletecol',\n                'mergecells',\n                'mergeright',\n                'mergedown',\n                'splittocells',\n                'splittorows',\n                'splittocols',\n                'charts',\n                '|',\n                'print',\n                'preview',\n                'searchreplace',\n                'drafts',\n                'help'\n            ]\n        ],\n        //当鼠标放在工具栏上时显示的tooltip提示,留空支持自动多语言配置，否则以配置值为准\n        //,labelMap:{\n        //    'anchor':'', 'undo':''\n        //}\n\n        //语言配置项,默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：\n        //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()\n        //,lang:\"zh-cn\"\n        //,langPath:URL +\"lang/\"\n\n        //主题配置项,默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：\n        //现有如下皮肤:default\n        //,theme:'default'\n        //,themePath:URL +\"themes/\"\n        themeCss: URL + 'themes/gray/css/ueditor.css',\n        //,zIndex : 900     //编辑器层级的基数,默认是900\n\n        //针对getAllHtml方法，会在对应的head标签中增加该编码设置。\n        //,charset:\"utf-8\"\n\n        //若实例化编辑器的页面手动修改的domain，此处需要设置为true\n        //,customDomain:false\n\n        //常用配置项目\n        //,isShow : true    //默认显示编辑器\n\n        //,textarea:'editorValue' // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值\n\n        //,initialContent:'欢迎使用ueditor!'    //初始化编辑器的内容,也可以通过textarea/script给值，看官网例子\n\n        //,autoClearinitialContent:true //是否自动清除编辑器初始内容，注意：如果focus属性设置为true,这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了\n\n        //,focus:false //初始化时，是否让编辑器获得焦点true或false\n\n        //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感\n        //,initialStyle:'p{line-height:1em}'//编辑器层级的基数,可以用来改变字体等\n\n        iframeCssUrl: URL + 'themes/iframe.css',\n\n        //indentValue\n        //首行缩进距离,默认是2em\n        //,indentValue:'2em'\n\n        //,initialFrameWidth:1000  //初始化编辑器宽度,默认1000\n        //,initialFrameHeight:320  //初始化编辑器高度,默认320\n\n        //,readonly : false //编辑器初始化结束后,编辑区域是否是只读的，默认是false\n\n        //,autoClearEmptyNode : true //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）\n\n        //启用自动保存\n        enableAutoSave: true,\n        //自动保存间隔时间， 单位ms\n        //,saveInterval: 500\n\n        //,fullscreen : false //是否开启初始化时即全屏，默认关闭\n\n        //,imagePopup:true      //图片操作的浮层开关，默认打开\n\n        //,autoSyncData:true //自动同步编辑器要提交的数据\n        //,emotionLocalization:false //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹\n\n        //粘贴只保留标签，去除标签所有属性\n        //,retainOnlyLabelPasted: false\n\n        //,pasteplain:false  //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴\n        //纯文本粘贴模式下的过滤规则\n        //'filterTxtRules' : function(){\n        //    function transP(node){\n        //        node.tagName = 'p';\n        //        node.setStyle();\n        //    }\n        //    return {\n        //        //直接删除及其字节点内容\n        //        '-' : 'script style object iframe embed input select',\n        //        'p': {$:{}},\n        //        'br':{$:{}},\n        //        'div':{'$':{}},\n        //        'li':{'$':{}},\n        //        'caption':transP,\n        //        'th':transP,\n        //        'tr':transP,\n        //        'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,\n        //        'td':function(node){\n        //            //没有内容的td直接删掉\n        //            var txt = !!node.innerText();\n        //            if(txt){\n        //                node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);\n        //            }\n        //            node.parentNode.removeChild(node,node.innerText())\n        //        }\n        //    }\n        //}()\n\n        //,allHtmlEnabled:false //提交到后台的数据是否包含整个html字符串\n\n        //insertorderedlist\n        //有序列表的下拉配置,值留空时支持多语言自动识别，若配置值，则以此值为准\n        insertorderedlist: {\n            //自定的样式\n            /*   'num':'1,2,3...',*/\n            //'num1':'1),2),3)...',\n            //'num2':'(1),(2),(3)...',\n            //'cn':'一,二,三....',\n            //'cn1':'一),二),三)....',\n            /*'cn2':'(一),(二),(三)....',*/\n            //系统自带\n            decimal: '', //'1,2,3...'\n            'lower-alpha': '', // 'a,b,c...'\n            'lower-roman': '', //'i,ii,iii...'\n            'upper-alpha': '', //lang   //'A,B,C'\n            'upper-roman': '' //'I,II,III...'\n        },\n\n        //insertunorderedlist\n        //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准\n        insertunorderedlist: {\n            //自定的样式\n            //'dash' :'— 破折号', //-破折号\n            //'dot':' 。 小圆圈', //系统自带\n            circle: '', // '○ 小圆圈'\n            disc: '', // '● 小圆点'\n            square: '' //'■ 小方块'\n        },\n        //,listDefaultPaddingLeft : '30'//默认的左边缩进的基数倍\n        //,listiconpath : 'http://bs.baidu.com/listicon/'//自定义标号的路径\n        //,maxListLevel : 3 //限制可以tab的级数, 设置-1为不限制\n\n        //,autoTransWordToList:false  //禁止word中粘贴进来的列表自动变成列表标签\n\n        //fontfamily\n        //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准\n        //,'fontfamily':[\n        //    { label:'',name:'songti',val:'宋体,SimSun'},\n        //    { label:'',name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},\n        //    { label:'',name:'yahei',val:'微软雅黑,Microsoft YaHei'},\n        //    { label:'',name:'heiti',val:'黑体, SimHei'},\n        //    { label:'',name:'lishu',val:'隶书, SimLi'},\n        //    { label:'',name:'andaleMono',val:'andale mono'},\n        //    { label:'',name:'arial',val:'arial, helvetica,sans-serif'},\n        //    { label:'',name:'arialBlack',val:'arial black,avant garde'},\n        //    { label:'',name:'comicSansMs',val:'comic sans ms'},\n        //    { label:'',name:'impact',val:'impact,chicago'},\n        //    { label:'',name:'timesNewRoman',val:'times new roman'}\n        //]\n\n        //fontsize\n        //字号\n        //,'fontsize':[10, 11, 12, 14, 16, 18, 20, 24, 36]\n\n        //paragraph\n        //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准\n        //,'paragraph':{'p':'', 'h1':'', 'h2':'', 'h3':'', 'h4':'', 'h5':'', 'h6':''}\n\n        //rowspacingtop\n        //段间距 值和显示的名字相同\n        //,'rowspacingtop':['5', '10', '15', '20', '25']\n\n        //rowspacingBottom\n        //段间距 值和显示的名字相同\n        //,'rowspacingbottom':['5', '10', '15', '20', '25']\n\n        //lineheight\n        //行内间距 值和显示的名字相同\n        //,'lineheight':['1', '1.5','1.75','2', '3', '4', '5']\n\n        //customstyle\n        //自定义样式，不支持国际化，此处配置值即可最后显示值\n        //block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置\n        //尽量使用一些常用的标签\n        //参数说明\n        //tag 使用的标签名字\n        //label 显示的名字也是用来标识不同类型的标识符，注意这个值每个要不同，\n        //style 添加的样式\n        //每一个对象就是一个自定义的样式\n        //,'customstyle':[\n        //    {tag:'h1', name:'tc', label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},\n        //    {tag:'h1', name:'tl',label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;margin:0 0 10px 0;'},\n        //    {tag:'span',name:'im', label:'', style:'font-style:italic;font-weight:bold'},\n        //    {tag:'span',name:'hi', label:'', style:'font-style:italic;font-weight:bold;color:rgb(51, 153, 204)'}\n        //]\n\n        //打开右键菜单功能\n        //,enableContextMenu: true\n        //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准\n        //,contextMenu:[\n        //    {\n        //        label:'',       //显示的名称\n        //        cmdName:'selectall',//执行的command命令，当点击这个右键菜单时\n        //        //exec可选，有了exec就会在点击时执行这个function，优先级高于cmdName\n        //        exec:function () {\n        //            //this是当前编辑器的实例\n        //            //this.ui._dialogs['inserttableDialog'].open();\n        //        }\n        //    }\n        //]\n\n        //快捷菜单\n        //,shortcutMenu:[\"fontfamily\", \"fontsize\", \"bold\", \"italic\", \"underline\", \"forecolor\", \"backcolor\", \"insertorderedlist\", \"insertunorderedlist\"]\n\n        //elementPathEnabled\n        //是否启用元素路径，默认是显示\n        //,elementPathEnabled : true\n\n        //wordCount\n        //,wordCount:true          //是否开启字数统计\n        //,maximumWords:10000       //允许的最大字符数\n        //字数统计提示，{#count}代表当前字数，{#leave}代表还可以输入多少字符数,留空支持多语言自动切换，否则按此配置显示\n        //,wordCountMsg:''   //当前已输入 {#count} 个字符，您还可以输入{#leave} 个字符\n        //超出字数限制提示  留空支持多语言自动切换，否则按此配置显示\n        //,wordOverFlowMsg:''    //<span style=\"color:red;\">你输入的字符个数已经超出最大允许值，服务器可能会拒绝保存！</span>\n\n        //tab\n        //点击tab键时移动的距离,tabSize倍数，tabNode什么字符做为单位\n        //,tabSize:4\n        //,tabNode:'&nbsp;'\n\n        //removeFormat\n        //清除格式时可以删除的标签和属性\n        //removeForamtTags标签\n        //,removeFormatTags:'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var'\n        //removeFormatAttributes属性\n        //,removeFormatAttributes:'class,style,lang,width,height,align,hspace,valign'\n\n        //undo\n        //可以最多回退的次数,默认20\n        //,maxUndoCount:20\n        //当输入的字符数超过该值时，保存一次现场\n        //,maxInputCount:1\n\n        //autoHeightEnabled\n        // 是否自动长高,默认true\n        //,autoHeightEnabled:true\n\n        //scaleEnabled\n        //是否可以拉伸长高,默认true(当开启时，自动长高失效)\n        //,scaleEnabled:false\n        //,minFrameWidth:800    //编辑器拖动时最小宽度,默认800\n        //,minFrameHeight:220  //编辑器拖动时最小高度,默认220\n\n        //autoFloatEnabled\n        //是否保持toolbar的位置不动,默认true\n        //,autoFloatEnabled:true\n        //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面\n        //,topOffset:30\n        //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)\n        //,toolbarTopOffset:400\n\n        //设置远程图片是否抓取到本地保存\n        //,catchRemoteImageEnable: true //设置是否抓取远程图片\n\n        //pageBreakTag\n        //分页标识符,默认是_ueditor_page_break_tag_\n        //,pageBreakTag:'_ueditor_page_break_tag_'\n\n        //autotypeset\n        //自动排版参数\n        //,autotypeset: {\n        //    mergeEmptyline: true,           //合并空行\n        //    removeClass: true,              //去掉冗余的class\n        //    removeEmptyline: false,         //去掉空行\n        //    textAlign:\"left\",               //段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版\n        //    imageBlockLine: 'center',       //图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版\n        //    pasteFilter: false,             //根据规则过滤没事粘贴进来的内容\n        //    clearFontSize: false,           //去掉所有的内嵌字号，使用编辑器默认的字号\n        //    clearFontFamily: false,         //去掉所有的内嵌字体，使用编辑器默认的字体\n        //    removeEmptyNode: false,         // 去掉空节点\n        //    //可以去掉的标签\n        //    removeTagNames: {标签名字:1},\n        //    indent: false,                  // 行首缩进\n        //    indentValue : '2em',            //行首缩进的大小\n        //    bdc2sb: false,\n        //    tobdc: false\n        //}\n\n        //tableDragable\n        //表格是否可以拖拽\n        //,tableDragable: true\n\n        //sourceEditor\n        //源码的查看方式,codemirror 是代码高亮，textarea是文本框,默认是codemirror\n        //注意默认codemirror只能在ie8+和非ie中使用\n        //,sourceEditor: \"codemirror\"\n        //如果sourceEditor是codemirror，还用配置一下两个参数\n        //codeMirrorJsUrl js加载的路径，默认是 URL + \"third-party/codemirror/codemirror.js\"\n        //,codeMirrorJsUrl: __uri(\"third-party/codemirror/codemirror.js\")\n        //codeMirrorCssUrl css加载的路径，默认是 URL + \"third-party/codemirror/codemirror.css\"\n        //,codeMirrorCssUrl: __uri(\"third-party/codemirror/codemirror.css\")\n        //编辑器初始化完成后是否进入源码模式，默认为否。\n        //,sourceEditorFirst:false\n\n        //iframeUrlMap\n        //dialog内容的路径 ～会被替换成URL,垓属性一旦打开，将覆盖所有的dialog的默认路径\n        iframeUrlMap: {\n            link: URL + 'dialogs/link/link.html',\n            edittip: URL + 'dialogs/table/edittip.html',\n            edittable: URL + 'dialogs/table/edittable.html',\n            edittd: URL + 'dialogs/table/edittd.html'\n            /*'anchor':'~/dialogs/anchor/anchor.html',*/\n            //'insertimage':'~/dialogs/image/image.html',\n            //'spechars':'~/dialogs/spechars/spechars.html',\n            //'searchreplace':'~/dialogs/searchreplace/searchreplace.html',\n            //'map':'~/dialogs/map/map.html',\n            //'gmap':'~/dialogs/gmap/gmap.html',\n            //'insertvideo':'~/dialogs/video/video.html',\n            //'help':'~/dialogs/help/help.html',\n            //'preview':'~/dialogs/preview/preview.html',\n            //'emotion':'~/dialogs/emotion/emotion.html',\n            //'wordimage':'~/dialogs/wordimage/wordimage.html',\n            //'attachment':'~/dialogs/attachment/attachment.html',\n            //'insertframe':'~/dialogs/insertframe/insertframe.html',\n            //'webapp':'~/dialogs/webapp/webapp.html',\n            //'scrawl':'~/dialogs/scrawl/scrawl.html',\n            //'music':'~/dialogs/music/music.html',\n            //'template':'~/dialogs/template/template.html',\n            //'background':'~/dialogs/background/background.html',\n            /*'charts': '~/dialogs/charts/charts.html' */\n        },\n\n        //allowLinkProtocol 允许的链接地址，有这些前缀的链接地址不会自动添加http\n        //, allowLinkProtocols: ['http:', 'https:', '#', '/', 'ftp:', 'mailto:', 'tel:', 'git:', 'svn:']\n\n        //webAppKey 百度应用的APIkey，每个站长必须首先去百度官网注册一个key后方能正常使用app功能，注册介绍，http://app.baidu.com/static/cms/getapikey.html\n        //, webAppKey: \"\"\n\n        //默认过滤规则相关配置项目\n        //,disabledTableInTable:true  //禁止表格嵌套\n        //,allowDivTransToP:true      //允许进入编辑器的div标签自动变成p标签\n        //,rgb2Hex:true               //默认产出的数据中的color自动从rgb格式变成16进制格式\n\n        // xss 过滤是否开启,inserthtml等操作\n        xssFilterRules: true,\n        //input xss过滤\n        inputXssFilter: true,\n        //output xss过滤\n        outputXssFilter: true,\n        // xss过滤白名单 名单来源: https://raw.githubusercontent.com/leizongmin/js-xss/master/lib/default.js\n        whitList: {\n            a: ['target', 'href', 'title', 'class', 'style'],\n            abbr: ['title', 'class', 'style'],\n            address: ['class', 'style'],\n            area: ['shape', 'coords', 'href', 'alt'],\n            article: ['class', 'style'],\n            aside: ['class', 'style'],\n            audio: ['autoplay', 'controls', 'loop', 'preload', 'src', 'class', 'style'],\n            b: ['class', 'style'],\n            bdi: ['dir'],\n            bdo: ['dir'],\n            big: ['class', 'style'],\n            blockquote: ['cite', 'class', 'style'],\n            br: ['class', 'style'],\n            caption: ['class', 'style'],\n            center: ['class', 'style'],\n            cite: ['class', 'style'],\n            code: ['class', 'style'],\n            col: ['align', 'valign', 'span', 'width', 'class', 'style'],\n            colgroup: ['align', 'valign', 'span', 'width', 'class', 'style'],\n            dd: ['class', 'style'],\n            del: ['datetime'],\n            details: ['open'],\n            div: ['class', 'style'],\n            dl: ['class', 'style'],\n            dt: ['class', 'style'],\n            em: ['class', 'style'],\n            font: ['color', 'size', 'face'],\n            footer: ['class', 'style'],\n            h1: ['class', 'style'],\n            h2: ['class', 'style'],\n            h3: ['class', 'style'],\n            h4: ['class', 'style'],\n            h5: ['class', 'style'],\n            h6: ['class', 'style'],\n            header: ['class', 'style'],\n            hr: ['class', 'style'],\n            i: ['class', 'style'],\n            img: ['src', 'alt', 'title', 'width', 'height', 'id', '_src', 'loadingclass', 'class', 'data-latex'],\n            ins: ['datetime'],\n            li: ['class', 'style'],\n            mark: ['class', 'style'],\n            nav: ['class', 'style'],\n            ol: ['class', 'style'],\n            p: ['class', 'style'],\n            pre: ['class', 'style'],\n            s: ['class', 'style'],\n            section: ['class', 'style'],\n            small: ['class', 'style'],\n            span: ['class', 'style'],\n            sub: ['class', 'style'],\n            sup: ['class', 'style'],\n            strong: ['class', 'style'],\n            table: ['width', 'border', 'align', 'valign', 'class', 'style'],\n            tbody: ['align', 'valign', 'class', 'style'],\n            td: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],\n            tfoot: ['align', 'valign', 'class', 'style'],\n            th: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],\n            thead: ['align', 'valign', 'class', 'style'],\n            tr: ['rowspan', 'align', 'valign', 'class', 'style'],\n            tt: ['class', 'style'],\n            u: ['class', 'style'],\n            ul: ['class', 'style'],\n            video: ['autoplay', 'controls', 'loop', 'preload', 'src', 'height', 'width', 'class', 'style']\n        },\n\n        themeImage: {\n            default: {\n                spacer: URL + 'themes/default/images/spacer.gif'\n            }\n        },\n\n        thirdPartyImage: {},\n\n        dialogsImage: {},\n        langImage: {}\n    };\n\n    function getUEBasePath(docUrl, confUrl) {\n        return getBasePath(docUrl || self.document.URL || self.location.href, confUrl || getConfigFilePath());\n    }\n\n    function getConfigFilePath() {\n        var configPath = document.getElementsByTagName('script');\n\n        return configPath[configPath.length - 1].src;\n    }\n\n    function getBasePath(docUrl, confUrl) {\n        var basePath = confUrl;\n\n        if (/^(\\/|\\\\\\\\)/.test(confUrl)) {\n            basePath = /^.+?\\w(\\/|\\\\\\\\)/.exec(docUrl)[0] + confUrl.replace(/^(\\/|\\\\\\\\)/, '');\n        } else if (!/^[a-z]+:/i.test(confUrl)) {\n            docUrl = docUrl\n                .split('#')[0]\n                .split('?')[0]\n                .replace(/[^\\\\\\/]+$/, '');\n\n            basePath = docUrl + '' + confUrl;\n        }\n\n        return optimizationPath(basePath);\n    }\n\n    function optimizationPath(path) {\n        var protocol = /^[a-z]+:\\/\\//.exec(path)[0],\n            tmp = null,\n            res = [];\n\n        path = path.replace(protocol, '').split('?')[0].split('#')[0];\n\n        path = path.replace(/\\\\/g, '/').split(/\\//);\n\n        path[path.length - 1] = '';\n\n        while (path.length) {\n            if ((tmp = path.shift()) === '..') {\n                res.pop();\n            } else if (tmp !== '.') {\n                res.push(tmp);\n            }\n        }\n\n        return protocol + res.join('/');\n    }\n\n    window.UE = {\n        getUEBasePath: getUEBasePath\n    };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/vendor/editor/ueditor.config.js\n");

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("./src/vendor/editor/ueditor.config.js");
__webpack_require__("./src/vendor/editor/ueditor.all.js");
__webpack_require__("./src/vendor/editor/exif.js");
module.exports = __webpack_require__("./src/vendor/editor/lang/zh-cn/zh-cn.js");


/***/ })

/******/ });